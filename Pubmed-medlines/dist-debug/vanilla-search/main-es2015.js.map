{"version":3,"sources":["../components/feedback/index.ts","../components/search/bootstrap/tabs/tabs.ts","../components/search/bootstrap/tabs/tabs.html","../components/selection/public-api.ts","../components/status-bar/bootstrap/status-bar.module.ts","../components/facet/abstract-facet.ts","../analytics/heatmap/bootstrap/results-heatmap-view.ts","../analytics/heatmap/bootstrap/results-heatmap-view.html","../components/utils/pipes/memory-size-pipe.ts","../components/user-settings/public-api.ts","../analytics/heatmap/messages/index.ts","../core/web-services/principal.web.service.ts","../components/saved-queries/recent-documents.service.ts","../components/facet/bootstrap/facet-filters/facet-filters.ts","../components/facet/bootstrap/facet-filters/facet-filters.html","../core/load-component/load-component.directive.ts","../components/advanced/messages/index.ts","../components/results-view/bootstrap/public-api.ts","../components/baskets/messages/index.ts","../components/modal/messages/en.ts","../components/baskets/bootstrap/index.ts","../components/preview/messages/fr.ts","../core/web-services/public-api.ts","../components/preview/bootstrap/preview-entity-panel/preview-entity-panel.component.ts","../components/preview/bootstrap/preview-entity-panel/preview-entity-panel.component.html","../components/result/messages/index.ts","../components/saved-queries/bootstrap/index.ts","../components/autocomplete/bootstrap/autocomplete-list/autocomplete-list.ts","../components/autocomplete/bootstrap/autocomplete-list/autocomplete-list.html","../components/preview/bootstrap/preview-popup/preview-popup.ts","../components/preview/bootstrap/preview-popup/preview-popup.html","../components/modal/messages/fr.ts","../components/result/result-source/result-source.ts","../components/result/result-source/result-source.html","../components/saved-queries/public-api.ts","../core/base/iterator-adaptor.ts","../components/alerts/messages/de.ts","./locale-data/complete.js (ignored)","../core/intl/import-moment.ts","../components/notification/bootstrap/notification/notification.ts","../components/notification/bootstrap/notification/notification.html","../components/utils/directives/autofocus.ts","../analytics/heatmap/public-api.ts","../components/collapse/public-api.ts","../components/utils/directives/focus-key-list-item.directive.ts","../components/advanced/bootstrap/advanced-form-input/advanced-form-input.ts","../components/advanced/bootstrap/advanced-form-input/advanced-form-input.html","./src/config.ts","../components/modal/bootstrap/help/help.ts","../components/modal/bootstrap/help/help.html","../components/modal/messages/index.ts","../components/search/breadcrumbs.ts","../components/saved-queries/messages/fr.ts","../components/metadata/messages/index.ts","../components/facet/messages/de.ts","../core/base/error.ts","../core/web-services/http.service.ts","../components/baskets/baskets.service.ts","../components/status-bar/bootstrap/index.ts","../components/labels/public-api.ts","../components/notification/messages/fr.ts","../components/preview/bootstrap/facet-preview/facet-preview.ts","../components/preview/bootstrap/facet-preview/facet-preview.html","../components/selection/bootstrap/selection.module.ts","../components/preview/bootstrap/preview-highlights/preview-highlights.ts","../components/preview/bootstrap/preview-highlights/preview-highlights.html","../core/login/authentication-oauth.service.ts","../components/baskets/public-api.ts","../components/facet/messages/en.ts","../components/metadata/metadata-item/metadata-item.ts","../components/metadata/metadata-item/metadata-item.html","../components/preview/preview-document.ts","../components/labels/labels.component.ts","../components/labels/labels.component.html","../components/feedback/bootstrap/public-api.ts","../core/modal/confirm.component.ts","../core/web-services/queryintent.service.ts","../components/notification/index.ts","../core/web-services/preview.web.service.ts","../components/user-settings/bootstrap/public-api.ts","../core/web-services/json-method-plugin.web.service.ts","./src/locales/de.ts","../components/saved-queries/saved-queries.service.ts","../components/saved-queries/bootstrap/manage-saved-queries/manage-saved-queries.ts","../components/saved-queries/bootstrap/manage-saved-queries/manage-saved-queries.html","../components/labels/messages/en.ts","../components/utils/messages/de.ts","../components/search/bootstrap/public-api.ts","../components/feedback/messages/en.ts","../core/web-services/rfm.web.service.ts","../core/default-locales-config.ts","../components/saved-queries/bootstrap/facet-saved-queries/facet-saved-queries.ts","../components/saved-queries/bootstrap/facet-saved-queries/facet-saved-queries.html","../components/preview/bootstrap/index.ts","../components/autocomplete/autocomplete-field-search.directive.ts","../components/result/result-icon/result-icon.ts","../components/result/result-icon/result-icon.html","../components/labels/bootstrap/delete-label/delete-label.ts","../components/labels/bootstrap/delete-label/delete-label.html","../components/search/index.ts","../core/app-utils/query/expr-builder.ts","../components/status-bar/messages/de.ts","../core/login/index.ts","../components/selection/bootstrap/result-selector/result-selector.ts","../components/selection/bootstrap/result-selector/result-selector.html","../components/utils/pipes/value-pipe.ts","../components/labels/result-labels.component.ts","../components/labels/result-labels.component.html","../components/preview/bootstrap/result-link-preview/result-link-preview.ts","../components/preview/bootstrap/result-link-preview/result-link-preview.html","../components/feedback/bootstrap/feedback-menu/feedback-menu.ts","../components/feedback/bootstrap/feedback-menu/feedback-menu.html","../core/intl/messages/de.ts","../components/autocomplete/bootstrap/public-api.ts","../components/result/messages/fr.ts","../core/validation/messages/de.ts","../components/selection/index.ts","../components/metadata/public-api.ts","../components/result/result-missing-terms/result-missing-terms.ts","../components/result/result-missing-terms/result-missing-terms.html","../components/labels/label.pipe.ts","../components/facet/bootstrap/index.ts","../core/public-api.ts","../components/notification/messages/index.ts","../core/intl/abstract-intl.pipe.ts","../components/user-settings/bootstrap/user-settings.module.ts","../core/web-services/similar-documents.web.service.ts","../components/advanced/advanced.service.ts","../components/autocomplete/bootstrap/autocomplete.module.ts","../components/feedback/feedback.service.ts","../components/action/bootstrap/action-buttons/action-buttons.ts","../components/action/bootstrap/action-buttons/action-buttons.html","../core/login/messages/de.ts","../components/autocomplete/suggest.service.ts","../core/modal/messages/de.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","../components/results-view/bootstrap/results-view-selector/results-view-selector.ts","../components/results-view/bootstrap/results-view-selector/results-view-selector.html","../analytics/heatmap/bootstrap/public-api.ts","../components/collapse/messages/fr.ts","../components/saved-queries/messages/de.ts","../components/advanced/bootstrap/index.ts","../core/web-services/sponsored-links.web.service.ts","../components/modal/bootstrap/modal-footer.component.ts","../components/modal/bootstrap/modal-footer.component.html","./src/environments/environment.ts","../components/action/action.ts","../components/search/bootstrap/sort-selector/sort-selector.ts","../components/search/bootstrap/sort-selector/sort-selector.html","../components/search/bootstrap/breadcrumbs/breadcrumbs.ts","../components/search/bootstrap/breadcrumbs/breadcrumbs.html","../core/validation/index.ts","../components/results-view/results-view.service.ts","../core/notification/notifications.service.ts","../core/validation/validation-message.component.ts","../core/modal/prompt.component.ts","../core/login/component-with-login.component.ts","../components/modal/bootstrap/public-api.ts","../components/utils/directives/focus-key-list.directive.ts","../core/web-services/download.web.service.ts","../components/facet/bootstrap/facet-mysearch/facet-mysearch.ts","../components/facet/bootstrap/facet-mysearch/facet-mysearch.html","../components/alerts/messages/en.ts","../components/results-view/messages/en.ts","../components/search/messages/en.ts","../components/modal/bootstrap/prompt.component.ts","../core/base/public-api.ts","../components/notification/bootstrap/notification.module.ts","../components/user-settings/bootstrap/user-menu/user-menu.component.ts","../components/user-settings/bootstrap/user-menu/user-menu.component.html","../core/load-component/module.providers.ts","../components/utils/index.ts","../components/notification/messages/de.ts","../components/search/bootstrap/page-size-selector/page-size-selector.ts","../components/search/bootstrap/page-size-selector/page-size-selector.html","../components/results-view/index.ts","../components/facet/bootstrap/facet-range/facet-range.ts","../components/facet/bootstrap/facet-range/facet-range.html","../components/preview/bootstrap/public-api.ts","../core/notification/notification.module.ts","../components/preview/bootstrap/preview-search-form/preview-search-form.component.ts","../components/preview/bootstrap/preview-search-form/preview-search-form.component.html","../core/modal/modal.module.ts","../components/advanced/bootstrap/advanced-form-autocomplete.directive.ts","../components/selection/bootstrap/public-api.ts","../core/intl/index.ts","../components/notification/bootstrap/index.ts","../analytics/heatmap/bootstrap/heatmap.module.ts","../core/login/public-api.ts","../core/app-utils/app-utils.module.ts","../components/utils/messages/index.ts","../core/validation/validation.directive.ts","../core/login/messages/fr.ts","../components/results-view/messages/de.ts","../components/utils/pipes/number-pipe.ts","../analytics/heatmap/bootstrap/tooltip.component.ts","../components/selection/messages/fr.ts","../core/validation/messages/index.ts","../components/labels/bootstrap/public-api.ts","../components/baskets/bootstrap/baskets-menu/baskets-menu.component.ts","../components/baskets/bootstrap/baskets-menu/baskets-menu.component.html","../core/base/item-array-view.ts","../core/load-component/public-api.ts","../components/status-bar/bootstrap/fullscreen-activator/fullscreen-activator.ts","../components/status-bar/bootstrap/fullscreen-activator/fullscreen-activator.html","../components/result/result-title/result-title.ts","../components/result/result-title/result-title.html","../core/validation/validation.service.ts","../components/selection/bootstrap/results-selector/results-selector.ts","../components/selection/bootstrap/results-selector/results-selector.html","../components/action/bootstrap/public-api.ts","../components/result/messages/en.ts","../core/web-services/suggest-field.web.service.ts","../analytics/heatmap/bootstrap/heatmap.component.ts","../analytics/heatmap/bootstrap/heatmap.component.html","../core/notification/module.providers.ts","../components/baskets/bootstrap/edit-basket/edit-basket.ts","../components/baskets/bootstrap/edit-basket/edit-basket.html","../components/facet/bootstrap/facet-tree/facet-tree.ts","../components/facet/bootstrap/facet-tree/facet-tree.html","../components/feedback/messages/de.ts","../components/utils/voice-recognition/voice-recongnition.service.ts","../components/collapse/collapse.module.ts","../core/web-services/query-export.web.service.ts","../components/alerts/messages/fr.ts","../components/saved-queries/bootstrap/facet-recent-documents/facet-recent-documents.ts","../components/saved-queries/bootstrap/facet-recent-documents/facet-recent-documents.html","../components/utils/utils.module.ts","../core/login/login.service.ts","../components/search/messages/fr.ts","../components/action/bootstrap/dropdown.service.ts","../components/user-settings/user-preferences.ts","../components/result/result-thumbnail/result-thumbnail.ts","../components/result/result-thumbnail/result-thumbnail.html","../core/messages/index.ts","../analytics/heatmap/messages/en.ts","../components/alerts/bootstrap/public-api.ts","../components/facet/bootstrap/facet.module.ts","../components/utils/directives/tooltip/tooltip.component.ts","../components/user-settings/messages/en.ts","../core/intl/intl.service.ts","../components/labels/bootstrap/index.ts","../components/utils/pipes/expr-pipe.ts","../core/web-services/app.web.service.ts","../components/facet/bootstrap/facet-list/facet-list.ts","../components/facet/bootstrap/facet-list/facet-list.html","../core/login/jwt.service.ts","../core/modal/modal-ref.ts","../components/preview/bootstrap/preview-entity-facet/preview-entity-facet.component.ts","../components/preview/bootstrap/preview-entity-facet/preview-entity-facet.component.html","../components/search/bootstrap/scroller/scroller.ts","../core/login/messages/index.ts","../components/notification/bootstrap/notifications/notifications.ts","../components/notification/bootstrap/notifications/notifications.html","./src/locales/fr.ts","../components/selection/messages/index.ts","../components/facet/bootstrap/facet-bar/facet-bar.ts","../components/facet/bootstrap/facet-bar/facet-bar.html","../components/advanced/bootstrap/advanced-form-range/date-picker/date-picker.ts","../components/feedback/bootstrap/feedback.module.ts","../components/labels/labels.service.ts","../components/status-bar/index.ts","../components/result/result-extracts/result-extracts.ts","../components/result/result-extracts/result-extracts.html","../core/intl/intl.module.ts","../components/feedback/messages/index.ts","../components/advanced/messages/fr.ts","../components/utils/pipes/relative-time-pipe.ts","../components/metadata/metadata-access-lists-item-single-access-list/metadata-access-lists-item-single-access-list.ts","../components/metadata/metadata-access-lists-item-single-access-list/metadata-access-lists-item-single-access-list.html","../core/app-utils/query/expr-parser.ts","../components/collapse/messages/de.ts","../components/search/bootstrap/index.ts","../components/user-settings/messages/fr.ts","../components/metadata/messages/de.ts","../components/labels/labels-autocomplete.directive.ts","../core/web-services/web-services.module.ts","../core/base/index.ts","../core/web-services/start-config.web.service.ts","../core/base/base.module.ts","../components/results-view/bootstrap/index.ts","../components/user-settings/bootstrap/index.ts","../components/baskets/bootstrap/baskets.module.ts","../components/selection/messages/de.ts","../components/advanced/bootstrap/advanced-form-range/date-range-picker/date-range-picker.ts","../core/app-utils/index.ts","../core/web-services/audit.web.service.ts","../components/search/bootstrap/search.module.ts","../components/preview/bootstrap/preview-extracts-panel/preview-extracts-panel.component.ts","../components/preview/bootstrap/preview-extracts-panel/preview-extracts-panel.component.html","../core/app-utils/audit.interceptor.ts","../components/utils/directives/scroll-into-view.ts","../components/selection/selection.service.ts","../components/alerts/messages/index.ts","../core/validation/validation-error.pipe.ts","./src/app/app.component.ts","./src/app/app.component.html","../components/advanced/bootstrap/advanced-form-select/select/select.ts","../components/advanced/bootstrap/advanced-form-select/select/select.html","../components/action/bootstrap/action-item/action-item.ts","../components/action/bootstrap/action-item/action-item.html","../components/search/search.service.ts","../components/preview/preview.module.ts","../components/utils/messages/en.ts","../components/advanced/bootstrap/advanced-form-validation.directive.ts","../components/search/bootstrap/loading-bar/loading-bar.ts","../components/labels/messages/de.ts","../components/action/bootstrap/action-item-content/action-item-content.ts","../components/action/bootstrap/action-item-content/action-item-content.html","../components/modal/bootstrap/modal-header.component.ts","../components/modal/bootstrap/modal-header.component.html","../components/labels/index.ts","../components/selection/messages/en.ts","../components/preview/messages/de.ts","../components/modal/bootstrap/index.ts","../core/web-services/module.providers.ts","../components/metadata/messages/fr.ts","../components/utils/directives/click-outside.ts","../components/selection/bootstrap/index.ts","../components/advanced/bootstrap/advanced-form-multi-input/advanced-form-multi-input.ts","../components/advanced/bootstrap/advanced-form-multi-input/advanced-form-multi-input.html","../components/utils/pipes/moment-pipe.ts","../components/alerts/bootstrap/index.ts","../components/result/result-module.ts","../components/status-bar/bootstrap/network-activity/network-activity.ts","../components/status-bar/bootstrap/network-activity/network-activity.html","../components/search/bootstrap/pager/pager.ts","../components/search/bootstrap/pager/pager.html","../core/modal/module.providers.ts","../components/modal/bootstrap/login.component.ts","../components/modal/bootstrap/login.component.html","../core/login/token.service.ts","../components/results-view/messages/fr.ts","../components/advanced/bootstrap/public-api.ts","../components/action/index.ts","../components/modal/bootstrap/modal.module.ts","../components/user-settings/messages/de.ts","../core/intl/message.pipe.ts","../core/app-utils/format.service.ts","../core/base/polyfills.ts","../components/preview/index.ts","../components/baskets/bootstrap/public-api.ts","../core/web-services/user-settings.web.service.ts","../components/baskets/bootstrap/facet-baskets/facet-baskets.component.ts","../components/baskets/bootstrap/facet-baskets/facet-baskets.component.html","../components/advanced/messages/en.ts","../components/collapse/collapse-link.component.ts","../components/collapse/collapse-link.component.html","../core/web-services/user-ratings.web.service.ts","../components/advanced/bootstrap/advanced.module.ts","../components/facet/bootstrap/facet-refine/facet-refine.ts","../components/facet/bootstrap/facet-refine/facet-refine.html","./src/app/search-form/autocomplete-extended.directive.ts","./src/app/app.module.ts","../core/login/authentication-popup.service.ts","../components/utils/pipes/date-pipe.ts","../components/utils/messages/fr.ts","../components/selection/bootstrap/selection-arranger/selection-arranger.component.ts","../components/selection/bootstrap/selection-arranger/selection-arranger.component.html","../components/autocomplete/public-api.ts","../components/preview/public-api.ts","../components/preview/messages/en.ts","../core/login/login.component.ts","../components/feedback/messages/fr.ts","../components/notification/bootstrap/notifications-manager/notifications-manager.ts","../components/notification/bootstrap/notifications-manager/notifications-manager.html","../components/utils/directives/resize-event.directive.ts","../components/alerts/bootstrap/edit-alert/edit-alert.ts","../components/alerts/bootstrap/edit-alert/edit-alert.html","../core/web-services/labels.web.service.ts","../components/facet/bootstrap/facet-multi/facet-multi.component.ts","../components/facet/bootstrap/facet-multi/facet-multi.component.html","../core/load-component/load-component.service.ts","../components/result/messages/de.ts","../components/feedback/public-api.ts","../core/login/messages/en.ts","../components/advanced/index.ts","../components/labels/bootstrap/edit-label/edit-label.ts","../components/labels/bootstrap/edit-label/edit-label.html","../components/results-view/public-api.ts","../core/web-services/index.ts","../components/baskets/messages/fr.ts","../core/modal/messages/index.ts","../core/intl/messages/index.ts","../core/modal/messages/fr.ts","../components/result/sponsored-results/sponsored-results.ts","../components/result/sponsored-results/sponsored-results.html","../components/utils/pipes/time-pipe.ts","../core/web-services/dataset.web.service.ts","../components/search/first-page.service.ts","../components/facet/messages/index.ts","../components/metadata/messages/en.ts","../components/labels/labels.module.ts","../components/labels/bootstrap/labels-menu/labels-menu.component.ts","../components/labels/bootstrap/labels-menu/labels-menu.component.html","../components/metadata/metadata/metadata.ts","../components/metadata/metadata/metadata.html","../core/validation/public-api.ts","../core/intl/public-api.ts","../components/saved-queries/bootstrap/public-api.ts","../core/validation/validation.module.ts","../components/advanced/messages/de.ts","../components/baskets/bootstrap/result-baskets/result-baskets.ts","../components/baskets/bootstrap/result-baskets/result-baskets.html","../components/status-bar/public-api.ts","../components/result/index.ts","../core/intl/messages/en.ts","../components/result/results-counter/results-counter.ts","../components/result/results-counter/results-counter.html","../components/status-bar/messages/fr.ts","../components/labels/bootstrap/add-label/add-label.ts","../components/labels/bootstrap/add-label/add-label.html","../analytics/heatmap/bootstrap/facet-heatmap.component.ts","../analytics/heatmap/bootstrap/facet-heatmap.component.html","../components/results-view/messages/index.ts","../core/validation/module.providers.ts","../components/action/bootstrap/dropdown-menu/dropdown-menu.ts","../components/action/bootstrap/dropdown-menu/dropdown-menu.html","../components/result/public-api.ts","../analytics/heatmap/messages/de.ts","../components/saved-queries/bootstrap/edit-saved-query/edit-saved-query.ts","../components/saved-queries/bootstrap/edit-saved-query/edit-saved-query.html","../components/advanced/bootstrap/advanced-form-checkbox/advanced-form-checkbox.ts","../components/advanced/bootstrap/advanced-form-checkbox/advanced-form-checkbox.html","../core/intl/messages/fr.ts","../components/modal/bootstrap/override-user/override-user.ts","../components/modal/bootstrap/override-user/override-user.html","../components/collapse/messages/index.ts","../components/alerts/alerts.service.ts","../components/alerts/public-api.ts","../components/action/bootstrap/index.ts","../components/user-settings/bootstrap/edit-user-settings/edit-user-settings.ts","../components/user-settings/bootstrap/edit-user-settings/edit-user-settings.html","../core/base/keyboard.ts","../components/metadata/metadata.module.ts","../components/action/bootstrap/action-menu/action-menu.ts","../components/action/bootstrap/action-menu/action-menu.html","../components/utils/ui.service.ts","../core/web-services/http-client.ts","../components/autocomplete/index.ts","../components/labels/messages/fr.ts","../components/status-bar/messages/index.ts","../components/user-settings/messages/index.ts","../components/preview/bootstrap/preview.module.ts","../components/notification/bootstrap/public-api.ts","../components/baskets/index.ts","../components/saved-queries/bootstrap/saved-queries.module.ts","../components/saved-queries/bootstrap/export-query/export-query.ts","../components/saved-queries/bootstrap/export-query/export-query.html","../core/app-utils/query/query.ts","../components/alerts/bootstrap/alert-message/alert-message.component.ts","../components/alerts/bootstrap/alert-message/alert-message.component.html","../components/saved-queries/bootstrap/query-exporter/query-exporter.ts","../components/saved-queries/bootstrap/query-exporter/query-exporter.html","./src/app/search-form/search-form.component.ts","./src/app/search-form/search-form.component.html","../components/metadata/index.ts","../components/preview/preview.service.ts","../core/base/pattern-matcher.ts","../components/baskets/bootstrap/select-basket/select-basket.ts","../components/baskets/bootstrap/select-basket/select-basket.html","../components/feedback/bootstrap/index.ts","../components/modal/bootstrap/editable/editable.ts","../components/modal/bootstrap/editable/editable.html","../core/app-utils/app-service-helpers.ts","../components/status-bar/bootstrap/public-api.ts","../components/saved-queries/recent-queries.service.ts","../components/facet/bootstrap/public-api.ts","../core/login/authentication.service.ts","../components/modal/index.ts","../components/collapse/messages/en.ts","../components/facet/facet.service.ts","../components/alerts/bootstrap/alerts.module.ts","../core/notification/index.ts","../components/labels/bootstrap/labels.module.ts","../components/preview/preview-tooltip.component.ts","../components/preview/preview-tooltip.component.html","../components/utils/directives/sticky.ts","../core/validation/messages/en.ts","../core/login/module.providers.ts","../components/labels/messages/index.ts","../components/collapse/index.ts","../core/modal/messages/en.ts","../components/results-view/bootstrap/results-view-module.ts","../components/utils/directives/media-if.ts","../components/modal/bootstrap/confirm.component.ts","../components/modal/bootstrap/confirm.component.html","../components/labels/bootstrap/labels-autocomplete/labels-autocomplete.component.ts","../components/labels/bootstrap/labels-autocomplete/labels-autocomplete.component.html","./src/app/preview/preview.component.ts","./src/app/preview/preview.component.html","../components/modal/bootstrap/modal.component.ts","../components/modal/bootstrap/modal.component.html","../components/results-view/bootstrap/results-grid-view/results-grid-view.ts","../components/results-view/bootstrap/results-grid-view/results-grid-view.html","../components/collapse/collapse-button.component.ts","../components/collapse/collapse-button.component.html","../core/load-component/load-component.module.ts","../components/user-settings/index.ts","../components/baskets/messages/de.ts","../components/modal/public-api.ts","../components/facet/messages/fr.ts","../components/action/public-api.ts","../components/advanced/bootstrap/advanced-form-select/advanced-form-select.ts","../components/advanced/bootstrap/advanced-form-select/advanced-form-select.html","../components/notification/messages/en.ts","../components/preview/bootstrap/preview-pages-panel/preview-pages-panel.component.ts","../components/preview/bootstrap/preview-pages-panel/preview-pages-panel.component.html","../core/login/login.interceptor.ts","../core/app-utils/module.providers.ts","../components/search/messages/de.ts","../components/labels/bootstrap/rename-label/rename-label.ts","../components/labels/bootstrap/rename-label/rename-label.html","../core/validation/messages/fr.ts","./src/locales/en.ts","../components/preview/bootstrap/similar-documents/similar-documents.ts","../components/preview/bootstrap/similar-documents/similar-documents.html","../core/app-utils/app.service.ts","../components/action/bootstrap/action.module.ts","../components/result/user-rating/user-rating.ts","../components/result/user-rating/user-rating.html","../components/facet/bootstrap/facet-tag-cloud/facet-tag-cloud.ts","../components/facet/bootstrap/facet-tag-cloud/facet-tag-cloud.html","../components/collapse/collapse.component.ts","../components/autocomplete/bootstrap/field-search-items.component.ts","../components/preview/messages/index.ts","../components/facet/public-api.ts","../components/modal/messages/de.ts","../components/preview/preview-document-iframe.component.ts","../core/modal/modal.service.ts","../core/intl/module.providers.ts","../components/search/messages/index.ts","../components/preview/bootstrap/preview-panel/preview-panel.ts","../components/preview/bootstrap/preview-panel/preview-panel.html","../components/saved-queries/messages/index.ts","../core/base/utils.ts","../components/preview/bootstrap/preview-links/preview-links.ts","../components/preview/bootstrap/preview-links/preview-links.html","../analytics/heatmap/messages/fr.ts","../components/notification/public-api.ts","../components/alerts/bootstrap/manage-alerts/manage-alerts.ts","../components/alerts/bootstrap/manage-alerts/manage-alerts.html","../components/saved-queries/bootstrap/saved-queries-menu/saved-queries-menu.component.ts","../components/saved-queries/bootstrap/saved-queries-menu/saved-queries-menu.component.html","../analytics/heatmap/bootstrap/index.ts","../core/web-services/config/ccapp.ts","./src/app/search/search.component.ts","./src/app/search/search.component.html","../core/notification/public-api.ts","../components/autocomplete/bootstrap/index.ts","../components/saved-queries/messages/en.ts","../components/utils/directives/tooltip/tooltip.directive.ts","../core/modal/index.ts","../components/baskets/bootstrap/manage-baskets/manage-baskets.ts","../components/baskets/bootstrap/manage-baskets/manage-baskets.html","../components/preview/bootstrap/facet-preview-2/facet-preview.component.ts","../components/preview/bootstrap/facet-preview-2/facet-preview.component.html","../components/saved-queries/index.ts","../components/facet/index.ts","../components/search/bootstrap/load-more/load-more.ts","../components/search/bootstrap/load-more/load-more.html","../components/alerts/bootstrap/alerts-menu/alerts-menu.component.ts","../components/alerts/bootstrap/alerts-menu/alerts-menu.component.html","../components/search/public-api.ts","../analytics/heatmap/index.ts","../core/load-component/index.ts","../components/facet/bootstrap/facet-card/facet-card.ts","../components/facet/bootstrap/facet-card/facet-card.html","../components/baskets/messages/en.ts","../components/alerts/index.ts","../components/saved-queries/bootstrap/facet-recent-queries/facet-recent-queries.ts","../components/saved-queries/bootstrap/facet-recent-queries/facet-recent-queries.html","../core/web-services/suggest-query.web.service.ts","../components/advanced/bootstrap/advanced-form-range/advanced-form-range.ts","../components/advanced/bootstrap/advanced-form-range/advanced-form-range.html","../core/notification/notifications.interceptor.ts","../components/preview/bootstrap/preview-page-form/preview-page-form.component.ts","../components/preview/bootstrap/preview-page-form/preview-page-form.component.html","../components/autocomplete/autocomplete.directive.ts","../components/advanced/bootstrap/advanced-form-multi-input/advanced-form-autocomplete-multi-input.directive.ts","../components/user-settings/bootstrap/user-settings-editor/user-settings-editor.ts","../components/user-settings/bootstrap/user-settings-editor/user-settings-editor.html","../core/modal/public-api.ts","../core/web-services/query.web.service.ts","../components/status-bar/messages/en.ts","../components/action/bootstrap/dropdown.directive.ts","../core/web-services/recent-queries.web.service.ts","../components/advanced/public-api.ts","../components/utils/public-api.ts","./src/main.ts","../components/metadata/metadata-access-lists-item/metadata-access-lists-item.ts","../components/metadata/metadata-access-lists-item/metadata-access-lists-item.html","../components/search/bootstrap/did-you-mean/did-you-mean.ts","../components/search/bootstrap/did-you-mean/did-you-mean.html","../core/login/login.module.ts","./$_lazy_route_resource lazy namespace object","../core/app-utils/public-api.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["export * from \"./public-api\";","import {Component, Input, Output, OnChanges, SimpleChanges, EventEmitter} from \"@angular/core\";\nimport {Results, Tab} from \"@sinequa/core/web-services\";\nimport {SearchService} from \"../../search.service\";\n\n@Component({\n    selector: \"sq-tabs\",\n    templateUrl: \"./tabs.html\"\n})\nexport class BsTabs implements OnChanges {\n\n    @Input() results: Results;\n\n    /**\n     * List of custom tabs (complementing the search query tabs)\n     * Actions can be performed on click via the events Output.\n     *\n     * When the results are updated (new search text, facet\n     * selection...), the custom tab selection is discarded.\n     * If the custom action updates the results, the tab selection\n     * will revert to previous state unless the query is updated.\n     */\n    @Input() customtabs: Tab[];\n\n    /**\n     * Associate icon to a tab name ({tab1 : 'icon class 1', tab2 : ...})\n     */\n    @Input() iconMap: {[key: string]: string} = {};\n\n    /**\n     * Emits an event when a tab is selected\n     */\n    @Output() events = new EventEmitter<Tab>();\n\n    currentTab: Tab | undefined;\n    searchtabs: Tab[] | undefined;\n\n    constructor(\n        private searchService: SearchService) {\n    }\n\n    update() {\n        if (this.results && this.results.tabs) {\n            this.currentTab = this.searchService.getCurrentTab();\n            this.searchtabs = this.results.tabs;\n        }\n        else {\n            this.currentTab = undefined;\n            this.searchtabs = undefined;\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (!!changes[\"results\"]) {\n            this.update();\n        }\n    }\n\n    selectTab(tab: Tab, search = true) {\n        if (tab !== this.currentTab) {\n            if(search){\n                this.searchService.selectTab(tab); // the currentTab will be updated in update()\n            } else {\n                this.currentTab = tab;\n            }\n            this.events.next(tab);\n        }\n        return false;   // Stop following href\n    }\n}","<ul *ngIf=\"!!searchtabs || !!customtabs\" class=\"nav nav-tabs mb-1\">\n    <ng-container *ngIf=\"!!searchtabs\">\n        <li *ngFor=\"let tab of searchtabs\" class=\"nav-item\">\n            <a href=\"#\" class=\"nav-link\" [ngClass]=\"{'active' : tab == currentTab, 'disabled': tab.count == 0}\" (click)=\"selectTab(tab)\">\n                <i [ngClass]=\"iconMap[tab.name]\"></i>\n                {{(tab.display || tab.name) | sqMessage}} \n                <span class=\"count\">({{tab.count | sqNumber}})</span>\n            </a>\n        </li>\n    </ng-container>\n    <ng-container *ngIf=\"!!customtabs\">\n        <li *ngFor=\"let tab of customtabs\" class=\"nav-item\">\n            <a href=\"#\" class=\"nav-link\" [ngClass]=\"{'active' : tab == currentTab, 'disabled': tab.count == 0}\" (click)=\"selectTab(tab, false)\">\n                <i [ngClass]=\"iconMap[tab.name]\"></i>\n                {{(tab.display || tab.name) | sqMessage}}\n                <span class=\"count\" *ngIf=\"tab.count >= 0\">({{tab.count | sqNumber}})</span>\n            </a>\n        </li>\n    </ng-container>\n</ul>","export * from \"./selection.service\";\nexport * from \"./bootstrap/index\";\nexport * from \"./messages/index\";","import {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\n\nimport {IntlModule} from \"@sinequa/core/intl\";\n\nimport {BsActionModule} from \"@sinequa/components/action\";\nimport {UtilsModule} from \"@sinequa/components/utils\";\n\nimport {BsFullscreenActivator} from \"./fullscreen-activator/fullscreen-activator\";\nimport {BsNetworkActivity} from \"./network-activity/network-activity\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        IntlModule,\n        BsActionModule,\n        UtilsModule,\n    ],\n    declarations: [\n        BsFullscreenActivator, BsNetworkActivity,\n    ],\n    exports: [\n        BsFullscreenActivator, BsNetworkActivity,\n    ]\n})\nexport class BsStatusBarModule {\n}\n","import {Component, Output, TemplateRef, EventEmitter, ViewChild} from \"@angular/core\";\nimport {Action} from \"@sinequa/components/action\";\n\n/**\n * This interface should be implemented by facet components, which expose\n * a list of actions and event listeners\n */\n@Component({\n    template: \"\"\n})\nexport abstract class AbstractFacet {\n\n    /**\n     * List of custom actions of this facet\n     */\n    public get actions(): Action[] { return []; }\n\n    /**\n     * Event emitter triggered when the list of action changes\n     */\n    @Output() public actionsChanged = new EventEmitter<Action[]>();\n\n    /**\n     * Template for the settings editor of this facet, if any\n     */\n    @ViewChild(\"settingsTpl\", {static: true, read: TemplateRef}) public settingsTpl?: TemplateRef<any>;\n\n    /**\n     * Template for header of this facet, if any\n     */\n    @ViewChild(\"headerTpl\", {static: true, read: TemplateRef}) public headerTpl?: TemplateRef<any>;\n\n    /**\n     * Template for a sub-header of this facet, if any. This appears below the header\n     */\n    @ViewChild(\"subHeaderTpl\", {static: true, read: TemplateRef}) public subHeaderTpl?: TemplateRef<any>;\n\n    /**\n     * Template for footer of this facet, if any\n     */\n    @ViewChild(\"footerTpl\", {static: true, read: TemplateRef}) public footerTpl?: TemplateRef<any>;\n\n    /**\n     * Method called when a facet is collapsed\n     */\n    public onCollapse(collapsed: boolean){}\n\n    /**\n     * Method called when a facet is resized via an action (not accounting for window resizing)\n     */\n    public onExpand(expanded: boolean){}\n\n    /**\n     * Method called when the settings of this facet are opened\n     */\n    public onOpenSettings(settingsOpened: boolean){}\n\n    /**\n     * Method enabling the facet component to be hidden (if, for example there is no data to display)\n     */\n    public isHidden(): boolean {\n        return false;\n    }\n\n}","import { Component, Input, ChangeDetectorRef } from \"@angular/core\";\nimport { AppService } from \"@sinequa/core/app-utils\";\nimport { HeatmapItem } from \"./heatmap.component\";\nimport { ResultsViewService } from \"@sinequa/components/results-view\";\nimport { Action } from \"@sinequa/components/action\";\nimport { SearchService } from \"@sinequa/components/search\";\nimport { BsFacetHeatmapComponent } from './facet-heatmap.component';\nimport { FacetService } from '@sinequa/components/facet';\nimport { SelectionService } from '@sinequa/components/selection';\nimport { FormBuilder } from '@angular/forms';\nimport { UserPreferences } from '@sinequa/components/user-settings';\n\n\n@Component({\n    selector: 'sq-results-heatmap-view',\n    templateUrl: './results-heatmap-view.html' \n})\nexport class BsResultsHeatmapView extends BsFacetHeatmapComponent {\n    @Input() selectView?: string;\n    @Input() theme: \"light\" | \"dark\" = \"light\";\n\n    settingsAction: Action;\n    showSettings: boolean;\n\n    constructor(\n        public appService: AppService,\n        public searchService: SearchService,\n        public facetService: FacetService,\n        public selectionService: SelectionService,\n        public formBuilder: FormBuilder,\n        public cdRef: ChangeDetectorRef,\n        public prefs: UserPreferences,\n        public resultsViewService : ResultsViewService\n    ) {\n        super(appService, searchService, facetService, selectionService, formBuilder, cdRef, prefs, undefined);\n    \n        this.height = 1200;\n        this.width = 1200;\n        this.maxX = 40;\n        this.maxY = 40;\n\n        this.settingsAction = new Action({\n            action: (action) => {\n                this.showSettings = !this.showSettings;\n                this.onOpenSettings(this.showSettings);\n                action.update();\n            },\n            updater: (action) => {\n                action.icon = this.showSettings ? \"far fa-save\" : \"fas fa-cog\";\n                action.text = this.showSettings ? \"msg#facetCard.saveSettings\" : \"msg#facetCard.openSettings\";\n                action.title = this.showSettings ? \"msg#facetCard.saveSettings\" : \"msg#facetCard.openSettings\";\n                action.selected = this.showSettings;\n            }\n        });\n        this.settingsAction.update();\n    \n    }\n\n    get _actions(): Action[] {\n        const actions = this.actions;\n        actions.push(this.settingsAction);\n        return actions;\n    }\n\n    onItemClicked(item: HeatmapItem){\n        super.onItemClicked(item);\n        if(this.selectView){\n            this.resultsViewService.selectResultsViewName(this.selectView);\n        }\n    }\n\n    onAxisClicked(item: {value: string, axis: 'x' | 'y'}){\n        super.onAxisClicked(item);\n        if(this.selectView){\n            this.resultsViewService.selectResultsViewName(this.selectView);\n        }\n    }\n}\n\n","\n<div class=\"btn-group\" [sq-action-buttons]=\"{items: _actions}\"></div>\n\n<ng-container *ngIf=\"!showSettings\">\n\n    <sq-heatmap *ngIf=\"data\"\n        [data]=\"data\"\n        [height]=\"heightPref\"\n        [width]=\"widthPref\"\n        [margin]=\"margin\"\n        [transition]=\"transition\"\n        [itemsClickable]=\"itemsClickable\"\n        [axisClickable]=\"axisClickable\"\n        [buckets]=\"buckets\"\n        [colorScheme]=\"colorSchemePref\"\n        [maxX]=\"maxXPref\"\n        [maxY]=\"maxYPref\"\n        [theme]=\"theme\"\n\n        (itemClicked)=\"onItemClicked($event)\"\n        (axisClicked)=\"onAxisClicked($event)\"\n    >\n    </sq-heatmap>\n\n    <div class=\"text-center py-5 px-3\" *ngIf=\"!data\">\n        <i>{{'msg#heatmap.nodata' | sqMessage}}</i>\n    </div>\n\n</ng-container>\n\n<div class=\"card-body\" *ngIf=\"showSettings\">\n    <form [formGroup]=\"form\">\n        <div class=\"form-group\">\n            <label for=\"maxX\">{{'msg#heatmap.maxX' | sqMessage}} ({{maxXPref}})</label>\n            <input type=\"range\" class=\"form-control\" id=\"maxX\" min=\"10\" max=\"40\" formControlName=\"maxX\">\n\n            <label for=\"maxY\">{{'msg#heatmap.maxY' | sqMessage}} ({{maxYPref}})</label>\n            <input type=\"range\" class=\"form-control\" id=\"maxY\" min=\"10\" max=\"100\" formControlName=\"maxY\">\n            \n            <div class=\"custom-control custom-checkbox my-1\">\n                <input class=\"custom-control-input\" type=\"checkbox\" id=\"scaleAxes\" formControlName=\"scaleAxes\">\n                <label class=\"custom-control-label\" for=\"scaleAxes\">{{'msg#heatmap.maxY' | sqMessage}}</label>\n            </div>\n\n            <hr>\n\n            <label for=\"colors\">{{'msg#heatmap.colors' | sqMessage}}</label>\n            <select id=\"colors\" class=\"form-control\" formControlName=\"colors\">\n                <option [ngValue]=\"'schemeBlues'\">{{'msg#heatmap.blue' | sqMessage}}</option>\n                <option [ngValue]=\"'schemeReds'\">{{'msg#heatmap.red' | sqMessage}}</option>\n                <option [ngValue]=\"'schemeGreens'\">{{'msg#heatmap.green' | sqMessage}}</option>\n                <option [ngValue]=\"'schemeRdBu'\">{{'msg#heatmap.diverging' | sqMessage}}</option>\n                <option [ngValue]=\"'schemeSpectral'\">{{'msg#heatmap.diverging' | sqMessage}}</option>\n                <option [ngValue]=\"'schemeYlGnBu'\">{{'msg#heatmap.cool' | sqMessage}}</option>\n            </select>\n\n            <hr>\n\n            <button class=\"btn btn-light\" (click)=\"setDefaults()\">{{'msg#heatmap.defaults' | sqMessage}}</button>\n        </div>\n    </form>\n</div>","import {Pipe, ChangeDetectorRef} from \"@angular/core\";\nimport {AbstractIntlPipe, IntlService} from \"@sinequa/core/intl\";\nimport {FormatService} from \"@sinequa/core/app-utils\";\n\n/**\n * A pipe to transform a number into a readable internationalized memory size label,\n * for example \"126432\" into \"126 kB\".\n *\n * @example\n * <span>Size:</span><span>{{ documentSize | sqMemorySize }}</span>\n */\n@Pipe({name: \"sqMemorySize\", pure: false})\nexport class MemorySizePipe extends AbstractIntlPipe {\n    constructor(\n        protected formatService: FormatService,\n        intlService: IntlService,\n        changeDetectorRef: ChangeDetectorRef) {\n        super(intlService, changeDetectorRef);\n    }\n\n    updateValue(key: number): void {\n        super.updateValue(key);\n        this.value = this.formatService.formatMemorySize(key);\n    }\n}","export * from \"./bootstrap/index\";\nexport * from \"./messages/index\";\nexport * from \"./user-preferences\";","import {Utils} from \"@sinequa/core/base\";\nimport {enResultsView, frResultsView, deResultsView} from \"@sinequa/components/results-view\";\nimport {enSearch, frSearch, deSearch} from \"@sinequa/components/search\";\nimport _enHeatmap from \"./en\";\nimport _frHeatmap from \"./fr\";\nimport _deHeatmap from \"./de\";\n\nconst enHeatmap = Utils.merge({}, _enHeatmap, enResultsView, enSearch);\nconst frHeatmap = Utils.merge({}, _frHeatmap, frResultsView, frSearch);\nconst deHeatmap = Utils.merge({}, _deHeatmap, deResultsView, deSearch);\n\nexport { enHeatmap, frHeatmap, deHeatmap };\n","import {Injectable, Inject, OnDestroy} from \"@angular/core\";\nimport {Subject, Observable} from \"rxjs\";\nimport {pluck} from \"rxjs/operators\";\nimport {SqHttpClient} from \"./http-client\";\nimport {HttpService} from \"./http.service\";\nimport {START_CONFIG, StartConfig} from \"./start-config.web.service\";\nimport {Utils} from \"@sinequa/core/base\";\n\n/**\n * Describes a Sinequa princpal\n */\nexport interface Principal {\n    id: string;\n    id2: string;\n    id3: string;\n    id4: string;\n    id5: string;\n    name: string;\n    email: string;\n    description: string;\n    longName: string;\n    userId: string;\n    fullName: string;\n    isAdministrator: boolean;\n    isDelegatedAdmin: boolean;\n    param1: string;\n    param2: string;\n    param3: string;\n    param4: string;\n    param5: string;\n    param6: string;\n    param7: string;\n    param8: string;\n    param9: string;\n    param10: string;\n}\n\nexport interface PrincipalUserInfo {\n    id: string;\n    userId: string;\n    name: string;\n    fullName: string;\n    longName: string;\n    email: string;\n    isUser: string;\n    isGroup: string;\n}\n\nexport interface PrincipalParams {\n    offset?: number;    // 0\n    limit?: number;     // 10\n    isUser?: boolean;   // true\n    isGroup?: boolean;  // true\n    search?: string;    // search by name, fullname or email\n\n}\n\nexport interface PrincipalUserIdsParams {\n    offset?: number;    // 0\n    limit?: number;     // 10\n    userIds: string[];\n}\n\n/**\n * A base event from which all events that can be issued by the {@link PrincipalWebService} are derived\n */\nexport interface PrincipalEvent {\n    type: \"changed\";\n}\n\n/**\n * This event is fired each time the [principal]{@link PrincipalWebService#principal} member is modified.\n * Typically this will be at login / logoff and also if the \"override user\" admin feature is used.\n */\nexport interface PrincipalChangedEvent extends PrincipalEvent {\n    type: \"changed\";\n}\n\n/**\n * A service for calling the principal web service\n */\n@Injectable({\n    providedIn: \"root\"\n})\nexport class PrincipalWebService extends HttpService implements OnDestroy {\n    private _principal: Principal | undefined;\n    private _events = new Subject<PrincipalChangedEvent>();\n\n    constructor(\n        @Inject(START_CONFIG) startConfig: StartConfig,\n        private httpClient: SqHttpClient) {\n        super(startConfig);\n    }\n\n    ngOnDestroy() {\n        this._events.complete();\n    }\n\n    /**\n     * The observable events emitted by this service\n     */\n    get events(): Observable<PrincipalChangedEvent> {\n        return this._events;\n    }\n\n    /**\n     * Gets the current {@link Principal}\n     */\n    get principal(): Principal | undefined {\n        return this._principal;\n    }\n\n    /**\n     * Sets the current {@link Principal} and issues the \"changed\" event\n     */\n    set principal(value: Principal | undefined) {\n        this._principal = value;\n        this._events.next({type: \"changed\"});\n    }\n\n    /**\n     * Gets the list of user info (user or group)\n     *\n     * @param params query params to specify the search\n     * @returns list of user info\n     */\n    list(params?: PrincipalParams): Observable<(PrincipalUserInfo | undefined)[]> {\n        return this.httpClient.get<(PrincipalUserInfo | undefined)[]>(this.makeUrl(\"principal/list\"), {\n            params: this.makeParams({...params})\n        });\n    }\n\n    userId(userId: string): Observable<Partial<PrincipalUserInfo>> {\n        return this.httpClient.get<Partial<PrincipalUserInfo>>(this.makeUrl(`principal/userId/${userId}`));\n    }\n\n    userIds(params?: PrincipalUserIdsParams): Observable<Partial<PrincipalUserInfo[]>> {\n        return this.httpClient.post<Partial<PrincipalUserInfo>>(this.makeUrl(\"principal/userids\"), params).pipe(\n            pluck(\"principals\")\n        );\n    }\n\n    /**\n     * Gets the principal from the server based on the current login credentials\n     *\n     * @param autoAuthenticate Determines whether the {@link HttpInterceptor} should perform HTTP 401 handling\n     * for this request\n     */\n    get(autoAuthenticate = true): Observable<Principal> {\n        return this.httpClient.get<Principal>(this.makeUrl(\"principal\"), {\n            params: this.makeParams({\n                action: \"get\",\n                noAutoAuthentication: !autoAuthenticate\n            })\n        });\n    }\n\n    /**\n     * Gets the principal from the server based on the current login credentials and sets the\n     * principal member\n     */\n    load(): Observable<Principal> {\n        const observable = this.get();\n        Utils.subscribe(observable,\n            (response) => {\n                this.principal = response;\n                return response;\n            },\n            (error) => {\n                console.log(\"principalService.get failure - error: \", error);\n            });\n        return observable;\n    }\n}\n","import {Injectable, Optional, OnDestroy, Inject, InjectionToken} from \"@angular/core\";\nimport {Subject} from \"rxjs\";\nimport {UserSettingsWebService, AuditEvents, Record} from \"@sinequa/core/web-services\";\nimport {SearchService} from \"@sinequa/components/search\";\nimport {Utils} from \"@sinequa/core/base\";\n\n\nexport interface RecentDocument {\n    /**\n     * Fields from Record that we want to store/display/index for recent documents\n     */\n    id: string;\n    title: string;\n    url1: string;\n    treepath: string[];\n    docformat: string;\n    authors: string[];\n\n    /**\n     * Date at which the document was last opened\n     */\n    date: Date;\n\n    /**\n     * Store whether the doc was opened in the preview or directly via url\n     */\n    original: boolean;\n}\n\n\n// from core/models/audit\nexport const enum RecentDocumentEventType {\n    Loaded = \"RecentDocument_Loaded\",\n    Patched = \"RecentDocument_Patched\",\n    Add = \"RecentDocument_Add\",\n    Update = \"RecentDocument_Update\",\n    Delete = \"RecentDocument_Delete\",\n    Search = \"Search_RecentDocument\"\n}\n\n// Types of events triggering a change event\nexport const RECENT_DOCUMENTS_CHANGE_EVENTS = [\n    RecentDocumentEventType.Add,\n    RecentDocumentEventType.Update,\n    RecentDocumentEventType.Delete,\n];\n\n\n// CRUD Events\nexport interface RecentDocumentChangeEvent {\n    type: RecentDocumentEventType;\n    recentdocument?: RecentDocument;\n}\n\nexport const MAX_DOCUMENTS = new InjectionToken(\"MAX_DOCUMENTS\");\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RecentDocumentsService implements OnDestroy {\n\n    private readonly _events = new Subject<RecentDocumentChangeEvent>();\n    private readonly _changes = new Subject<RecentDocumentChangeEvent>();\n\n    constructor(\n        public userSettingsService: UserSettingsWebService,\n        public searchService: SearchService,\n        @Optional() @Inject(MAX_DOCUMENTS) private maxDocuments: number,\n    ){\n        if(!this.maxDocuments){\n            this.maxDocuments = 20;\n        }\n\n        // Listen to the user settings\n        this.userSettingsService.events.subscribe(event => {\n            // E.g. new login occurs\n            // ==> Revive dates\n            this.recentdocuments.forEach(rd => {\n                if (Utils.isString(rd.date)) {\n                    const date = Utils.toDate(rd.date);\n                    if (date) {\n                        rd.date = date;\n                    }\n                }\n            });\n            // ==> Menus need to be rebuilt\n            this.events.next({type: RecentDocumentEventType.Loaded});\n        });\n\n        // Listen to own events, to trigger change events\n        this._events.subscribe(event => {\n            if(RECENT_DOCUMENTS_CHANGE_EVENTS.indexOf(event.type) !== -1){\n                this.changes.next(event);\n            }\n        });\n\n        /**\n         * Subscribe to the search service to capture \"open-original-document\" event\n         * and add documents to this service\n         */\n        this.searchService.events.subscribe(event => {\n            if(event.type === \"open-original-document\" && event.record){\n                this.addDocument(event.record, true);\n            }\n        });\n    }\n\n\n    // GETTERS\n\n    /**\n     * Returns the list of this user's recent documents.\n     * The list is stored in the user settings (this is a redirection).\n     * Using this service creates the list of recent documents if it does not already exist.\n     */\n    public get recentdocuments() : RecentDocument[]{\n        if(!this.userSettingsService.userSettings)\n            this.userSettingsService.userSettings = {};\n        if(!this.userSettingsService.userSettings[\"recentDocuments\"])\n            this.userSettingsService.userSettings[\"recentDocuments\"] = [];\n        return this.userSettingsService.userSettings[\"recentDocuments\"];\n    }\n\n    /**\n     * Triggers any event among RecentDocumentChangeEvent\n     * (use for fine-grained control of recent documents workflow)\n     */\n    public get events() : Subject<RecentDocumentChangeEvent> {\n        return this._events;\n    }\n\n    /**\n     * Triggers when events affect the list of recent documents\n     * (use to refresh recent documents menus)\n     * Cf. CHANGE_EVENTS list\n     */\n    public get changes() : Subject<RecentDocumentChangeEvent> {\n        return this._changes;\n    }\n\n    /**\n     * @returns true if there is at least one recent document\n     */\n    public get hasRecentDocument(): boolean {\n        return this.recentdocuments.length > 0;\n    }\n\n    /**\n     * @returns a recent document with the given name or null if it does not exist\n     * @param name\n     */\n    public recentdocument(text: string): RecentDocument | undefined {\n        const i = this.recentdocumentIndex(text);\n        return i>= 0? this.recentdocuments[i] : undefined;\n    }\n\n    private recentdocumentIndex(id: string): number {\n        for (let i = 0, ic = this.recentdocuments.length; i < ic; i++) {\n            const recentdocument = this.recentdocuments[i];\n            if (recentdocument && recentdocument.id === id) {\n                return i;\n            }\n        }\n        return -1;\n    }\n\n    private comparator(q1: RecentDocument, q2: RecentDocument){\n        return q2.date.getTime() - q1.date.getTime();\n    }\n\n\n    // CRUD\n\n    /**\n     * Creates a new recent document unless it already exists, in which case the existing document is updated.\n     * Emits an recentdocument event.\n     * Update the data on the server.\n     * @param record Record to add to the service\n     * @param original Whether the original doc was opened or the preview\n     * @returns true if recentdocument was created\n     */\n    public addDocument(record: Record, original: boolean) {\n        if(record){\n            return this.addRecentDocument({\n                id: record.id,\n                title: record.title,\n                url1: record.url1,\n                treepath: record.treepath,\n                docformat: record.docformat,\n                authors: record.authors,\n\n                date: new Date(),\n                original: original\n            });\n        }\n        return false;\n    }\n\n    /**\n     * Creates a new recent document unless it already exists, in which case the existing document is updated.\n     * Emits an recentdocument event.\n     * Update the data on the server.\n     * @param recentdocument the recentdocument to create\n     * @returns true if recentdocument was created\n     */\n    public addRecentDocument(recentdocument: RecentDocument) : boolean {\n\n        if(!recentdocument.id){\n            return false;\n        }\n\n        const i = this.recentdocumentIndex(recentdocument.id); // If the document already exists\n        if(i >= 0){\n            this.recentdocuments[i].date = recentdocument.date; // Update the date of the existing document\n            this.events.next({type : RecentDocumentEventType.Update, recentdocument: this.recentdocuments[i]});\n        }\n        else {\n            this.recentdocuments.push(recentdocument);\n            this.events.next({type : RecentDocumentEventType.Add, recentdocument: recentdocument});\n        }\n\n        // Sort the list\n        this.recentdocuments.sort(this.comparator);\n\n        // Truncate the list\n        if(this.maxDocuments >=0 )\n            this.recentdocuments.splice(this.maxDocuments);\n\n        this.patchRecentDocuments(); // No need to emit an \"Add\" audit event, since it is redundant with the main search API\n        return true;\n    }\n\n    /**\n     * Deletes the given RecentDocument (based on its name)\n     * Emits an RecentDocument event.\n     * Update the data on the server.\n     * @param recentdocument\n     * @returns true if recent document was deleted\n     */\n    public deleteRecentDocument(recentdocument: RecentDocument) : boolean {\n\n        const index = this.recentdocumentIndex(recentdocument.id);\n\n        if(index === -1)\n            return false; // Nothing to delete\n\n        this.recentdocuments.splice(index, 1);\n        this.events.next({type : RecentDocumentEventType.Delete, recentdocument: recentdocument});\n        this.patchRecentDocuments([\n            {\n                type: RecentDocumentEventType.Delete,\n                detail: {\n                    recentdocument: recentdocument.id\n                }\n            }\n        ]);\n        return true;\n    }\n\n    /**\n     * Updates Recent Documents in User settings.\n     * @param auditEvents : Audit Events to be triggered\n     * @returns an Observable which can be used to trigger further events\n     */\n    private patchRecentDocuments(auditEvents?: AuditEvents) {\n        return this.userSettingsService.patch({recentDocuments: this.recentdocuments}, auditEvents)\n            .subscribe(\n                next => {\n                    this.events.next({type: RecentDocumentEventType.Patched});\n                },\n                error => {\n                    console.error(\"Could not patch Recent documents!\", error);\n                }\n            );\n    }\n\n\n    ngOnDestroy() {\n        this.events.complete();\n        this.changes.complete();\n    }\n}","import {Component, Input, OnChanges, OnInit} from \"@angular/core\";\nimport {Results} from \"@sinequa/core/web-services\";\nimport {FacetService} from \"../../facet.service\";\nimport {Action} from \"@sinequa/components/action\";\nimport {FacetConfig} from '../facet-multi/facet-multi.component';\nimport {BsFacetList} from '../facet-list/facet-list';\nimport {BsFacetTree} from '../facet-tree/facet-tree';\n\n@Component({\n    selector: \"sq-facet-filters\",\n    templateUrl: \"./facet-filters.html\",\n    styleUrls: [\"./facet-filters.css\"]\n})\nexport class BsFacetFilters implements OnInit, OnChanges {\n    @Input() results: Results;\n    @Input() facets: FacetConfig[];\n    @Input() enableCustomization = false;\n\n    @Input() autoAdjust: boolean = true;\n    @Input() autoAdjustBreakpoint: string = 'xl';\n    @Input() collapseBreakpoint: string = 'sm';\n    @Input() rightAligned: boolean = false;\n    @Input() size: string;\n\n    filters: Action[] = [];\n    hidden: boolean = false;\n\n    facetStatus = {\n        add: {\n            title: \"msg#facet.filters.add\",\n            icon: \"fas fa-plus\"\n        },\n        remove: {\n            title: \"msg#facet.filters.remove\",\n            icon: \"fas fa-minus\"\n        }\n    };\n\n    constructor(\n        private facetService: FacetService\n    ) {\n        this.hidden = false;\n        this.filters = [];\n    }\n\n    ngOnInit() {\n        if (!this.enableCustomization) return;\n\n        if (!this.facetService.defaultFacets) {\n            this.facetService.defaultFacets = [];\n            for (let facet of this.facets) this.facetService.defaultFacets.push({name: facet.name, position: 0, hidden: false, expanded: true, view: \"\"});\n        }\n\n        if (!this.facetService.allFacets) this.facetService.allFacets = this.facets;\n    }\n\n    ngOnChanges() {\n        if(!!this.results)\n            this.buildFilters();\n\n        if(!this.results)\n            this.hidden=true;\n    }\n\n    /**\n     * Build filters bar actions\n     */\n    private buildFilters() {\n\n        // For each facet\n        this.filters = this.filteredFacets.map((facet: FacetConfig) => {\n\n            const children = [\n                new Action({\n                    component: (facet.type === 'list') ? BsFacetList : BsFacetTree,\n                    componentInputs: {results: this.results, name: facet.name, aggregation: facet.aggregation, searchable: facet.searchable, displayActions: true}\n                })\n            ];\n\n            return new Action({\n                name: facet.name,\n                text: facet.title,\n                title: facet.title,\n                icon: facet.icon,\n                disabled: !this.hasData(facet),\n                styles: this.hasFiltered(facet.name) ? \"ml-2 font-weight-bold\" : \"ml-2\",\n                children: children\n            });\n        });\n\n        if (this.enableCustomization) this.addFacetMenu();\n    }\n\n    /**\n     * Use to outline facet when filters are sets\n     * @param facetName facet name\n     *\n     * @returns true if filters are sets otherwise false\n     */\n    private hasFiltered(facetName): boolean {\n        return this.facetService.hasFiltered(facetName);\n    }\n\n    /**\n     * Use to disable menu item when no items in a facet\n     * @param facet facet to check\n     *\n     * @returns true if facet contains at least one item otherwise false\n     */\n    private hasData(facet: FacetConfig): boolean {\n        return this.facetService.hasData(facet.aggregation, this.results);\n    }\n\n    private addFacetMenu() {\n        let outFacets: Action[] = [];\n\n        outFacets.push(new Action({\n            name: `add_remove_all`,\n            text: this.userFacets.length < this.facets.length ? \"msg#facet.filters.addAll\" : \"msg#facet.filters.removeAll\",\n            icon: this.hasFacetSelected ? \n                    (this.userFacets.length < this.facets.length ? \"far fa-minus-square mr-1\" : \"far fa-check-square mr-1\")\n                    : \"far fa-square mr-1\",\n            title: this.userFacets.length < this.facets.length ? \"msg#facet.filters.addAll\" : \"msg#facet.filters.removeAll\",\n            action: () => {\n                if (this.hasFacetSelected && this.userFacets.length === this.facets.length) this.facetService.removeAllFacet();\n                else this.facetService.addAllFacet();\n                this.buildFilters();\n            }\n        }));\n\n        for (let facet of this.facets) {\n            outFacets.push(new Action({\n                name: `add_remove_${facet.name}`,\n                text: facet.title,\n                icon: facet.icon,\n                selected: !!this.userFacets?.find(userFacet => userFacet.name === facet.name),\n                title: !!this.userFacets?.find(userFacet => userFacet.name === facet.name) ? \"msg#facet.filters.add\" : \"msg#facet.filters.remove\",\n                action: () => {\n                    if (this.userFacets?.find(userFacet => userFacet.name === facet.name)) this.facetService.removeFacet({name: facet.name, position: 0, hidden: false, expanded: true, view: \"\"})\n                    else this.facetService.addFacet({name: facet.name, position: 0, hidden: false, expanded: true, view: \"\"});\n                    this.buildFilters();\n                }\n            }));\n        }\n\n        let add_action = new Action({\n            name: \"facets_config\",\n            icon: \"fas fa-cog\",\n            title: \"msg#facet.filters.customizeFacets\",\n            children: outFacets\n        });\n        this.filters = [add_action, ...this.filters]; \n    }\n\n    get filteredFacets() {\n        if (!this.enableCustomization) return this.facets;\n        let new_facets: FacetConfig[] = [];\n\n        if (this.userFacets) {\n            for (let facet of this.facets) {\n                let pos = this.userFacets.findIndex((userFacet) => userFacet.name === facet.name);\n                if (pos >= 0) new_facets.push(facet);\n            }\n        }\n        return new_facets;\n    }\n\n    get userFacets() {\n        return this.facetService.facets;\n    }\n\n    get hasFacetSelected() {\n        if (this.userFacets.length === 0) return false;\n        for (let facet of this.facets) {\n            if (this.userFacets.find(userFacet => userFacet.name === facet.name)) return true;\n        }\n        return false;\n    }\n}\n","<div class=\"facet-filters-bar\" *ngIf=\"!hidden\">\n    <sq-action-menu\n        [items]=\"filters\"\n        [autoAdjust]=\"autoAdjust\"\n        [autoAdjustBreakpoint]=\"autoAdjustBreakpoint\"\n        [collapseBreakpoint]=\"collapseBreakpoint\"\n        [right]=\"rightAligned\"\n        [size]=\"size\">\n    </sq-action-menu>\n</div>\n","import {Directive, Input, Output, OnChanges, OnDestroy, ViewContainerRef, ComponentRef, EventEmitter, Type} from \"@angular/core\";\nimport {LoadComponentService, LoadComponentOptions, LoadedComponent} from \"./load-component.service\";\n\n/**\n * A directive that uses the {@link LoadComponentService} to dynamically load a component.\n * The loaded component's lifecycle is automatically managed with changes to the directive's\n * `options` reflected to the component by rebinding it using {@link LoadComponentService}\n */\n@Directive({\n    selector: \"[sqLoadComponent]\"\n})\nexport class LoadComponentDirective implements OnChanges, OnDestroy {\n    /**\n     * Options for the loading of a component\n     */\n    @Input(\"sqLoadComponent\") options: LoadComponentOptions;\n    /**\n     * Used to emit events when the component is created and destroyed\n     */\n    @Output(\"sqLoadComponent\") eventEmitter = new EventEmitter<{componentRef: ComponentRef<Type<any>> | undefined}>();\n    private loadedComponent: LoadedComponent;\n    private currentComponent: Type<any>;\n\n    constructor(\n        private loadComponentService: LoadComponentService,\n        private viewContainerRef: ViewContainerRef) {\n    }\n\n    /**\n     * Handles any changes to the input `options`. On the first call the component is loaded\n     * and bound. Subsequent changes to the `options` are handled by rebinding the component unless\n     * the component type to load changes in which case the current component is unloaded before\n     * loading the new component.\n     *\n     * The component is loaded using the `ViewContainerRef` associated with the directive\n     */\n    ngOnChanges() {\n        if (this.loadedComponent) {\n            if (this.currentComponent === this.options.component) {\n                this.loadComponentService.bindComponent(this.options, this.loadedComponent);\n                return;\n            }\n            this.loadComponentService.unbindComponent(this.loadedComponent);\n            this.loadedComponent.componentRef.destroy();\n            this.eventEmitter.emit({componentRef: undefined});\n        }\n        this.loadedComponent = this.loadComponentService.loadComponent(this.options, this.viewContainerRef);\n        this.currentComponent = this.options.component;\n        this.eventEmitter.emit({componentRef: !!this.loadedComponent ? this.loadedComponent.componentRef : undefined});\n    }\n\n    /**\n     * Unbinds the loaded component. It is not destroyed here as angular will automatically destroy\n     * the component at the same time as this directive is destroyed as they share the same `ViewContainerRef`\n     */\n    ngOnDestroy() {\n        if (this.loadedComponent) {\n            this.loadComponentService.unbindComponent(this.loadedComponent);\n            this.eventEmitter.emit({componentRef: undefined});\n        }\n    }\n}\n","import {Utils} from \"@sinequa/core/base\";\nimport {enSearch, frSearch, deSearch} from \"@sinequa/components/search\";\nimport _enAdvanced from \"./en\";\nimport _frAdvanced from \"./fr\";\nimport _deAdvanced from \"./de\";\n\nconst enAdvanced = Utils.merge({}, _enAdvanced, enSearch);\nconst frAdvanced = Utils.merge({}, _frAdvanced, frSearch);\nconst deAdvanced = Utils.merge({}, _deAdvanced, deSearch);\n\nexport {enAdvanced, frAdvanced, deAdvanced};\n\n","export * from \"./results-grid-view/results-grid-view\";\nexport * from \"./results-view-module\";\nexport * from \"./results-view-selector/results-view-selector\";\n","import {Utils} from \"@sinequa/core/base\";\nimport {enSearch, frSearch, deSearch} from \"@sinequa/components/search\";\nimport {enSelection, frSelection, deSelection} from \"@sinequa/components/selection\";\nimport {enModal, frModal, deModal} from \"@sinequa/components/modal\";\nimport _enBaskets from \"./en\";\nimport _frBaskets from \"./fr\";\nimport _deBaskets from \"./de\";\n\nconst enBaskets = Utils.merge({}, _enBaskets, enSearch, enSelection, enModal);\nconst frBaskets = Utils.merge({}, _frBaskets, frSearch, frSelection, frModal);\nconst deBaskets = Utils.merge({}, _deBaskets, deSearch, deSelection, deModal);\n\nexport { enBaskets, frBaskets, deBaskets };","export default {\n    \"help\": {\n        \"title\": \"Online Help\"\n    },\n\n    \"overrideUser\": {\n        \"title\": \"Override User\",\n        \"userName\": \"User name\",\n        \"domain\": \"Domain\"\n    },\n\n    \"btnClose\": {\n        \"text\": \"Close\"\n    }\n};\n","export * from \"./public-api\";","export default {\n    \"preview\": {\n        \"noDocumentDataErrorPopupTitle\": \"Echec d'accès aux données de ce document\",\n        \"highlightsTitle\": \"Surlignage\",\n        \"noEntityToHighlight\": \"Aucune entité affichée dans ce document\",\n        \"termXLabel\": \"Terme recherché {index, number}\",\n        \"otherTerms\": \"Autres termes\",\n        \"previousDocument\": \"Précédent\",\n        \"nextDocument\": \"Suivant\",\n        \"originalDocument\": \"Document original\",\n        \"selectedHighlight\": \"Elément sélectionné\",\n        \"noSelectedHighlight\": \"Aucun élément sélectionné\",\n        \"firstHighlightButtonAltText\": \"Premier élément\",\n        \"previousHighlightButtonAltText\": \"Elément précédent\",\n        \"nextHighlightButtonAltText\": \"Elément suivant\",\n        \"relevanceSortHighlightButtonText\": \"Pertinence\",\n        \"textOrderSortHighlightButtonText\": \"Ordre du texte\",\n        \"lastHighlightButtonAltText\": \"Dernier élément\",\n        \"highlightFilters\": {\n            \"title\": \"Filtres\",\n            \"keepAll\": \"Tout inclure\",\n            \"keepNone\": \"Tout exclure\",\n            \"keepAllInCategory\": \"Toutes les entités\",\n            \"keepNoneInCategory\": \"Aucune entité\"\n        },\n        \"documentPropertiesTitle\": \"Détails\",\n        \"similarDocumentsTitle\": \"Documents similaires\",\n        \"showAll\": \"Montrer toutes les valeurs\",\n        \"sortAlphabetically\": \"Trier par ordre alphabetique\",\n        \"sortFrequency\": \"Trier par fréquence\",\n        \"loading\": \"Chargement...\",\n        \"noextract\": \"Pas d'extrait\",\n        \"search\": \"Recherche\",\n        \"gotopage\": \"Aller à la page\",\n        \"page\": \"Page {page}\",\n        \"current\": \"actuel\"\n    },\n    \"facet\": {\n        \"preview\": {\n            \"closeTitle\": \"Fermer\",\n            \"expandTitle\": \"Maximiser\",\n            \"minimize\": \"Réduire\",\n            \"maximize\": \"Agrandir\",\n            \"toggleExtracts\": \"Surlignage des extraits pertinents\",\n            \"toggleEntities\": \"Surlignage des entités\"\n        }\n    }\n};\n","export * from \"./config/ccapp\";\n\nexport * from \"./query/query\";\nexport * from \"./suggest/suggestion\";\n\nexport * from \"./app.web.service\";\nexport * from \"./audit.web.service\";\nexport * from \"./dataset.web.service\";\nexport * from \"./download.web.service\";\nexport * from \"./http-client\";\nexport * from \"./http.service\";\nexport * from \"./json-method-plugin.web.service\";\nexport * from \"./labels.web.service\";\nexport * from \"./preview.web.service\";\nexport * from \"./principal.web.service\";\nexport * from \"./query-export.web.service\";\nexport * from \"./query.web.service\";\nexport * from \"./recent-queries.web.service\";\nexport * from \"./rfm.web.service\";\nexport * from \"./similar-documents.web.service\";\nexport * from './sponsored-links.web.service';\nexport * from \"./start-config.web.service\";\nexport * from \"./suggest-field.web.service\";\nexport * from \"./suggest-query.web.service\";\nexport * from \"./user-ratings.web.service\";\nexport * from \"./user-settings.web.service\";\nexport * from \"./queryintent.service\";\nexport * from \"./web-services.module\";\n","import { Component, Input, OnChanges, Output, EventEmitter } from '@angular/core';\nimport { CategoryHighlightData, HighlightValue, PreviewData } from '@sinequa/core/web-services';\nimport { PreviewDocument } from '../../preview-document';\n\n@Component({\n  selector: 'sq-preview-entity-panel',\n  templateUrl: './preview-entity-panel.component.html',\n  styleUrls: ['./preview-entity-panel.component.scss']\n})\nexport class BsPreviewEntityPanelComponent implements OnChanges {\n\n  /**\n   * Preview data\n   */\n  @Input() previewData: PreviewData;\n\n  /**\n   * Preview document\n   */\n  @Input() previewDocument: PreviewDocument;\n\n  /**\n   * What is the style of the facets\n   */\n  @Input() style: string;\n\n  /**\n   * Whether the facets are collapsible\n   */\n  @Input() collapsible: boolean = true;\n\n  /**\n   * Allows to uncheck all items from specific facets\n   */\n  @Input() startUnchecked: {[entity: string]: boolean} = {};\n\n  /**\n   * The list of entities to display (if ignored, will be deducted from the preview data)\n   */\n  @Input() entities: string[];\n\n  /**\n   * Triggers an event when check all / check none is use in a facet\n   */\n  @Output() facetChecked = new EventEmitter<{entity: string, checked: boolean}>();\n\n  _entities: string[] = [];\n\n  constructor() { }\n\n  /**\n   * Extracts the list of entities from the preview data\n   */\n  ngOnChanges() {\n    if(this.entities && !!this.previewData){ // If the list of entities is provided as input\n      this._entities = this.entities;\n    }\n    else if(this.previewData){ // The list of entities is deduced from the preview data\n      this._entities = Object.keys(this.previewData.highlightsPerCategory).filter(value => value !== \"extractslocations\");\n    }\n    else {  // No entity to show\n      this._entities = [];\n    }\n  }\n\n  /**\n   * Return the data for a specific entity category\n   * @param entity\n   */\n  data(entity: string): CategoryHighlightData {\n    return this.previewData.highlightsPerCategory[entity];\n  }\n\n  /**\n   * Returns the display value of a specific entity\n   * @param entity\n   */\n  entityDisplay(entity: string): string {\n    return this.data(entity).categoryDisplayLabelPlural || this.data(entity).categoryDisplayLabel || entity;\n  }\n\n  /**\n   * Returns the icon of a specific entity\n   * @param entity\n   */\n  entityIcon(entity: string): string {\n    return \"sq-icon-\"+entity;\n  }\n\n  /**\n   * Returns the list of values of a specific entity\n   * @param entity\n   */\n  entityValues(entity: string): HighlightValue[] {\n    return this.data(entity).values;\n  }\n\n  /**\n   * Called by child facet when items are checked/unchecked\n   * @param entity\n   * @param checked\n   */\n  itemsChecked(entity: string, checked: boolean){\n    this.facetChecked.next({entity: entity, checked: checked});\n  }\n\n}\n","<ng-container *ngFor=\"let entity of _entities\">\n    <sq-facet-card *ngIf=\"entityValues(entity).length\" class=\"d-block my-3\" [title]=\"entityDisplay(entity)\" [icon]=\"entityIcon(entity)\" [collapsible]=\"collapsible\" [buttonsStyle]=\"style\">\n        <sq-preview-entity-facet #facet \n            [entity]=\"entity\" \n            [data]=\"entityValues(entity)\" \n            [previewData]=\"previewData\" \n            [previewDocument]=\"previewDocument\"\n            [startUnchecked]=\"startUnchecked[entity]\"\n            (itemsChecked)=\"itemsChecked(entity, $event)\">\n        </sq-preview-entity-facet>\n    </sq-facet-card>\n</ng-container>","import {Utils} from \"@sinequa/core/base\";\nimport {enSearch, frSearch, deSearch} from \"@sinequa/components/search\";\nimport {enCollapse, frCollapse, deCollapse} from \"@sinequa/components/collapse\";\nimport {enMetadata, frMetadata, deMetadata} from \"@sinequa/components/metadata\";\n\nimport _enResult from \"./en\";\nimport _frResult from \"./fr\";\nimport _deResult from \"./de\";\n\nconst enResult = Utils.merge({}, _enResult, enSearch, enMetadata, enCollapse);\nconst frResult = Utils.merge({}, _frResult, frSearch, frMetadata, frCollapse);\nconst deResult = Utils.merge({}, _deResult, deSearch, deMetadata, deCollapse);\n\nexport { enResult, frResult, deResult };\n","export * from \"./public-api\";","import {Output, ContentChild, TemplateRef, Component, EventEmitter, ChangeDetectorRef} from \"@angular/core\";\nimport {AutocompleteItem, AutocompleteComponent} from \"../../autocomplete.directive\";\n\n@Component({\n    selector: \"sq-autocomplete-list\",\n    templateUrl: \"./autocomplete-list.html\",\n    styleUrls: [\"./autocomplete-list.css\"]\n})\nexport class BsAutocompleteList implements AutocompleteComponent {\n\n    /**\n     * Template for the display of AutocompleteItem items, passed by transclusion\n     */\n    @ContentChild(\"itemTpl\", {static: false}) itemTpl: TemplateRef<any>;\n\n    /**\n     * Optional footer template, passed by transclusion\n     */\n    @ContentChild(\"footerTpl\", {static: false}) footerTpl: TemplateRef<any>;\n\n    /**\n     * Event emitter for clicks on an autocomplete item\n     */\n    @Output() clicked = new EventEmitter<AutocompleteItem>();\n\n    _active: boolean = false;\n    _items: AutocompleteItem[] | undefined;\n\n    _cursor: number = -1;\n\n\n    constructor(\n        private changeDetectorRef: ChangeDetectorRef){\n    }\n\n\n    /**\n     * Update the data and state of this component\n     * @param active whether the component should be displayed\n     * @param items The list of items to display\n     */\n    public update(active: boolean, items?: AutocompleteItem[]){\n        //console.log(\"autocomplete update \", active, items);\n        this._active = active;\n        this._items = items;\n        this._cursor = -1;\n\n        this.changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Whether there are any item to display\n     */\n    public get hasItems(): boolean {\n        return this._active && !!this._items && this._items.length > 0;\n    }\n\n    /**\n     * Returns the currently selected item, if any\n     */\n    public get selectedValue(): AutocompleteItem | undefined {\n        if(this._items && this._cursor >= 0 && this._cursor < this._items.length)\n            return this._items[this._cursor];\n        return undefined;\n    }\n\n    /**\n     * Select the next item in the list and returns it\n     */\n    public selectNext(): AutocompleteItem | undefined {\n        if (this._items && this._cursor < this._items.length-1) {\n            this._cursor++;\n        }\n        return this.selectedValue;\n    }\n\n    /**\n     * Select the previous item in the list and returns it\n     */\n    public selectPrevious(): AutocompleteItem | undefined {\n        if(this._cursor > 0)\n            this._cursor--;\n        return this.selectedValue;\n    }\n\n    /**\n     * Test whether an item is selected\n     * @param item\n     * @param i\n     */\n    _isSelected(item: AutocompleteItem, i: number): boolean {\n        return this._cursor === i;\n    }\n\n    /**\n     * Listen to click events and emits events\n     * @param item\n     * @param event\n     */\n    _itemClicked(item: AutocompleteItem, event){\n        this.clicked.next(item);\n        event.stopPropagation();\n        return false;\n    }\n\n    /**\n     * This prevents the focus to be removed from the <input>, which clauses the dropdown\n     */\n    _mouseDown(event){\n        event.preventDefault();\n    }\n\n}","<div class=\"sq-autocomplete-list card position-absolute\" *ngIf=\"hasItems\" (mousedown)=\"_mouseDown($event)\">\n    <div class=\"list-group list-group-flush\">\n        <a  href=\"#\" (click)=\"_itemClicked(item, $event)\"\n            *ngFor=\"let item of _items; let i = index\"\n            class=\"list-group-item list-group-item-action p-0 border-0\" \n            [ngClass]=\"{'list-group-item-primary': _isSelected(item, i)}\"\n            [sqScrollIntoView]=\"{active: _isSelected(item, i), first: i === 0}\">\n            <ng-container *ngIf=\"itemTpl\">\n                <ng-container *ngTemplateOutlet=\"itemTpl; context:{$implicit: item}\"></ng-container>\n            </ng-container>\n        </a>\n    </div>\n    <div class=\"card-footer\" *ngIf=\"footerTpl\">\n        <ng-container *ngTemplateOutlet=\"footerTpl; context:{$implicit: _items}\"></ng-container>\n    </div>\n</div>","import {Component, OnInit, OnDestroy, ChangeDetectorRef, Inject} from \"@angular/core\";\nimport {Subscription} from \"rxjs\";\nimport {Query} from \"@sinequa/core/app-utils\";\nimport {Record} from \"@sinequa/core/web-services\";\nimport {MODAL_MODEL} from \"@sinequa/core/modal\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {PreviewData} from \"@sinequa/core/web-services\";\nimport {SearchService} from \"@sinequa/components/search\";\nimport {PreviewService} from \"../../preview.service\";\nimport {UIService} from \"@sinequa/components/utils\";\n\nexport interface PreviewPopupModel {\n    record: Record;\n    query: Query;\n    displaySimilarDocuments: boolean;\n    metadata: string[];\n}\n\n@Component({\n    selector: \"sq-preview-popup\",\n    templateUrl: \"./preview-popup.html\",\n    styleUrls: [\"./preview-popup.css\"]\n})\nexport class BsPreviewPopup implements OnInit, OnDestroy {\n    private screenSize: string;\n    private resizeSubscription: Subscription;\n    previewData: PreviewData;\n    private previewDataError: boolean;\n\n    constructor(\n        @Inject(MODAL_MODEL) public model: PreviewPopupModel,\n        public searchService: SearchService,\n        public previewService: PreviewService,\n        protected uiService: UIService,\n        private changeDetectorRef: ChangeDetectorRef) {\n    }\n\n    ngOnInit() {\n        this.screenSize = this.uiService.screenSize;\n        this.resizeSubscription = Utils.subscribe(this.uiService.resizeEvent,\n            (event) => {\n                if (this.screenSize !== this.uiService.screenSize) {\n                    this.screenSize = this.uiService.screenSize;\n                    this.changeDetectorRef.markForCheck();\n                }\n            });\n        this.updatePreviewData(this.model.record.id);\n    }\n\n    public ngOnDestroy(): void {\n        this.resizeSubscription.unsubscribe();\n    }\n\n    get currentId(): string {\n        if (this.previewData && this.previewData.record) {\n            return this.previewData.record.id;\n        }\n        return \"\";\n    }\n\n    private updatePreviewData(id: string) {\n        this.previewService.getPreviewData(id, this.model.query).subscribe(\n            previewData => {\n                this.previewData = previewData;\n                this.previewDataError = false;\n                this.changeDetectorRef.markForCheck();\n            },\n            error => {\n                this.previewDataError = true;\n            }\n        );\n    }\n\n    public get recordTitle(): string {\n        if (this.previewData && this.previewData.record != null) {\n            return this.previewData.record.title;\n        }\n        return this.previewDataError ? \"msg#preview.noDocumentDataErrorPopupTitle\" : \"\";\n    }\n\n    public get showPreviousNextText(): boolean {\n        return this.uiService.screenSizeIsGreaterOrEqual(\"lg\");\n    }\n\n    public get showPreviousNext(): boolean {\n        return this.getSearchPositionInPage() >= 0 && !!this.searchService.results &&\n            !!this.searchService.results.records && this.searchService.results.records.length > 1;\n    }\n\n    public get previousEnabled(): boolean {\n        return this.getSearchPositionInPage() > 0;\n    }\n\n    public get nextEnabled(): boolean {\n        if (!this.searchService.results || !this.searchService.results.records) {\n            return false;\n        }\n        const searchPosition = this.getSearchPositionInPage();\n        return searchPosition >= 0 && searchPosition < (this.searchService.results.records.length - 1);\n    }\n\n    private getSearchPositionInPage(): number {\n        const id = this.currentId;\n        if (id && this.searchService.results && this.searchService.results.records) {\n            for (let i = 0, ic = this.searchService.results.records.length; i < ic; i++) {\n                const record = this.searchService.results.records[i];\n                if (record.id === id) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n\n    public previous() {\n        if (!this.searchService.results || !this.searchService.results.records) {\n            return;\n        }\n        const index = this.getSearchPositionInPage();\n        if (index <= 0) {\n            return;\n        }\n        const item = this.searchService.results.records[index - 1];\n        this.updatePreviewData(item.id);\n    }\n\n    public next() {\n        if (!this.searchService.results || !this.searchService.results.records) {\n            return;\n        }\n        const index = this.getSearchPositionInPage();\n        if (index === -1 || index >= (this.searchService.results.records.length - 1)) {\n            return;\n        }\n        const item = this.searchService.results.records[index + 1];\n        this.updatePreviewData(item.id);\n    }\n}","<div class=\"modal-content sq-preview-popup\">\n    <sq-modal \n        [title]=\"recordTitle\"\n        [showFooter]=\"false\">\n        <div header *ngIf=\"showPreviousNext\" class=\"previousNextDocumentButtons\">\n            <button class=\"btn btn btn-outline-primary {{!previousEnabled ? 'disabled' : ''}}\" (click)=\"previous()\">\n                <span class=\"fas fa-arrow-left\" aria-hidden=\"true\"></span><span *ngIf=\"showPreviousNextText\"> {{'msg#preview.previousDocument' | sqMessage}}</span>\n            </button>\n            <button class=\"btn btn btn-outline-primary {{!nextEnabled ? 'disabled' : ''}}\" (click)=\"next()\">\n                <span class=\"fas fa-arrow-right\" aria-hidden=\"true\"></span><span *ngIf=\"showPreviousNextText\"> {{'msg#preview.nextDocument' | sqMessage}}</span>\n            </button>\n        </div>\n        <sq-preview-panel [leftPaneAdditionalClasses]=\"'d-none d-lg-block'\" [query]=\"model.query\" [previewData]=\"previewData\" [displaySimilarDocuments]=\"model.displaySimilarDocuments\" [metadata]=\"model.metadata\">\n        </sq-preview-panel>\n    </sq-modal>\n</div>","export default {\n    \"help\": {\n        \"title\": \"Aide en ligne\"\n    },\n\n    \"overrideUser\": {\n        \"title\": \"Emprunt d'identité\",\n        \"userName\": \"Identifiant\",\n        \"domain\": \"Domaine\"\n    },\n\n    \"btnClose\": {\n        \"text\": \"Fermer\"\n    }\n};\n","import {Component, Input, OnInit} from \"@angular/core\";\nimport {ValueItem} from \"@sinequa/core/app-utils\";\nimport {Record} from \"@sinequa/core/web-services\";\nimport {SearchService} from \"@sinequa/components/search\";\n\n@Component({\n    selector: \"sq-result-source\",\n    templateUrl: \"./result-source.html\",\n    styleUrls: [\"./result-source.css\"]\n})\nexport class ResultSource implements OnInit {\n    @Input() record: Record;\n    @Input() displayTreepath: boolean;\n    @Input() displayTreepathMinLevel = 0;\n    @Input() displayTreepathMaxLevel: number;\n    @Input() displayUrl: boolean = true;\n\n    source: ValueItem[] = [];\n    url: string;\n\n    constructor(\n        public searchService: SearchService) {\n    }\n\n    public ngOnInit() {\n        if(this.displayTreepath && !!this.record.treepath){\n            const treepath = this.record.treepath[0];\n            if(!!treepath && treepath.length >= 2){\n                this.source = treepath.substr(1, treepath.length-2).split('/')\n                    .slice(this.displayTreepathMinLevel, this.displayTreepathMaxLevel)\n                    .map((path,i,array) => {\n                        return {\n                            display: path,\n                            value: '/'+array.slice(0,i+1).join('/')+'/*'\n                        };\n                    });\n            }\n        }\n        if(this.displayUrl){\n            this.url = this.record.url1;\n        }\n    }\n\n    select(item){\n        if(this.searchService.addFieldSelect(\"treepath\", item)) {\n            this.searchService.search();\n        }\n    }\n\n}","<span class=\"sq-result-source\">\n    <ng-container *ngFor=\"let s of source; let i=index\">\n        <span *ngIf=\"i > 0\"> &#8250; </span>\n        <span (click)=\"select(s)\" class=\"link\" title=\"Select this source\">{{s.display}}</span>\n    </ng-container>\n    <span *ngIf=\"source.length>0 && !!url\"> - </span>\n    <a *ngIf=\"url\" href=\"{{url}}\" target=\"_blank\">{{url}}</a>\n</span>","export * from \"./saved-queries.service\";\nexport * from \"./recent-queries.service\";\nexport * from \"./recent-documents.service\";\nexport * from \"./bootstrap/index\";\nexport * from \"./messages/index\";","export class IteratorAdaptor<T,B> implements IterableIterator<T> {\n    readonly return?: (value?: any) => IteratorResult<T>;\n    readonly throw?: (error?: any) => IteratorResult<T>;\n\n    constructor(private base: Iterator<B>, private adaptor: (b: B) => T) {\n        this.return = (base.return) ? (v) => this.translate(this.base.return!(v)) : undefined;\n        this.throw  = (base.throw)  ? (e) => this.translate(this.base.throw!(e))  : undefined;\n    }\n\n    static forIterable<B, T>(iterable: Iterable<B>, adaptor: (b: B) => T): IterableIterator<T> {\n        /*if (iterable === undefined) {\n            return undefined;\n        }*/\n\n        return new IteratorAdaptor<T,B>(\n            iterable[Symbol.iterator](),\n            adaptor\n        );\n    }\n\n    private translate(result: IteratorResult<B>): IteratorResult<T> {\n        if (result.done) {\n            return {\n                done: result.done,\n                value: (result.done && result.value === undefined) ? undefined : this.adaptor(result.value)\n            };\n        }\n        else {\n            return {\n                value: this.adaptor(result.value)\n            };\n        }\n    }\n\n    next(value?: any)  { return this.translate(this.base.next(value)); }\n\n    [Symbol.iterator](): IterableIterator<T> { return this; }\n}\n","export default {\n    \"alerts\": {\n        \"alerts\": \"Alarme\",\n        \"createAlert\": \"Alarm erstellen\",\n        \"manageAlerts\": \"Alarme verwalten\",\n        \"alertAlreadyExists\": \"Ein Alarm mit diesem Namen existiert bereits. Möchten Sie ihn ersetzen?\"\n    },\n\n    \"editAlert\": {\n        \"title\": \"Alarm\",\n        \"name\": \"Name\",\n        \"frequency\": \"Häufigkeit\",\n        \"days\": \"Tage\",\n        \"monday\": \"Montag\",\n        \"tuesday\": \"Dienstag\",\n        \"wednesday\": \"Mittwoch\",\n        \"thursday\": \"Donnerstag\",\n        \"friday\": \"Freitag\",\n        \"saturday\": \"Samstag\",\n        \"sunday\": \"Sonntag\",\n        \"times\": \"Uhrzeitangaben\",\n        \"active\": \"Aktiv\",\n        \"updateQuery\": \"Aktualisiere Suchanfrage\",\n        \"runQuery\": \"Führe Suchanfrage aus\",\n        \"lossDataMessage\": \"Möchten Sie gehen, ohne Ihre Änderungen zu speichern?\"\n    },\n\n    \"manageAlerts\": {\n        \"title\": \"Alarme verwalten\",\n        \"edit\": \"Bearbeiten\",\n        \"reorder\": \"Neu sortieren\",\n        \"remove\": \"Entfernen\",\n        \"removeAll\": \"Alle entfernen\"\n    },\n\n};\n","/* (ignored) */","// moment locales need moment set globally\nimport moment from \"moment\";\n(window as any).moment = moment;\n","import {Component, Input, OnInit} from \"@angular/core\";\nimport {trigger, animate, transition, style, AnimationTriggerMetadata} from '@angular/animations';\nimport {NotificationsService, Notification, NotificationState, NotificationType} from \"@sinequa/core/notification\";\nimport {Utils} from \"@sinequa/core/base\";\n\nexport function notificationAnimations(timings: number | string): AnimationTriggerMetadata[] {\n    return [\n        trigger('autoClose', [\n            transition('1 => void', [\n                animate(timings, style({ opacity: 0 }))\n            ])\n        ])\n    ];\n}\n\n@Component({\n    selector: \"sq-notification\",\n    templateUrl: \"./notification.html\",\n    animations: notificationAnimations(\".15s ease-in-out\")\n})\nexport class BsNotification implements OnInit {\n    @Input() notification: Notification;\n    autoClose: boolean;\n    constructor(\n        private notificationsService: NotificationsService) {\n    }\n\n    ngOnInit() {\n        if (this.notification.autoClose && this.notification.state === NotificationState.Initial) {\n            this.autoClose = true;\n            Utils.delay(5000).then(value => {\n                if (this.notification.state === NotificationState.Initial) {\n                    this.close();\n                }\n            });\n        }\n    }\n\n    get alertClass(): string {\n        switch (this.notification.type) {\n            case NotificationType.Info: return \"info\";\n            case NotificationType.Success: return \"success\";\n            case NotificationType.Warning: return \"warning\";\n            case NotificationType.Error: return \"danger\";\n        }\n        return \"\";\n    }\n\n    get notificationClass(): string {\n        switch (this.notification.type) {\n            case NotificationType.Info: return \"fas fa-info-circle fa-lg\";\n            case NotificationType.Success: return \"fas fa-check-circle fa-lg\";\n            case NotificationType.Warning: return \"fas fa-exclamation-triangle fa-lg\";\n            case NotificationType.Error: return \"fas fa-exclamation-circle fa-lg\";\n        }\n        return \"\";\n    }\n\n    get showClose(): boolean {\n        return !this.notification.autoClose || this.notification.state !== NotificationState.Initial;\n    }\n\n    close() {\n        this.notificationsService.closeNotification(this.notification);\n    }\n}","<div [@autoClose]=\"autoClose\" class=\"alert alert-{{alertClass}} sq-notification\" role=\"alert\">\n    <button *ngIf=\"showClose\" type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"close()\">\n        <span aria-hidden=\"true\">&times;</span>\n        <span class=\"sr-only\">Close</span>\n    </button>\n    <div class=\"sq-notification-container\">\n        <div class=\"sq-notification-icon\">\n            <span class=\"{{notificationClass}}\"></span>\n        </div>\n        <div class=\"sq-notification-message\">\n            <ng-container *ngIf=\"!!notification.title\">\n                <span class=\"sq-notification-title\">{{notification.title | sqMessage}}</span>\n                <hr>\n            </ng-container>\n            <span class=\"sq-notification-text\">{{notification.text | sqMessage:{values: notification.params} }}</span>\n        </div>                \n    </div>        \n</div>","import {Directive, Input, ElementRef, OnChanges} from \"@angular/core\";\nimport {Utils} from \"@sinequa/core/base\";\n\n@Directive({\n    selector: \"[sqAutofocus]\"\n})\nexport class Autofocus implements OnChanges {\n    @Input(\"sqAutofocus\") value: number;\n    element: HTMLElement;\n\n    constructor(elementRef: ElementRef) {\n        this.element = <HTMLElement>elementRef.nativeElement;\n    }\n\n    private setFocus() {\n        Utils.delay()\n            .then(() => {\n                if (this.element.offsetWidth !== 0) {\n                    this.element.focus();\n                }\n            });\n    }\n\n    ngOnChanges() {\n        this.setFocus();\n    }\n}","export * from \"./bootstrap/index\";\nexport * from \"./messages/index\";","export * from \"./collapse.module\";\nexport * from \"./collapse-button.component\";\nexport * from \"./collapse.component\";\nexport * from \"./collapse-link.component\";\nexport * from \"./messages/index\";","import { Directive, HostBinding, ElementRef } from \"@angular/core\";\nimport { FocusableOption } from \"@angular/cdk/a11y\";\n\n@Directive({\n    selector: \"[sqFocusKeyListItem]\"\n})\nexport class FocusKeyListItemDirective implements FocusableOption {\n    @HostBinding() tabindex = -1;\n    @HostBinding(\"attr.role\") role = \"list-item\";\n\n    constructor(protected element: ElementRef) {\n    }\n\n    focus() {\n        this.element.nativeElement.focus();\n    }\n}\n","import { Component, Input, OnChanges, OnDestroy } from \"@angular/core\";\nimport { FormGroup, AbstractControl } from \"@angular/forms\";\nimport { AppService } from \"@sinequa/core/app-utils\";\nimport { Utils } from '@sinequa/core/base';\nimport { Subscription } from 'rxjs';\nimport { AutocompleteItem } from '@sinequa/components/autocomplete';\n\n@Component({\n    selector: \"sq-advanced-form-input\",\n    templateUrl: \"./advanced-form-input.html\"\n})\nexport class BsAdvancedFormInput implements OnChanges, OnDestroy {\n    @Input() form: FormGroup;\n    @Input() field: string;\n    @Input() suggestQuery: string;\n    @Input() label: string;\n\n    control: AbstractControl | null;\n    viewValue: string | number | undefined | null;\n\n    private _valueChangesSubscription: Subscription;\n\n    constructor(public appService: AppService) {}\n\n    ngOnChanges() {\n        if(this.label === undefined) {\n            this.label = this.appService.getLabel(this.field);\n        }\n        this.control = this.form.get(this.field);\n        if (this.control) {\n            if (this.control.value) {\n                this.viewValue = this.control.value.display\n                    ? this.control.value.display\n                    : this.control.value.value.toString();\n            }\n\n            this._valueChangesSubscription = Utils.subscribe(\n                this.control.valueChanges,\n                (val) => {\n                  if (val) {\n                      this.viewValue = val.display ? val.display : val.value.toString();\n                  }\n                }\n            );\n        }\n        else {\n            throw new Error(\"No form control named \"+this.field);\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._valueChangesSubscription) {\n            this._valueChangesSubscription.unsubscribe();\n        }\n    }\n\n    onItemChange(item: AutocompleteItem) {\n        this.viewValue = item?.display;\n        this._updateControl(item);\n    }\n\n    private _updateControl(item: AutocompleteItem): void {\n        const value = item\n        ? {\n            value: item.normalized!,\n            display: item.display\n        } : undefined;\n        this.control?.markAsDirty();\n        this.control?.setValue(value, {emitEvent: false});\n    }\n}\n","<div class=\"form-group\">\n    <label for=\"{{field}}\">{{label | sqMessage}}</label>\n    <div class=\"d-flex flex-column\">\n        <input\n            sqAdvancedFormAutocomplete\n            [off]=\"!suggestQuery\"\n            [suggestQuery]=\"suggestQuery\"\n            [dropdown]=\"dropdown\"\n            sqAdvancedFormValidation\n            [validationForm]=\"form\"\n            [field]=\"field\"\n            type=\"text\"\n            class=\"form-control\"\n            [id]=\"field\"\n            autocomplete=\"off\"\n            spellcheck=\"off\"\n            [(ngModel)]=\"viewValue\"\n            (UpdateItem)=\"onItemChange($event)\">\n        <sq-autocomplete-list #dropdown>\n            <ng-template #itemTpl let-item>\n                <div class=\"py-2\">{{item.display}}</div>\n            </ng-template>\n        </sq-autocomplete-list>\n    </div>\n</div>\n","import { FacetConfig } from '@sinequa/components/facet';\r\n\r\n/**\r\n * This list is used by Vanilla Search to activate key features in the UI.\r\n * The order below determines the order of menus, buttons, facets, etc.\r\n */\r\nexport const FEATURES: string[] = [\r\n    \"recent-documents\",             // Keep track of recently opened documents and suggest them in the autocomplete\r\n    \"recent-queries\",               // Keep track of recent queries and suggest them in the autocomplete\r\n    \"saved-queries\",                // Allow users to save queries to easily replay them ang suggest them in the autocomplete\r\n    \"baskets\",                      // Allow users to bookmark documents in \"baskets\" (aka \"collections\") and suggest them in the autocomplete\r\n    \"labels\",                       // Allow users to tag documents with labels\r\n    \"alerts\",                       // Allow users to subscribe to a regular alert for a particular query\r\n    \"suggests\",                     // Display general text suggestions in the autocomplete\r\n    \"advanced-form\",                // Display an advanced search form\r\n    \"keep-advanced-form-filters\",   // When the user makes a new search query, do not reset the content of the autocomplete form\r\n    \"keep-tab\",                     // When the user makes a new search query, stay on the same tab\r\n    //\"keep-filters\",                 // When the user makes a new search query, do not reset the filters that are active (eg. from facets)\r\n    \"toggle-keep-filters\",          // Display a button to toggle the \"keep-filter\" option\r\n    //\"voice-recognition\",            // Display a button to trigger voice recognition (supported only on Chrome-based browsers and uses Google servers for processing)\r\n];\r\n\r\nexport const FACETS: FacetConfig[] = [\r\n    {\r\n        name: \"geo\",\r\n        title: \"msg#facet.geo.title\",\r\n        type: \"list\",\r\n        aggregation: \"Geo\",\r\n        icon: \"fas fa-globe-americas\",\r\n        showCount: true,\r\n        searchable: true,\r\n        allowExclude: true,\r\n        allowOr: true,\r\n        allowAnd: false,\r\n        displayEmptyDistributionIntervals: false,\r\n    },\r\n    {\r\n        name: \"company\",\r\n        title: \"msg#facet.company.title\",\r\n        type: \"list\",\r\n        aggregation: \"Company\",\r\n        icon: \"fas fa-building\",\r\n        showCount: true,\r\n        searchable: true,\r\n        allowExclude: true,\r\n        allowOr: true,\r\n        allowAnd: false,\r\n        displayEmptyDistributionIntervals: false,\r\n    },\r\n    {\r\n        name: \"person\",\r\n        title: \"msg#facet.person.title\",\r\n        type: \"list\",\r\n        aggregation: \"Person\",\r\n        icon: \"fas fa-user\",\r\n        showCount: true,\r\n        searchable: true,\r\n        allowExclude: true,\r\n        allowOr: true,\r\n        allowAnd: false,\r\n        displayEmptyDistributionIntervals: false,\r\n    },\r\n    {\r\n        name: \"docformat\",\r\n        title: \"msg#facet.docformat.title\",\r\n        type: \"list\",\r\n        aggregation: \"DocFormat\",\r\n        icon: \"far fa-file-word\",\r\n        showCount: true,\r\n        searchable: true,\r\n        allowExclude: true,\r\n        allowOr: true,\r\n        allowAnd: false,\r\n        displayEmptyDistributionIntervals: false,\r\n    },\r\n    {\r\n        name: \"modified\",\r\n        title: \"msg#facet.modified.title\",\r\n        type: \"list\",\r\n        aggregation: \"Modified\",\r\n        icon: \"fas fa-calendar-day\",\r\n        showCount: true,\r\n        searchable: false,\r\n        allowExclude: true,\r\n        allowOr: true,\r\n        allowAnd: false,\r\n        displayEmptyDistributionIntervals: false,\r\n    },\r\n    {\r\n        name: \"size\",\r\n        title: \"msg#facet.size.title\",\r\n        type: \"list\",\r\n        aggregation: \"Size\",\r\n        icon: \"fas fa-sort-amount-up-alt\",\r\n        showCount: true,\r\n        searchable: false,\r\n        allowExclude: true,\r\n        allowOr: true,\r\n        allowAnd: false,\r\n        displayEmptyDistributionIntervals: false,\r\n    },\r\n    {\r\n        name: \"documentlanguages\",\r\n        title: \"msg#facet.documentlanguages.title\",\r\n        type: \"list\",\r\n        aggregation: \"DocumentLanguages\",\r\n        icon: \"far fa-comment\",\r\n        showCount: true,\r\n        searchable: true,\r\n        allowExclude: true,\r\n        allowOr: true,\r\n        allowAnd: false,\r\n        displayEmptyDistributionIntervals: false,\r\n    },\r\n    {\r\n        name: \"concepts\",\r\n        title: \"msg#facet.concepts.title\",\r\n        type: \"list\",\r\n        aggregation: \"Concepts\",\r\n        icon: \"fas fa-comment-dots\",\r\n        showCount: true,\r\n        searchable: false,\r\n        allowExclude: true,\r\n        allowOr: true,\r\n        allowAnd: false,\r\n        displayEmptyDistributionIntervals: false,\r\n    },\r\n];\r\n\r\nexport const METADATA: string[] = [\r\n    \"authors\", \"docformat\", \"modified\", \"size\", \"treepath\", \"filename\"\r\n];\r\n","import {Component, Inject, HostBinding, OnInit} from \"@angular/core\";\nimport {SafeResourceUrl, DomSanitizer} from \"@angular/platform-browser\";\nimport {START_CONFIG, StartConfig} from \"@sinequa/core/web-services\";\n\n@Component({\n    selector: \"sq-help\",\n    templateUrl: \"./help.html\"\n})\nexport class BsHelp  implements OnInit {\n    @HostBinding(\"class.modal-content\") true;\n    model: {};\n    url: SafeResourceUrl;\n\n    constructor(\n        @Inject(START_CONFIG) public startConfig: StartConfig,\n        public sanitizer: DomSanitizer) {\n    }\n\n    ngOnInit() {\n        const url = this.startConfig.helpUrl || \"assets/help/index.html\";\n        this.url = this.sanitizer.bypassSecurityTrustResourceUrl(url);\n    }\n}\n","<sq-modal [title]=\"'msg#help.title'\">\n    <div class=\"d-flex flex-column\">\n        <iframe [src]=\"url\"></iframe>\n    </div>\n</sq-modal>","import enModal from \"./en\";\nimport frModal from \"./fr\";\nimport deModal from \"./de\";\n\nexport { enModal, frModal, deModal };\n","import {Query, AppService, ExprParser, Expr, ExprValueInitializer} from \"@sinequa/core/app-utils\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {SearchService} from \"./search.service\";\n\nexport interface BreadcrumbsItem {\n    expr: Expr | undefined;\n    display: Expr | string; // Either expr or a label (error string, basket name or <empty search>)\n    facet?: string; // associated facet, if any\n    active?: boolean; // true if the active item\n    hidden?: boolean; // true for \"empty search\" item when !ccquery.allowEmptySearch\n}\n\n/**\n * Description of the Breadcrumbs class - link to {@link SearchService}\n */\nexport class Breadcrumbs {\n    appService: AppService;\n    searchService: SearchService;\n    items: BreadcrumbsItem[]; // always starts with the text expression followed by any selects\n    advanced: Expr[];\n    query: Query; // the associated query. Will be different to the current query if any item other than the last is selected\n    fields: Set<string>;\n\n    static create(appService: AppService, searchService: SearchService, query: Query): Breadcrumbs {\n        const breadcrumbs = new Breadcrumbs(appService, searchService, query);\n        return breadcrumbs.init();\n    }\n\n    private constructor(appService: AppService, searchService: SearchService, query: Query) {\n        this.appService = appService;\n        this.searchService = searchService;\n        this.query = query.copy();\n        this.items = [];\n        this.advanced = [];\n        this.fields = new Set<string>();\n    }\n\n    get activeIndex(): number {\n        return this.items.findIndex(item => item.active);\n    }\n\n    get activeItem(): BreadcrumbsItem | undefined {\n        const index = this.activeIndex;\n        if (index !== -1) {\n            return this.items[index];\n        }\n        return undefined;\n    }\n\n    get text(): Expr | string {\n        return this.items[0].display;\n    }\n\n    get textExpr(): Expr | undefined {\n        return this.items[0].expr;\n    }\n\n    get selects(): BreadcrumbsItem[] {\n        return this.items.slice(1);\n    }\n\n    get activeSelects(): BreadcrumbsItem[] {\n        return this.items.slice(1, this.activeIndex + 1);\n    }\n\n    get activeItems():  BreadcrumbsItem[] {\n        return this.items.slice(0, this.activeIndex + 1);\n    }\n\n    get isEmpty(): boolean {\n        if (this.items.length === 0) {\n            return true;\n        }\n        if (this.items.length === 1 && this.items[0].hidden) {\n            return true;\n        }\n        return false;\n    }\n\n    find(expr: Expr | ExprValueInitializer): Expr | undefined {\n        let expr1 = expr as Expr;\n        const init = expr as ExprValueInitializer;\n        if (!(expr instanceof Expr)) {\n            expr1 = new Expr(init);\n        }\n        if (!expr1.every((expr2) => {\n            const field = expr2.exprContext.appService.resolveColumnAlias(expr2.field);\n            return !field || this.fields.has(field);\n        })) {\n            return undefined;\n        }\n        for (const expr3 of this.advanced) {\n            const expr2 = expr3.find(expr1);\n            if (expr2) {\n                return expr2;\n            }\n        }\n        for (const select of this.selects) {\n            if (select.expr) {\n                const expr2 = select.expr.find(expr1);\n                if (expr2) {\n                    return expr2;\n                }\n            }\n        }\n        if (this.textExpr) {\n            let expr2 = this.textExpr.find(expr1, (expr3) => expr3.isStructured);\n            if (expr2) {\n                return expr2;\n            }\n            expr2 = this.textExpr.find(expr1, (expr3) => !expr3.isStructured);\n            if (expr2) {\n                return expr2;\n            }\n        }\n        return undefined;\n    }\n\n    findSelect(facet: string, exprOrField?: Expr | string): Expr | undefined {\n        // Active selects only, most recent first\n        const activeSelects = this.activeSelects;\n        for (let i = activeSelects.length - 1; i >= 0; i--) {\n            const select = activeSelects[i];\n            if (select.expr && (!facet || Utils.eqNC(facet, select.facet || \"\"))) {\n                if (!exprOrField ) {\n                    return select.expr;\n                }\n                if (Utils.isString(exprOrField)) {\n                    if (Utils.eqNC(exprOrField, select.expr.field || \"\")) {\n                        return select.expr;\n                    }\n                }\n                else {\n                    const expr1 = select.expr.find(exprOrField);\n                    if (expr1) {\n                        return expr1;\n                    }\n                }\n            }\n        }\n        return undefined;\n    }\n\n    private addFields(expr: Expr | undefined) {\n        if (expr) {\n            const fields = expr.getFields();\n            fields.forEach((field) => {\n                this.fields.add(field);\n            });\n        }\n    }\n\n    private makeBreadcrumbsItemFromExpr(text: string): BreadcrumbsItem {\n        let expr = this.appService.parseExpr(text);\n        if (!(expr instanceof Expr)) {\n            expr = this.appService.parseExpr(ExprParser.escape(text));\n        }\n        if (expr instanceof Expr) {\n            return {expr, display: expr};\n        }\n        else {\n            return {expr: undefined, display: expr};\n        }\n    }\n\n    private initItems() {\n        // Text\n        if (this.query && this.query.text) {\n            const item = this.makeBreadcrumbsItemFromExpr(this.query.text);\n            this.items.push(item);\n            this.addFields(item.expr);\n        }\n        else {\n            this.items.push({\n                expr: undefined,\n                display: this.query && this.query.basket ? this.query.basket : \"msg#breadcrumbs.emptySearch\",\n                hidden: this.appService.ccquery && !this.appService.ccquery.allowEmptySearch &&\n                    this.searchService.isEmptySearchIgnoreSelects(this.query)\n            });\n        }\n        // Selects\n        if (this.query && this.query.select) {\n            for (const select of this.query.select) {\n                const item = this.makeBreadcrumbsItemFromExpr(select.expression);\n                item.facet = select.facet;\n                this.items.push(item);\n                this.addFields(item.expr);\n            }\n        }\n        // Set last item active\n        this.items[this.items.length - 1].active = true;\n    }\n\n    private init(): Breadcrumbs {\n        this.initItems();\n        return this;\n    }\n\n    selectItem(item: BreadcrumbsItem): Query | undefined {\n        const index = this.items.indexOf(item);\n        if (this.query && index !== -1) {\n            const query = this.query.copy();\n            if (query.select) {\n                query.select.splice(index);\n            }\n            this.items.forEach(item1 => item1.active = false);\n            item.active = true;\n            return query;\n        }\n        return undefined;\n    }\n\n    removeItem(item: BreadcrumbsItem): BreadcrumbsItem | undefined {\n        const index = this.items.indexOf(item);\n        if (this.query && index !== -1) {\n            let next: BreadcrumbsItem | undefined;\n            if (index === 0) { // Text\n                if (this.query.text || this.query.basket) {\n                    delete this.query.text;\n                    delete this.query.basket;\n                    item.expr = undefined;\n                    item.display = \"msg#breadcrumbs.emptySearch\";\n                    item.hidden = this.appService.ccquery && !this.appService.ccquery.allowEmptySearch &&\n                        this.searchService.isEmptySearchIgnoreSelects(this.query);\n                }\n                if (!item.hidden) {\n                    next = this.activeItem;\n                }\n                else if (this.items.length > 1) {\n                    next = this.items[this.items.length - 1];\n                }\n            }\n            else {\n                // Find next item to activate, if necessary\n                const activeIndex = this.activeIndex;\n                if (activeIndex >= index) {\n                    if (activeIndex > index) {\n                        next = this.items[activeIndex];\n                    }\n                    else {\n                        if (index === this.items.length - 1) {\n                            next = this.items[index - 1];\n                        }\n                        else {\n                            next = this.items[index + 1];\n                        }\n                        if (next.hidden) {\n                            next = undefined;\n                        }\n                    }\n                }\n                if (this.query.select) {\n                    this.query.select.splice(index - 1, 1);\n                }\n                this.items.splice(index, 1);\n            }\n            return next;\n        }\n        return undefined;\n    }\n\n    update(query: Query) {\n        if (!this.query) {\n            this.query = query.copy();\n        }\n        this.query.text = query.text;\n        this.query.basket = query.basket;\n        if (!this.query.text && !this.query.basket) {\n            const item = this.items[0];\n            item.expr = undefined;\n            item.display = \"msg#breadcrumbs.emptySearch\";\n            item.hidden = this.appService.ccquery && !this.appService.ccquery.allowEmptySearch &&\n                this.searchService.isEmptySearchIgnoreSelects(this.query);\n        }\n    }\n}\n","export default {\n    \"savedQueries\": {\n        \"savedQueries\": \"Requêtes sauvegardées\",\n        \"saveCurrentQuery\": \"Enregistrer la requête courante\",\n        \"manageSavedQueries\": \"Gérer les requêtes sauvegardées\",\n        \"savedQueryAlreadyExists\": \"Une requête sauvegardée avec ce nom existe déjà. Voulez-vous la remplacer ?\",\n        \"noSavedQuery\": \"Vous n'avez pas encore enregistré de requête de recherche...\",\n        \"delete\": \"Supprimer cette requête enregistrée\"\n    },\n\n    \"recentQueries\": {\n        \"noRecentQuery\": \"Vous n'avez pas encore effectué de recherche...\",\n        \"delete\": \"Supprimer cette requête\",\n        \"save\": \"Enregistrer cette requête\"\n    },\n\n    \"recentDocuments\": {\n        \"recentDocuments\": \"Documents récents\",\n        \"noRecentDocument\": \"Vous n'avez pas encore ouvert de document...\",\n        \"delete\": \"Supprimer ce document récent\"\n    },\n\n    \"editSavedQuery\": {\n        \"title\": \"Requête sauvegardée\",\n        \"name\": \"Nom\"\n    },\n\n    \"exportQuery\": {\n        \"dialogTitle\": \"Export\",\n        \"dialogOutputFormat\": \"Format de sortie\",\n        \"dialogMaxCount\": \"Nb max de lignes\",\n        \"dialogSourceType\": \"Exporter depuis\",\n        \"dialogResult\": \"Résultat courant\",\n        \"dialogSelection\": \"Sélection courante\",\n        \"btnTitle\": \"Exporter les résultats\",\n        \"exportResult\": \"Exporter le résultat en {type}\",\n        \"exportSelection\": \"Exporter la sélection en {type}\",\n        \"btnDownload\": \"Télécharger\",\n        \"btnClose\": \"Fermer\",\n        \"successNotification\": \"Téléchargement terminé\",\n        \"exportedColumns\": \"Colonnes à exporter\",\n        \"exportedColumnsLabelTooltip\": \"Sélectionnez les colonnes que vous souhaitez exporter, une sélection vide signifie la sélection de tous le colonnes\",\n        \"dialogMaxCountTooltip\": \"Par défaut, le nombre de résultats est limité à {count}\"\n    },\n\n    \"manageSavedQueries\": {\n        \"title\": \"Gérer les requêtes sauvegardées\",\n        \"edit\": \"Editer\",\n        \"reorder\": \"Réorganiser\",\n        \"remove\": \"Effacer\",\n        \"removeAll\": \"Effacer tout\",\n        \"export\": \"Exporter\",\n        \"name\": \"Nom\",\n        \"rss\": \"Flux RSS\"\n    },\n\n};\n","import {Utils} from \"@sinequa/core/base\";\nimport {enFacet, frFacet, deFacet} from \"@sinequa/components/facet\";\nimport {enCollapse, frCollapse, deCollapse} from \"@sinequa/components/collapse\";\n\nimport _enMetadata from \"./en\";\nimport _frMetadata from \"./fr\";\nimport _deMetadata from \"./de\";\n\nconst enMetadata = Utils.merge({}, _enMetadata, enFacet, enCollapse);\nconst frMetadata = Utils.merge({}, _frMetadata, frFacet, frCollapse);\nconst deMetadata = Utils.merge({}, _deMetadata, deFacet, deCollapse);\n\nexport { enMetadata, frMetadata, deMetadata };\n","export default {\n    \"facet\": {\n        \"show_text_view\": \"Text anzeigen\",\n        \"show_chart_view\": \"Chart anzeigen\",\n        \"itemExclude\": \"Exkludieren\",\n        \"applyFilters\": \"{selections, plural, one {Filter anwenden} other {Filter anwenden}}\",\n        \"clearFilters\": \"{selected, plural, one {Filter löschen} other {Filter löschen}}\",\n        \"loadMore\": \"Mehr laden\",\n        \"showMore\": \"Mehr anzeigen\",\n        \"showLess\": \"Weniger anzeigen\",\n        \"displayed\": \"Angezeigt\",\n        \"removeAll\": \"Alle entfernen\",\n        \"searchPlaceholder\": \"Suche...\",\n        \"itemSelect\": \"Diesen Wert auswählen\",\n        \"filterItems\" : \"Behalte Dokumente mit MINDESTENS EINEM der ausgewählten Werte\",\n        \"filterItemsAnd\": \"Behalte Dokumente mit ALLEN ausgewählten Werten\",\n        \"excludeItems\" : \"Exckludiere Dokumente mit den ausgewählten Werten\",\n        \"clearSelects\" : \"Entferne die aktuellen Filter\",\n        \"searchItems\" : \"Suche nach eniem Wert in dieser Liste\",\n        \"searchNoResult\": \"Keine Ergebnisse\",\n        \"openItem\": \"Öffnen\",\n        \"closeItem\": \"Schließen\",\n        \"authors\": {\n            \"title\": \"Autoren\"\n        },\n        \"concepts\": {\n            \"title\": \"Konzepte\"\n        },\n        \"company\": {\n            \"title\": \"Firmen\"\n        },\n        \"docformat\": {\n            \"title\": \"Formate\"\n        },\n        \"doctype\": {\n            \"title\": \"Dokumenttypen\"\n        },\n        \"documentlanguages\": {\n            \"title\": \"Sprachen\"\n        },\n        \"fileext\": {\n            \"title\": \"Dateierweiterungen\"\n        },\n        \"filename\": {\n            \"title\": \"Dateinamen\"\n        },\n        \"geo\": {\n            \"title\": \"Orte\"\n        },\n        \"matchingpartnames\": {\n            \"title\": \"Übereinstimmende Partnames\"\n        },\n        \"modified\": {\n            \"title\": \"Datumsangaben\"\n        },\n        \"person\": {\n            \"title\": \"Personen\"\n        },\n        \"refine\": {\n            \"title\": \"Suche verfeinern\",\n            \"input\": {\n                \"label\": \"Verfeinern\",\n                \"buttonTitle\": \"Verfeinern\",\n                \"placeholder\": \"Verfeinern nach...\"\n            }\n        },\n        \"size\": {\n            \"title\": \"Größen\"\n        },\n        \"tagcloud\": {\n            \"title\": \"Wortwolke\"\n        },\n        \"title\": {\n            \"title\": \"Titel\"\n        },\n        \"treepath\": {\n            \"title\": \"Quellen\"\n        },\n        \"recentQueries\": {\n            \"title\": \"Kürzliche Suchanfragen\"\n        },\n        \"recentQueriesPublic\": {\n            \"title\": \"Kürzliche öffentliche Suchanfragen\"\n        },\n        \"mySearch\": {\n            \"title\": \"Meine Suche\",\n            \"itemRemove\": \"Entfernen\"\n        },\n        \"search\": {\n            \"label\": \"Suche\",\n            \"buttonTitle\": \"Suche\",\n            \"placeholder\": \"Suche...\",\n            \"showSearchForm\": \"Suchmaske einblenden\",\n            \"hideSearchForm\": \"Suchmaske ausblenden\"\n        },\n        \"range\": {\n            \"year\": \"{date, date, sqYear}\",\n            \"monthYear\": \"{date, date, sqMonthYear}\",\n            \"weekYear\": \"W{week, number, sqWeek} {weekYear, number, sqYear}\",\n            \"apply\": \"Anwenden\",\n            \"clear\": \"Löschen\",\n            \"unavailable\": \"Kein Bereich verfügbar\"\n        },\n\n        \"filters\":{\n            \"add\":\"Filter hinzufügen\",\n            \"addAll\": \"Alle Facetten hinzufügen\",\n            \"remove\":\"Filter entfernen\",\n            \"removeAll\": \"Alle Facetten entfernen\",\n            \"clear\":\"Filter löschen\",\n            \"moreFilters\":\"\",\n            \"showFilters\":\"Filter einblenden\",\n            \"hideFilters\":\"Filter ausblenden\",\n\n            \"back\": \"Zurück zu den Filtern\",\n            \"selectedFilters\": \"Dieser Filter ist in der aktuellen Suchanfrage aktiv\",\n\n            \"customizeFacets\": \"Facetten zum Anzeigen oder Ausblenden auswählen\"\n        },\n\n        \"selectedValue\": \"Dieser Wert ist in der aktuellen Anfrage ausgewählt.\",\n        \"previous\": \"Zurück\",\n        \"next\": \"Weiter\",\n        \"filterItemCountTooltip\": \"{count} mögliche Werte für diesen Filter\",\n    },\n\n    \"facetCard\": {\n        \"expand\": \"Erweitern\",\n        \"collapse\": \"Reduzieren\",\n        \"enlarge\": \"Vergrößern\",\n        \"reduce\": \"Reduzieren\",\n        \"openSettings\": \"Einstellungen öffnen\",\n        \"saveSettings\": \"Einstellungen speichern\"\n    }\n};\n","import {Utils} from \"./utils\";\n\n/**\n * Describes the error codes that can be set in the {@link SqError} class.\n */\nexport enum SqErrorCode {\n    loginCancelled,\n    processedCredentialsError,\n    principalSwitched,\n    autoLoginError\n}\n\n/**\n * A subclass of the built-in {@link Error} class with added `code` and\n * `data` (optional) properties.\n */\nexport class SqError extends Error {\n    // See https://github.com/Microsoft/TypeScript/issues/7639\n    // and https://github.com/Microsoft/TypeScript/issues/1168#issuecomment-107833988\n    /**\n     * The error code associated with the error.\n     */\n    code: SqErrorCode;\n    /**\n     * Arbitrary data associated with the error.\n     */\n    data: any;\n\n    constructor(code: SqErrorCode, message?: string, data?: any) {\n        super(message || SqError.message(code));\n        this.code = code;\n        this.name = \"SqError\";\n        this.message = message || SqError.message(code);\n        if (data) {\n            this.data = data;\n        }\n    }\n\n    /**\n     * Return `true` if the passed `error` is a valid `SqErrorCode` instance.\n     * If the optional `code` parameter is defined then only return true\n     * if the code on `error` matches this value.\n     */\n    static is(error: any, code?: SqErrorCode): error is SqError {\n        if (error instanceof SqError || (error instanceof Error && error.name === \"SqError\")) {\n            return Utils.isUndefined(code) || (error as SqError).code === code;\n        }\n        return false;\n    }\n\n    /**\n     * Return the message corresponding to the passed error `code`.\n     */\n    static message(code: SqErrorCode) {\n        switch (code) {\n            case SqErrorCode.loginCancelled: return \"msg#error.loginCancelled\";\n            case SqErrorCode.processedCredentialsError: return \"msg#error.processedCredentialsError\";\n            case SqErrorCode.principalSwitched: return \"msg#error.principalSwitched\";\n            case SqErrorCode.autoLoginError: return \"msg#error.autoLoginError\";\n            default: return \"msg#error.unknownError\";\n        }\n    }\n}\n","import {HttpParams} from \"@angular/common/http\";\nimport {Utils, MapOf} from \"@sinequa/core/base\";\nimport {StartConfig} from \"./start-config.web.service\";\n\n/**\n * A base helper class for web services. It holds the {@link StartConfig} for the app\n */\nexport abstract class HttpService {\n    /**\n     * Constructor\n     *\n     * @param startConfig The start configuration\n     */\n    constructor(\n        protected startConfig: StartConfig) {\n    }\n\n    /**\n     * The name of the application\n     */\n    get appName(): string {\n        return this.startConfig.app!;\n    }\n\n    /**\n     * Makes an API url by appending the api name to the api path\n     * held on the {@link StartConfig}\n     *\n     * @param api An API name\n     */\n    makeUrl(api: string): string {\n        return Utils.addUrl(this.startConfig.apiPath!, api);\n    }\n\n    /**\n     * Makes an Angular {@link HttpParams} object from a basic Javascript object\n     *\n     * @param params A map of parameter values\n     */\n    makeParams(params: MapOf<string | boolean | number | Date | object | undefined>): HttpParams {\n        return Utils.makeHttpParams(params);\n    }\n}","import {Injectable, Inject, InjectionToken, Type, OnDestroy} from \"@angular/core\";\nimport {Observable, Subject} from \"rxjs\";\nimport {UserSettingsWebService, AuditEvent, AuditEvents} from \"@sinequa/core/web-services\";\nimport {ModalService, ModalResult} from \"@sinequa/core/modal\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {SelectionService} from \"@sinequa/components/selection\";\nimport {Action} from \"@sinequa/components/action\";\nimport {SearchService} from \"@sinequa/components/search\";\nimport {Query} from '@sinequa/core/app-utils';\n\n// Basket interface (from models/UserSettings)\nexport interface Basket {\n    name: string;\n    description?: string;\n    ids?: string[];\n}\n\n\n// Audit Events (from models/Audit)\nexport const enum BasketEventType {\n    Loaded = \"Basket_Loaded\",\n    Add = \"Basket_Add\",\n    Delete = \"Basket_Delete\",\n    DeleteAll = \"Basket_DeleteAll\",\n    Update = \"Basket_Update\",\n    Rename = \"Basket_Rename\",\n\n    AddDoc = \"Basket_AddDoc\",\n    RemoveDoc = \"Basket_RemoveDoc\",\n    Open = \"Basket_Open\",\n    ExportCSV = \"Basket_ExportCSV\",\n    Patched = \"Basked_Patched\"\n}\n\n\n// Types of events triggering a change event\nexport const BASKET_CHANGE_EVENTS = [\n    BasketEventType.Loaded,\n    BasketEventType.Add,\n    BasketEventType.Delete,\n    BasketEventType.DeleteAll,\n    BasketEventType.Update,\n    BasketEventType.Rename\n];\n\n\n// CRUD Events\nexport interface BasketChangeEvent {\n    type: BasketEventType;\n    basket?: Basket;\n}\n\n\n// Model expected by the SelectBasket Modal.\n// The filter allows to filter out baskets from the complete list\nexport interface SelectBasketModel {\n    basket: Basket | undefined;\n    basketFilter?: (basket: Basket) => boolean;\n    allowNew?: boolean;\n}\n\n// Model expected by the ManageBaskets Modal.\nexport interface ManageBasketsModel {\n    baskets: Basket[];\n    auditEvents?: AuditEvent[];\n}\n\n\n/**\n * The modal types are unknown to this service.\n * The module using this service must provide these components\n * in their forRoot() method\n *\n * Example below:\n *\n *  public static forRoot(): ModuleWithProviders<BasketsModule> {\n        return {\n            ngModule: BasketsModule,\n            providers: [\n                {\n                    provide: BASKET_COMPONENTS,\n                    useValue: {\n                        selectBasketModal: SelectBasket,\n                        editBasketModal: EditBasket,\n                        manageBasketsModal: ManageBaskets\n                    }\n                },\n                BasketsService\n            ]\n        };\n    }\n */\nexport interface BasketComponents {\n    selectBasketModal: Type<any>;\n    editBasketModal: Type<any>;\n    manageBasketsModal: Type<any>;\n}\nexport const BASKET_COMPONENTS = new InjectionToken<BasketComponents>('BASKET_COMPONENTS');\n\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BasketsService implements OnDestroy {\n\n    private readonly _events = new Subject<BasketChangeEvent>();\n    private readonly _changes = new Subject<BasketChangeEvent>();\n\n    // An application may want to alter the action (icon, etc.)\n    public selectedRecordsAction: Action;\n\n    constructor(\n        public userSettingsService: UserSettingsWebService,\n        public searchService: SearchService,\n        public modalService: ModalService,\n        public selectionService: SelectionService,\n        @Inject(BASKET_COMPONENTS) public basketComponents: BasketComponents\n    ){\n        // Listen to the user settings\n        this.userSettingsService.events.subscribe(event => {\n            // E.g. new login occurs\n            // ==> Menus need to be rebuilt\n            this._events.next({type: BasketEventType.Loaded});\n        });\n        // Listen to own events, to trigger change events\n        this._events.subscribe(event => {\n            if(BASKET_CHANGE_EVENTS.indexOf(event.type) !== -1){\n                this.changes.next(event);\n            }\n        });\n        // Register a basket action onto the selection service, so that users can add/remove to/from baskets when documents are selected\n        this.selectedRecordsAction = this.buildBasketsAction();\n    }\n\n    // GETTERS\n\n    /**\n     * Returns the list of this user's baskets.\n     * The list is stored in the user settings (this is a redirection).\n     * Using this service creates the list of baskets if it does not already exist.\n     */\n    public get baskets() : Basket[] {\n        if(!this.userSettingsService.userSettings)\n            this.userSettingsService.userSettings = {};\n        if(!this.userSettingsService.userSettings[\"baskets\"])\n            this.userSettingsService.userSettings[\"baskets\"] = [];\n        return this.userSettingsService.userSettings[\"baskets\"];\n    }\n\n    /**\n     * Triggers any event among BasketChangeEvent\n     * (use for fine-grained control of baskets workflow)\n     */\n    public get events() : Subject<BasketChangeEvent> {\n        return this._events;\n    }\n\n    /**\n     * Triggers when events affect the list of baskets\n     * (use to refresh basket menus)\n     * Cf. CHANGE_EVENTS list\n     */\n    public get changes() : Subject<BasketChangeEvent> {\n        return this._changes;\n    }\n\n    /**\n     * @returns true if there is at least one basket\n     */\n    public get hasBasket(): boolean {\n        return this.baskets.length > 0;\n    }\n\n    /**\n     * @returns a basket with the given name or null if it does not exist\n     * @param name\n     */\n    public basket(name: string): Basket | undefined {\n        const i = this.basketIndex(name);\n        return i>= 0? this.baskets[i] : undefined;\n    }\n\n    private basketIndex(name: string): number {\n        for (let i = 0, ic = this.baskets.length; i < ic; i++) {\n            const basket = this.baskets[i];\n            if (basket && basket.name === name) {\n                return i;\n            }\n        }\n        return -1;\n    }\n\n\n    // CRUD\n\n    /**\n     * Creates a new basket unless it already exists.\n     * Emits an Basket event.\n     * Update the data on the server.\n     * @param basket the basket to create\n     * @returns true if basket was created\n     */\n    public createBasket(basket: Basket) : boolean {\n\n        if(this.basketIndex(basket.name) >= 0)\n            return false; // This basket already exists\n\n        this.baskets.unshift(basket);\n        this._events.next({type : BasketEventType.Add, basket: basket});\n        this.patchBaskets([{\n            type: BasketEventType.Add,\n            detail: {\n                basket: basket.name\n            }\n        }]);\n        return true;\n    }\n\n    /**\n     * Update the basket at the given index, unless a basket with the same name\n     * already exists in the list of baskets.\n     * Emits a Basket event.\n     * Update the data on the server.\n     * @param basket the basket to update\n     * @param index the index at which to update the basket\n     * @returns true if basket was updated\n     */\n    public updateBasket(basket: Basket, index : number) : boolean {\n\n        const prevIndex = this.basketIndex(basket.name);\n        if(prevIndex !== -1 && index !== prevIndex)\n            return false; // A basket with the same name exists at a different index\n\n        if(index >= 0 && index < this.baskets.length){\n\n            this.baskets.splice(index, 1, basket);\n            this._events.next({type : BasketEventType.Update, basket: basket});\n            this.patchBaskets([\n                {\n                    type: BasketEventType.Update,\n                    detail: {\n                        basket: basket.name\n                    }\n                }\n            ], true);\n            return true;\n\n        }\n        return false;   // This basket does not exist\n    }\n\n    /**\n     * Updates the full list of Baskets.\n     * Emits a Basket event.\n     * Update the data on the server.\n     * @param baskets the new list of baskets\n     * @param auditEvents the list of audit events to log\n     */\n    public updateBaskets(baskets: Basket[], auditEvents?: AuditEvents) : boolean {\n        Utils.arraySet(this.baskets, baskets);\n        this._events.next({type : BasketEventType.Update});\n        this.patchBaskets(auditEvents, true);\n        return true;\n    }\n\n    /**\n     * Deletes the given Basket (based on its name)\n     * Emits an Basket event.\n     * Update the data on the server.\n     * @param basket\n     * @returns true if basket was deleted\n     */\n    public deleteBasket(basket: Basket) : boolean {\n\n        const index = this.basketIndex(basket.name);\n\n        if(index === -1)\n            return false; // Nothing to delete\n\n        this.baskets.splice(index, 1);\n        this._events.next({type : BasketEventType.Delete, basket: basket});\n        this.patchBaskets([\n            {\n                type: BasketEventType.Delete,\n                detail: {\n                    savedquery: basket.name\n                }\n            }\n        ], true);\n        return true;\n    }\n\n    /**\n     * Adds one or more documents to a basket.\n     * Emits a Basket event.\n     * Update the data on the server.\n     * @param name basket to which to add the document(s)\n     * @param ids id(s) of the document(s) to add to the basket\n     * @param skipPatch if true, will not update the data on the server (use for bulk updates)\n     * @returns true if the document was added\n     */\n    public addToBasket(name: string, ids: string | string[], skipPatch?: boolean): boolean {\n        if (!ids) {\n            return false;\n        }\n        const basket = this.basket(name);\n        if (!basket) return false;\n        if (!basket.ids) basket.ids = [];\n        if (Utils.isArray(ids)) {\n            for (let i = 0, ic = ids.length; i < ic; i++) {\n                const id = ids[i];\n                if (basket.ids.indexOf(id) === -1) {\n                    basket.ids.push(id);\n                }\n            }\n        }\n        else {\n            if (basket.ids.indexOf(<string>ids) === -1) {\n                basket.ids.push(<string>ids);\n            }\n        }\n        if(!skipPatch){\n            this._events.next({type : BasketEventType.AddDoc});\n            this.patchBaskets({\n                type: BasketEventType.AddDoc,\n                detail: {\n                    basket: name,\n                    \"doc-id\": basket.ids[0]\n                }\n            });\n        }\n        return true;\n    }\n\n    /**\n     * Removes one or more documents from a basket.\n     * Emits a Basket event.\n     * Update the data on the server.\n     * @param name basket from which to remove the document(s)\n     * @param ids id(s) of the document(s) to remove from the basket\n     * @param skipPatch if true, will not update the data on the server (use for bulk updates)\n     * @returns true if the document was removed\n     */\n    public removeFromBasket(name: string, ids: string | string[], skipPatch?: boolean): boolean {\n        if (!ids) {\n            return false;\n        }\n        const basket = this.basket(name);\n        if (!basket) return false;\n        if (!basket.ids) basket.ids = [];\n        if (Utils.isArray(ids)) {\n            for (let i = 0, ic = ids.length; i < ic; i++) {\n                const id = ids[i];\n                const index = basket.ids.indexOf(id);\n                if (index !== -1) {\n                    basket.ids.splice(index, 1);\n                }\n            }\n        }\n        else {\n            const index = basket.ids.indexOf(<string>ids);\n            if (index !== -1) {\n                basket.ids.splice(index, 1);\n            }\n        }\n        if(!skipPatch){\n            this._events.next({type : BasketEventType.RemoveDoc});\n            this.patchBaskets({\n                type: BasketEventType.RemoveDoc,\n                detail: {\n                    basket: name,\n                    \"doc-id\": basket.ids[0]\n                }\n            }, true);\n        }\n        return true;\n    }\n\n    /**\n     * Removes a document from all the baskets\n     * @param id id of the document to remove\n     */\n    public removeFromAllBaskets(id: string) : boolean {\n        const auditEvents: AuditEvent[] = [];\n        for (const basket of this.baskets) {\n            if( this.removeFromBasket(basket.name, id, true) ){\n                auditEvents.push({\n                    type: BasketEventType.RemoveDoc,\n                    detail: {\n                        basket: basket.name,\n                        \"doc-id\": id\n                    }\n                });\n            }\n        }\n        if(auditEvents.length > 0) {\n            this._events.next({type : BasketEventType.RemoveDoc});\n            this.patchBaskets(auditEvents, true);\n            return true;\n        }\n        return false;\n    }\n\n\n    /**\n     * Updates Baskets in User settings.\n     * @param auditEvents : Audit Events to be triggered\n     * @returns an Observable which can be used to trigger further events\n     */\n    private patchBaskets(auditEvents?: AuditEvents, updateSearch?: boolean): Observable<void> {\n        const obs = this.userSettingsService.patch({baskets: this.baskets}, auditEvents);\n        obs.subscribe(\n            next => {\n                this._events.next({type: BasketEventType.Patched});\n                if(updateSearch && this.searchService.query.basket) {\n                    this.searchService.search(); // Update search results to reflect the new basket content\n                }\n            },\n            error => {\n                console.error(\"Could not patch Baskets!\", error);\n        });\n        return obs;\n    }\n\n\n\n\n    // EVENT HANDLERS (Menus)\n\n    /**\n     * Uses the SearchService to perform a search returning all\n     * the documents in this basket\n     * @param basket\n     * @param path\n     * @returns the search service promise\n     */\n    public searchBasket(basket : Basket, path?: string) : Promise<boolean> {\n        const query = this.searchService.makeQuery();\n        query.basket = basket.name;\n        this.searchService.setQuery(query);\n        this._events.next({type: BasketEventType.Open, basket: basket});\n        return this.searchService.search({ path: path }, {\n            type: BasketEventType.Open,\n            detail: {\n                basket: basket.name\n            }\n        });\n    }\n\n    /**\n     * Opens a dialog allowing a user to add one (or more) document(s)\n     * to a basket.\n     * @param ids id(s) of the documents to add to a basket\n     * @param recordBaskets names of the baskets the document already belongs to\n     * @returns a boolean promise resolved when the user closes the dialog\n     * the result is true if the document was added to a basket\n     */\n    public addToBasketModal(ids: string | string[], recordBaskets?: string[])\n            : Promise<boolean> {\n        const model : SelectBasketModel = {\n            basket: undefined,\n            basketFilter: recordBaskets? b => !recordBaskets.includes(b.name) : undefined,\n            allowNew: true\n        };\n        return this.modalService\n            .open(this.basketComponents.selectBasketModal, {model: model})\n            .then(result => {\n                if (result === ModalResult.OK && model.basket) {\n                    return this.addToBasket(model.basket.name, ids);\n                }\n                return false;\n            });\n    }\n\n    /**\n     * Opens a dialog allowing a user to remove one (or more) document(s)\n     * from a basket.\n     * @param ids id(s) of the documents to remove from a basket\n     * @param recordBaskets names of the baskets the document already belongs to\n     * @returns a boolean promise resolved when the user closes the dialog\n     * the result is true if the document was removed from a basket\n     */\n    public removeFromBasketModal(ids: string | string[], recordBaskets?: string[])\n            : Promise<boolean> {\n        const model : SelectBasketModel = {\n            basket: undefined,\n            basketFilter: recordBaskets? b => recordBaskets.includes(b.name) : undefined\n        };\n        return this.modalService\n            .open(this.basketComponents.selectBasketModal, {model: model})\n            .then(result => {\n                if (result === ModalResult.OK && model.basket) {\n                    return this.removeFromBasket(model.basket.name, ids);\n                }\n                return false;\n            });\n    }\n\n    /**\n     * Opens a dialog allowing a user to create new basket.\n     * @param model the initial basket object model\n     * @returns a boolean promise resolved when the user closes the dialog\n     * the result is true if the basket was created.\n     */\n    public createBasketModal(model: Basket = {name: \"\"}) : Promise<boolean> {\n\n        return this.modalService.open(this.basketComponents.editBasketModal, {model: model})\n            .then((result) => {\n\n                if (result === ModalResult.OK) {\n                    const index = this.basketIndex(model.name);\n                    if (index !== -1) {\n\n                        return this.modalService.yesNo(\"msg#baskets.basketAlreadyExists\")\n                            .then((result) => {\n                                if (result === ModalResult.Yes) {\n                                    return this.updateBasket(model, index);\n                                }\n                                return false;\n                            });\n\n                    }\n                    else {\n\n                        return this.createBasket(model);\n\n                    }\n                }\n\n                return false;\n            });\n    }\n\n    // Not relevant as of now\n    // public editBasketModal(basket: Basket)\n\n    /**\n     * Opens a dialog allowing a user to reorganize and edit the\n     * list of baskets.\n     * @returns a boolean promise resolved when the user closes the dialog\n     * the result is true is the list was updated.\n     */\n    public manageBasketsModal() : Promise<boolean> {\n\n        const model: ManageBasketsModel = { baskets: Utils.copy(this.baskets) };\n\n        return this.modalService.open(this.basketComponents.manageBasketsModal, {model: model})\n            .then((result) => {\n                if (result === ModalResult.OK) {\n                    return this.updateBaskets(model.baskets, model.auditEvents);\n                }\n                return false;\n            });\n\n    }\n\n\n    private buildBasketsAction() : Action {\n        return new Action({\n            icon: \"fas fa-shopping-basket\",\n            title: \"msg#baskets.baskets\",\n            hidden: true,\n            children: [\n                new Action({\n                    text: \"msg#baskets.addToBasket\",\n                    action: (item, $event) => {\n                        this.addToBasketModal(this.selectionService.getSelectedIds());\n                    }\n                }),\n                new Action({\n                    text: \"msg#baskets.removeFromBasket\",\n                    action: (item, $event) => {\n                        this.removeFromBasketModal(this.selectionService.getSelectedIds());\n                    }\n                })\n            ],\n            updater: (action) => {\n                action.hidden = !this.selectionService.haveSelectedRecords;\n            }\n        });\n    }\n\n    makeQuery(basket: Basket): Query {\n        const query = this.searchService.makeQuery();\n        query.basket = basket.name;\n        return query;\n    }\n\n    notifyOpenBasket(basket: Basket) {\n        this._events.next({type: BasketEventType.Open, basket});\n    }\n\n    ngOnDestroy() {\n        this.events.complete();\n        this.changes.complete();\n    }\n}\n","export * from \"./public-api\";","export * from \"./labels.module\";\nexport * from \"./labels.service\";\nexport * from \"./label.pipe\";\nexport * from \"./labels.component\";\nexport * from \"./result-labels.component\";\nexport * from \"./labels-autocomplete.directive\";\nexport * from \"./bootstrap/index\";\nexport * from \"./messages/index\";\n","export default {\n    \"notification\": {\n        \"title\": \"Notifications\",\n        \"showNotifications\": \"Afficher les notifications\",\n        \"hideNotifications\": \"Masquer les notifications\",\n        \"clearNotifications\": \"Effacer les notifications\",\n    }\n};\n","import {Component, Input, Output, EventEmitter, OnChanges, SimpleChanges} from \"@angular/core\";\nimport {SafeResourceUrl} from \"@angular/platform-browser\";\nimport {Query} from '@sinequa/core/app-utils';\nimport {Record, PreviewData} from \"@sinequa/core/web-services\";\nimport {PreviewService} from \"../../preview.service\";\nimport {PreviewDocument} from \"../../preview-document\";\n\n@Component({\n    selector: \"sq-facet-preview\",\n    templateUrl: \"./facet-preview.html\",\n})\nexport class BsFacetPreview implements OnChanges {\n    @Input() record: Record;\n    @Input() sandbox: string | null;\n    @Input() query: Query;\n    @Input() height: string;\n    @Input() iframeClass: string;\n    @Input() similarDocuments: Record[];\n    @Output() recordOpened = new EventEmitter<{record: Record, query: Query, startSmall?: boolean, iframeClass?: string}>();\n    data: PreviewData;\n    document: PreviewDocument;\n    downloadUrl?: SafeResourceUrl;\n\n    constructor(\n        private previewService: PreviewService) {\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes[\"record\"] || changes[\"query\"]) {\n            this.previewService.getPreviewData(this.record.id, this.query).subscribe(\n                previewData => {\n                    this.data = previewData;\n                    this.downloadUrl = this.data ? this.previewService.makeDownloadUrl(this.data.documentCachedContentUrl) : undefined;\n                });\n        }\n    }\n\n    openSimilarDoc(doc: Record) {\n        this.recordOpened.next({\n            record: doc,\n            query: this.query,\n            startSmall: true,\n            iframeClass: this.iframeClass\n        });\n        return false;\n    }\n}","<div *ngIf=\"!similarDocuments\" class=\"d-flex flex-column {{iframeClass}}\" [ngStyle]=\"{height: height}\">\n    <sq-preview-document-iframe  [sandbox]=\"sandbox\" [downloadUrl]=\"downloadUrl\" (onPreviewReady)=\"document = $event\">\n        <sq-preview-tooltip #tooltip [previewDocument]=\"document\" [previewData]=\"data\"></sq-preview-tooltip>\n    </sq-preview-document-iframe>\n</div>\n<ul class=\"list-group\" *ngIf=\"!!similarDocuments\">\n    <li *ngFor=\"let doc of similarDocuments\" class=\"list-group-item d-flex justify-content-between align-items-center\" style=\"background-color: transparent;\">\n        <sq-result-title [record]=\"doc\" [titleLinkBehavior]=\"'open'\"></sq-result-title>\n        <div class=\"d-flex\">\n            <span class=\"badge badge-pill badge-secondary\" style=\"padding-top: 5px;\">{{100*doc.globalrelevance | number:'1.0-0'}}</span>\n            <a href=\"#\" (click)=\"openSimilarDoc(doc)\" class=\"open-record ml-2\" title=\"Open document in workspace\">\n                <i class=\"fas fa-arrow-circle-right\"></i>\n            </a>\n        </div>\n    </li>\n</ul>","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { DragDropModule } from '@angular/cdk/drag-drop';\n\nimport { IntlModule } from \"@sinequa/core/intl\";\n\nimport { BsActionModule } from \"@sinequa/components/action\";\n\nimport { BsResultsSelector } from \"./results-selector/results-selector\";\nimport { BsResultSelector } from \"./result-selector/result-selector\";\nimport { BsSelectionArranger } from \"./selection-arranger/selection-arranger.component\";\nimport { SELECTION_OPTIONS, defaultSelectionOptions } from \"../selection.service\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        DragDropModule,\n\n        IntlModule,\n\n        BsActionModule,\n    ],\n    declarations: [\n        BsResultsSelector, BsResultSelector, BsSelectionArranger\n    ],\n    exports: [\n        BsResultsSelector, BsResultSelector, BsSelectionArranger\n    ],\n    providers: [\n        {provide: SELECTION_OPTIONS, useValue: defaultSelectionOptions}\n    ]\n})\nexport class BsSelectionModule {\n}\n","import { Component, Input, OnChanges, SimpleChanges} from \"@angular/core\";\nimport { HighlightDataPerCategory, CategoryHighlightData, HighlightDataPerLocation, PreviewData } from \"@sinequa/core/web-services\";\nimport { Utils } from \"@sinequa/core/base\";\nimport { PreviewDocument, HighlightCategoryFilterState, HighlightCategoryFilterChoice } from \"../../preview-document\";\n\n\nexport interface HighlightNavigationState {\n    current: number;\n    filters: { [key: string] : HighlightCategoryFilterState };\n}\n\n\n@Component({\n    selector: \"sq-preview-highlights\",\n    templateUrl: \"./preview-highlights.html\",\n    styleUrls: [\"./preview-highlights.scss\"]\n})\nexport class BsPreviewHighlights implements OnChanges {\n\n    @Input() previewDocument: PreviewDocument;\n    @Input() previewData: PreviewData;\n\n    // Highlight data retrieved by the server\n    public highlightDataPerCategory?: HighlightDataPerCategory;\n    private highlightDataPerLocation?: HighlightDataPerLocation;\n\n    // Selected entity & filters (the .filters[category] are the NgModel of the select elements)\n    public navigationState: HighlightNavigationState;\n\n    // highlight data resulting from filtering\n    private filteredHighlightData?: HighlightDataPerLocation;\n\n\n    ngOnChanges(changes: SimpleChanges) {\n        if(changes[\"previewData\"]){\n            this.initialize();\n        }\n        if (changes[\"previewDocument\"]) {\n            if (this.previewReady) {\n                this.moveToFirstSearchTerm();\n            }\n        }\n    }\n\n    private initialize(): void {\n        this.highlightDataPerCategory = !this.previewData ? undefined : this.previewData.highlightsPerCategory;\n        this.highlightDataPerLocation = !this.previewData ? undefined : this.previewData.highlightsPerLocation;\n        this.navigationState = new SimpleHighlightNavigationState(this.nonEmptyCategoryIds);\n        this.reset();\n    }\n\n    /**\n     * Called on init and when non-value filters are clicked\n     * Resets the navigationState entity selection.\n     * Applies the filters to the preview document.\n     * Updates the filtered data.\n     */\n    public reset(): void {\n        this.navigationState.current = -1;  // Resets the navigationState entity selection.\n        if(this.previewReady)               // Applies the filters to the preview document.\n            this.previewDocument.filterHighlights(this.navigationState.filters);\n        // Updates the filtered data.\n        this.filteredHighlightData = this.highlightDataPerLocation ?\n            new FilteredHighlightDataPerLocation(this.highlightDataPerLocation, this.navigationState.filters) : undefined;\n    }\n\n    /**\n     * Selects the first match location (highlight classes and scrolls to it)\n     */\n    private moveToFirstSearchTerm(): void {\n        if (this.filteredHighlightData) {\n            for (let i = 0, ic = this.total; i < ic; i++) {\n                const highlight = this.filteredHighlightData[i];\n                if (highlight.positionInCategories) {\n                    let category = \"term1\";\n                    let position = highlight.positionInCategories[category];\n                    if (!Utils.isNumber(position)) {\n                        category = \"matchlocations\";\n                        position = highlight.positionInCategories[category];\n                    }\n                    if (Utils.isNumber(position)) {\n                        this.navigationState.current = i;\n                        this.previewDocument.selectHighlight(category, position);\n                        break;\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Index of currently selected entity (from 1)\n     */\n    get current(): number {\n        return this.navigationState.current + 1;\n    }\n\n    /**\n     * No categories to highlight\n     */\n    get noData(): boolean {\n        return this.nonEmptyCategoryIds.length === 0;\n    }\n\n    /**\n     * Total number of highlights\n     */\n    get total(): number {\n        return this.filteredHighlightData ? this.filteredHighlightData.size() : 0;\n    }\n\n    /**\n     * @returns true when the document is ready to be interacted with\n     */\n    get previewReady(): boolean {\n        return !!this.previewDocument;\n    }\n\n    /**\n     * Returns the currently selected entity/match/extract based on the PreviewData\n     * or potentially by fetching it directly from the HTML document.\n     */\n    get currentValue(): string {\n        if (this.navigationState.current < 0 || !this.filteredHighlightData) {\n            return \"\";\n        }\n        const result: string = this.filteredHighlightData[this.navigationState.current].displayValue;\n        if (result) {\n            return result;\n        }\n        const values: string[] = this.filteredHighlightData[this.navigationState.current].values;\n        if (values && values.length > 0 && values[0] && values[0].length > 0) {\n            return values[0];\n        }\n        if (Object.keys(this.filteredHighlightData[this.navigationState.current].positionInCategories).length === 1\n                && this.filteredHighlightData[this.navigationState.current].positionInCategories[\"extractslocations\"]) {\n            return this.previewDocument.getHighlightText(\n                \"extractslocations\",\n                this.filteredHighlightData[this.navigationState.current].positionInCategories[\"extractslocations\"]);\n        }\n        return \"\";\n    }\n\n    /**\n     * Get categories of the currently selected entity/match/extract\n     * based on the filtered Highlight data per location\n     */\n    get currentCategories(): string[] {\n        const result: string[] = [];\n        if (this.navigationState.current < 0 || !this.filteredHighlightData || this.navigationState.current >= this.filteredHighlightData.size()) {\n            return result;\n        }\n        for (const categoryId in this.filteredHighlightData[this.navigationState.current].positionInCategories) {\n            result.push(categoryId);\n        }\n        return result;\n    }\n\n    public categoryIconClass(categoryId: string): string {\n        if (categoryId.startsWith(\"term\")) {\n            return \"far fa-flag\";\n        }\n        return \"sq-icon-\" + categoryId;\n    }\n\n    public getCategoryHighlightData(categoryId: string): CategoryHighlightData | undefined {\n        return this.highlightDataPerCategory ? this.highlightDataPerCategory[categoryId] : undefined;\n    }\n\n    public categoryDisplayLabel(categoryId: string): string {\n        return this.highlightDataPerCategory ? this.highlightDataPerCategory[categoryId].categoryDisplayLabel : \"\";\n    }\n\n    public categoryLabelPipeParams(categoryId: string): any {\n        if (!categoryId.startsWith(\"term\")) {\n            return {};\n        }\n        const index = Number(categoryId.slice(\"term\".length));\n        if (isNaN(index)) {\n            return {};\n        }\n        return {values: {index: index}};\n    }\n\n\n    /**\n     * Returns the list of entity categories that contain values\n     */\n    get nonEmptyCategoryIds(): string[] {\n        const result: string[] = [];\n        for (const categoryId in this.highlightDataPerCategory) {\n            if (!this.categoryIsEmpty(categoryId, this.highlightDataPerCategory)) {\n                result.push(categoryId);\n            }\n        }\n        return result;\n    }\n\n    private categoryIsEmpty(categoryId: string, highlightData : HighlightDataPerCategory): boolean {\n        return highlightData[categoryId] == null\n            || highlightData[categoryId].values == null\n            || highlightData[categoryId].values.length <= 0;\n    }\n\n    /**\n     * @returns true if there is more than one option per category\n     * @param categoryId the category id\n     */\n    public categoryHasMultipleValues(categoryId: string): boolean {\n        return this.getHighlightValueCount(categoryId) > 1;\n    }\n\n    /**\n     * @returns the number of options per category\n     * @param categoryId the category id\n     */\n    public getHighlightValueCount(categoryId: string): number {\n        if (!this.highlightDataPerCategory || this.categoryIsEmpty(categoryId, this.highlightDataPerCategory)) {\n            return 0;\n        }\n        const values = this.highlightDataPerCategory[categoryId].values;\n        if (values == null) {\n            return 0;\n        }\n        return values.length;\n    }\n\n\n    // Navigation buttons handlers\n\n    first() {\n        if (this.navigationState.current > 0) {\n            this.navigationState.current = 0;\n            this.selectHighlight();\n        }\n    }\n\n    previous() {\n        if (this.navigationState.current > 0) {\n            this.navigationState.current--;\n            this.selectHighlight();\n        }\n    }\n\n    next() {\n        if (this.navigationState.current < this.total - 1) {\n            this.navigationState.current++;\n            this.selectHighlight();\n        }\n    }\n\n    last() {\n        if (this.navigationState.current !== this.total - 1) {\n            this.navigationState.current = this.total - 1;\n            this.selectHighlight();\n        }\n    }\n\n    private selectHighlight(): void {\n        if (this.filteredHighlightData) {\n            const positionInCategories: { [categoryId: string]: number } = this.filteredHighlightData[this.navigationState.current].positionInCategories;\n            const firstCategory: string = Object.keys(positionInCategories)[0];\n            this.previewDocument.selectHighlight(firstCategory, positionInCategories[firstCategory]);\n        }\n    }\n\n    public selectAll(): void {\n        for (const categoryId in this.navigationState.filters) {\n            this.navigationState.filters[categoryId] = this.keepAllFilter;\n        }\n        this.reset();\n    }\n\n    public selectNone(): void {\n        for (const categoryId in this.navigationState.filters) {\n            this.navigationState.filters[categoryId] = this.keepNoneFilter;\n        }\n        this.reset();\n    }\n\n    get allSelected(): boolean {\n        for (const categoryId in this.navigationState.filters) {\n            const filter: HighlightCategoryFilterState = this.navigationState.filters[categoryId];\n            if (filter && filter.choice !== HighlightCategoryFilterChoice.All) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    get noneSelected(): boolean {\n        for (const categoryId in this.navigationState.filters) {\n            const filter: HighlightCategoryFilterState = this.navigationState.filters[categoryId];\n            if (!filter || filter.choice !== HighlightCategoryFilterChoice.None) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n\n    // Entity filters\n\n    // Trivial filters\n    public keepAllFilter: HighlightCategoryFilterState = new SimpleHighlightCategoryFilterState();\n    public keepNoneFilter: HighlightCategoryFilterState = new SimpleHighlightCategoryFilterState(HighlightCategoryFilterChoice.None);\n\n    // Filter created for each option\n    public newFilter(value: string) {\n        return new SimpleHighlightCategoryFilterState(value);\n    }\n\n    // A filter was clicked\n    selectFilter(categoryId: string, value: HighlightCategoryFilterState){\n        //console.log(categoryId, value);\n\n        // If a specific entity/extract is selected we want to select it, rather than filter other entities\n        if(value.choice === HighlightCategoryFilterChoice.Value){\n\n            // First, let's cancel value filters EXCEPT the one that was just selected\n            for(const key in this.navigationState.filters){\n                if(key !== categoryId && this.navigationState.filters[key] !== this.keepAllFilter && this.navigationState.filters[key] !== this.keepNoneFilter){\n                    this.navigationState.filters[key] = this.keepAllFilter;\n                }\n            }\n\n            // Search the entity ID\n            let highlight;\n            for(const key in this.highlightDataPerLocation){\n                highlight = this.highlightDataPerLocation[key];\n                if(highlight.positionInCategories[categoryId] && highlight.values.includes(value.filterValue)){\n                    break;\n                }\n            }\n\n            if(highlight){\n                this.previewDocument.selectHighlight(categoryId, highlight.positionInCategories[categoryId]);\n            }\n\n        }\n        else {\n\n            // Cancel value filters\n            for(const key in this.navigationState.filters){\n                if(this.navigationState.filters[key] !== this.keepAllFilter && this.navigationState.filters[key] !== this.keepNoneFilter){\n                    this.navigationState.filters[key] = this.keepAllFilter;\n                }\n            }\n\n            // Reset just applies the (non-value) filters as they are and removes selection\n            this.reset();\n\n        }\n    }\n\n    /**\n     * Comparator allowing to sort the filters in the select\n     */\n    public compareFilters(filter1: HighlightCategoryFilterState, filter2: HighlightCategoryFilterState): boolean {\n        return SimpleHighlightCategoryFilterState.compare(filter1, filter2);\n    }\n\n\n}\n\n\n\n\n// Implementation of data structures\n\nclass SimpleHighlightNavigationState {\n\n    current: number;\n    filters: { [key: string] : HighlightCategoryFilterState};\n\n    constructor(categories: string[]) {\n        this.current = -1;  // No selection\n        this.filters = {};\n        for (const category of categories) {\n            this.filters[category] = new SimpleHighlightCategoryFilterState(); // All entities visible by default\n        }\n    }\n}\n\n\nclass SimpleHighlightCategoryFilterState implements HighlightCategoryFilterState {\n    readonly choice: HighlightCategoryFilterChoice = HighlightCategoryFilterChoice.All;\n    private _filterValue: string = \"\";\n\n    constructor(param?: string | HighlightCategoryFilterChoice) {\n        if (param == null) {\n            return;\n        }\n        if (typeof param === \"string\") {\n            this.choice = HighlightCategoryFilterChoice.Value;\n            this._filterValue = param;\n        } else {\n            this.choice = param;\n        }\n    }\n\n    get filterValue(): string {\n        if (this.choice === HighlightCategoryFilterChoice.Value) {\n            return this._filterValue;\n        }\n        return \"\";\n    }\n\n    public static compare(filter1: HighlightCategoryFilterState, filter2: HighlightCategoryFilterState) {\n        if(filter1 && filter2) {\n            if(filter1.choice !== filter2.choice) {\n                return false;\n            }\n            return filter1.choice !== HighlightCategoryFilterChoice.Value\n                || filter1.filterValue === filter2.filterValue;\n        }\n        return filter1 === filter2;\n    }\n}\n\n\nclass FilteredHighlightDataPerLocation implements HighlightDataPerLocation {\n\n    [index: number]: {\n        start: number,\n        length: number,\n        values: string[],\n        displayValue: string,\n        positionInCategories: { [category: string]: number }\n    };\n\n    public constructor(baseData: HighlightDataPerLocation, filters: { [key: string] : HighlightCategoryFilterState }) {\n        let counter: number = 0;\n        for (const i in baseData) {\n            const categories = !baseData[i].positionInCategories ? undefined : Object.keys(baseData[i].positionInCategories);\n            if (categories && this.locationIsIncluded(baseData[i].values, categories, filters)) {\n                this[counter] = baseData[i];\n                counter++;\n            }\n        }\n    }\n\n    size(): number {\n        return Object.keys(this).length;\n    }\n\n    public locationIsIncluded(values: string[], categories: string[], filters: { [key: string] : HighlightCategoryFilterState }): boolean {\n        if (!categories) {\n            return false;\n        }\n        for (const category of categories) {\n            if (filters[category] &&\n                (filters[category].choice === HighlightCategoryFilterChoice.All\n                || filters[category].choice === HighlightCategoryFilterChoice.Value && values != null && values.includes(filters[category].filterValue))) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n","<div class=\"card sq-facet\">\n    <div class=\"card-header\">{{'msg#preview.highlightsTitle' | sqMessage}}</div>\n    <ng-container *ngIf=\"noData; else normalCase\">\n        <div class=\"card-body noEntityToHighlightMessage\">\n            {{\"msg#preview.noEntityToHighlight\" | sqMessage}}\n        </div>\n    </ng-container>\n    <ng-template #normalCase>\n        <div class=\"card-body\">\n            <div class=\"currentSelection\">\n                <div class=\"selectedHighlightTitle\">{{\"msg#preview.selectedHighlight\" | sqMessage}}:</div>\n                <div class=\"currentSelectionPanel\">\n                    <div *ngIf=\"currentValue || currentCategories; else noSelection\" class=\"selectedHighlight\">\n                        <div class=\"currentCategories\">\n                            <span *ngFor=\"let categoryId of currentCategories\">\n                                <span class=\"fas fa-bullseye {{ categoryIconClass(categoryId) }} {{ categoryId }}\"></span>\n                                <span class=\"currentCategoryLabel\">{{categoryDisplayLabel(categoryId) | sqMessage: categoryLabelPipeParams(categoryId)}}</span>\n                            </span>\n                        </div>\n                        <div class=\"selectedHighlightValue\" [innerHTML]=\"currentValue\"></div>\n                    </div>\n                    <ng-template #noSelection>\n                        <div class=\"noSelectionMessage\">\n                            {{\"msg#preview.noSelectedHighlight\" | sqMessage}}\n                        </div>\n                        <div>&nbsp;</div>\n                    </ng-template>\n                </div>\n            </div>\n            <div class=\"navigation-buttons\">\n                <button class=\"btn btn-secondary\" [disabled]=\"!previewReady\" (click)=\"first()\" title=\"{{'msg#preview.firstHighlightButtonAltText' | sqMessage}}\">\n                    <span class=\"fas fa-fast-backward\"></span>\n                </button>\n                <button class=\"btn btn-secondary\" [disabled]=\"!previewReady\" (click)=\"previous()\" title=\"{{'msg#preview.previousHighlightButtonAltText' | sqMessage}}\">\n                    <span class=\"fas fa-step-backward\"></span>\n                </button>\n                <div class=\"counter-container\">\n                    <span class=\"counter\">{{current | sqNumber}} / {{total | sqNumber}}</span>\n                    <span class=\"counter ghost\">{{total | sqNumber}} / {{total | sqNumber}}</span>\n                </div>\n                <button class=\"btn btn-secondary\" [disabled]=\"!previewReady\" (click)=\"next()\" title=\"{{'msg#preview.nextHighlightButtonAltText' | sqMessage}}\">\n                    <span class=\"fas fa-step-forward\"></span>\n                </button>\n                <button class=\"btn btn-secondary\" [disabled]=\"!previewReady\" (click)=\"last()\" title=\"{{'msg#preview.lastHighlightButtonAltText' | sqMessage}}\">\n                    <span class=\"fas fa-fast-forward\"></span>\n                </button>\n            </div>\n        </div>\n        <div class=\"card-body filterPanel\">\n            <div class=\"filterPanelTitle\">\n                <span class=\"fas fa-filter\"></span>{{ \"msg#preview.highlightFilters.title\" | sqMessage }}\n            </div>\n            <div class=\"batchSelectButtonsContainer\" *ngIf=\"nonEmptyCategoryIds.length > 1\">\n                <div class=\"batchSelectButtonsPaddingPlaceholder\"></div>\n                <div class=\"batchSelectButtonsPaddingPlaceholder\"></div>\n                <div class=\"batchSelectButtons\">\n                    <div class=\"batchSelectButton\">\n                        <button class=\"btn\" [disabled]=\"!previewReady || this.allSelected\" (click)=\"selectAll()\"\n                                title=\"{{'msg#preview.highlightFilters.keepAll' | sqMessage}}\">\n                            <span class=\"far fa-check-square\"></span>\n                            {{\"msg#preview.highlightFilters.keepAll\" | sqMessage}}\n                        </button>\n                    </div>\n                    <div class=\"batchSelectButton\">\n                        <button class=\"btn\" [disabled]=\"!previewReady || this.noneSelected\" (click)=\"selectNone()\"\n                                title=\"{{'msg#preview.highlightFilters.keepNone' | sqMessage}}\">\n                            <span class=\"fas fa-times\"></span>\n                            {{\"msg#preview.highlightFilters.keepNone\" | sqMessage}}\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"filters\">\n                <div *ngFor=\"let categoryId of nonEmptyCategoryIds\" class=\"sq-highlight\">\n                    <div class=\"categoryIcon\">\n                        <span class=\"fas fa-bullseye {{ categoryIconClass(categoryId) }} {{ categoryId }}\"></span>\n                    </div>\n                    <div class=\"categoryLabel\">\n                        {{getCategoryHighlightData(categoryId)?.categoryDisplayLabelPlural | sqMessage: categoryLabelPipeParams(categoryId)}}:\n                    </div>\n                    <div class=\"categoryFilter\">\n                        <ng-container *ngIf=\"categoryHasMultipleValues(categoryId); else singleValue\">\n                            <select class=\"custom-select\" [(ngModel)]=\"navigationState.filters[categoryId]\" [compareWith]=\"compareFilters\" (ngModelChange)=\"selectFilter(categoryId, $event)\">\n                                <option [ngValue]=\"keepAllFilter\">{{getCategoryHighlightData(categoryId)?.categoryFilterAllLabel | sqMessage}} ({{getHighlightValueCount(categoryId) | sqNumber}})</option>\n                                <option [ngValue]=\"keepNoneFilter\">{{getCategoryHighlightData(categoryId)?.categoryFilterNoneLabel | sqMessage}}</option>\n                                <option class=\"selectSeparator\" disabled>&nbsp;</option>\n                                <option *ngFor=\"let entityValue of this.getCategoryHighlightData(categoryId)?.values\" [ngValue]=\"newFilter(entityValue.value)\">{{entityValue.displayValue}}</option>\n                            </select>\n                        </ng-container>\n                        <ng-template #singleValue>\n                            <select class=\"custom-select\" [(ngModel)]=\"navigationState.filters[categoryId]\" [compareWith]=\"compareFilters\" (ngModelChange)=\"selectFilter(categoryId, $event)\">\n                                <option [ngValue]=\"keepAllFilter\">\n                                    {{getCategoryHighlightData(categoryId)?.categoryFilterAllLabel | sqMessage}}\n                                    <ng-container *ngIf=\"getCategoryHighlightData(categoryId)?.values[0].displayValue as displayValue\">\n                                        ({{displayValue}})\n                                    </ng-container>\n                                </option>\n                                <option [ngValue]=\"keepNoneFilter\">{{getCategoryHighlightData(categoryId)?.categoryFilterNoneLabel | sqMessage}}</option>\n                            </select>\n                        </ng-template>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </ng-template>\n</div>","import {Injectable, Inject} from \"@angular/core\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {flatMap} from \"rxjs/operators\";\nimport {OauthService, SharedService, PopupService, ConfigService} from \"ng2-ui-auth\";\nimport {START_CONFIG, StartConfig} from \"@sinequa/core/web-services\";\nimport {Utils} from \"@sinequa/core/base\";\n\n/**\n * Override ng2-ui-auth's state handling to retrieve a state from the Sinequa server\n */\n@Injectable({\n    providedIn: \"root\"\n})\nexport class AuthenticationOauthService extends OauthService {\n    constructor(\n        @Inject(START_CONFIG) protected startConfig: StartConfig,\n        protected httpClient: HttpClient,\n        protected sharedService: SharedService,\n        protected popupService: PopupService,\n        protected configService: ConfigService) {\n        super(httpClient, sharedService, configService, popupService);\n    }\n\n    authenticate<T extends object | string>(name: string, userData: any): Observable<T> {\n        const options = this.configService.options.providers[name];\n        if (options.sqInitState) {\n            return this.httpClient.get<{state: string}>(Utils.addUrl(this.startConfig.apiPath!, \"oauth\"), {\n                params: Utils.makeHttpParams({\n                    action: \"initstate\",\n                    provider: options.name,\n                    tokenInCookie: true,\n                    loginInPopup: true,\n                    noUserOverride: true,\n                    noAutoAuthentication: true\n                })\n            }).pipe<T>(flatMap<{state: string}, Observable<T>>((ret) => {\n                options.state = ret.state;\n                return super.authenticate(name, userData);\n            }));\n        }\n        return super.authenticate(name, userData);\n    }\n}\n","export * from \"./baskets.service\";\nexport * from \"./bootstrap/index\";\nexport * from \"./messages/index\";","export default {\n    \"facet\": {\n        \"showFacetTextView\": \"Show text\",\n        \"showFacetChartView\": \"Show chart\",\n        \"itemExclude\": \"Exclude\",\n        \"applyFilters\": \"{selections, plural, one {Apply filter} other {Apply filters}}\",\n        \"clearFilters\": \"{selected, plural, one {Clear filter} other {Clear filters}}\",\n        \"loadMore\": \"Load more\",\n        \"showMore\": \"Show more\",\n        \"showLess\": \"Show less\",\n        \"displayed\": \"Displayed\",\n        \"removeAll\": \"Remove all\",\n        \"searchPlaceholder\": \"Search...\",\n        \"itemSelect\": \"Select this value\",\n        \"itemUnselect\": \"Unselect this value\",\n        \"filterItem\": \"Keep documents with {terme}\",\n        \"filterItems\" : \"Keep documents with ANY of the selected items\",\n        \"filterItemsAnd\": \"Keep documents with ALL the selected items\",\n        \"excludeItems\" : \"Exclude document with selected items\",\n        \"clearSelects\" : \"Clear the current filters\",\n        \"searchItems\" : \"Search for a value in this list\",\n        \"searchNoResult\": \"No results\",\n        \"openItem\": \"Open\",\n        \"closeItem\": \"Close\",\n        \"authors\": {\n            \"title\": \"Authors\"\n        },\n        \"concepts\": {\n            \"title\": \"Concepts\"\n        },\n        \"company\": {\n            \"title\": \"Companies\"\n        },\n        \"docformat\": {\n            \"title\": \"Formats\"\n        },\n        \"doctype\": {\n            \"title\": \"Document Types\"\n        },\n        \"documentlanguages\": {\n            \"title\": \"Languages\"\n        },\n        \"fileext\": {\n            \"title\": \"File Extensions\"\n        },\n        \"filename\": {\n            \"title\": \"Filenames\"\n        },\n        \"geo\": {\n            \"title\": \"Places\"\n        },\n        \"matchingpartnames\": {\n            \"title\": \"Matching Partnames\"\n        },\n        \"modified\": {\n            \"title\": \"Dates\"\n        },\n        \"person\": {\n            \"title\": \"People\"\n        },\n        \"refine\": {\n            \"title\": \"Refine Search\",\n            \"input\": {\n                \"label\": \"Refine\",\n                \"buttonTitle\": \"Refine\",\n                \"placeholder\": \"Refine by...\"\n            }\n        },\n        \"size\": {\n            \"title\": \"Sizes\"\n        },\n        \"tagcloud\": {\n            \"title\": \"Tag Cloud\"\n        },\n        \"title\": {\n            \"title\": \"Titles\"\n        },\n        \"treepath\": {\n            \"title\": \"Sources\"\n        },\n        \"recentQueries\": {\n            \"title\": \"Recent queries\"\n        },\n        \"recentQueriesPublic\": {\n            \"title\": \"Public recent queries\"\n        },\n        \"mySearch\": {\n            \"title\": \"My Search\",\n            \"itemRemove\": \"Remove\"\n        },\n        \"search\": {\n            \"label\": \"Search\",\n            \"buttonTitle\": \"Search\",\n            \"placeholder\": \"Search...\",\n            \"showSearchForm\": \"Show search form\",\n            \"hideSearchForm\": \"Hide search form\"\n        },\n        \"range\": {\n            \"year\": \"{date, date, sqYear}\",\n            \"monthYear\": \"{date, date, sqMonthYear}\",\n            \"weekYear\": \"W{week, number, sqWeek} {weekYear, number, sqYear}\",\n            \"apply\": \"Apply\",\n            \"clear\": \"Clear\",\n            \"unavailable\": \"No available range\"\n        },\n\n        \"filters\":{\n            \"add\":\"Add facet\",\n            \"addAll\": \"Add all facets\",\n            \"remove\":\"Remove facet\",\n            \"removeAll\": \"Remove all facets\",\n            \"clear\":\"Clear filter\",\n            \"moreFilters\":\"\",\n            \"showFilters\":\"Show filters\",\n            \"hideFilters\":\"Hide filters\",\n\n            \"back\": \"Back to filters\",\n            \"selectedFilters\": \"This filter is active in the current query\",\n\n            \"customizeFacets\": \"Select facets to display or hide\"\n        },\n\n        \"selectedValue\": \"This value is selected in the current query\",\n        \"previous\": \"Previous\",\n        \"next\": \"Next\",\n        \"filterItemCountTooltip\": \"{count} possible values for this filter\",\n    },\n\n    \"facetCard\": {\n        \"expand\": \"Expand\",\n        \"collapse\": \"Collapse\",\n        \"enlarge\": \"Enlarge\",\n        \"reduce\": \"Reduce\",\n        \"openSettings\": \"Open settings\",\n        \"saveSettings\": \"Save settings\"\n    }\n};\n","import {Component, Input, Output, HostBinding, OnChanges, SimpleChanges, EventEmitter} from \"@angular/core\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {AppService, FormatService, ValueItem} from \"@sinequa/core/app-utils\";\nimport {Record, EntityItem, DocumentAccessLists, CCColumn} from \"@sinequa/core/web-services\";\nimport {FacetService} from \"@sinequa/components/facet\";\n\nexport interface TreeValueItem extends ValueItem {\n    parts: ValueItem[];\n}\n\n@Component({\n    selector: \"sq-metadata-item\",\n    templateUrl: \"./metadata-item.html\",\n    styleUrls: ['./metadata-item.scss']\n})\nexport class MetadataItem implements OnChanges {\n    @Input() record: Record;\n    @Input() item: string;\n    @Input() showTitle = true;\n    @Input() showIcon: boolean = false;\n    @Input() showCounts: boolean = true;\n    @Input() clickable: boolean = true;\n    @Input() tabular: boolean = true;\n    @Input() collapseRows: boolean = true;\n    @Output(\"select\") _select = new EventEmitter<{item: string, valueItem: ValueItem}>();\n    @HostBinding('hidden') get hidden(): boolean { return this.isEmpty; }\n    valueItems: (ValueItem | TreeValueItem)[];\n    column: CCColumn | undefined;\n    isTree: boolean;\n    isEntity: boolean;\n    isCsv: boolean;\n    itemLabelMessageParams: any;\n    collapsed: boolean;\n    needsCollapse: boolean = false;\n\n    constructor(\n        public appService: AppService,\n        public formatService: FormatService) {\n        this.valueItems = [];\n    }\n\n    ensureScalarValue(value: any): any {\n        if (Utils.isEmpty(value) && this.column) {\n            if (AppService.isBoolean(this.column)) {\n                value = 'msg#metadata.item.empty_boolean';\n            }\n            else if (AppService.isNumber(this.column)) {\n                value = 'msg#metadata.item.empty_number';\n            }\n        }\n        return value;\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (!this.column) {\n            this.column = this.appService.getColumn(this.item);\n            this.itemLabelMessageParams = {values: {label: this.label}};\n        }\n        this.valueItems = [];\n        this.isTree = !!this.column && AppService.isTree(this.column);\n        this.isEntity = !!this.column && AppService.isEntity(this.column);\n        this.isCsv = !!this.column && AppService.isCsv(this.column);\n        const values = this.record[this.appService.getColumnAlias(this.column, this.item)];\n        if (this.isTree) {\n            const paths: string[] = values;\n            if (paths) {\n                for (const path of paths) {\n                    const parts = path.split(\"/\");\n                    if (parts.length > 0 && parts[0] === \"\") {\n                        parts.splice(0, 1);\n                    }\n                    if (parts.length > 0 && parts[parts.length - 1] === \"\") {\n                        parts.splice(parts.length - 1, 1);\n                    }\n                    const item: TreeValueItem = {value: path, parts: parts.map(value => ({value: value}))};\n                    this.valueItems.push(item);\n                }\n            }\n        }\n        else if (this.isEntity) {\n            const entityItems: EntityItem[] = values;\n            if (entityItems) {\n                this.valueItems.push(...entityItems);\n            }\n        }\n        else if (this.isCsv) {\n            if (values && values instanceof Array) {\n                this.valueItems.push(...values.map<ValueItem>(value => ({value: value})));\n            }\n            else if (!Utils.isEmpty(values)) {\n                this.valueItems.push({value: values});\n            }\n        }\n        else {\n            const value = this.ensureScalarValue(values);\n            if (!Utils.isEmpty(value)) {\n                this.valueItems.push({value: value});\n            }\n        }\n        \n        const collapsable = (this.isEntity || this.isCsv) && !this.isTree; // Tree columns are multivalues, and therefore isCsv=true\n        if (changes.collapseRows || this.collapsed === undefined) {\n            this.collapsed = collapsable && this.collapseRows;\n        }\n        this.needsCollapse = collapsable && this.collapseRows && this.tabular && this.valueItems.length > 1; // We display the collapse button as soon as the number of values is >1 which does not take into account the actualy width of each value...\n    }\n\n    public get isEmpty(): boolean {\n        if (!this.item) {\n            return true;\n        }\n        if (this.item === \"accesslists\") {\n            if (!this.record.accesslists || !this.record.accesslists.accessListIndices\n                || this.record.accesslists.accessListIndices.length === 0) {\n                return true;\n            }\n        }\n        else {\n            if (this.valueItems.length === 0) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    public get itemClasses(): string {\n        let classes = \"sq-text\";\n        if (this.clickable) {\n            classes += \" sq-clickable\";\n        }\n        if (this.tabular) {\n            classes += \" sq-tabular\";\n        }\n        return classes;\n    }\n\n    public get label(): string {\n        return this.appService.getLabel(this.item);\n    }\n\n    public get isAccessLists(): boolean {\n        return this.item === \"accesslists\";\n    }\n\n    public get accessListsData(): DocumentAccessLists {\n        return this.record.accesslists;\n    }\n\n    public get docFormatIconClass(): string {\n        if (this.item == null || this.item !== \"docformat\" && this.item !== \"fileext\") {\n            return \"\";\n        }\n        const value: string = this.record[this.item];\n        if (!value) {\n            return \"far fa-file\";\n        }\n        return \"far fa-file sq-icon-file-\" + value;\n    }\n\n    select(index: number, subIndex = 0) {\n        if (this.isTree) {\n            const valueItem = <TreeValueItem>this.valueItems[index];\n            const parts = valueItem.parts.map((item) => item.value).slice(0, subIndex + 1);\n            if (parts.length > 0) {\n                parts.unshift(\"\");\n                parts.push(\"\");\n            }\n            const path = parts.join(\"/\");\n            this._select.emit({item: this.item, valueItem: {value: path + \"*\", display: FacetService.treepathLast(path)}});\n        }\n        else {\n            this._select.emit({item: this.item, valueItem: this.valueItems[index]});\n        }\n        return false; // prevent default\n    }\n\n    toggleCollapse() {\n        this.collapsed = !this.collapsed;\n        return false;\n    }\n}\n","<div *ngIf=\"!isEmpty\" class=\"sq-metadata-item {{itemClasses}}\">\n    <!-- Icon -->\n    <span *ngIf=\"showIcon && !!item\" class=\"sq-metadata-item-icon sq-icon-{{item}} {{docFormatIconClass}} fa-fw pr-2\"\n        [title]=\"label | sqMessage\">\n    </span>\n\n    <!-- Label (title)-->\n    <span *ngIf=\"showTitle && !!item\" class=\"sq-metadata-item-label pr-2\">{{'msg#metadata.item.label' | sqMessage:itemLabelMessageParams}}</span>\n    \n    <span class=\"sq-metadata-item-values\" [ngClass]=\"{collapsed: !!collapsed}\" #values>\n        <!-- Collapse button -->\n        <a *ngIf=\"collapseRows && needsCollapse\" href=\"#\" (click)=\"toggleCollapse()\" class=\"collapse-button mr-1\">\n            <i class=\"fas fa-fw fa-chevron-{{collapsed? 'right' : 'down'}}\"></i>\n        </a>\n        \n        <!-- Access list metadata -->\n        <sq-metadata-access-lists-item *ngIf=\"isAccessLists; else default\" [accessLists]=\"accessListsData\">\n        </sq-metadata-access-lists-item>\n\n        <!-- Other types of metadata -->\n        <ng-template #default>\n            <ng-container *ngIf=\"isTree; else isNotTree\">\n                <!-- Tree (displayed as breadcrumbs)-->\n                <ng-container *ngFor=\"let valueItem of valueItems; let $index = index\">\n                    <ol class=\"breadcrumb\" *ngIf=\"!!valueItem.parts && valueItem.parts.length > 0\">\n                        <li *ngFor=\"let part of valueItem.parts; let $subIndex = index\">\n                            <a    *ngIf=\"clickable\"  class=\"badge badge-pill\" [ngClass]=\"'sq-metadata-item-' + item\" href=\"#\" (click)=\"select($index, $subIndex)\">{{part | sqValue:column}}</a>\n                            <span *ngIf=\"!clickable\" [ngClass]=\"'sq-metadata-item-' + item\">{{part | sqValue:column}}</span>\n                            <span *ngIf=\"$subIndex < valueItem.parts.length - 1\" class=\"sq-metadata-item-tree-node-separator\">{{'msg#metadata.item.treeNodeSeparator' | sqMessage}}</span>\n                        </li>\n                    </ol>\n                    <span *ngIf=\"$index < valueItems.length - 1\" class=\"sq-metadata-item-tree-separator\">{{'msg#metadata.item.treeSeparator' | sqMessage}}</span>\n                </ng-container>\n            </ng-container>\n\n            <!-- Not a Tree-->\n            <ng-template #isNotTree>\n                <ng-container *ngIf=\"clickable; else notTreeNonClickable\">\n                    <!-- Clickable -->\n                    <a  *ngFor=\"let valueItem of valueItems; let $index = index\"\n                        class=\"badge badge-pill {{'sq-metadata-item-' + item}} mr-1\"\n                        href=\"#\"\n                        (click)=\"select($index)\"\n                        [attr.title]=\"showTitle? null : (label | sqMessage)\">{{valueItem | sqValue:column}}\n                        <span *ngIf=\"showCounts && valueItem.count\"\n                            class=\"counter badge badge-light ml-1\"\n                            [title]=\"valueItem.count + ' occurrences in document'\">{{valueItem.count}}</span>\n                    </a>\n                </ng-container>\n                <ng-template #notTreeNonClickable>\n                    <!-- Not clickable-->\n                    <ng-container *ngFor=\"let valueItem of valueItems; let $index = index\">\n                        <span class=\"{{'sq-metadata-item-' + item}}\"\n                            [attr.title]=\"showTitle? null : (label | sqMessage)\">{{valueItem | sqValue:column}}\n                            <span *ngIf=\"showCounts && valueItem.count\"\n                                class=\"small\"\n                                [title]=\"valueItem.count + ' occurrences in document'\">({{valueItem.count}})</span>\n                        </span>\n                        <span *ngIf=\"$index < valueItems.length - 1\" class=\"sq-metadata-item-list-separator\">{{'msg#metadata.item.listSeparator' | sqMessage}}</span>\n                    </ng-container>\n                </ng-template>\n            </ng-template>\n        </ng-template>\n    </span>\n    <ng-content></ng-content>\n</div>","import { ElementRef } from \"@angular/core\";\n\nimport { Utils } from \"@sinequa/core/base\";\n\nexport enum HighlightCategoryFilterChoice {\n    All, None, Value\n}\n\nexport interface HighlightCategoryFilterState {\n    choice: HighlightCategoryFilterChoice;\n    filterValue: string;\n}\n\nexport type HighlightFilters = { [key: string]: HighlightCategoryFilterState } | string[];\n\n// forEach on a NodeList is polyfilled for IE but not at all necessarily when the list comes from a document\n// in another frame. This function is used to perform the forEach taking this into account.\nfunction forEach<T extends Node>(nodeList: NodeListOf<T>, callbackfn: (value: T, key: number, parent: NodeListOf<T> | T[]) => void): void {\n    if (!nodeList.forEach) {\n        Array.from(nodeList).forEach(callbackfn);\n    }\n    else {\n        nodeList.forEach(callbackfn);\n    }\n}\n\n/**\n * This class offers an API to manipulate the HTML of a preview document.\n * - Insert elements dynamically in the DOM of the preview (eg. tooltips)\n * - Retrieve the text of entities or extracts\n * - Select the elements of entities or extracts (by altering their CSS classes)\n * - Highlight (or not) specific entities or categories in the HTML (by altering their CSS classes)\n */\nexport class PreviewDocument {\n\n    private static readonly SELECTED_HIGHLIGHT_CLASS: string = \"sq-current\";\n    private static readonly SELECTED_HIGHLIGHT_FIRST_FRAGMENT_CLASS: string = \"sq-first\";\n    private static readonly SELECTED_HIGHLIGHT_LAST_FRAGMENT_CLASS: string = \"sq-last\";\n    private static readonly FILTERED_OUT_HIGHLIGHT_CLASS: string = \"sq-inactive\";\n    private static readonly SVG_LINE_CLASS: string = \"sq-svg\";\n\n    private static readonly BASIC_ENTITY_DISPLAY_ELEMENT_ATTRIBUTE = \"data-entity-basic\";\n    private static readonly ADVANCED_ENTITY_DISPLAY_ELEMENT_ATTRIBUTE = \"data-entity-display\";\n\n    private readonly _window: Window;\n    private readonly _document: Document;\n    \n    private previousElement: HTMLElement | null;\n    \n    constructor(element: ElementRef | Document){\n        if (element instanceof ElementRef) {\n            this._window = element?.nativeElement?.contentWindow;\n            if (this._window?.frames && this._window.frames[\"frSheet\"]) {\n                this._window = this._window.frames[\"frSheet\"];  // aspose xls preview\n            }\n        } else {\n            this._document = element;\n        }\n    }\n\n\n    // PUBLIC METHODS\n\n    /**\n     * Return the Window of the iframe containing the element\n     */\n    public getContentWindow(): Window {\n        return this._window;\n    }\n\n    /**\n     * Returns the root Document element of the HTML Preview\n     */\n    public get document(): Document {\n        return this._document || this._window.document;\n    }\n\n    /**\n     * Insert a given DOM Element in the body of the document preview\n     * @param component\n     */\n    public insertComponent(component){\n        this.document.body.appendChild(component);\n    }\n\n    /**\n     * Returns the text of a given entity\n     * @param categoryId Category of the entity\n     * @param index Index of the entity in that category\n     */\n    public getHighlightText(categoryId: string, index: number) : string {\n        if (index < 0) {\n            return \"\";\n        }\n        const nodes = this.document.querySelectorAll(\"#\"+categoryId + \"_\" + index);\n        if (!nodes || nodes.length === 0) {\n            return \"\";\n        }\n        let text = \"\";\n        forEach(nodes, n => text += (n['innerHTML'] || n.textContent));\n        return text;\n    }\n\n    /**\n     * Update the location of the entities' SVG background (for some converters)\n     */\n    public setSvgBackgroundPositionAndSize(): void {\n        const svgList: NodeListOf<Element> = this.document.querySelectorAll(\"svg\");\n        if (svgList != null) {\n            for (let i = 0, ic = svgList.length; i < ic; i++) {\n                const svg = svgList.item(i);\n                const tspanList: HTMLCollectionOf<SVGTSpanElement> = svg.getElementsByTagName(\"tspan\");\n                if (tspanList != null) {\n                    for (let j = 0, jc = tspanList.length; j < jc; j++) {\n                        const tspan = tspanList.item(j);\n                        if (tspan) {\n                            const bgId = tspan.getAttribute(\"data-entity-background\");\n                            if (bgId) {\n                                const rect = this.getFirst(this.getDocElements(bgId));\n                                if (rect) {\n                                    this.resizeSvgBackground(rect, tspan);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Select a specific entity by applying specific highlight classes\n     * to the DOM elements and scrolling the view to center around them.\n     * @param categoryId Category of the entity\n     * @param index Index of the entity in that category\n     */\n    public selectHighlight(categoryId: string, index: number) : void {\n        \n        this.clearHighlightSelection();\n        // current element becomes previous element\n        this.previousElement = this.document.getElementById(categoryId + '_' + index);\n        \n        if (this.previousElement) {\n            // highlight new selected element\n            this.setHighlightSelection(this.previousElement,true, true);\n            this.previousElement.scrollIntoView({block: 'center'});\n        }\n    }\n\n    /**\n     * Removes all entity selection classes from the document HTML elements\n     */\n    public clearHighlightSelection(): void {\n        // Clear HTML elements borders\n        if (this.previousElement) {\n            this.previousElement.classList.remove(PreviewDocument.SELECTED_HIGHLIGHT_CLASS);\n        }\n        // Clear SVG elements borders\n        const elements: NodeListOf<Element> = this.document.querySelectorAll(\"line.sq-svg\");\n        for (let i = 0; i < elements.length; i++) {\n            const parentNode = elements[i].parentNode;\n            if (parentNode) {\n                parentNode.removeChild(elements[i]);\n            }\n        }\n    }\n\n    /**\n     * Turns highlights on or off based on the provided filter object. Additionally clears the selected entity\n     * @param filters object where each key provides a filter for each category of entity/highlight\n     */\n    public filterHighlights(filters: HighlightFilters){\n\n        this.updateHighlightFilterState(filters);\n        this.clearHighlightSelection();\n    }\n\n    /**\n     * Loop through every highlighted element in the document and turn highlights on or off based on the filters object.\n     * If the filters object is an array then only the specified categories are highlighted.\n     * @param filters object where each key provides a filter for each category of entity/highlight\n     */\n    public updateHighlightFilterState(filters: HighlightFilters): void {\n        const elements = this.document.querySelectorAll(\"[data-entity-display], .extractslocations, .matchlocations\");\n        if (Utils.isArray(filters)) {\n            forEach<Element>(elements, element => {\n                const highlight = filters.some(category => element.classList.contains(category));\n                if (highlight) {\n                    element.classList.remove(PreviewDocument.FILTERED_OUT_HIGHLIGHT_CLASS);\n                }\n                else {\n                    element.classList.add(PreviewDocument.FILTERED_OUT_HIGHLIGHT_CLASS);\n                }\n            });\n        }\n        else {\n            forEach(elements, element => {\n                if (PreviewDocument.elementIsFilteredOut(element, filters)) {\n                    element.classList.add(PreviewDocument.FILTERED_OUT_HIGHLIGHT_CLASS);\n                }\n                else {\n                    element.classList.remove(PreviewDocument.FILTERED_OUT_HIGHLIGHT_CLASS);\n                }\n            });\n        }\n    }\n\n    /**\n     * Turns on/off the highlights of one category of entities or a specific value if provided\n     * @param category e.g. person\n     * @param on true for highlighting / false for turning off\n     * @param value e.g. \"BILL GATES\"\n     */\n    public toggleHighlight(category: string, on: boolean, value?: string) {\n        const elements = this.document.querySelectorAll(\".\"+category);\n        forEach(elements, element => {\n            if(!value\n                || (element.hasAttribute(PreviewDocument.BASIC_ENTITY_DISPLAY_ELEMENT_ATTRIBUTE) && value === element.getAttribute(PreviewDocument.BASIC_ENTITY_DISPLAY_ELEMENT_ATTRIBUTE))\n                || (element.hasAttribute(PreviewDocument.ADVANCED_ENTITY_DISPLAY_ELEMENT_ATTRIBUTE) && value === element.getAttribute(PreviewDocument.ADVANCED_ENTITY_DISPLAY_ELEMENT_ATTRIBUTE))) {\n\n                if(on){\n                    element.classList.remove(PreviewDocument.FILTERED_OUT_HIGHLIGHT_CLASS);\n                }\n                else{\n                    element.classList.add(PreviewDocument.FILTERED_OUT_HIGHLIGHT_CLASS);\n                }\n            }\n        });\n    }\n\n    // PRIVATE METHODS\n\n    private setHighlightSelection(elt: Element, isFirst: boolean, isLast: boolean): void {\n        if (this.isSvgElement(elt)) {\n            this.setHighlightSelectionSVG(elt, isFirst, isLast);\n        }\n        else {\n            this.setHighlightSelectionHTML(elt, isFirst, isLast);\n        }\n    }\n\n    private setHighlightSelectionHTML(elt: Element, isFirst: boolean, isLast: boolean): void {\n        elt.classList.add(PreviewDocument.SELECTED_HIGHLIGHT_CLASS);\n        if (isFirst) {\n            elt.classList.add(PreviewDocument.SELECTED_HIGHLIGHT_FIRST_FRAGMENT_CLASS);\n        }\n        if (isLast) {\n            elt.classList.add(PreviewDocument.SELECTED_HIGHLIGHT_LAST_FRAGMENT_CLASS);\n        }\n    }\n\n    private setHighlightSelectionSVG(elt: Element, isFirst: boolean, isLast: boolean): void {\n        const bgId = elt.getAttribute(\"data-entity-background\");\n        if (!bgId) return;\n        const rect: SVGRectElement = <SVGRectElement>this.getFirst(this.getDocElements(bgId));\n        const group = rect.parentNode;\n        const rectPosition = rect.getBBox();\n\n        if (group) {\n            const top = rectPosition.y;\n            const bottom = rectPosition.y + rectPosition.height;\n            const left = rectPosition.x;\n            const right = rectPosition.x + rectPosition.width;\n            const valueTransform = rect.getAttribute(\"transform\");\n            this.addSvgLine(group, left, top   , right, top   , valueTransform);\n            this.addSvgLine(group, left, bottom, right, bottom, valueTransform);\n            if (isFirst) this.addSvgLine(group, left , top, left , bottom, valueTransform);\n            if (isLast)  this.addSvgLine(group, right, top, right, bottom, valueTransform);\n        }\n    }\n\n    private addSvgLine(group: Node, x1: number, y1: number, x2: number, y2: number, transform: string | null): void {\n        const line: Element = this.document.createElementNS(\"http://www.w3.org/2000/svg\",\"line\");\n        line.setAttribute(\"class\", PreviewDocument.SVG_LINE_CLASS);\n        line.setAttribute(\"x1\", String(x1));\n        line.setAttribute(\"y1\", String(y1));\n        line.setAttribute(\"x2\", String(x2));\n        line.setAttribute(\"y2\", String(y2));\n        if (transform) line.setAttribute(\"transform\", transform);\n        group.appendChild(line);\n    }\n\n\n    private resizeSvgBackground(rect: Element, tspan: SVGTSpanElement): void {\n        let elt: Element = tspan;\n        while (elt.tagName !== \"text\") {\n            elt = elt.parentNode as Element;\n            if (elt == null) break;\n        }\n        const text: SVGTextElement = elt as SVGTextElement;\n        const textBoxPixel: ClientRect = text.getBoundingClientRect();\n        const textBoxSVG: SVGRect = text.getBBox();\n        if (textBoxPixel.height === 0 || textBoxPixel.width === 0) return;\n        const scaleX = textBoxSVG.width / textBoxPixel.width;\n        const scaleY = textBoxSVG.height / textBoxPixel.height;\n        const deltaX = 2 * scaleX;\n        const deltaY = 2 * scaleY;\n\n        const firstCharRect = tspan.getExtentOfChar(0);\n        const tspanWidth = tspan.getComputedTextLength();\n\n        rect.setAttribute(\"x\", String(firstCharRect.x - deltaX));\n        rect.setAttribute(\"y\", String(firstCharRect.y - deltaY));\n        rect.setAttribute(\"width\", String(tspanWidth + 2 * deltaX));\n        rect.setAttribute(\"height\", String(textBoxSVG.height + 2 * deltaY));\n        const valueTransform = text.getAttribute(\"transform\");\n        if (valueTransform) rect.setAttribute(\"transform\", valueTransform);\n    }\n\n    private getDocElements(id: string): Array<Element> {\n        const list = Array<Element>();\n        // Get HTML elements directly by id\n        const eltList: NodeListOf<Element> = this.document.querySelectorAll(\"#\" + id);\n        for (let i = 0; i < eltList.length; i++) {\n            list.push(eltList[i]);\n        }\n        // Get SVG tspan iterating on them (jquery querySelectorAll didn't return SVG inner elements)\n        const svgList: NodeListOf<Element> = this.document.querySelectorAll(\"svg\");\n        if (svgList != null) {\n            for (let i = 0, ic = svgList.length; i < ic; i++) {\n                const svg = svgList.item(i);\n                const tspanList: HTMLCollectionOf<SVGTSpanElement> = svg.getElementsByTagName(\"tspan\");\n                if (tspanList != null) {\n                    for (let j = 0, jc = tspanList.length; j < jc; j++) {\n                        const tspan = tspanList.item(j);\n                        if (tspan) {\n                            if (tspan.id === id) list.push(tspan);\n                        }\n                    }\n                }\n            }\n        }\n        return list;\n    }\n\n    private getFirst(nodes: Array<Element>): Element | null {\n        return (nodes != null && nodes.length > 0) ? nodes[0] : null;\n    }\n\n    private isSvgElement(elt: Element): boolean {\n        if (elt == null) return false;\n        return \"viewportElement\" in <any>elt;\n    }\n\n\n\n    // PRIVATE STATIC (from highlight helper)\n\n\n    private static elementIsFilteredOut(element: Element, filters: {[key: string]: HighlightCategoryFilterState}): boolean {\n        const elementClass: string = this.getElementCategory(element, Object.keys(filters));\n        if (elementClass == null) {\n            return false;\n        }\n        const filterState = filters[elementClass];\n        if (filterState == null) {\n            return false;\n        }\n        if (filterState.choice === HighlightCategoryFilterChoice.None) {\n            return true;\n        }\n        if (filterState.choice === HighlightCategoryFilterChoice.All) {\n            return false;\n        }\n        if (element.hasAttribute(PreviewDocument.BASIC_ENTITY_DISPLAY_ELEMENT_ATTRIBUTE)) {\n            return filterState.filterValue !== element.getAttribute(PreviewDocument.BASIC_ENTITY_DISPLAY_ELEMENT_ATTRIBUTE);\n        }\n        return filterState.filterValue !== element.getAttribute(PreviewDocument.ADVANCED_ENTITY_DISPLAY_ELEMENT_ATTRIBUTE);\n    }\n\n    private static getElementCategory(element: Element, categoryIds: string[]): string {\n        for (const categoryId of categoryIds) {\n            if (element.classList.contains(categoryId)) {\n                return categoryId;\n            }\n        }\n        return \"\";\n    }\n}\n","import { Component, Input, OnChanges, HostBinding } from \"@angular/core\";\nimport { Utils } from \"@sinequa/core/base\";\nimport { Record } from \"@sinequa/core/web-services\";\nimport { LabelsService } from \"./labels.service\";\nimport { AppService } from \"@sinequa/core/app-utils\";\n\n@Component({\n    selector: \"sq-labels\",\n    // We need the two spans to get whitespace between each label\n    // change size by adding h1-6 class to .sq-label div (default is h5)\n    templateUrl: \"./labels.component.html\",\n    styles: [\n        `\n            .sq-labels-public {\n                background-color: #4fc3f7;\n            }\n            .sq-labels-private {\n                background-color: #7283a7;\n            }\n            .sq-label-remove {\n                margin-left: 3px;\n            }\n            .clickable {\n                cursor: pointer;\n            }\n            .clickable:hover {\n                opacity: 85%;\n            }\n        `,\n    ],\n})\nexport class Labels implements OnChanges {\n    @Input() record: Record;\n    @Input() public: boolean;\n    @Input() enableDelete: boolean = false; /** Display the delete button in the label tag */\n\n    protected labelsField: string;\n    showLabels: boolean;\n    labels: string[];\n\n    @HostBinding(\"class\") hostClasses;\n\n    constructor(\n        private appService: AppService,\n        private labelsService: LabelsService\n    ) {}\n\n    ngOnChanges() {\n        const field = this.public\n            ? this.labelsService.publicLabelsField\n            : this.labelsService.privateLabelsField;\n        this.labelsField = this.appService.resolveColumnAlias(field);\n        this.showLabels = !!this.labelsField;\n        this.makeLabels();\n    }\n\n    private makeLabels() {\n        if (!this.showLabels) {\n            this.labels = [];\n            return;\n        }\n        const labels = this.record[this.labelsField];\n        if (Utils.isArray(labels)) {\n            this.labels = this.labelsService.sort(labels.slice(), this.public);\n        } else {\n            this.labels = [];\n        }\n    }\n\n    select(label: string) {\n        if (!this.public) {\n            label = <string>this.labelsService.removePrivatePrefix(label);\n        }\n        this.labelsService.selectLabels([label], this.public);\n    }\n\n    remove(index: number) {\n        if (this.canRemove()) {\n            let label = this.labels[index];\n            if (!this.public) {\n                label = <string>this.labelsService.removePrivatePrefix(label);\n            }\n            this.labelsService.removeLabels(\n                [label],\n                [this.record.id],\n                this.public\n            );\n        }\n    }\n\n    canRemove(): boolean {\n        return this.public\n            ? this.enableDelete &&\n                this.labelsService.allowPublicLabelsManagement &&\n                this.labelsService.userLabelsRights &&\n                this.labelsService.userLabelsRights.canManagePublicLabels\n            : this.enableDelete && true;\n    }\n}\n","<div *ngIf=\"showLabels\" class=\"d-inline\">\n    <span *ngFor=\"let label of labels; let $index = index\" class=\"d-inline\">\n        <div class=\"badge badge-pill badge-info align-self-center mr-1 d-inline\" [ngClass]=\"{'sq-labels-public': public, 'sq-labels-private': !public}\"\n            title=\"{{(public ? 'msg#labels.selectPublicLabelTitle' : 'msg#labels.selectPrivateLabelTitle') | sqMessage}}\">\n            <span (click)=\"select(label)\">{{label | sqLabel:public}}</span>\n            <i class=\"sq-label-remove fas fa-times-circle clickable\" (click)=\"remove($index)\" *ngIf=\"canRemove()\"\n                title=\"{{(public ? 'msg#labels.removePublicLabelTitle' : 'msg#labels.removePrivateLabelTitle') | sqMessage}}\">\n            </i>\n        </div>\n    </span>\n</div>\n","export * from \"./feedback-menu/feedback-menu\";\nexport * from \"./feedback.module\";","import {Component, Inject} from \"@angular/core\";\nimport {MODAL_MODEL, ConfirmOptions, ModalButton} from \"./modal.service\";\nimport {ModalRef} from \"./modal-ref\";\n\n@Component({\n    selector: \"sq-core-confirm\",\n    template: `\n        <div style=\"border: solid;padding: 16px;background-color: white;\" cdkTrapFocus [cdkTrapFocusAutoCapture]=\"true\">\n            <h3 style=\"margin-top: 0;\">{{title | sqMessage}}</h3>\n            <div>{{model.message | sqMessage:model.messageParams}}</div>\n            <hr>\n            <ng-container *ngFor=\"let button of model.buttons\">\n                <button *ngIf=\"button.visible\" type=\"{{button.primary ? 'submit' : 'button'}}\"\n                    (click)=\"buttonClick(button)\">{{button.getText() | sqMessage}}</button>\n            </ng-container>\n        </div>\n    `\n})\nexport class Confirm {\n    constructor(\n        @Inject(MODAL_MODEL) public model: ConfirmOptions,\n        protected modalRef: ModalRef) {\n    }\n\n    get title(): string {\n        return this.model.title ? this.model.title : \"msg#modal.confirm.title\";\n    }\n\n    buttonClick(button: ModalButton) {\n        button.click(this.modalRef);\n    }\n}\n","import {Injectable, Inject} from \"@angular/core\";\r\nimport {Observable} from \"rxjs\";\r\nimport {SqHttpClient} from \"./http-client\";\r\nimport {HttpService} from \"./http.service\";\r\nimport {START_CONFIG, StartConfig} from \"./start-config.web.service\";\r\nimport {IQuery} from \"./query/query\";\r\n\r\nexport interface QueryIntentResponse {\r\n    query: string;\r\n    intents: QueryIntentMatch[];\r\n}\r\n\r\nexport interface QueryIntentMatch {\r\n    /** name of the intent */\r\n    name: string;\r\n    /** global entities that match */\r\n    globalEntities?: QueryIntentEntity2[];\r\n    /** rule that match if exact match rule */\r\n    matchRule: string | null;\r\n    /** ml score or 1 if rule */\r\n    score: number;\r\n    /** ml confidence score or 1 if rule */\r\n    confidence: number;\r\n}\r\n\r\nexport interface QueryIntentEntity2 {\r\n    /** global entity name, eg. \"person\" */\r\n    name: string;\r\n    /** global entity type (entities are detected by classical NLP, slots are detected by ML) */\r\n    type: \"entity\" | \"slot\";\r\n    /** global entity resource */\r\n    resource: string;\r\n    /** text that match the global entity, eg. \"Bill gates\" */\r\n    value: string;\r\n    /** offset in the query */\r\n    offset: number;\r\n    /** length in the query */\r\n    length: number;\r\n    /** basic form if type=entity, eg. \"BILL GATES\"*/\r\n    basic: string | null;\r\n    /** normalization form if type=entity, eg. \"William H Gates\"*/\r\n    normalization: string | null;\r\n    /** score for the extraction if type=slot */\r\n    score?: number;\r\n}\r\n\r\n/**\r\n * A service for calling the queryintent web service\r\n */\r\n@Injectable({\r\n    providedIn: \"root\"\r\n})\r\nexport class QueryIntentWebService extends HttpService {\r\n    private readonly endpoint = \"queryintent\";\r\n\r\n    constructor(\r\n        @Inject(START_CONFIG) startConfig: StartConfig,\r\n        private httpClient: SqHttpClient) {\r\n        super(startConfig);\r\n    }\r\n\r\n    getQueryIntent(query: IQuery): Observable<QueryIntentResponse> {\r\n        const data = {\r\n            query,\r\n            app: this.appName\r\n        };\r\n        return this.httpClient.post<QueryIntentResponse>(\r\n            this.makeUrl(this.endpoint), data);\r\n    }\r\n}\r\n","export * from \"./public-api\";","import {Injectable, Inject} from \"@angular/core\";\nimport {Observable, throwError} from \"rxjs\";\nimport {SqHttpClient} from \"./http-client\";\nimport {HttpService} from \"./http.service\";\nimport {START_CONFIG, StartConfig} from \"./start-config.web.service\";\nimport {IQuery} from \"./query/query\";\nimport {Record} from \"./query.web.service\";\nimport {AuditEvents} from \"./audit.web.service\";\nimport {catchError, distinctUntilChanged, shareReplay} from \"rxjs/operators\";\n\n/**\n * Describes highlight data for a set of categories\n */\nexport interface HighlightDataPerCategory {\n    [key: string] : CategoryHighlightData;\n}\n\n/**\n * Describes highlight data for a category\n */\nexport interface CategoryHighlightData {\n    categoryDisplayLabel: string;\n    categoryDisplayLabelPlural: string;\n    categoryFilterAllLabel: string;\n    categoryFilterNoneLabel: string;\n    values: HighlightValue[];\n}\n\n/**\n * Describes a highlight value\n */\nexport interface HighlightValue {\n    value: string;\n    displayValue: string;\n    locations: Location[];\n}\n\n/**\n * Describes a single highlight location\n */\nexport interface Location {\n    start: number;\n    enclosingLength: number;\n}\n\n/**\n * Describes highlight data for a set of locations\n */\nexport interface HighlightDataPerLocation {\n    [index: number]: {\n        start: number,\n        length: number,\n        values: string[],\n        displayValue: string,\n        positionInCategories: { [category: string]: number }\n    };\n\n    size(): number;\n}\n\n/**\n * Describes the data returned by [PreviewWebService.get]{@link PreviewWebService#get}\n */\nexport interface PreviewData {\n    record: Record;\n    resultId: string;\n    cacheId: string;\n    highlightsPerCategory: HighlightDataPerCategory;\n    highlightsPerLocation: HighlightDataPerLocation;\n    documentCachedContentUrl: string;\n}\n\n/**\n * A service for calling the preview web service\n */\n@Injectable({\n    providedIn: \"root\"\n})\nexport class PreviewWebService extends HttpService {\n\n    constructor(\n        @Inject(START_CONFIG) startConfig: StartConfig,\n        private httpClient: SqHttpClient) {\n        super(startConfig);\n    }\n\n    /**\n     * Gets {@link PreviewData} for a document in the context of a {@link IQuery}\n     *\n     * @param id The document id\n     * @param query The query context\n     * @param auditEvents Audit events to store on the server\n     */\n    public get(id: string, query: IQuery, auditEvents?: AuditEvents): Observable<PreviewData> {\n        return this.httpClient.post<PreviewData>(this.makeUrl(\"preview\"), {\n            app: this.appName,\n            action: \"get\",\n            id,\n            query,\n            browserUrl: this.startConfig.browserUrl,\n            $auditRecord: auditEvents\n        }).pipe(shareReplay(1));\n    }\n    \n    /**\n     * Gets document's preview HTML content\n     * \n     * @param url The document preview URL\n     * @returns \n     */\n    public getHtmlPreview(url: string): Observable<any> {\n        return this.httpClient.get(url, {responseType: \"text\"}).pipe(\n            catchError(err => throwError(err)),\n            distinctUntilChanged(),\n            shareReplay(1)\n        );                \n    }\n}\n","export * from \"./edit-user-settings/edit-user-settings\";\nexport * from \"./user-settings-editor/user-settings-editor\";\nexport * from \"./user-settings.module\";\nexport * from \"./user-menu/user-menu.component\";","import {Inject, Injectable} from '@angular/core';\nimport {Observable, throwError} from \"rxjs\";\nimport {SqHttpClient} from \"./http-client\";\nimport {HttpService} from \"./http.service\";\nimport {START_CONFIG, StartConfig} from \"./start-config.web.service\";\nimport {Utils} from \"@sinequa/core/base\";\n\n/**\n * A generic service for invoking JsonMethod plugins\n */\n@Injectable({\n  providedIn: \"root\"\n})\nexport class JsonMethodPluginService extends HttpService{\n  constructor(\n    public httpClient: SqHttpClient,\n    @Inject(START_CONFIG) startConfig: StartConfig\n    ) {\n      super(startConfig);\n  }\n\n  /**\n   * Call a JsonMethod plugin using an HTTP POST\n   *\n   * @param method The name of the JsonMethod plugin\n   * @param query Parameters to pass to the plugin\n   * @param options HTTP options for the request\n   * @returns An observable of the plugin's return value\n   */\n  post(method: string, query: any, options?: {[key: string]: any}) : Observable<any> {\n    if (!Utils.isObject(query)) {\n      return throwError({error: \"invalid query object\"});\n    }\n    const observable = this.httpClient.post(this.makeUrl(method), query, options);\n\n    Utils.subscribe(observable,\n      (response) => {\n        console.log(\"JsonMethodPluginService.post success - data: \", response);\n      },\n      (error) => {\n        console.log(\"JsonMethodPluginService.post failure - error: \", error);\n      },\n      () => {\n        console.log(\"JsonMethodPluginService.post complete\");\n      });\n\n    return observable;\n  }\n\n  /**\n   * Call a JsonMethod plugin using an HTTP POST\n   *\n   * @param method The name of the JsonMethod plugin\n   * @param query Parameters to pass to the plugin\n   * @param options HTTP options for the request\n   * @returns An observable of the plugin's return value\n   */\n  call(method: string, query: any, options?: {[key: string]: any}): Observable<any> {\n    return this.post(method, query, options);\n  }\n\n  /**\n   * Call a JsonMethod plugin using an HTTP GET\n   *\n   * @param method The name of the JsonMethod plugin\n   * @param query Parameters to pass to the plugin\n   * @param options HTTP options for the request\n   * @returns An observable of the plugin's return value\n   */\n  get(method: string, query: any, options?: {[key: string]: any}): Observable<any> {\n    const observable = this.httpClient.get(this.makeUrl(method), {\n      params: this.makeParams(query),\n      ...options\n    });\n\n    Utils.subscribe(observable,\n      (response) => {\n        console.log(\"JsonMethodPluginService.get success - data: \", response);\n      },\n      (error) => {\n        console.log(\"JsonMethodPluginService.get failure - error: \", error);\n      },\n      () => {\n        console.log(\"JsonMethodPluginService.get complete\");\n      });\n\n    return observable;\n  }\n\n  makeUrl(api: string): string {\n    return super.makeUrl('plugin/' + api);\n  }\n}","import {LocaleData} from \"@sinequa/core/intl\";\nimport \"moment/locale/de\";\nimport d3Format from \"d3-format/locale/de-DE.json\";\nimport d3Time from \"d3-time-format/locale/de-DE.json\";\nimport {deCore} from \"@sinequa/core\";\nimport appMessages from \"./messages/de.json\";\nimport \"intl/locale-data/jsonp/de-DE\"; // Safari\nimport \"@formatjs/intl-relativetimeformat/dist/locale-data/de\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {deUtils} from \"@sinequa/components/utils\";\nimport {deAdvanced} from \"@sinequa/components/advanced\";\nimport {deAlerts} from \"@sinequa/components/alerts\";\nimport {deBaskets} from \"@sinequa/components/baskets\";\nimport {deFacet} from \"@sinequa/components/facet\";\nimport {deFeedback} from \"@sinequa/components/feedback\";\nimport {deHeatmap} from \"@sinequa/analytics/heatmap\";\nimport {deLabels} from \"@sinequa/components/labels\";\nimport {deMetadata} from \"@sinequa/components/metadata\";\nimport {deNotification} from \"@sinequa/components/notification\";\nimport {dePreview} from \"@sinequa/components/preview\";\nimport {deResult} from \"@sinequa/components/result\";\nimport {deResultsView} from \"@sinequa/components/results-view\";\nimport {deSavedQueries} from \"@sinequa/components/saved-queries\";\nimport {deSelection} from \"@sinequa/components/selection\";\nimport {deSearch} from \"@sinequa/components/search\";\nimport {deStatusBar} from \"@sinequa/components/status-bar\";\nimport {deUserSettings} from \"@sinequa/components/user-settings\";\n\nconst messages = Utils.merge({}, deCore, deUtils, deAdvanced, deAlerts, deBaskets, deFacet, deFeedback, deHeatmap, deLabels, deMetadata,\n    deNotification, dePreview, deResult, deResultsView, deSavedQueries, deSelection, deSearch, deStatusBar, deUserSettings, appMessages);\n\nexport default <LocaleData>{\n    intl: {\n        locale: \"de-DE\"\n    },\n    moment: {\n        locale: \"de\"\n    },\n    d3: {\n        locale: \"de-DE\",\n        format: d3Format,\n        time: d3Time\n    },\n    messages: messages\n};","import {Injectable, InjectionToken, Inject, Type, OnDestroy} from \"@angular/core\";\nimport { HttpResponse } from '@angular/common/http';\nimport {Subject, Observable, throwError} from \"rxjs\";\nimport {UserSettingsWebService, QueryExportWebService, ExportSourceType, ExportOutputFormat,\n    DownloadWebService, AuditEvents, AuditEvent} from \"@sinequa/core/web-services\";\nimport {ModalService, ModalResult} from \"@sinequa/core/modal\";\nimport {AppService, Query} from \"@sinequa/core/app-utils\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {SelectionService} from \"@sinequa/components/selection\";\nimport {SearchService} from \"@sinequa/components/search\";\nimport {Action} from '@sinequa/components/action';\n\n\nexport interface SavedQuery {\n    name: string;\n    description?: string;\n    query: Query;\n}\n\n// from core/models/audit\nexport const enum SavedQueryEventType {\n    Loaded = \"SavedQuery_Loaded\",\n    Patched = \"SavedQuery_Patched\",\n\n    Add = \"SavedQuery_Add\",\n    Delete = \"SavedQuery_Delete\",\n    DeleteAll = \"SavedQuery_DeleteAll\",\n    Rename = \"SavedQuery_Rename\",\n    Update = \"SavedQuery_Update\",\n\n    Search = \"Search_SavedQuery\"\n}\n\n// Types of events triggering a change event\nexport const SAVED_QUERIES_CHANGE_EVENTS = [\n    SavedQueryEventType.Add,\n    SavedQueryEventType.Delete,\n    SavedQueryEventType.DeleteAll,\n    SavedQueryEventType.Rename,\n    SavedQueryEventType.Update\n];\n\n\n// CRUD Events\nexport interface SavedQueryChangeEvent {\n    type: SavedQueryEventType;\n    savedquery?: SavedQuery;\n}\n\n\n// Model expected by the ManageSavedQueries Modal.\nexport interface ManageSavedQueriesModel {\n    savedQueries: SavedQuery[];\n    auditEvents?: AuditEvent[];\n}\n\n// Data model of the Export dialog.\nexport interface ExportQueryModel {\n    format: ExportOutputFormat;\n    export: ExportSourceType;\n    webService: string;\n    maxCount?: number;\n    queryName?: string;\n    exportedColumns?: string[];\n}\n\n/**\n * The modal types are unknown to this service.\n * The module using this service must provide these components\n * in their forRoot() method\n *\n * Example below:\n *\n *     public static forRoot(): ModuleWithProviders<SavedQueriesModule> {\n        return {\n            ngModule: SavedQueriesModule,\n            providers: [\n                {\n                    provide: SAVEDQUERY_COMPONENTS,\n                    useValue: {\n                        editSavedQueryModal: EditSavedQuery,\n                        manageSavedQueriesModal: ManageSavedQueries,\n                        exportSavedQueryModal: ExportQuery\n                    }\n                },\n                SavedQueriesService,\n                SelectionService\n            ]\n        };\n    }\n *\n */\nexport interface SavedQueryComponents {\n    editSavedQueryModal: Type<any>;\n    manageSavedQueriesModal: Type<any>;\n    exportSavedQueryModal: Type<any>;\n}\nexport const SAVEDQUERY_COMPONENTS = new InjectionToken<SavedQueryComponents>('SAVEDQUERY_COMPONENTS');\n\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SavedQueriesService implements OnDestroy {\n\n    private readonly _events = new Subject<SavedQueryChangeEvent>();\n    private readonly _changes = new Subject<SavedQueryChangeEvent>();\n\n    // An application may want to alter the action (icon, etc.)\n    public selectedRecordsAction: Action;\n\n    constructor(\n        public userSettingsService: UserSettingsWebService,\n        public searchService: SearchService,\n        public modalService: ModalService,\n        public appService: AppService,\n        public queryExportService: QueryExportWebService,\n        public downloadService: DownloadWebService,\n        public selectionService: SelectionService,\n        @Inject(SAVEDQUERY_COMPONENTS) public savedQueryComponents: SavedQueryComponents\n    ){\n        // Listen to the user settings\n        this.userSettingsService.events.subscribe(event => {\n            // E.g. new login occurs\n            // ==> Menus need to be rebuilt\n            this._events.next({type: SavedQueryEventType.Loaded});\n        });\n        // Listen to own events, to trigger change events\n        this._events.subscribe(event => {\n            if(SAVED_QUERIES_CHANGE_EVENTS.indexOf(event.type) !== -1){\n                this.changes.next(event);\n            }\n        });\n        // Initialize selection action\n        this.selectedRecordsAction = new Action({\n            icon: 'fas fa-download',\n            title: 'msg#exportQuery.btnTitle',\n            action: (_item: Action, _event: Event) => {\n                this.exportModal(this.selectionService.haveSelectedRecords\n                    ? ExportSourceType.Selection\n                    : ExportSourceType.Result);\n            },\n        });\n    }\n\n\n    // GETTERS\n\n    /**\n     * Returns the list of this user's saved queries.\n     * The list is stored in the user settings (this is a redirection).\n     * Using this service creates the list of saved queries if it does not already exist.\n     */\n    public get savedqueries() : SavedQuery[]{\n        if(!this.userSettingsService.userSettings)\n            this.userSettingsService.userSettings = {};\n        if(!this.userSettingsService.userSettings[\"savedQueries\"])\n            this.userSettingsService.userSettings[\"savedQueries\"] = [];\n        return this.userSettingsService.userSettings[\"savedQueries\"];\n    }\n\n    /**\n     * Triggers any event among SavedQueryChangeEvent\n     * (use for fine-grained control of saved queries workflow)\n     */\n    public get events() : Subject<SavedQueryChangeEvent> {\n        return this._events;\n    }\n\n    /**\n     * Triggers when events affect the list of saved queries\n     * (use to refresh saved queries menus)\n     * Cf. CHANGE_EVENTS list\n     */\n    public get changes() : Subject<SavedQueryChangeEvent> {\n        return this._changes;\n    }\n\n    /**\n     * @returns true if there is at least one saved query\n     */\n    public get hasSavedQuery(): boolean {\n        return this.savedqueries.length > 0;\n    }\n\n    /**\n     * @returns a saved query with the given name or null if it does not exist\n     * @param name\n     */\n    public savedquery(name: string): SavedQuery | undefined {\n        const i = this.savedqueryIndex(name);\n        return i>= 0? this.savedqueries[i] : undefined;\n    }\n\n    private savedqueryIndex(name: string): number {\n        for (let i = 0, ic = this.savedqueries.length; i < ic; i++) {\n            const savedquery = this.savedqueries[i];\n            if (savedquery && savedquery.name === name) {\n                return i;\n            }\n        }\n        return -1;\n    }\n\n\n\n    // CRUD\n\n    /**\n     * Creates a new saved query unless it already exists.\n     * Emits an savedquery event.\n     * Update the data on the server.\n     * @param savedquery the savedquery to create\n     * @returns true if savedquery was created\n     */\n    public createSavedQuery(savedquery: SavedQuery) : boolean {\n\n        if(this.savedqueryIndex(savedquery.name) >= 0)\n            return false; // This savedquery already exists\n\n        this.savedqueries.unshift(savedquery);\n        this._events.next({type : SavedQueryEventType.Add, savedquery});\n        this.patchSavedQueries([{\n            type: SavedQueryEventType.Add,\n            detail: {\n                savedquery: savedquery.name\n            }\n        }]);\n        return true;\n    }\n\n    /**\n     * Update the saved query at the given index, unless a saved query with the same name\n     * already exists in the list of saved queries.\n     * Emits an Saved Query event.\n     * Update the data on the server.\n     * @param savedquery the saved query to update\n     * @param index the index at which to update the saved query\n     * @returns true if saved query was updated\n     */\n    public updateSavedQuery(savedquery: SavedQuery, index : number) : boolean {\n\n        const prevIndex = this.savedqueryIndex(savedquery.name);\n        if(prevIndex !== -1 && index !== prevIndex)\n            return false; // A saved query with the same name exists at a different index\n\n        if(index >= 0 && index < this.savedqueries.length){\n\n            this.savedqueries.splice(index, 1, savedquery);\n            this._events.next({type : SavedQueryEventType.Update, savedquery});\n            this.patchSavedQueries([\n                {\n                    type: SavedQueryEventType.Update,\n                    detail: {\n                        savedquery: savedquery.name\n                    }\n                }\n            ]);\n            return true;\n\n        }\n        return false;   // This saved query does not exist\n    }\n\n    /**\n     * Updates the full list of saved queries.\n     * Emits an SavedQuery event.\n     * Update the data on the server.\n     * @param savedqueries the new list of saved queries\n     * @param auditEvents the list of audit events to log\n     */\n    public updateSavedQueries(savedqueries : SavedQuery[], auditEvents?: AuditEvents) : boolean {\n        Utils.arraySet(this.savedqueries, savedqueries);\n        this._events.next({type : SavedQueryEventType.Update});\n        this.patchSavedQueries(auditEvents);\n        return true;\n    }\n\n    /**\n     * Deletes the given SavedQuery (based on its name)\n     * Emits an SavedQuery event.\n     * Update the data on the server.\n     * @param savedquery\n     * @returns true if saved query was deleted\n     */\n    public deleteSavedQuery(savedquery: SavedQuery) : boolean {\n\n        const index = this.savedqueryIndex(savedquery.name);\n\n        if(index === -1)\n            return false; // Nothing to delete\n\n        this.savedqueries.splice(index, 1);\n        this._events.next({type : SavedQueryEventType.Delete, savedquery});\n        this.patchSavedQueries([\n            {\n                type: SavedQueryEventType.Delete,\n                detail: {\n                    savedquery: savedquery.name\n                }\n            }\n        ]);\n        return true;\n    }\n\n    /**\n     * Sets this saved query to the current search context, using the search service\n     */\n    public setSavedQueryToCurrentQuery(savedquery: SavedQuery){\n        savedquery.query = Query.copy(this.searchService.query);\n    }\n\n    /**\n     * Updates Saved Queries in User settings.\n     * @param auditEvents : Audit Events to be triggered\n     * @returns an Observable which can be used to trigger further events\n     */\n    private patchSavedQueries(auditEvents?: AuditEvents) {\n        return this.userSettingsService.patch({savedQueries: this.savedqueries}, auditEvents)\n            .subscribe(\n                next => {\n                    this._events.next({type: SavedQueryEventType.Patched});\n                },\n                error => {\n                    console.error(\"Could not patch Saved queries!\", error);\n                }\n            );\n    }\n\n\n    public rssHref(item: SavedQuery) {\n        return Utils.addSearchParams(this.appService.appWebService.makeUrl(\"query.rss\"),\n            {\n                app: this.appService.appName,\n                name: item.name\n            });\n    }\n\n\n    public hasRssEnabled(): boolean {\n        return !!this.appService.app && !!this.appService.app.queryRssEnabled;\n    }\n\n\n    /**\n     * Checks if there is a configuration for the export web service.\n     *\n     * @returns true if there is a configuration for the export web service.\n     */\n    public hasExportConfig(): boolean {\n        return !!this.appService.app && !!this.appService.app.queryExport;\n    }\n\n\n    public download(model : ExportQueryModel): Observable<HttpResponse<Blob>> {\n        return this.downloadService.download(this.requestExport(model));\n    }\n\n    private requestExport(model: ExportQueryModel): Observable<HttpResponse<Blob>> {\n        switch (model.export) {\n            case ExportSourceType.Result:\n                return this.queryExportService.exportResult(\n                    model.webService,\n                    this.searchService.query,\n                    this.searchService.results,\n                    model.format,\n                    model.maxCount,\n                    model.exportedColumns,\n                );\n            case ExportSourceType.Selection:\n                return this.queryExportService.exportSelection(\n                    model.webService,\n                    this.searchService.query,\n                    this.searchService.results,\n                    this.selectionService.getSelectedIds(),\n                    model.format,\n                    model.maxCount,\n                    model.exportedColumns,\n                );\n            case ExportSourceType.SavedQuery:\n                return this.queryExportService.exportSavedQuery(\n                    model.webService,\n                    model.queryName || \"\",\n                    model.format,\n                    model.maxCount,\n                    model.exportedColumns,\n                );\n            default:\n                console.log(\n                    'QueryExporter.export unexpected export type: ',\n                    ExportSourceType[model.export]);\n                return throwError('QueryExporter.export unexpected export type: ');\n        }\n    }\n\n\n\n\n    // EVENT HANDLERS (Menus)\n\n    /**\n     * Uses the SearchService to perform a search returning all\n     * the documents matching this saved query.\n     * @param saved query\n     * @returns the search service promise\n     */\n    searchSavedQuery(savedquery: SavedQuery, path?: string): Promise<boolean> {\n        this.searchService.setQuery(Utils.extend(this.searchService.makeQuery(), Utils.copy(savedquery.query)));\n        this._events.next({type: SavedQueryEventType.Search, savedquery});\n        return this.searchService.search({ path: path }, {\n            type: SavedQueryEventType.Search,\n            detail: {\n                \"saved-query\": savedquery.name\n            }\n        });\n    }\n\n    /**\n     * Opens a dialog allowing a user to save the current query.\n     * @returns a boolean promise resolved when the user closes the dialog\n     * the result is true if the query was saved.\n     */\n    createSavedQueryModal(query: Query = this.searchService.query) : Promise<boolean> {\n        const savedQuery: SavedQuery = {\n            name: query.text || \"\",\n            query: Query.copy(query)\n        };\n        return this.modalService.open(this.savedQueryComponents.editSavedQueryModal, {model: savedQuery})\n            .then((result) => {\n                if (result === ModalResult.OK) {\n\n                    const index = this.savedqueryIndex(savedQuery.name);\n                    if (index !== -1) {\n\n                        return this.modalService.yesNo(\"msg#savedQueries.savedQueryAlreadyExists\")\n                            .then((result) => {\n                                if (result === ModalResult.Yes) {\n                                    return this.updateSavedQuery(savedQuery, index);\n                                }\n                                return false;\n                            });\n\n                    } else {\n                        return this.createSavedQuery(savedQuery);\n                    }\n                }\n                return false;\n            });\n    }\n\n    /**\n     * Opens a dialog allowing a user to reorganize and edit the\n     * list of saved queries.\n     * @returns a boolean promise resolved when the user closes the dialog\n     * the result is true is the list was updated.\n     */\n    public manageSavedQueriesModal() : Promise<boolean> {\n\n        const model: ManageSavedQueriesModel = { savedQueries: Utils.copy(this.savedqueries) };\n\n        return this.modalService.open(this.savedQueryComponents.manageSavedQueriesModal, {model})\n            .then((result) => {\n                if (result === ModalResult.OK) {\n                    return this.updateSavedQueries(model.savedQueries, model.auditEvents);\n                }\n                return false;\n            });\n\n    }\n\n    /**\n     * Exports a query via a modal dialog.\n     *\n     * @param exportType type of export to perform (selection, saved query, results)\n     * @param savedQuery The saved query\n     */\n    public exportModal(exportType: ExportSourceType, savedQuery?: SavedQuery)\n            : Promise<ModalResult> {\n\n        if (!this.hasExportConfig() || !this.appService.app) {\n            return Promise.resolve(ModalResult.Cancel);\n        }\n\n        const model: ExportQueryModel = {\n            format: ExportOutputFormat.Csv,\n            export: exportType,\n            webService: this.appService.app.queryExport\n        };\n\n        if (savedQuery && exportType === ExportSourceType.SavedQuery) {\n            model.queryName = savedQuery.name;\n        }\n\n        return this.modalService.open(this.savedQueryComponents.exportSavedQueryModal, {model});\n    }\n\n    notifyOpenSavedQuery(savedquery: SavedQuery) {\n        this._events.next({type: SavedQueryEventType.Search, savedquery});\n    }\n\n    ngOnDestroy() {\n        this.events.complete();\n        this.changes.complete();\n    }\n}\n","import {Component, Inject, OnInit} from \"@angular/core\";\nimport {Validators, AbstractControl} from \"@angular/forms\";\nimport {ValidatorFn} from \"@angular/forms\";\nimport {CdkDragDrop} from \"@angular/cdk/drag-drop\";\nimport {MODAL_MODEL, ModalButton, ModalResult} from \"@sinequa/core/modal\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {ExportSourceType, AuditEvent} from \"@sinequa/core/web-services\";\nimport {SavedQueriesService, SavedQuery, SavedQueryEventType, ManageSavedQueriesModel} from \"../../saved-queries.service\";\n\n@Component({\n    selector: \"sq-manage-saved-queries\",\n    templateUrl: \"./manage-saved-queries.html\",\n    styleUrls: [\"./manage-saved-queries.scss\"]\n})\nexport class BsManageSavedQueries implements OnInit {\n    reordering: boolean;\n    buttons: ModalButton[];\n    removeAllButton: ModalButton;\n    nameValidators: ValidatorFn[];\n\n    constructor(\n        @Inject(MODAL_MODEL) public model: ManageSavedQueriesModel,\n        public savedQueriesService: SavedQueriesService) {\n        this.reordering = false;\n\n        this.nameValidators = [\n            Validators.required,\n            (control: AbstractControl) => {\n                const modelControl = control.root.get(\"model\");\n                if (modelControl) {\n                    for (const item of this.model.savedQueries) {\n                        if (modelControl.value === item) {\n                            continue;\n                        }\n                        if (control.value === item.name) {\n                            return {\n                                unique: true\n                            };\n                        }\n                    }\n                }\n                return null;\n            }\n        ];\n    }\n\n    ngOnInit() {\n        this.buttons = [\n            this.removeAllButton = new ModalButton({\n                text: \"msg#manageSavedQueries.removeAll\",\n                result: ModalResult.Custom,\n                action: (button) => {\n                    this.model.savedQueries.splice(0);\n                    button.visible = false;\n                    this.addAuditEvent({\n                        type: SavedQueryEventType.DeleteAll\n                    });\n                },\n                visible: this.model.savedQueries.length > 0\n            }),\n            new ModalButton({\n                result: ModalResult.OK,\n                primary: true\n            }),\n            new ModalButton({\n                result: ModalResult.Cancel\n            })\n        ];\n    }\n\n    addAuditEvent(auditEvent: AuditEvent) {\n        if (!this.model.auditEvents) {\n            this.model.auditEvents = [];\n        }\n        this.model.auditEvents.push(auditEvent);\n    }\n\n    reorder() {\n        this.reordering = !this.reordering;\n    }\n\n    setName(savedQuery: SavedQuery, name: string) {\n        if (!Utils.eqNC(savedQuery.name, name)) {\n            this.addAuditEvent({\n                type: SavedQueryEventType.Rename,\n                detail: {\n                    query: name,\n                    \"old-name\": savedQuery.name\n                }\n            });\n            savedQuery.name = name;\n        }\n    }\n\n    remove(savedQuery: SavedQuery, index: number) {\n        this.model.savedQueries.splice(index, 1);\n        this.removeAllButton.visible = this.model.savedQueries.length > 0;\n        this.addAuditEvent({\n            type: SavedQueryEventType.Delete,\n            detail: {\n                query: savedQuery.name\n            }\n        });\n        return false;\n    }\n\n    export(savedQuery: SavedQuery) {\n        this.savedQueriesService.exportModal(ExportSourceType.SavedQuery, savedQuery);\n        return false;\n    }\n\n    dropped(drop: CdkDragDrop<SavedQuery[]>) {\n        Utils.arrayMove(this.model.savedQueries, drop.previousIndex, drop.currentIndex);\n    }\n}\n","<form name=\"manageSavedQueries\" novalidate>\n    <sq-modal [title]=\"'msg#manageSavedQueries.title'\" [buttons]=\"buttons\">\n        <div *ngIf=\"model.savedQueries.length\" class=\"form-group clearfix\">\n            <button type=\"button\" class=\"btn btn-secondary float-right\" (click)=\"reorder()\">{{(reordering ? \"msg#manageSavedQueries.edit\" : \"msg#manageSavedQueries.reorder\") | sqMessage}}</button>\n        </div>\n        <div class=\"form-group\">\n            <div class=\"list-group\" cdkDropList [cdkDropListData]=\"model.savedQueries\" [cdkDropListDisabled]=\"!reordering\" (cdkDropListDropped)=\"dropped($event)\">\n                <div *ngFor=\"let savedQuery of model.savedQueries; let $index = index\" cdkDrag \n                    [ngClass]=\"['list-group-item list-group-item-action d-flex w-auto-unimportant', reordering ? 'cursor-move': '']\">\n                    <div *ngIf=\"reordering\" class=\"sq-saved-query-text\">{{savedQuery.name}}</div>\n                    <sq-editable *ngIf=\"!reordering\" [value]=\"savedQuery.name\" (valueChange)=\"setName(savedQuery, $event)\" name=\"msg#manageSavedQueries.name\" [model]=\"savedQuery\" [validators]=\"nameValidators\"></sq-editable>\n                    <div class=\"ml-auto\">\n                        <a *ngIf=\"!reordering && savedQueriesService.hasExportConfig()\" class=\"ml-2\" href=\"#\" (click)=\"export(savedQuery)\" title=\"{{'msg#manageSavedQueries.export' | sqMessage}}\">\n                            <span class=\"fas fa-download sq-export\"></span>\n                        </a>\n                        <a *ngIf=\"!reordering && savedQueriesService.hasRssEnabled()\" class=\"ml-2\" href=\"{{savedQueriesService.rssHref(savedQuery)}}\" target=\"_blank\" title=\"{{'msg#manageSavedQueries.rss' | sqMessage}}\">\n                            <span class=\"fas fa-rss sq-rss\"></span>\n                        </a>\n                        <a *ngIf=\"!reordering\" href=\"#\" (click)=\"remove(savedQuery, $index)\" class=\"ml-2\" title=\"{{'msg#manageSavedQueries.remove' | sqMessage}}\">\n                            <span class=\"fas fa-times sq-remove\"></span>\n                        </a>\n                        <span *ngIf=\"reordering\" class=\"ml-2 fas fa-bars sq-move\"></span>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </sq-modal>\n</form>\n","export default {\n    \"labels\": {\n        \"labels\": \"Labels\",\n        \"publicLabels\": \"Public Labels\",\n        \"privateLabels\": \"Private Labels\",\n        \"public\": \"Public\",\n        \"private\": \"Private\",\n        \"selectLabel\": \"Select label(s)\",\n        \"deleteLabelAreYouSure\": \"Are you sure you want to remove the label: {name}?\",\n        \"bulkAddLabelAreYouSure\": \"Are you sure you want to bulk add the label: {name} to the results of the current query?\",\n        \"bulkRemoveLabelAreYouSure\": \"Are you sure you want to bulk remove the label: {name} to the results of the current query?\",\n        \"addPublicLabelText\": \"+\",\n        \"removePublicLabelText\": \"×\",\n        \"addPublicLabelTitle\": \"Add public label\",\n        \"selectPublicLabelTitle\": \"Select public label\",\n        \"removePublicLabelTitle\": \"Remove public label\",\n        \"addPrivateLabelText\": \"+\",\n        \"removePrivateLabelText\": \"×\",\n        \"addPrivateLabelTitle\": \"Add private label\",\n        \"selectPrivateLabelTitle\": \"Select private label\",\n        \"removePrivateLabelTitle\": \"Remove private label\"\n    },\n\n    \"renameLabel\": {\n        \"title\": \"Rename Label(s) globally\",\n        \"btnRename\": \"Rename\",\n        \"newLabel\": \"New Label\",\n        \"oldLabels\": \"Old label(s)\",\n        \"alertText\": \"This action renames the label(s) in the index and is irreversible\",\n        \"successFeedback\": \"Label(s) renamed in the index\",\n        \"errorFeedback\": \"An error occurred. Request failed\"\n    },\n\n    \"deleteLabel\": {\n        \"title\": \"Delete label(s) globally\",\n        \"btnDelete\": \"Delete\",\n        \"alertText\": \"This action deletes the selected label(s) from the index and is irreversible\",\n        \"successFeedback\": \"Label(s) deleted from the index\",\n        \"errorFeedback\": \"An error occurred. Request failed\"\n    },\n\n    \"bulkRemoveLabel\": {\n        \"title\": \"Remove label(s) from the current results\",\n        \"btnBulkRemove\": \"Remove\",\n        \"alertText\": \"This action removes the selected label(s) from all results reported by the engine (not only from the first page)\",\n        \"successFeedback\": \"Label(s) removed from all results reported by the engine\",\n        \"errorFeedback\": \"An error occurred. Request failed\"\n    },\n\n    \"bulkAddLabel\": {\n        \"title\": \"Add label(s) to the current results\",\n        \"btnBulkAdd\": \"Add\",\n        \"alertText\": \"This action assigns the selected label(s) to all results reported by the engine (not only to the first page)\",\n        \"infoText\": \"Press 'Enter' to add a new label that does not exist in the suggestions\",\n        \"successFeedback\": \"Label(s) assigned to all results reported by the engine\",\n        \"errorFeedback\": \"An error occurred. Request failed\"\n    },\n\n    \"editLabel\": {\n        \"title\": \"Edit the label(s) of the selected result(s)\",\n        \"btnEdit\": \"Save\",\n        \"alertText\": \"This action edits the label(s) of the selected result(s)\",\n        \"infoText\": \"Press 'Enter' to add a new label that does not exist in the suggestions\",\n        \"labelsToBeRemoved\": \"Label(s) to be removed\",\n        \"labelsToBeAdded\": \"Label(s) to be added\",\n        \"successFeedback\": \"Label(s) of the selected result(s) edited\",\n        \"errorFeedback\": \"An error occurred. Request failed\"\n    }\n\n};\n","export default {\r\n    \"clipboard\": {\r\n        \"success\": \"{data} in die Zwischenablage kopiert\",\r\n        \"error\": \"Zwischenablagefehler\"\r\n    }\r\n};\r\n","export * from \"./breadcrumbs/breadcrumbs\";\nexport * from \"./did-you-mean/did-you-mean\";\nexport * from \"./page-size-selector/page-size-selector\";\nexport * from \"./pager/pager\";\nexport * from \"./search.module\";\nexport * from \"./sort-selector/sort-selector\";\nexport * from \"./tabs/tabs\";\nexport * from \"./loading-bar/loading-bar\";\nexport * from \"./scroller/scroller\";\nexport * from \"./load-more/load-more\";\n","export default {\n    \"feedback\":{\n        \"text\" : \"\",\n        \"title\" : \"Send feedback to the Sinequa admin\",\n        \"content\" : {\n            \"text\" : \"Content\",\n            \"title\" : \"Propose to add new content or improve the current content\"\n        },\n        \"ui\" : {\n            \"text\" : \"User Interface\",\n            \"title\" : \"Propose improvements to the User Interface\"\n        },\n        \"lang\" : {\n            \"text\" : \"Language\",\n            \"title\" : \"Propose language processing improvements, like new words, synonyms to add to the dictionaries (this affects directly the relevance of the search engine)\"\n        },\n        \"other\" : {\n            \"text\" : \"Other\",\n            \"title\" : \"Submit feature requests, and other improvement ideas\"\n        },\n        \"thankyou\": \"Thank you for your feedback!\",\n        \"quality\" : {\n            \"label\" : \"Quality of the document:\"\n        },\n        \"relevance\" : {\n            \"label\" : \"Relevance of the document:\"\n        },\n        \"labels\" : {\n            \"public\" : {\n                \"label\" : \"Tags:\"\n            },\n            \"private\" : {\n                \"label\" : \"Private tags:\"\n            }\n        }\n    }\n};\n","import {Injectable, Inject} from \"@angular/core\";\nimport {Observable, EMPTY} from \"rxjs\";\nimport {SqHttpClient} from \"./http-client\";\nimport {HttpService} from \"./http.service\";\nimport {START_CONFIG, StartConfig} from \"./start-config.web.service\";\nimport {Utils, MapOf} from \"@sinequa/core/base\";\nimport {Results, RFMData} from \"./query.web.service\";\n\n/**\n * A service for calling the search.rfm web service\n */\n@Injectable({\n    providedIn: \"root\"\n})\nexport class RfmWebService extends HttpService {\n    private static readonly endpoint = \"search.rfm\";\n\n    constructor(\n        @Inject(START_CONFIG) startConfig: StartConfig,\n        private httpClient: SqHttpClient) {\n        super(startConfig);\n    }\n\n    /**\n     * Get RFM data for a set of results\n     *\n     * @param rfm The name of the RFM\n     * @param results The results for which to retrieve RFM data\n     */\n    getRfmData(rfm: string, results: Results): Observable<MapOf<RFMData>> {\n        const ids: string[] = [];\n        for (const record of results.records) {\n            if (!!record.flags && record.flags.indexOf(\"r\") !== -1) {\n                ids.push(record.id);\n            }\n        }\n        if (ids.length === 0) {\n            return EMPTY;\n        }\n        const data = {\n            rfm,\n            queryHash: results.rfmQueryHash,\n            ids\n        };\n        const observable = this.httpClient.post<MapOf<RFMData>>(this.makeUrl(RfmWebService.endpoint), data);\n        Utils.subscribe(observable,\n            (response) => {\n                return response;\n            },\n            (error) => {\n                console.log(\"rfmService.getRfmData failure - error: \", error);\n            });\n        return observable;\n    }\n}\n","import {Locale, LocalesConfig} from \"@sinequa/core/intl\";\nimport {enCore} from \"./messages\";\n\nexport class DefaultLocalesConfig implements LocalesConfig {\n    defaultLocale: Locale;\n    locales?: Locale[];\n\n    constructor() {\n        this.defaultLocale = {\n            name: \"en\",\n            display: \"English\",\n            data: {\n                intl: {\n                    locale: \"en-US\"\n                },\n                messages: enCore,\n            }\n        };\n        this.locales = [this.defaultLocale];\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { SavedQueriesService, SavedQuery, SavedQueryEventType } from '../../saved-queries.service';\nimport { AbstractFacet } from '@sinequa/components/facet';\nimport { Action } from '@sinequa/components/action';\n\n@Component({\n  selector: 'sq-facet-saved-queries',\n  templateUrl: './facet-saved-queries.html',\n  styles: [`\n.saved-query-item .query-delete{\n    opacity: 0;\n}\n\n.saved-query-item:hover .query-delete{\n    opacity: 1;\n    transition: opacity 0.2s ease-in-out;\n}\n  `]\n})\nexport class BsFacetSavedQueries extends AbstractFacet  {\n    @Input() searchRoute: string = \"/search\";\n    @Input() maxQueries: number = 5;\n    @Input() enableDelete: boolean = true;\n\n    page: number = 0;\n\n    manageSavedQueries: Action;\n    previousPage: Action;\n    nextPage: Action;\n\n    constructor(\n        public savedQueriesService: SavedQueriesService) {\n        super();\n\n        this.manageSavedQueries = new Action({\n            icon: \"fas fa-cog\",\n            title: \"msg#savedQueries.manageSavedQueries\",\n            action: () => {\n                this.savedQueriesService.manageSavedQueriesModal();\n            }\n        });\n\n        this.previousPage = new Action({\n            icon: \"fas fa-chevron-left\",\n            title: \"msg#facet.previous\",\n            action: () => {\n                this.page--;\n            },\n            updater: (action: Action) => {\n                action.disabled = this.page <= 0;\n                action.hidden = this.maxPage === 0;\n            }\n        });\n\n        this.nextPage = new Action({\n            icon: \"fas fa-chevron-right\",\n            title: \"msg#facet.next\",\n            action: () => {\n                this.page++;\n            },\n            updater: (action: Action) => {\n                action.disabled = this.page >= this.maxPage;\n                action.hidden = this.maxPage === 0;\n            }\n        });\n    }\n\n    get maxPage(): number {\n        return Math.max(0, Math.ceil(this.savedQueriesService.savedqueries.length / this.maxQueries) - 1);\n    }\n\n    get startIndex(): number {\n        return this.page * this.maxQueries;\n    }\n\n    get endIndex(): number {\n        return (this.page+1) * this.maxQueries;\n    }\n\n    get actions(): Action[] {\n        this.previousPage.update();\n        this.nextPage.update();\n        return [this.previousPage, this.nextPage, this.manageSavedQueries];\n    }\n\n    openSavedQuery(query: SavedQuery){\n        this.savedQueriesService.notifyOpenSavedQuery(query)\n        return true;\n    }\n\n    deleteQuery(query: SavedQuery, event: Event){\n        event.stopPropagation();\n        this.savedQueriesService.deleteSavedQuery(query);\n        this.page = Math.min(this.page, this.maxPage);\n        return false;\n    }\n\n    getQueryParams(savedQuery: SavedQuery) {\n        const query = this.savedQueriesService.searchService.makeQuery(savedQuery.query);\n        const queryParams = query.toJsonForQueryString();\n        return {query: queryParams};\n    }\n\n    getRouterState(savedQuery: SavedQuery) {\n        return {\n            audit: {\n                type: SavedQueryEventType.Search,\n                detail: {\n                    \"saved-query\": savedQuery.name\n                }\n            }\n        }\n    }\n}\n","<div class=\"list-group list-group-flush\">\n    <a *ngFor=\"let query of savedQueriesService.savedqueries | slice:startIndex:endIndex\"\n        class=\"saved-query-item list-group-item list-group-item-action d-flex align-items-center\"\n        [routerLink]=\"[searchRoute]\" [queryParams]=\"getQueryParams(query)\" [state]=\"getRouterState(query)\"\n        (click)=\"openSavedQuery(query)\">\n        <span class=\"query-name mr-auto text-truncate\" [title]=\"query.name\">{{ query.name }}</span>\n        <span *ngIf=\"query.query.text\" class=\"query-text text-muted small font-italic text-right text-truncate ml-2\">\"{{ query.query.text }}\"</span>\n        <i *ngIf=\"enableDelete\" class=\"query-delete ml-2 fas fa-times\" [title]=\"'msg#savedQueries.delete' | sqMessage\" (click)=\"deleteQuery(query, $event)\"></i>\n    </a>\n    <div *ngIf=\"savedQueriesService.savedqueries.length == 0\" class=\"list-group-item text-center text-muted font-italic small py-5\">\n        {{ 'msg#savedQueries.noSavedQuery' | sqMessage }}\n    </div>\n</div>","export * from \"./public-api\";","import { Directive, Input, Output, EventEmitter, SimpleChanges, ElementRef, OnChanges, OnDestroy } from \"@angular/core\";\nimport { Observable, Subscription, of } from \"rxjs\";\nimport { Utils, Keys} from \"@sinequa/core/base\";\nimport { AppService, Expr, ExprBuilder, ExprParser, ExprValueInfo} from \"@sinequa/core/app-utils\";\nimport { Autocomplete, AutocompleteItem, AutocompleteState } from './autocomplete.directive';\nimport { SuggestService } from './suggest.service';\nimport { UIService } from '@sinequa/components/utils';\n\n/**\n * Interface required to be implement by the component displaying\n * the fielded search items (basically the content of fieldSearchItems)\n */\nexport interface FieldSearchItemsContainer {\n\n    /** Update the list of items displayed by the container */\n    update(items: AutocompleteItem[]): void;\n\n    /** Event triggered when the user removes an item from the container */\n    itemRemoved: EventEmitter<AutocompleteItem>;\n}\n\nexport interface ParseResult {\n    result?: Expr;\n    error?: string;\n}\n\n@Directive({\n    selector: \"[sqAutocompleteFieldSearch]\"\n})\nexport class AutocompleteFieldSearch extends Autocomplete implements OnChanges, OnDestroy {\n\n\n    // FIELDED SEARCH\n\n    /** \n     * \"text\" mode: fielded search is entirely managed as text in the <input> component \n     * \"selects\" mode: fielded search stores the selected autocomplete items to create selections, while keeping a clean <input> content (better UI/UX but does not support operators like OR, NOT, and parentheses)\n     */\n    @Input() fieldSearchMode: \"off\" | \"text\" | \"selects\" = \"text\";\n\n    /** Fields excluded from fielded search (searched as regular strings if selected) */\n    @Input() excludedFields: string[] = [\"concepts\"];\n\n    /* Fields included in fielded search (have precedence over excluded fields) */\n    @Input() includedFields?: string[];\n\n   /** Container displaying the fieldSearchItems (only needed if mode === \"selects\") */\n    @Input() fieldSearchItemsContainer?: FieldSearchItemsContainer;\n\n    /** Current selection expression needed to update the list of field search items if mode === \"selects\" */\n    @Input() fieldSearchExpression?: string;\n \n    /** Stores the selected fielded search items selected via Tab */\n    public readonly fieldSearchItems: AutocompleteItem[] = [];\n\n\n    // Event emitters\n\n    @Output() parse = new EventEmitter<ParseResult>();\n\n    constructor(elementRef: ElementRef<any>, \n        suggestService: SuggestService,\n        appService: AppService,\n        uiService: UIService,\n        protected exprBuilder: ExprBuilder){\n        super(elementRef, suggestService, appService, uiService);\n    }\n\n\n    /**\n     * If the off input changes state, react accordingly\n     * @param changes\n     */\n    ngOnChanges(changes: SimpleChanges){\n        super.ngOnChanges(changes);\n\n        // Subscribe to the field search items's container\n        if(changes[\"fieldSearchItemsContainer\"] && this.fieldSearchItemsContainer) {\n            if(this._fieldSearchSubscription){\n                this._fieldSearchSubscription.unsubscribe();\n            }\n            this._fieldSearchSubscription = this.fieldSearchItemsContainer.itemRemoved.subscribe(item => {\n                this.fieldSearchItems.splice(this.fieldSearchItems.indexOf(item), 1);\n                this.updatePlaceholder();\n                this.submit.next();\n            });\n        }\n\n        // Transform the field search expresion (Expr string) into a list of autocomplete items displayed in the field search container\n        if(changes[\"fieldSearchExpression\"] && this.fieldSearchMode === \"selects\") {\n            if(this.fieldSearchExpression) {\n                const expr = this.appService.parseExpr(this.fieldSearchExpression);\n                if(expr instanceof Expr && this.fieldSearchItems.length !== expr.getFields().length) {\n                    this.fieldSearchItems.splice(0);\n                    if(expr.and) {\n                        expr.operands.forEach(e => \n                            this.fieldSearchItems.push(this.exprToItem(e))\n                        );\n                    }\n                    else {\n                        this.fieldSearchItems.push(this.exprToItem(expr));\n                    }\n                }\n            }\n            else {\n                this.fieldSearchItems.splice(0);\n            }\n        }\n\n        // If fieldSearchMode changes from selects to something else, we must remove the field search items\n        if(changes[\"fieldSearchMode\"] && this.fieldSearchMode !== \"selects\" && this.fieldSearchItems.length > 0) {\n            this.fieldSearchItems.splice(0);\n        }\n\n        this.updatePlaceholder();\n        this.fieldSearchItemsContainer?.update(this.fieldSearchItems);\n    }\n\n\n    private _fieldSearchSubscription: Subscription;\n    /**\n     * Unsubscribe when destroying the component\n     */\n    ngOnDestroy(){\n        super.ngOnDestroy();\n        if(this._fieldSearchSubscription){\n            this._fieldSearchSubscription.unsubscribe();\n        }\n    }\n\n    /**\n     * Insert the given autocomplete item into the current search input\n     * at the right location\n     * @param item \n     */\n    protected insertAutocompleteItem(item: AutocompleteItem): boolean {\n        const value = this.getInputValue(); // Current text in the input\n        if(value) { // There should always be text\n            const parseResult = this.parseQuery(); // Parse the current text\n            if(parseResult.result) { // (if no result, a parsing error occurred)\n                const res = parseResult.result.findValue(this.getInputPosition()); // Get the expression at the caret location\n                // Autocomplete \"compa\" => \"company:\"\n                if(res && item.category === \"$field$\") {\n                    this.replaceValueInForm(res, item.display + \": \");\n                    return false;\n                }\n                // Autocomplete \"company:Goo\" => \"company:`GOOGLE`\"\n                if(res && res.field === item.category) {\n                    this.replaceValueInForm(res, ExprParser.escape(item.normalized || item.display));\n                    return true;\n                }\n                // Autocomplete \"Goo\" => \"company:`GOOGLE`\"\n                if(res && !res.field && item.category && \n                    (this.includedFields && this.includedFields?.includes(item.category) || \n                    (!this.includedFields && !this.excludedFields?.includes(item.category)))) { // Filter out fields if not in fieldSearch mode\n                    this.replaceValueInForm(res, this.exprBuilder.makeExpr(item.category, item.normalized || item.display));\n                    return true;\n                }\n                // Autocomplete \"Search eng\" => \"Search engine\"\n                if(res && !res.field) {\n                    this.replaceValueInForm(res, item.display);\n                    return true;\n                }\n                // Remaining edge case ?\n                console.error(item, parseResult.result);\n            }\n        }\n\n        console.error(\"Shouldn't be here: an autocomplete item is selected, but there is no text or a parse error!\");\n        // Default to just overriding the current value (a complex query with multiple items might become reduced to this single item!)\n        if(item.category === \"$field$\") {\n            this.setInputValue(item.display + \":\");\n            return false;\n        }\n        this.setInputValue(this.exprBuilder.makeExpr(item.category, item.normalized || item.display)); // person: `Bill Gates`\n        return true;\n    }\n\n    /**\n     * Replaces the piece of expression (res) with a new value\n     * in the input form\n     * @param res The piece of expression parsed from the input content\n     * @param value The new value\n     */\n    protected replaceValueInForm(res: ExprValueInfo, value: string) {\n        this.uiService.setCaret(this.inputElement, res.start, res.start+res.length, value);\n    }\n\n    /**\n     * Sets the content of the <input> based on the given\n     * Autocomplete Item (various implementations are possible,\n     * depending on the item content and nature).\n     * This would be the right method to override to implement\n     * fielded search autocomplete.\n     * @returns true if this autocomplete item should be searched\n     */\n    protected setAutocompleteItem(item: AutocompleteItem): boolean {\n        if(item) {\n            if(this.fieldSearchMode === \"text\") {\n                return this.insertAutocompleteItem(item);\n            }\n\n            else if(this.fieldSearchMode === \"selects\" && item.category && \n                (this.includedFields && this.includedFields?.includes(item.category) || \n                (!this.includedFields && !this.excludedFields?.includes(item.category)))) { // Filter out fields if not in fieldSearch mode\n                // In the case of of a field name, we display the field for autocomplete, but we don't want to search for it\n                if(item.category === \"$field$\") {\n                    this.setInputValue(item.display + \":\");\n                    return false;\n                }\n                // Store the autocomplete item that will be used to create a selection\n                this.setInputValue(\"\");\n                this.fieldSearchItems.push(item);\n                this.updatePlaceholder();\n                this.fieldSearchItemsContainer?.update(this.fieldSearchItems);\n                return true;\n            }\n\n            else {\n                this.setInputValue(item.display);\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Returns an expression (Expr) for the fielded search items\n     */\n    public getFieldSearchExpression(): string | undefined {\n        return this.itemsToExpr(this.fieldSearchItems);\n    }\n\n    /**\n     * Transforms a list of AutocompleteItems into an expression\n     * @param items list of AutocompleteItems\n     */\n    protected itemsToExpr(items: AutocompleteItem[]): string | undefined {\n        if(items.length > 0) {\n            return this.exprBuilder.concatAndExpr(items.map(item => \n                this.exprBuilder.makeExpr(item.category, item.normalized || item.display, item.display)));\n        }\n        return undefined;\n    }\n\n    /**\n     * Transforms an expression into a list of AutocompleteItems\n     * @param expr an expression\n     */\n    protected exprToItem(expr: Expr): AutocompleteItem {\n        return {\n            category: expr.field!,\n            display: expr.display!,\n            normalized: expr.value!,\n        }\n    }\n\n    /**\n     * Takes the text from the <input> element and parse it to\n     * determine what type of suggestion to request from the server.\n     * The suggestions are then fetched by getSuggestsObs() and processed\n     * by processSuggests().\n     */\n    protected getSuggests() {\n        let value = this.getInputValue();\n        if(value) { // If there is text, make a call to the suggest API\n            const parseResult = this.parseQuery(); // If using fieldSearch, the result can be used to detect an active field\n            let fields: string[] | undefined;\n            if(parseResult.result && this.fieldSearchMode !== \"off\"){\n                const position = this.getInputPosition(); // Position of the caret, if needed\n                const res = parseResult.result.findValue(position);\n                // Field Search suggest\n                if(!!res && !!res.field){\n                    fields = Utils.startsWith(res.field, \"@\") ? [\"text\"] : [res.field];\n                    value = res.value;\n                }\n                if(!!res && this.fieldSearchMode === \"text\") {\n                    value = res.value;\n                }\n            }\n\n            if(parseResult.error && this.fieldSearchMode !== \"off\") {\n                this.processSuggests(of([])); // Empty autocomplete if parsing errors\n                return;\n            }\n\n            this.processSuggests(\n                this.getSuggestsObs(value, fields)\n            );\n\n        }\n        else {  // If empty input, restart autocomplete\n            this.parse.next({}); // remove error messages if any\n            this.start();\n        }\n    }\n\n    /**\n     * Process suggestions obtained (from whatever mean):\n     * - If data available, filter out fields\n     * - update the dropdown content\n     * - Switch between OPEN and ACTIVE states\n     * - Use changeDetectorRef to update display\n     * @param obs an observable of AutocompleteItem suggestions\n     */\n    protected processSuggests(obs: Observable<AutocompleteItem[]>){\n        obs.subscribe(\n            suggests => {\n                if(this.getState() === AutocompleteState.ACTIVE || this.getState() === AutocompleteState.OPENED){\n                    this.dropdown.update(true, suggests\n                        .filter(item => item.category !== \"$field$\" || (this.fieldSearchMode !== \"off\" && \n                            (this.includedFields && this.includedFields?.includes(item.display) || \n                            (!this.includedFields && !this.excludedFields?.includes(item.display)))))  // Filter out fields if not in fieldSearch mode\n                        .map(item => {\n                            if(!item.label){\n                                if(item.category === \"$field$\") {\n                                    item.label = \"Field\";\n                                }\n                                else {\n                                    item.label = this.appService.getLabel(item.category);\n                                }\n                            }\n                            return item;\n                        }));\n                }\n            },\n            err => {\n                this.dropdown.update(false);\n            },\n            () => {\n                if(this.dropdown.hasItems && this.getState() === AutocompleteState.ACTIVE){\n                    this.open();    // Switch from ACTIVE to OPENED (if not already)\n                }\n                else if(!this.dropdown.hasItems && this.getState() === AutocompleteState.OPENED){   // No data\n                    this.active();  // Switch from OPENED to ACTIVE (if not already)\n                }\n            });\n    }\n\n    /**\n     * Parse the query for syntax errors (also allows to detect field search if needed).\n     * Fires a parse event.\n     */\n    protected parseQuery() : ParseResult {\n        const value = this.getInputValue();\n        const result = this.appService.parseExpr(value, {allowEmptyValues: true});\n        const event = result instanceof Expr? { result: result } : { error: result };\n        this.parse.next(event);\n        return event;\n    }\n\n\n    /**\n     * Listen to user's keyboard actions in the <input>, in order to navigate\n     * and select the autocomplete suggestions.\n     * Overrides the parent keydown method, adds the management of the backspace key\n     * to remove field search items.\n     * @param event the keyboard\n     */\n    keydown(event: KeyboardEvent) {\n\n        const keydown = super.keydown(event);\n\n        if(keydown === undefined) {\n            // In fielded search mode, we can remove selections by typing <backspace> when the input is empty\n            if(event.keyCode === Keys.backspace) {\n                if(this.fieldSearchMode === \"selects\" && this.getInputValue() === '') {\n                    this.fieldSearchItems.pop();\n                    this.updatePlaceholder();\n                    this.fieldSearchItemsContainer?.update(this.fieldSearchItems);\n                }\n            }    \n        }\n        \n        return keydown;\n    }\n\n    /**\n     * Updates the <input>'s placeholder to avoid displaying something\n     * when there are fieldSearchItems displayed to the left.\n     */\n    updatePlaceholder() {\n        this._placeholder = this.fieldSearchItems.length > 0 ? '' : this.placeholder;\n    }\n}","import {Component, Input} from \"@angular/core\";\nimport {Record} from \"@sinequa/core/web-services\";\n\n/**\n * This component requires a global CSS file to map file extensions (doc, ppt, xls, etc.)\n * to Font Awesome icons via a class `sq-icon-file-{{fileext}}`\n */\n\n@Component({\n    selector: \"sq-result-icon\",\n    templateUrl: \"./result-icon.html\"\n})\nexport class ResultIcon {\n    /**\n     * Record which file extension is displayed as an icon\n     */\n    @Input() record: Record;\n\n    /**\n     * Integer controlling the icon's size\n     */\n    @Input() size: number = 1; \n}","<span class=\"far fa-file sq-icon-file-{{record.fileext}} fa-{{size}}x fa-fw\" title=\"{{record.fileext}}\"></span>","import { Component, OnInit, Inject, ChangeDetectorRef } from \"@angular/core\";\nimport {\n    ModalButton,\n    ModalResult,\n    MODAL_MODEL,\n    ModalRef,\n} from \"@sinequa/core/modal\";\nimport {\n    UpdateLabelsAction,\n    ModalProperties,\n    LabelsService,\n} from \"../../labels.service\";\nimport { Utils } from \"@sinequa/core/base\";\n\n@Component({\n    selector: \"sq-delete-label\",\n    templateUrl: \"./delete-label.html\",\n    styles: [\n        `\n            .clickable {\n                cursor: pointer;\n            }\n            .clickable:hover {\n                opacity: 85%;\n            }\n        `,\n    ],\n})\nexport class BsDeleteLabel implements OnInit {\n    public buttons: ModalButton[];\n    public title: string;\n    public alert: string;\n    public btnText: string;\n    public isProcessing: boolean = false;\n\n    private _action: () => void;\n\n    constructor(\n        @Inject(MODAL_MODEL)\n        public model: {\n            values: string[],\n            properties: ModalProperties\n        },\n        private labelsService: LabelsService,\n        private changeDetectorRef: ChangeDetectorRef,\n        private modalRef: ModalRef\n    ) {}\n\n    ngOnInit() {\n        switch (this.model.properties.action) {\n            case UpdateLabelsAction.delete:\n                this.title = \"msg#deleteLabel.title\";\n                this.btnText = \"msg#deleteLabel.btnDelete\";\n                this.alert = \"msg#deleteLabel.alertText\";\n                this._action = () => {\n                    const observable = this.labelsService.deleteLabels(\n                        this.model.values,\n                        this.model.properties.public\n                    );\n                    if (observable) {\n                        this.isProcessing = true;\n                        this.changeDetectorRef.markForCheck();\n                        Utils.subscribe(\n                            observable,\n                            () => {},\n                            (error) => {\n                                this.modalRef.close(error);\n                            },\n                            () => {\n                                this.isProcessing = false;\n                                this.modalRef.close(ModalResult.OK);\n                            }\n                        );\n                    }\n                };\n                break;\n            case UpdateLabelsAction.bulkRemove:\n                this.title = \"msg#bulkRemoveLabel.title\";\n                this.btnText = \"msg#bulkRemoveLabel.btnBulkRemove\";\n                this.alert = \"msg#bulkRemoveLabel.alertText\";\n                this._action = () => {\n                    const observable = this.labelsService.bulkRemoveLabels(\n                        this.model.values,\n                        this.model.properties.public\n                    );\n                    if (observable) {\n                        this.isProcessing = true;\n                        this.changeDetectorRef.markForCheck();\n                        Utils.subscribe(\n                            observable,\n                            () => {},\n                            (error) => {\n                                this.modalRef.close(error);\n                            },\n                            () => {\n                                this.isProcessing = false;\n                                this.modalRef.close(ModalResult.OK);\n                            }\n                        );\n                    }\n                };\n                break;\n            default:\n                this.title = \"\";\n                this.btnText = \"\";\n                this.alert = \"\";\n                break;\n        }\n\n        this.buttons = [\n            new ModalButton({\n                text: this.btnText,\n                primary: true,\n                result: ModalResult.Custom,\n                anchor: true,\n                action: this._action,\n            }),\n            new ModalButton({\n                result: ModalResult.Cancel,\n            }),\n        ];\n    }\n\n    updateLabelsNature(nature: boolean) {\n        this.model.properties.public = nature;\n    }\n\n    onLabelsChanged(values: string[]) {\n        this.model.values = values;\n    }\n}\n","<form name=\"deleteLabel\" novalidate>\n    <sq-modal [title]=\"title\" [buttons]=\"buttons\" [isProcessingState]=\"isProcessing\">\n        <div class=\"form-group sq-form-group\">\n            <div class=\"alert\" [ngClass]=\"{'alert-danger': model.properties.action === 3, 'alert-warning': model.properties.action === 5}\" role=\"alert\">\n                {{alert | sqMessage}}\n            </div>\n            <section>\n                <div *ngFor=\"let item of model.properties.radioButtons\" class=\"custom-control custom-radio custom-control-inline\">\n                    <input type=\"radio\" class=\"custom-control-input\" id=\"{{item.id}}\" name=\"nature\" value=\"{{item.value}}\"\n                        [checked]=\"item.checked\" [disabled]=\"item.disabled\" (click)=\"updateLabelsNature(item.value)\" [ngClass]=\"{'disabled': item.disabled, 'clickable': !item.disabled}\">\n                    <label class=\"custom-control-label\" for=\"{{item.id}}\">{{ item.name | sqMessage }}</label>\n                </div>\n            </section>\n            <b><label for=\"label\">{{'msg#labels.labels' | sqMessage}}</label></b>\n            <sq-labels-autocomplete\n                (labelsUpdate)=\"onLabelsChanged($event)\"\n                [public]=\"model.properties.public\"\n                [disableAutocomplete]=\"model.properties.disableAutocomplete\"\n                [allowNewLabels]=\"model.properties.allowNewLabels\"\n                [allowManagePublicLabels]=\"model.properties.allowManagePublicLabels\">\n            </sq-labels-autocomplete>\n        </div>\n    </sq-modal>\n</form>\n","export * from \"./public-api\";","import { Injectable } from '@angular/core';\nimport { Utils } from '@sinequa/core/base';\nimport { Aggregation, AggregationItem, TreeAggregationNode } from '@sinequa/core/web-services';\nimport { ValueItem } from '../format.service';\nimport { ExprParser } from './expr-parser';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ExprBuilder {\n\n    /**\n     * Make a standard selection expression\n     * (resulting in a SQL clause like \"company contains 'BOEING'\")\n     * @param field Name of the field to select (eg. \"company\")\n     * @param value Value of the field to select (eg. \"BOEING\")\n     * @param display Optional string to display that value (eg. \"Boeing\")\n     */\n    makeExpr(field: string, value: string, display?: string): string {\n        field = this.formatField(field, display);\n        return `${field}: ${ExprParser.escape(value)}`; // company`Boeing`: BOEING\n    }\n\n    /**\n     * Make a boolean expression\n     * @param field Name of the field to select (eg. \"toto\")\n     * @param value Value of the field to select (eg. \"true\")\n     * @param display Optional string to display that value (eg. \"True\")\n     */\n    makeBooleanExpr(field: string, value: boolean, display?: string): string {\n        field = this.formatField(field, display);\n        return `${field}: ${ExprParser.escape(Utils.toSqlValue(value))}`; // toto`True`: true\n    }\n\n\n    /**\n     * Make a numerical expression using a comparison operator (>, <, <=, >=, etc.)\n     * @param field Name of the field to select (eg. \"modified\")\n     * @param operator Comparison operator used for that selection (eg. \">\")\n     * @param value Value of the field to select (eg. \"2020-12-15\")\n     * @param display Optional string to display that value (eg. \"After Dec 15 2020\")\n     */\n    makeNumericalExpr(\n        field: string,\n        operator: '>' | '>=' | '<' | '<=' | '=' | '<>',\n        value: number | Date | string,\n        display?: string): string {\n\n        field = this.formatField(field, display);\n\n        if(Utils.isString(value)) {\n            value = ExprParser.escape(value);\n        }\n        if(Utils.isDate(value) || Utils.isNumber(value)) {\n            value = Utils.toSqlValue(value);\n        }\n\n        return `${field}:${operator} ${value}`; // modified`After Dec 15 2020`:> 2020-12-15\n    }\n\n\n    /**\n     * Make a list expression\n     * @param field Name of the field to select (eg. \"docformat\")\n     * @param values Values of the field to select (eg. ['htm','pdf'])\n     * @param display Optional string to display that value (eg. \"htm, pdf\")\n     */\n    makeListExpr(field: string, values: string[], display?: string): string {\n        field = this.formatField(field, display);\n        return `${field}: [${values.map(v => ExprParser.escape(v)).join(',')}]`; // docformat`htm, pdf`:[`htm`,`pdf`]\n    }\n\n\n    /**\n     * Make a range expression\n     * @param field Name of the field to select (eg. \"modified\")\n     * @param from Begining of the range (eg. 2020-12-15)\n     * @param to End of the range (eg. 2020-12-20)\n     * @param display Optional string to display that value (eg. \"[Dec 15 2020, Dec 20 2020]\")\n     */\n    makeRangeExpr(\n        field: string,\n        from: number | Date | string,\n        to: number | Date | string,\n        display?: string): string {\n\n        field = this.formatField(field, display);\n        return `${field}: [${Utils.toSqlValue(from)}..${Utils.toSqlValue(to)}]`; // modified`[Dec 15 2020, Dec 20 2020]`: [2020-12-15..2020-12-20]\n    }\n\n\n    /**\n     * Make a RegExp expression\n     * @param field Name of the field to select (eg. \"company\")\n     * @param value Value of the regular expression to match (eg. \"BOE.*\")\n     * @param display Optional string to display that value (eg. \"Boe...\")\n     */\n    makeRegexpExpr(field: string, value: string, display?: string): string {\n        field = this.formatField(field, display);\n        return `${field}:~ ${ExprParser.escape(value)}`; // company`Boe...`:~ BOE.*\n    }\n\n\n    /**\n     * Make a refine expression\n     * @param text The text to add to the query\n     */\n    makeRefineExpr(text: string): string {\n        return `refine: ${ExprParser.escape(text)}`;\n    }\n\n\n    /**\n     * Return an expression that selects multiple values for a field\n     * (All values are ANDed)\n     * @param field Name of the field to select (eg. \"company\")\n     * @param values Values of the field to select (eg. ['IBM','APPLE'])\n     * @param display Optional string to display that value (eg. \"IBM and Apple\")\n     */\n    makeAndExpr(field: string, values: (string | ValueItem)[], display?: string): string {\n        field = this.formatField(field, display);\n        return `${field}: (${this.concatWithOperator(values, 'AND')})`; // company: (IBM AND APPLE AND GOOGLE)\n    }\n\n\n    /**\n     * Return an expression that selects multiple values for a field\n     * (All values are ORed)\n     * This function should be equivalent to using makeListExpr\n     * @param field Name of the field to select (eg. \"company\")\n     * @param values Values of the field to select (eg. ['IBM','APPLE'])\n     * @param display Optional string to display that value (eg. \"IBM and Apple\")\n     */\n    makeOrExpr(field: string, values: (string | ValueItem)[], display?: string): string {\n        field = this.formatField(field, display);\n        return `${field}: (${this.concatWithOperator(values, 'OR')})`; // company: (IBM OR APPLE OR GOOGLE)\n    }\n\n    /**\n     * Combine a list of values with AND or OR operators\n     * @param values the list of values\n     * @param operator the operator\n     */\n    private concatWithOperator(values: (string | ValueItem)[], operator: 'AND' | 'OR') {\n        return values.map(v => {\n            if (Utils.isString(v)){\n                return ExprParser.escape(v);\n            }\n            if (v.display) {\n                return `${ExprParser.escape(v.display)}:${ExprParser.escape(Utils.toSqlValue(v.value))}`;\n            }\n            return ExprParser.escape(Utils.toSqlValue(v.value));\n        }).join(' '+operator+' ');\n    }\n\n    /**\n     * Returns the negative expression of the given expression\n     * eg. NOT(person:Bill GATES)\n     * @param expr\n     */\n    makeNotExpr(expr: string): string {\n        return `NOT (${expr})`;\n    }\n\n    /**\n     * Returns an expression that is the union of given expressions\n     * eg. person:Bill GATES OR company:MICROSOFT\n     * @param exprs\n     */\n    concatOrExpr(exprs: string[]): string {\n        if (exprs.length <= 1) {\n            return exprs[0] || '';\n        }\n        return `(${exprs.join(') OR (')})`;\n    }\n\n\n    /**\n     * Returns an expression that is the intersection of given expressions\n     * eg. person:Bill GATES AND company:MICROSOFT\n     * @param exprs\n     */\n    concatAndExpr(exprs: string[]): string {\n        if (exprs.length <= 1) {\n            return exprs[0] || '';\n        }\n        return `(${exprs.join(') AND (')})`;\n    }\n\n\n    /**\n     * Returns an expression to select the given item\n     * @param field Name of the field to select (eg. \"company\")\n     * @param items A single or list of ValueItem object(s) (eg. content of a record)\n     */\n    makeFieldExpr(field: string, items: ValueItem | ValueItem[], combineWithAnd?: boolean): string {\n        if(!Utils.isArray(items)) {\n            items = [items];\n        }\n        if(items.length === 0) {\n            return \"\"; // Return a falsy string instead of \"()\" or \"``\" which would be truthy\n        }\n        return combineWithAnd? this.makeAndExpr(field, items) : this.makeOrExpr(field, items);\n    }\n\n    /**\n     * Create an expression for the given aggregation item\n     * @param aggregation The aggregation containing this object\n     * @param items The AggregationItem(s) to select\n     * @param combineWithAnd If there are multiple values, combine them with AND (instead of OR)\n     */\n    makeAggregationExpr(aggregation: Aggregation, items: AggregationItem | AggregationItem[], combineWithAnd?: boolean): string {\n        if(!Utils.isArray(items)) {\n            items = [items];\n        }\n        if(aggregation.valuesAreExpressions) {\n            const exprs = items.map(i => i.value.toString()); // .toString() is to avoid typing issues. With valuesAreExpressions = true, item.value is expected to be a string\n            return combineWithAnd? this.concatAndExpr(exprs) : this.concatOrExpr(exprs);\n        }\n        else {\n            const _items = this.asValueItems(items, aggregation.isTree);\n            return this.makeFieldExpr(aggregation.column, _items, combineWithAnd);\n        }\n    }\n\n\n    /**\n     * Combines the field with the optional display value(s)\n     * @param field\n     * @param display\n     */\n    private formatField(field: string, display?: string): string {\n        if(display) {\n            field = `${field}${ExprParser.escape(display)}`;\n        }\n        return field;\n    }\n\n\n    /**\n     * Return the AggregationItem list as a ValueItem list\n     * @param items\n     * @param isTree\n     */\n    private asValueItems(items: AggregationItem[], isTree?: boolean): ValueItem[] {\n        if(isTree) {\n            return items.map(i => {\n                return {\n                    value: (i as TreeAggregationNode).$path + \"*\",\n                    display: i.display || i.value as string\n                };\n            });\n        }\n        return items; // This works because ValueItem and AggregationItem share the value and display properties\n    }\n}\n","export default {\n    \"statusBar\": {\n        \"fullscreenTitleEnter\": \"Vollbildmodus\",\n        \"fullscreenTitleExit\": \"Volbildmodus verlassen\",\n        \"networkActivity\": \"Netzwerk-Aktivität\"\n    }\n};\n","export * from \"./public-api\";\n","import {Component, Input} from \"@angular/core\";\nimport {Record} from \"@sinequa/core/web-services\";\nimport {SelectionService} from \"../../selection.service\";\n\n@Component({\n    selector: \"sq-result-selector\",\n    templateUrl: \"./result-selector.html\"\n})\nexport class BsResultSelector {\n    @Input() record: Record;\n\n    constructor(\n        public selectionService: SelectionService) {\n    }\n\n}","<label class=\"sq-select-results-item custom-control custom-control-inline custom-checkbox\"\n    title=\"{{(record.$selected ? 'msg#resultSelector.unselectDocument' : 'msg#resultSelector.selectDocument') | sqMessage}}\"\n    [attr.aria-label]=\"(record.$selected ? 'msg#resultSelector.unselectDocument' : 'msg#resultSelector.selectDocument') | sqMessage\">\n    <input type=\"checkbox\" class=\"custom-control-input\" [checked]=\"record.$selected\" (change)=\"selectionService.toggleSelectedRecords(record, 'result')\">\n    <span class=\"custom-control-label\">&#8203;</span>\n</label>","import {Pipe, ChangeDetectorRef} from \"@angular/core\";\nimport {AbstractIntlPipe, IntlService} from \"@sinequa/core/intl\";\nimport {FormatService, ValueItem} from \"@sinequa/core/app-utils\";\nimport {CCColumn} from \"@sinequa/core/web-services\";\nimport {Utils, FieldValue} from \"@sinequa/core/base\";\n\n@Pipe({name: \"sqValue\", pure: false})\nexport class ValuePipe extends AbstractIntlPipe {\n    constructor(\n        protected formatService: FormatService,\n        intlService: IntlService,\n        changeDetectorRef: ChangeDetectorRef) {\n        super(intlService, changeDetectorRef);\n    }\n\n    updateValue(key: ValueItem | FieldValue, params: CCColumn): void {\n        super.updateValue(key, params);\n        this.value = this.formatService.formatFieldValue(key, params);\n        this.value = Utils.replace(this.value, /;/g, \"$&\\u200B\");\n    }\n}","import {Component, Input} from \"@angular/core\";\nimport {Record} from \"@sinequa/core/web-services\";\n\n@Component({\n    selector: \"sq-result-labels\",\n    templateUrl: \"./result-labels.component.html\"\n})\nexport class ResultLabels {\n    @Input() record: Record;\n    @Input() caption: string;\n    @Input() public: boolean;\n}\n","<span *ngIf=\"caption\" class=\"sq-text\">{{caption | sqMessage}}</span>\n<sq-labels [record]=\"record\" [public]=\"public\"></sq-labels>\n","import {Component, Input} from \"@angular/core\";\nimport {Record} from \"@sinequa/core/web-services\";\nimport {Query} from \"@sinequa/core/app-utils\";\nimport {ModalService} from \"@sinequa/core/modal\";\nimport {PreviewService} from \"../../preview.service\";\n\n@Component({\n    selector: \"sq-result-link-preview\",\n    templateUrl: \"./result-link-preview.html\"\n})\nexport class BsResultLinkPreview {\n    @Input() query: Query;\n    @Input() record: Record;\n    @Input() icon: string = \"fas fa-search\";\n    @Input() text: string = \"\";\n    @Input() title: string = \"\";\n    @Input() usePopup: boolean;\n    @Input() newWindow: boolean;\n    @Input() displaySimilarDocuments: boolean;\n    @Input() metadata: string[];\n\n    constructor(\n        public modalService: ModalService,\n        public previewService: PreviewService) {\n    }\n\n    click(event: MouseEvent) {\n        if (this.usePopup) {\n            if (event.ctrlKey) {\n                this.previewService.openNewWindow(this.record, this.query);\n            }\n            else {\n                this.previewService.openModal(this.record, this.query, {displaySimilarDocuments: this.displaySimilarDocuments, metadata: this.metadata});\n            }\n        }\n        else {\n            if(this.newWindow){\n                this.previewService.openNewWindow(this.record, this.query);\n            }\n            else {\n                this.previewService.openRoute(this.record, this.query);\n            }\n        }\n        return false;\n    }\n}","<a href=\"#\" (click)=\"click($event)\" title=\"{{title | sqMessage}}\">\n    <ng-container *ngIf=\"!!icon\">\n        <span class=\"{{icon}}\"></span>\n    </ng-container>\n    <ng-container *ngIf=\"!!text\">{{text | sqMessage}}</ng-container>\n</a>","import {Component, OnInit, Input, ChangeDetectionStrategy} from \"@angular/core\";\nimport {Action, ActionButtonsOptions} from \"@sinequa/components/action\";\nimport {FeedbackService} from \"../../feedback.service\";\n\n@Component({\n    selector: \"sq-feedback-menu\",\n    templateUrl: \"./feedback-menu.html\",\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BsFeedbackMenu implements OnInit {\n\n    @Input() size: string;\n    @Input() style: string;\n    @Input() rightAligned: boolean;\n\n    items: Action[];\n    options: ActionButtonsOptions;\n\n    constructor(\n        public feedbackService: FeedbackService) {\n    }\n\n    ngOnInit() {\n        this.items = this.feedbackService.buildFeedbackAction();\n        this.options = {\n            items: this.items, \n            autoAdjust: true, \n            rightAligned: this.rightAligned, \n            size: this.size, \n            style: this.style\n        };\n    }\n\n\n}","<div [sq-action-buttons]=\"options\"></div>","export default {\n    \"system\": {\n        \"date\": \"{time, selectordinal, =0 {{date, date}} other {{date, date}, {date, time, medium}}}\",\n        \"number\": \"{value, number}\",\n        \"boolean\": \"{value, select, true {wahr} other {falsch}}\",\n        \"percent\": \"{value, number, percent}\",\n        \"fieldSeparator\": \": \",\n        \"memorySize\": {\n            \"bytes\": \"{value, number, sqZeroDecimalPlaces} B\",\n            \"kb\": \"{value, number, sqZeroDecimalPlaces} KB\",\n            \"mb\": \"{value, number, sqOneDecimalPlace} MB\",\n            \"gb\": \"{value, number, sqTwoDecimalPlaces} GB\",\n            \"tb\": \"{value, number, sqThreeDecimalPlaces} TB\",\n            \"pb\": \"{value, number, sqFourDecimalPlaces} PB\"\n        }\n    },\n\n    \"error\": {\n        \"serverError\": \"Serverfehler\",\n        \"loginCancelled\": \"Anmeldung abgebrochen (login cancelled)\",\n        \"processedCredentialsError\": \"Verarbeitete Anmeldeinformationen konnten nicht ermittelt werden (unable to get processed credentials)\",\n        \"autoLoginError\": \"Anmeldung fehlgeschlagen (login failed)\",\n        \"principalSwitched\": \"Der angemeldete Benutzer hat sich geändert (the logged in user has changed)\",\n        \"userOverrideFailure\": \"Benutzerwechsel fehlgeschlagen (unable to override user)\",\n        \"responseLoadFailure\": \"Antwort konnte nicht geladen werden (failed to load response)\",\n        \"unknownError\": \"Unbekannter Fehler\"\n    },\n\n    \"language\": {\n        \"ar\": \"Arabisch\",\n        \"da\": \"Dänisch\",\n        \"de\": \"Deutsch\",\n        \"el\": \"Griechisch\",\n        \"en\": \"Englisch\",\n        \"es\": \"Spanisch\",\n        \"fi\": \"Finnisch\",\n        \"fr\": \"Französisch\",\n        \"it\": \"Italienisch\",\n        \"ja\": \"Japanisch\",\n        \"ko\": \"Koreanisch\",\n        \"nl\": \"Niederländisch\",\n        \"no\": \"Norwegisch\",\n        \"pl\": \"Polnisch\",\n        \"pt\": \"Portugiesisch\",\n        \"ro\": \"Rumänisch\",\n        \"ru\": \"Russisch\",\n        \"sv\": \"Schwedisch\",\n        \"th\": \"Thailändisch\",\n        \"zh\": \"Traditionelles Chinesisch\",\n        \"zs\": \"Vereinfachtes Chinesisch\",\n        \"zz\": \"Unbekannt\"\n    },\n};\n","export * from \"./autocomplete-list/autocomplete-list\";\nexport * from \"./field-search-items.component\";\nexport * from \"./autocomplete.module\";","export default {\n    results: {\n        missingTerms: \"Termes manquants :\",\n        resultsCount: \"{count, plural, =0 {aucune réponse} one {# réponse} other {# réponses}}\",\n    },\n    userRatings: {\n        average: \"Moyenne : {average}\"\n    },\n};\n","export default {\n    \"validation\": {\n        \"min\": \"Der Mindestwert ist {min}\",\n        \"max\": \"Der Wert kann nicht größer sein als {max}\",\n        \"required\": \"Dies ist ein Mussfeld\",\n        \"requiredTrue\": \"Dieses Feld muss ausgefüllt werden\",\n        \"email\": \"Eine gültige E-Mail-Adresse ist einzutragen\",\n        \"minLength\": \"Die Mindestlänge des Wertes beträgt {requiredLength, plural, one {# Zeichen} other {# Zeichen}}\",\n        \"maxLength\": \"Der Wert darf nicht mehr als {requiredLength, plural, one {# Zeichen} other {# Zeichen}} haben\",\n        \"pattern\": \"Der Wert ist ungültig\",\n        \"unique\": \"Dieses Feld muss eindeutig sein\",\n        \"integer\": \"Der Wert muss eine ganze Zahl sein\",\n        \"number\": \"Der Wert muss eine Nummer sein\",\n        \"date\": \"\",\n        \"range\": \"Der erste Wert muss kleiner oder gleich dem zweiten Wert sein\"\n    }\n};\n","export * from \"./public-api\";","export * from \"./metadata/metadata\";\nexport * from \"./metadata-access-lists-item/metadata-access-lists-item\";\nexport * from \"./metadata-access-lists-item-single-access-list/metadata-access-lists-item-single-access-list\";\nexport * from \"./metadata-item/metadata-item\";\nexport * from \"./metadata.module\";\nexport * from \"./messages/index\";","import {Component, Input, OnChanges, SimpleChanges} from \"@angular/core\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {Record} from \"@sinequa/core/web-services\";\n\n@Component({\n    selector: \"sq-result-missing-terms\",\n    templateUrl: \"./result-missing-terms.html\",\n    styleUrls: [\"./result-missing-terms.css\"]\n})\nexport class ResultMissingTerms implements OnChanges {\n    @Input() record: Record;\n    missingTerms: string[];\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes[\"record\"]) {\n            this.missingTerms = [];\n            if (this.record.termspresence) {\n                for (const tp of this.record.termspresence) {\n                    if (Utils.eqNC(tp.presence, \"missing\")) {\n                        this.missingTerms.push(tp.term);\n                    }\n                }\n            }\n        }\n    }\n}","<ng-container *ngIf=\"missingTerms.length > 0\">\n    <span class=\"sq-missing-terms-label sq-text\">{{'msg#results.missingTerms' | sqMessage}}</span>\n    <span class=\"sq-missing-terms sq-text\">\n        <span *ngFor=\"let term of missingTerms\" class=\"sq-missing-term\"> {{term}}</span>\n    </span>\n</ng-container>\n","import {Pipe, ChangeDetectorRef} from \"@angular/core\";\nimport {AbstractIntlPipe, IntlService} from \"@sinequa/core/intl\";\nimport {LabelsService} from \"./labels.service\";\n\n@Pipe({name: \"sqLabel\", pure: false})\nexport class LabelPipe extends AbstractIntlPipe {\n    constructor(\n        protected labelsService: LabelsService,\n        intlService: IntlService,\n        changeDetectorRef: ChangeDetectorRef) {\n        super(intlService, changeDetectorRef);\n    }\n\n    updateValue(value: string, _public?: boolean): void {\n        super.updateValue(value, _public);\n        this.value = value;\n        if (!_public) {\n            this.value = <string>this.labelsService.removePrivatePrefix(this.value);\n        }\n        this.value = this.intlService.formatMessage(this.value);\n    }\n}","export * from \"./public-api\";","export * from \"./messages/index\";\nexport * from \"./default-locales-config\";","import enNotification from \"./en\";\nimport frNotification from \"./fr\";\nimport deNotification from \"./de\";\n\nexport { enNotification, frNotification, deNotification };\n","import {Pipe, PipeTransform, OnDestroy, ChangeDetectorRef} from \"@angular/core\";\nimport {Subscription} from \"rxjs\";\nimport {IntlService} from \"./intl.service\";\nimport {Utils} from \"@sinequa/core/base\";\n\n/**\n * An abstract base class for pipes that should refresh automatically\n * when the current locale on {@link IntlService} changes. Pipes should\n * be declared as `pure: false` - the current value is cached to avoid\n * unnecessary processing\n */\n@Pipe({name: \"sqAbstractIntlPipe\", pure: false})\nexport abstract class AbstractIntlPipe implements PipeTransform, OnDestroy {\n    protected value: any = \"\";\n    protected lastValue: any;\n    protected lastParams: any;\n    protected localeChange: Subscription;\n\n    constructor(\n        protected intlService: IntlService,\n        protected changeDetectorRef: ChangeDetectorRef) {\n    }\n\n    protected updateValue(value: any, params?: any): void {\n        this.lastValue = value;\n        this.lastParams = params;\n        this.changeDetectorRef.markForCheck();\n    }\n\n    transform(value: any, params?: any): any {\n        // if we ask another time for the same key, return the last value\n        if (Utils.equals(value, this.lastValue) && Utils.equals(params, this.lastParams)) {\n            return this.value;\n        }\n\n        // set the value\n        this.updateValue(value, params);\n\n        // subscribe to localeChange event\n        if (!this.localeChange) {\n            this.localeChange = this.intlService.events.subscribe(\n                (event) => {\n                    if (!Utils.isEmpty(this.lastValue)) {\n                        this.lastValue = null;\n                        this.updateValue(value, params);\n                    }\n                });\n        }\n\n        return this.value;\n    }\n\n    ngOnDestroy(): void {\n        if (this.localeChange) {\n            this.localeChange.unsubscribe();\n        }\n    }\n}\n","import {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\n\nimport {IntlModule} from \"@sinequa/core/intl\";\nimport {ValidationModule} from \"@sinequa/core/validation\";\n\nimport {BsModalModule} from \"@sinequa/components/modal\";\nimport {BsActionModule} from \"@sinequa/components/action\";\nimport {UtilsModule} from \"@sinequa/components/utils\";\n\nimport {BsEditUserSettings} from \"./edit-user-settings/edit-user-settings\";\nimport {BsUserSettingsEditor} from './user-settings-editor/user-settings-editor';\nimport {BsUserMenuComponent} from './user-menu/user-menu.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule, ReactiveFormsModule,\n\n        IntlModule,\n        ValidationModule,\n\n        BsModalModule,\n        BsActionModule,\n        UtilsModule,\n    ],\n    declarations: [\n        BsEditUserSettings, BsUserSettingsEditor, BsUserMenuComponent\n    ],\n    exports: [\n        BsEditUserSettings, BsUserSettingsEditor, BsUserMenuComponent\n    ],\n})\nexport class BsUserSettingsModule {\n}\n","import { Injectable, Inject } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport { SqHttpClient } from \"./http-client\";\nimport { HttpService } from \"./http.service\";\nimport { START_CONFIG, StartConfig } from \"./start-config.web.service\";\nimport { Record } from \"./query.web.service\";\n\n/**\n * A service for calling the similardocuments web service\n */\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SimilarDocumentsWebService extends HttpService {\n    constructor(\n        @Inject(START_CONFIG) startConfig: StartConfig,\n        private httpClient: SqHttpClient) {\n        super(startConfig);\n    }\n\n    /**\n     * Gets an array of documents (records) similar to the passed document\n     *\n     * @param sourceDocumentId The id of the document for which to retrieve similar documents\n     * @param queryName The name of the query\n     */\n    public get(sourceDocumentId: string, queryName: string): Observable<Record[]> {\n      return this.httpClient.post<{data: Record[]}>(this.makeUrl(\"similardocuments\"),\n        {\n          app: this.appName,\n          sourceDocumentId,\n          query: {\n            name: queryName\n          }\n        }).pipe(map((response) => response.data));\n    }\n}\n","/* Dépendences fonctionnelles internes d'Angular */\nimport { Injectable } from \"@angular/core\";\nimport {\n    FormControl,\n    ValidatorFn,\n    AsyncValidatorFn,\n    Validators,\n    AbstractControl,\n} from \"@angular/forms\";\n\n/* Services */\nimport { Utils } from \"@sinequa/core/base\";\nimport { SearchService } from \"@sinequa/components/search\";\nimport {\n    AppService,\n    Expr,\n    ExprOperator,\n    FormatService,\n    Query,\n    advancedFacetPrefix,\n    ExprBuilder,\n    ValueItem,\n} from \"@sinequa/core/app-utils\";\nimport { ValidationService } from \"@sinequa/core/validation\";\nimport { CCColumn } from \"@sinequa/core/web-services\";\n\n/**\n * Defines the possible basic types of an advanced value\n */\nexport type BaseAdvancedValue = string | number | Date | boolean | undefined;\n\n/**\n * Defines an advanced value type as either a single basic advanced value or an array of basic advanced values\n */\nexport type AdvancedValue = BaseAdvancedValue | BaseAdvancedValue[];\n\nexport interface AdvancedFormValidators {\n    min: (min: string | number | Date, field: string) => ValidatorFn;\n    max: (max: string | number | Date, field: string) => ValidatorFn;\n    required: ValidatorFn;\n    email: ValidatorFn;\n    pattern: (pattern: string | RegExp) => ValidatorFn;\n    integer: (field: string) => ValidatorFn;\n    number: (field: string) => ValidatorFn;\n    date: (field: string) => ValidatorFn;\n    range: (field: string) => ValidatorFn;\n}\n\n@Injectable({\n    providedIn: \"root\",\n})\nexport class AdvancedService {\n    /**\n     * Default form validators packaged within SBA to standardize advanced-search validation\n     */\n    public readonly validators: AdvancedFormValidators = {\n        min: (min, field) =>\n            this.validationService.minValidator(min, this._parser(field)),\n        max: (max, field) =>\n            this.validationService.maxValidator(max, this._parser(field)),\n        required: Validators.required,\n        email: Validators.email,\n        pattern: (pattern: string | RegExp) => Validators.pattern(pattern),\n        integer: (field) =>\n            this.validationService.integerValidator(this._parser(field)),\n        number: (field) =>\n            this.validationService.numberValidator(this._parser(field)),\n        date: (field) =>\n            this.validationService.dateValidator(this._parser(field)),\n        range: (field) =>\n            this.validationService.rangeValidator(\n                this._rangeType(field),\n                this._parser(field)\n            ),\n    };\n\n    constructor(\n        public appService: AppService,\n        public searchService: SearchService,\n        public validationService: ValidationService,\n        public formatService: FormatService,\n        public exprBuilder: ExprBuilder\n    ) {}\n\n    /**\n     * Return a standard FormControl compatible with a select component\n     * @param field\n     * @param validators optional validators to be added to the returned FormControl\n     * @param asyncValidators optional asyncValidators to be added to the returned FormControl\n     * @param query Query where to fetch advanced values, if omitted, use searchService.query\n     */\n    public createSelectControl(\n        field: string,\n        validators?: ValidatorFn[],\n        asyncValidators?: AsyncValidatorFn[],\n        query = this.searchService.query\n    ): FormControl {\n        const value = this.getValue(field, query);\n        return this.createControl(value, validators, asyncValidators);\n    }\n\n    /**\n     * Return a standard FormControl compatible with a range-input component\n     * @param field\n     * @param validators optional validators to be added to the returned FormControl\n     * @param asyncValidators optional asyncValidators to be added to the returned FormControl\n     * @param query Query where to fetch advanced values, if omitted, use searchService.query\n     */\n    public createRangeControl(\n        field: string,\n        validators?: ValidatorFn[],\n        asyncValidators?: AsyncValidatorFn[],\n        query = this.searchService.query\n    ): FormControl {\n        const value = this.getRangeValue(field, query);\n        return this.createControl(value, validators, asyncValidators);\n    }\n\n    /**\n     * Return a standard FormControl compatible with a text input component\n     * @param field\n     * @param validators optional validators to be added to the returned FormControl\n     * @param asyncValidators optional asyncValidators to be added to the returned FormControl\n     * @param query Query where to fetch advanced values, if omitted, use searchService.query\n     */\n    public createInputControl(\n        field: string,\n        validators?: ValidatorFn[],\n        asyncValidators?: AsyncValidatorFn[],\n        query = this.searchService.query\n    ): FormControl {\n        const value = this.getValue(field, query);\n        return this.createControl(value, validators, asyncValidators);\n    }\n\n    /**\n     * Return a standard FormControl compatible with a multi-value text input component\n     * @param field\n     * @param validators optional validators to be added to the returned FormControl\n     * @param asyncValidators optional asyncValidators to be added to the returned FormControl\n     * @param query Query where to fetch advanced values, if omitted, use searchService.query\n     */\n    public createMultiInputControl(\n        field: string,\n        validators?: ValidatorFn[],\n        asyncValidators?: AsyncValidatorFn[],\n        query = this.searchService.query\n    ): FormControl {\n        const value = this.getValue(field, query);\n        return this.createControl(value, validators, asyncValidators);\n    }\n\n    /**\n     * Return a standard FormControl compatible with a checkbox component\n     * @param field\n     * @param validators optional validators to be added to the returned FormControl\n     * @param asyncValidators optional asyncValidators to be added to the returned FormControl\n     * @param query Query where to fetch advanced values, if omitted, use searchService.query\n     */\n    public createCheckboxControl(\n        field: string,\n        validators?: ValidatorFn[],\n        asyncValidators?: AsyncValidatorFn[],\n        query = this.searchService.query\n    ): FormControl {\n        const value = this.getBooleanValue(field, query);\n        return this.createControl(value, validators, asyncValidators);\n    }\n\n    /**\n     * Reset the supplied AbstractControl (and its validation) and sets its value to undefined\n     * @param control\n     */\n    public resetControl(control: AbstractControl) {\n        control.reset();\n        control.setValue(undefined);\n    }\n\n    /**\n     * Reset the supplied AbstractControl (and its validation) and sets its value to [undefined, undefined]\n     * @param control\n     */\n    public resetRangeControl(control: AbstractControl) {\n        control.reset();\n        control.setValue([undefined, undefined]);\n    }\n\n    /**\n     * Retrieve the value (ValueItem | ValueItem[] | undefined) to be set to the FormControl from the Query\n     * @param field\n     * @param query Query where to fetch advanced values, if omitted, use searchService.query\n     */\n    public getValue(\n        field: string,\n        query = this.searchService.query\n    ): ValueItem | ValueItem[] | undefined {\n        const expr = this.getAdvancedExpr(field, query);\n        if (expr) {\n            const value = this.getValueFromExpr(expr);\n            return this.formatValueItems(field, value);\n        }\n        return undefined;\n    }\n\n    /**\n     * Retrieve the boolean value to be set to the FormControl from the Query\n     * @param field\n     * @param query Query where to fetch advanced values, if omitted, use searchService.query\n     */\n    public getBooleanValue(\n        field: string,\n        query = this.searchService.query\n    ): boolean | undefined {\n        const expr = this.getAdvancedExpr(field, query);\n        if (expr) {\n            const value = this.getValueFromExpr(expr) as ValueItem;\n            return this.formatAdvancedValue(field, value.value as boolean) as boolean;\n        }\n        return undefined;\n    }\n\n    /**\n     * Retrieve the range value to be set to the FormControl from the Query\n     * @param field\n     * @param query Query where to fetch advanced values, if omitted, use searchService.query\n     */\n    public getRangeValue(\n        field: string,\n        query = this.searchService.query\n    ): AdvancedValue {\n        const expr = this.getAdvancedExpr(field, query);\n        if (expr) {\n            const value = this.getValueFromExpr(expr);\n            if (Utils.isArray(value)) {\n                return value.map((e) =>\n                    this.formatAdvancedValue(\n                        field,\n                        e.value as string | Date | number\n                    )\n                ) as AdvancedValue;\n            } else {\n                const _value = this.formatAdvancedValue(\n                    field,\n                    value.value as string | Date | number\n                ) as BaseAdvancedValue;\n                if (expr.operator === ExprOperator.gte) {\n                    return [_value, undefined];\n                } else if (expr.operator === ExprOperator.lte) {\n                    return [undefined, _value];\n                }\n            }\n        }\n        return [undefined, undefined];\n    }\n\n    /**\n     * Return the select expression of an advanced filter\n     * @param field\n     * @param query Query where to fetch advanced values, if omitted, use searchService.query\n     */\n    protected getAdvancedExpr(\n        field: string,\n        query = this.searchService.query\n    ): Expr | undefined {\n        let expr: Expr | string;\n        const expression = query.findSelect(advancedFacetPrefix + field)\n            ?.expression;\n        if (expression) {\n            expr = this.appService.parseExpr(expression);\n            if (expr instanceof Expr) {\n                return expr;\n            }\n        }\n        return undefined;\n    }\n\n    /**\n     * Extract values from an expression\n     * @param expr\n     */\n    protected getValueFromExpr(expr: Expr): ValueItem | ValueItem[] {\n        let value: ValueItem | ValueItem[] | undefined;\n        if (Utils.isString(expr.value) && expr.value.indexOf(\"[\") > -1) {\n            value = JSON.parse(expr.value.replace(/`/g, '\"')).map((e) => ({\n                value: e.value!,\n                display: !!e.display ? e.display : e.value,\n            }));\n        } else if (expr.operands?.length > 0) {\n            value = expr.operands.map((e) => ({\n                value: e.value!,\n                display: !!e.display ? e.display : e.value,\n            }));\n        }\n        if (!value) {\n            if (expr.values && expr.values.length > 1) {\n                value = expr.values.map((e) => ({ value: e, display: e }));\n            } else {\n                value = {\n                    value: expr.value!,\n                    display: !!expr.display ? expr.display : expr.value,\n                };\n            }\n        }\n        return value;\n    }\n\n    /**\n     * Sets a select on a query (defaults to searchService.query) for a given\n     * field and value(s)\n     * @param field\n     * @param value\n     * @param query Query where to fetch advanced values, if omitted, use searchService.query\n     * @param combineWithAnd\n     */\n    public setSelect(\n        field: string,\n        value: ValueItem | ValueItem[] | undefined,\n        query?: Query,\n        combineWithAnd?: boolean\n    ) {\n        let expr;\n        if (value !== undefined) {\n            const _value = this.asValueItems(value, field);\n            if (combineWithAnd) {\n                expr = this.exprBuilder.makeAndExpr(field, _value);\n            } else {\n                expr = this.exprBuilder.makeOrExpr(field, _value);\n            }\n        }\n        // When expr is not defined, this simply removes the selection\n        this.setAdvancedSelect(field, expr, query);\n    }\n\n    /**\n     * Sets a select on a query (defaults to searchService.query) for a given\n     * field and a boolean value\n     * @param field\n     * @param value\n     * @param discardFalsy by default it is 'false', so a false value is used to be undefined\n     * @param query\n     */\n    public setBooleanSelect(\n        field: string,\n        value: boolean | undefined,\n        allowFalsy: boolean = false,\n        query?: Query\n    ) {\n        let expr;\n        if (value === true || (value === false && allowFalsy)) {\n            expr = this.exprBuilder.makeBooleanExpr(field, value);\n        }\n        // When expr is not defined, this simply removes the selection\n        this.setAdvancedSelect(field, expr, query);\n    }\n\n    /**\n     * Sets a select on a query (defaults to searchService.query) for a given\n     * field, operator and value\n     * @param field\n     * @param value\n     * @param operator\n     * @param query\n     */\n    public setNumericalSelect(\n        field: string,\n        value: string | Date | number | ValueItem | undefined,\n        operator: \">\" | \">=\" | \"<\" | \"<=\" | \"=\" | \"<>\",\n        query?: Query\n    ) {\n        let expr;\n        if (value !== undefined) {\n            if (this._isValueItem(value)) {\n                value = value.value as string | Date | number;\n            }\n            value = this.parse(value, field);\n            expr = this.exprBuilder.makeNumericalExpr(field, operator, value);\n        }\n        // When expr is not defined, this simply removes the selection\n        this.setAdvancedSelect(field, expr, query);\n    }\n\n    /**\n     * Sets a select on a query (defaults to searchService.query) for a given\n     * field and range of values\n     * @param field\n     * @param range\n     * @param query\n     */\n    public setRangeSelect(\n        field: string,\n        range: (string | Date | number)[] | undefined,\n        query?: Query\n    ) {\n        let expr: string | undefined;\n        if (range && range.length === 2) {\n            const from = this.parse(range[0] || undefined, field);\n            const to = this.parse(range[1] || undefined, field);\n            if (from && to) {\n                expr = this.exprBuilder.makeRangeExpr(field, from, to);\n            } else if (from) {\n                expr = this.exprBuilder.makeNumericalExpr(field, \">=\", from);\n            } else if (to) {\n                expr = this.exprBuilder.makeNumericalExpr(field, \"<=\", to);\n            }\n        }\n        // When expr is not defined, this simply removes the selection\n        this.setAdvancedSelect(field, expr, query);\n    }\n\n    /**\n     * Sets a select for a given field and expression on the query (defaults to searchService.query)\n     * @param query Query where to fetch advanced values, if omitted, use searchService.query\n     * @param field\n     * @param expr\n     */\n    protected setAdvancedSelect(\n        field: string,\n        expr: string | undefined,\n        query = this.searchService.query\n    ) {\n        query.removeSelect(advancedFacetPrefix + field);\n        if (expr) {\n            query.addSelect(expr, advancedFacetPrefix + field);\n        }\n    }\n\n    /**\n     * Remove a specific advanced value by its field name.\n     * By default, Trigger search() action\n     * @param field\n     * @param query Query from which will remove the specific advanced value, if omitted, use searchService.query\n     * @param search\n     */\n    public removeAdvancedValue(\n        field: string,\n        search: boolean = true,\n        query: Query = this.searchService.query\n    ): void {\n        if (field) {\n            query.removeSelect(advancedFacetPrefix + field);\n            this.searchService.setQuery(query, false);\n            if (search) {\n                this.searchService.search();\n            }\n        }\n    }\n\n    /**\n     * Remove all related advanced-search select(s) from a given query and update searchService.query accordingly\n     * By default, Trigger search() action\n     * @param query Query from which will remove all advanced values, if omitted, use searchService.query\n     * @param search\n     */\n    public resetAdvancedValues(\n        search: boolean = true,\n        query: Query = this.searchService.query\n    ): void {\n        this.searchService.setQuery(query.toStandard(), false);\n        if (search) {\n            this.searchService.search();\n        }\n    }\n\n    /**\n     * Transforms a value to a parsed ValueItem[]\n     * @param value\n     * @param field\n     */\n    protected asValueItems(\n        value: ValueItem | ValueItem[],\n        field: string\n    ): ValueItem[] {\n        if (this._isValueItemArray(value)) {\n            return value.map((val) => ({\n                value: this.parse(val.value, field) as\n                    | string\n                    | Date\n                    | number\n                    | boolean,\n                display: val.display,\n            }));\n        }\n        return [\n            {\n                value: this.parse(value.value, field) as\n                    | string\n                    | Date\n                    | number\n                    | boolean,\n                display: value.display,\n            },\n        ];\n    }\n\n    public formatValueItems(\n        field: string,\n        value: ValueItem | ValueItem[]\n    ): ValueItem | ValueItem[] {\n        if (this._isValueItemArray(value)) {\n            return value.map((val) => this.formatValueItem(field, val));\n        }\n        return this.formatValueItem(field, value);\n    }\n\n    /**\n     * Format the display property of the ValueItem according its related column definition\n     * @param field\n     * @param value\n     */\n    protected formatValueItem(field: string, value: ValueItem): ValueItem {\n        const column = this.appService.getColumn(field);\n        if (column) {\n            value.display = (this.formatBaseAdvancedValue(\n                value.display!,\n                column\n            ) as string | Date | number | boolean).toString();\n        }\n        return value;\n    }\n\n    /**\n     * Format a given advanced value according to its column definition\n     * @param field\n     * @param value\n     */\n    public formatAdvancedValue(\n        field: string,\n        value: AdvancedValue\n    ): AdvancedValue {\n        if (value) {\n            const column = this.appService.getColumn(field);\n            if (column) {\n                if (Utils.isArray(value)) {\n                    return value.map((v) =>\n                        v ? this.formatBaseAdvancedValue(v, column) : v\n                    );\n                }\n                return this.formatBaseAdvancedValue(value, column);\n            }\n        }\n        return value;\n    }\n\n    protected formatBaseAdvancedValue(\n        value: BaseAdvancedValue,\n        column: CCColumn\n    ): BaseAdvancedValue {\n        if (value) {\n            value = this.castAdvancedValue(value, column);\n            return column.formatter ? this.formatService.formatValue(value!, column) : value;\n        }\n        return value;\n    }\n\n    /**\n     * Cast a given value as per its column definition\n     * @param value\n     * @param column\n     */\n    public castAdvancedValue(\n        value: BaseAdvancedValue,\n        column: CCColumn | undefined\n    ): BaseAdvancedValue {\n        if (column) {\n            if (Utils.isString(value)) {\n                if (AppService.isDate(column)) {\n                    value = Utils.toDate(value);\n                } else if (AppService.isInteger(column)) {\n                    if (Utils.testInteger(value)) {\n                        value = Utils.toInt(value);\n                    }\n                } else if (AppService.isDouble(column)) {\n                    if (Utils.testFloat(value)) {\n                        value = Utils.toNumber(value);\n                    }\n                } else if (AppService.isBoolean(column)) {\n                    value = Utils.isTrue(value);\n                }\n            }\n        }\n        return value;\n    }\n\n    /**\n     * Create a generic FormControl\n     * @param value value of the FormControl\n     * @param validators optional validators to be added to the returned FormControl\n     * @param asyncValidators optional asyncValidators to be added to the returned FormControl\n     */\n    protected createControl(\n        value: AdvancedValue | ValueItem | ValueItem[],\n        validators?: ValidatorFn[],\n        asyncValidators?: AsyncValidatorFn[]\n    ): FormControl {\n        return new FormControl(\n            {\n                value,\n                disabled: false,\n            },\n            {\n                validators: !!validators ? validators : [],\n                asyncValidators: !!asyncValidators ? asyncValidators : [],\n                updateOn: \"change\",\n            }\n        );\n    }\n\n    /**\n     * Parse a value according to its column definition\n     * @param value\n     * @param field\n     */\n    protected parse<T>(value: T, field: string): T | string {\n        const parser = this._parser(field);\n        if (parser && Utils.isString(value)) {\n            return this.formatService.parseValue(value, parser);\n        }\n        return value;\n    }\n\n    /**\n     * Return the parser if existing in the given field\n     * @param field\n     */\n    protected _parser(field: string): string | undefined {\n        const column = this.appService.getColumn(field);\n        return column ? column.parser : undefined;\n    }\n\n    protected _rangeType(field: string): string | number | Date {\n        const column = this.appService.getColumn(field);\n        let rangeType;\n        if (\n            column &&\n            (AppService.isInteger(column) || AppService.isDouble(column))\n        ) {\n            rangeType = 0;\n        } else if (column && AppService.isDate(column)) {\n            rangeType = new Date();\n        } else {\n            rangeType = \"\";\n        }\n        return rangeType;\n    }\n\n    /**\n     * Return `true` if the passed value is an `ValueItem[]`\n     */\n    protected _isValueItemArray(value: any): value is ValueItem[] {\n        if (Utils.isArray(value)) {\n            const condition = (element) => this._isValueItem(element);\n            return value.every(condition);\n        }\n        return false;\n    }\n\n    /**\n     * Return `true` if the passed value is an `ValueItem`\n     */\n    protected _isValueItem(value: any): value is ValueItem {\n        if (\n            Utils.isObject(value) &&\n            !Utils.isArray(value) &&\n            !Utils.isDate(value)\n        ) {\n            if (value.hasOwnProperty(\"value\")) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n","import {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {Autocomplete} from \"../autocomplete.directive\";\nimport {AutocompleteFieldSearch} from \"../autocomplete-field-search.directive\";\nimport {BsAutocompleteList} from \"./autocomplete-list/autocomplete-list\";\nimport {BsFieldSearchItemsComponent} from './field-search-items.component';\nimport {UtilsModule} from '@sinequa/components/utils';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        UtilsModule\n    ],\n    declarations: [\n        BsAutocompleteList, BsFieldSearchItemsComponent, Autocomplete, AutocompleteFieldSearch\n    ],\n    exports: [\n        BsAutocompleteList, BsFieldSearchItemsComponent, Autocomplete, AutocompleteFieldSearch\n    ]\n})\nexport class BsAutocompleteModule {\n}","import {Injectable} from \"@angular/core\";\nimport {AuditWebService, AuditEvent} from \"@sinequa/core/web-services\";\nimport {AppService} from \"@sinequa/core/app-utils\";\nimport {NotificationsService} from \"@sinequa/core/notification\";\nimport {ModalService, ModalResult} from \"@sinequa/core/modal\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {Action} from \"@sinequa/components/action\";\n\nexport const AuditFeedbackType = \"UserFeedback\";\n\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class FeedbackService {\n\n    constructor(\n        public auditService: AuditWebService,\n        public modalService: ModalService,\n        public appService: AppService,\n        public notificationsService: NotificationsService\n        ) {\n    }\n\n    public sendUserFeedback(type: string, message: string, thankUser: boolean){\n        const event : AuditEvent = {\n            type: AuditFeedbackType,\n            detail: {\n                app: this.appService.appName,\n                message: type,\n                detail: message\n            }\n        };\n        Utils.subscribe(this.auditService.notify([event]),\n            (result) => {\n                if(thankUser)\n                    this.notificationsService.success(\"msg#feedback.thankyou\");\n        });\n    }\n\n    public buildFeedbackAction() : Action[] {\n        return [new Action({\n            text: \"msg#feedback.text\",\n            title: \"msg#feedback.title\",\n            icon: \"fas fa-comment\",\n            headerGroup: true,\n            children: [\n                this.createAction(\"content\", \"msg#feedback.content.text\", \"msg#feedback.content.title\", \"far fa-file-alt fa-fw\"),\n                this.createAction(\"ui\", \"msg#feedback.ui.text\", \"msg#feedback.ui.title\", \"fas fa-desktop fa-fw\"),\n                this.createAction(\"lang\", \"msg#feedback.lang.text\", \"msg#feedback.lang.title\", \"far fa-comments fa-fw\"),\n                this.createAction(\"other\", \"msg#feedback.other.text\", \"msg#feedback.other.title\", \"far fa-lightbulb fa-fw\"),\n            ]\n        })];\n    }\n\n    public createAction(type:string, text:string, title:string, icon:string) : Action {\n        return new Action({\n            text: text,\n            title: title,\n            icon: icon,\n            action: () => this.openFeedbackModal(type, title)\n        });\n    }\n\n    public openFeedbackModal(type: string, title: string){\n        const model = {title: 'msg#feedback.title', message: title, output: '', buttons: [], rowCount: 5};\n        this.modalService.prompt(model)\n            .then((result) => {\n                if (result === ModalResult.OK && model.output.trim() !== \"\") {\n                    this.sendUserFeedback(type, model.output, true);\n                }\n            });\n    }\n}","import {Component, Input} from \"@angular/core\";\nimport {ActionItemOptions} from \"..\";\nimport {Action} from \"../../action\";\n\nexport interface ActionButtonsOptions {\n    items: Action[] | Action;\n    size?: string;\n    style?: string;\n    autoAdjust?: boolean;\n    autoAdjustBreakpoint?: string;\n    rightAligned?: boolean;\n}\n\n@Component({\n    selector: \"[sq-action-buttons]\",\n    templateUrl: \"./action-buttons.html\"\n})\nexport class BsActionButtons {\n    private _options: ActionButtonsOptions;\n    \n    @Input(\"sq-action-buttons\")\n    set options (opts: ActionButtonsOptions) {\n        this._options = opts;\n    }\n    get options(): ActionButtonsOptions {\n        return this._options;\n    }\n\n    get sizeClass(): string {\n        return this._options.size ? `btn-${this._options.size}` : \"\";\n    }\n\n    get styleClass(): string {\n        return this._options.style ? `btn-${this._options.style}` : \"btn-light\";\n    }\n    \n    get itemsVisible(): Action[] {\n        // hidden items are not displayed\n        return (Array.isArray(this._options.items)) ? this._options.items.filter(item => !item.hidden) : this._options.items.hidden ? [] : [this._options.items];\n    }\n    \n    getActionItemOptions(item: Action): ActionItemOptions {\n        return ({...this._options, item, inMenu: false});\n    }\n\n    itemClick(item: Action, event: UIEvent) {\n        if (!item.disabled && item.action) {\n            item.action(item, event);\n        }\n        if (item.href === \"#\" || (!!item.href && item.disabled)) {\n            event.preventDefault();\n        }\n    }\n}","<ng-container *ngFor=\"let item of itemsVisible\">\n    <a *ngIf=\"item.href\" class=\"btn-text\" [attr.href]=\"!item.disabled ? item.href : null\" (click)=\"itemClick(item, $event)\" [sq-action-item]=\"getActionItemOptions(item)\"></a>\n    <ng-container *ngIf=\"!item.href\">\n        <div *ngIf=\"item.hasChildren\" class=\"btn-group dropdown\" [sq-action-item]=\"getActionItemOptions(item)\"></div>\n        <button *ngIf=\"!item.hasChildren\" type=\"button\" class=\"btn {{styleClass}} {{sizeClass}} {{item.selected ? 'active' : ''}} {{item.disabled ? 'disabled' : ''}}\" [sq-action-item]=\"getActionItemOptions(item)\" (click)=\"itemClick(item, $event)\" sqTooltip=\"{{item.title | sqMessage:item.messageParams}}\" [attr.aria-label]=\"item.title | sqMessage:item.messageParams\"></button>\n    </ng-container>\n</ng-container>","export default {\n    \"modal\": {\n        \"login\": {\n            \"title\": \"Anmeldung\",\n            \"userName\": \"Benutzername\",\n            \"password\": \"Passwort\",\n            \"singleSignOn\": \"Einmalanmeldung (Single sign-on)\",\n            \"signInWith\": \"Anmelden mit...\"\n        }\n    }\n};\n","import {Injectable} from \"@angular/core\";\nimport {Observable, of} from \"rxjs\";\nimport {map, flatMap} from \"rxjs/operators\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {SuggestQueryWebService, SuggestFieldWebService, Suggestion, EngineType} from \"@sinequa/core/web-services\";\nimport {AppService, Query} from \"@sinequa/core/app-utils\";\nimport {AutocompleteItem} from './autocomplete.directive';\n\n@Injectable({\n    providedIn: \"root\"\n})\nexport class SuggestService {\n\n    fieldCategory: string;\n\n    constructor(\n        private suggestQueryWebService: SuggestQueryWebService,\n        private suggestFieldWebService: SuggestFieldWebService,\n        private appService: AppService) {\n        this.fieldCategory = \"$field$\";\n    }\n\n    private addFields(text: string, suggests: Suggestion[]) {\n        if (text.includes(\" \")) {\n            return;\n        }\n        for (const field of this.appService.fields) {\n            if (Utils.startsWith(field, text)) {\n                suggests.unshift({\n                    category: this.fieldCategory,\n                    display: field\n                });\n            }\n        }\n    }\n\n    get(suggestQuery: string, text: string, fields?: string | string[], query?: Query): Observable<Suggestion[]> {\n        if (!this.appService.ccquery) {\n            return of([]);\n        }\n        const observable = this.suggestQueryWebService.get(suggestQuery, text, this.appService.ccquery.name, fields);\n        return observable.pipe(\n            flatMap(suggests => {\n                if (!fields) {\n                    if (!suggests) {\n                        suggests = [];\n                    }\n                    this.addFields(text, suggests);\n                }\n                else {\n                    if (!suggests || suggests.length === 0) {\n                        const _fields = Utils.isArray(fields) ? fields : [fields];\n                        fields = [];\n                        for (const field of _fields) {\n                            const column = this.appService.getColumn(field);\n                            if (!!column && (column.eType === EngineType.csv || AppService.isScalar(column))) {\n                                fields.push(field);\n                            }\n                        }\n                        if (fields.length > 0) {\n                            return this.suggestFieldWebService.get(text, fields, query).pipe(\n                                map((suggests) => {\n                                    suggests.forEach(value => value.display = Utils.toSqlValue(value.display)); // because dates get automatically converted by the interceptor\n                                    return suggests;\n                                }));\n                        }\n                    }\n                }\n                return of(suggests);\n            }));\n    }\n\n\n    /**\n     * Search for the input text in a list of objects and return autocomplete items asynchronously\n     * @param query The text to search for\n     * @param data The list of objects\n     * @param primaryText A function that returns the primary text input given the object\n     * @param secondaryText An (optional) function that returns a list of secondary text inputs given the object\n     */\n    public async searchData<T>(\n        category: string,\n        query: string,\n        data: T[],\n        primaryText: (obj:T) => string,\n        secondaryText?: (obj:T) => string[],\n        label?: string) : Promise<AutocompleteItem[]> {\n\n        return data\n            .map(obj => SuggestService.findMatch(primaryText(obj), query,\n                !!secondaryText ? secondaryText(obj) : [], obj)) // Look for matches in all saved queries\n            .filter(item => !!item) // Keep only the matches\n            .sort((a,b) => b!.score - a!.score) // Sort by decreasing score\n            .map(item => {\n                item = item!;\n                return {    // Make an autocomplete item\n                    display: item.display,\n                    displayHtml: item.displayHtml,\n                    category,\n                    label: label || category,\n                    data: item.data,\n                    score: item.score\n                };\n            } );\n    }\n\n    /**\n     * Searches for the query string inside a given text. Returns a match object containing:\n     * - a score proportional to the number and quality of matches\n     * - the text formatted as HTML with the query found in the text\n     * @param text The text to search\n     * @param query The string to search for\n     * @param secondaryText Secondary fields to search input, with less importance than the primary field\n     * @param data A data object to be included in the match object (for convenience mostly)\n     */\n    public static findMatch(text: string, query: string, secondaryText?: string[], data?: any): {display: string, displayHtml: string, score: number, data?:any} | undefined {\n\n        if(!text || !query){\n            return undefined;\n        }\n\n        // pass text and query in lower case and no accent to make search case insensitive\n        const textLower = Utils.removeAccents(text.toLowerCase());\n        query = Utils.removeAccents(query.toLowerCase());\n        let i = 0;\n        const matches: number[] = [];\n        let score = 0;\n\n        // Compute score of the match\n        i = textLower.indexOf(query);\n        while(i !== -1){    // While there's a match\n            matches.push(i);\n            if(i === 0){    // Start of the text\n                score += 4;\n            }\n            else if(textLower[i-1] === \" \"){ // Start of a word\n                score += 2;\n            }\n            else {\n                score += 1; // Middle of a word\n            }\n            i = textLower.indexOf(query, i+query.length);\n        }\n\n        // Format HTML display\n        let html = text;\n        for(let j=matches.length-1; j>=0; j--) { // decreasing order so the indices remain valid\n            i = matches[j];\n            html = html.slice(0, i).concat(\"<strong>\", html.slice(i, i+query.length), \"</strong>\", html.slice(i+query.length));\n        }\n\n        // Secondary text\n        if(secondaryText) {\n            secondaryText\n                .map(t => this.findMatch(t, query)) // Search each secondary text for matches\n                .filter(item => !!item) // Keep only the matches\n                .sort((a,b) => b!.score - a!.score) // Sort by decreasing score\n                .forEach(match => {\n                    match = match!;\n                    score += match.score / 2;  // Secondary matches added to the score, but count half\n                    html += \" <small>\" + match.displayHtml + \"</small>\"; // Concatenate secondary match html to the main html\n                });\n        }\n\n        if(score > 0){\n            return {\n                display: text,\n                displayHtml: html,\n                score: score,\n                data: data\n            };\n        }\n        return undefined;\n    }\n}","export default {\n    \"modal\": {\n        \"buttons\": {\n            \"ok\": \"OK\",\n            \"cancel\": \"Abbrechen\",\n            \"yes\": \"Ja\",\n            \"no\": \"Nein\",\n            \"abort\": \"Abbrechen\",\n            \"retry\": \"Wiederholen\",\n            \"ignore\": \"Ignorieren\"\n        },\n\n        \"confirm\": {\n            \"title\": \"Bestätigen\"\n        },\n        \"prompt\": {\n            \"title\": \"Geben Sie einen Wert ein\"\n        }\n    }\n};\n","import { Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { AppService } from '@sinequa/core/app-utils';\nimport { LoginService } from '@sinequa/core/login';\nimport { IntlService } from '@sinequa/core/intl';\nimport { SearchService } from '@sinequa/components/search';\nimport { FEATURES } from '../../config';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(\n    public loginService: LoginService,\n    public searchService: SearchService,\n    private titleService: Title,\n    private intlService: IntlService,\n    private appService: AppService) { }\n\n  /**\n   * On initialization set the page title\n   */\n  ngOnInit() {\n    this.titleService.setTitle(this.intlService.formatMessage(\"msg#app.name\"));\n  }\n\n  /**\n   * Manage login and logout\n   */\n  toggleLogin(){\n    if (!!this.loginService.complete) {\n      this.loginService.logout();\n    }\n    else {\n      this.loginService.login();\n    }\n    return false;\n  }\n\n  /**\n   * Whether the UI is in dark or light mode\n   */\n  isDark(): boolean {\n    return document.body.classList.contains(\"dark\");\n  }\n\n  /**\n   * Toggle dark mode\n   */\n  toggleDark() {\n    document.body.classList.toggle(\"dark\");\n    localStorage.setItem('sinequa-theme', this.isDark()? 'dark' : 'normal');\n    return false;\n  }\n\n  /**\n   * Returns the list of features activated in the top right menus.\n   * The configuration from the config.ts file can be overriden by configuration from\n   * the app configuration on the server\n   */\n  public get features(): string[] {\n    if(this.appService.app && this.appService.app.data && this.appService.app.data.features){\n      return <string[]> <any> this.appService.app.data.features;\n    }\n    return FEATURES;\n  }\n\n  /**\n   * Returns the sublist of features which gets displayed on the home page.\n   */\n  public get homeFacets(): string[] {\n    return this.features.filter(feature => ['recent-documents', 'recent-queries', 'saved-queries', 'baskets'].indexOf(feature) !== -1);\n  }\n\n  /**\n   * Return bootstrap classes allowing to position and size each facet on the home page.\n   * @param i The index of the facet in the list\n   * @param n The number of facets\n   */\n  public facetSizing(i: number, n: number): string {\n    switch(n){\n      case 1: return 'offset-md-3 col-md-6 offset-lg-4 col-lg-4';\n      case 2: return i === 0 ? 'offset-md-1 col-md-5 offset-lg-3 col-lg-3' : 'col-md-5 col-lg-3';\n      case 3: return i === 0 ? 'offset-md-1 col-md-5 offset-lg-0 col-lg-4' : i === 1 ? 'col-md-5 col-lg-4' : 'offset-md-3 col-md-6 offset-lg-0 col-lg-4';\n      case 4: return i%2 === 0 ? 'offset-md-1 col-md-5 offset-lg-0 col-lg-3' : 'col-md-5 col-lg-3';\n      case 5: return i === 0 || i === 2 ? 'offset-md-1 col-md-5 offset-lg-0 col-lg-4' : i === 1 ? 'col-md-5 col-lg-4' : i === 3 ? 'offset-md-0 col-md-5 offset-lg-3 col-lg-3' : 'offset-md-3 col-md-6 offset-lg-0 col-lg-3';\n    }\n    return i%2 === 0? 'offset-md-1 col-md-5 offset-lg-0 col-lg-3' : 'col-md-5 col-lg-3';\n  }\n}\n","<div class=\"d-flex flex-column align-items-center justify-content-center home\">\n    <!-- Home page logo -->\n    <img src=\"assets/vanilla-logo.png\" id=\"logo\" *ngIf=\"!isDark()\">\n    <img src=\"assets/vanilla-logo-dark.png\" id=\"logo\" *ngIf=\"isDark()\">\n\n    <!-- Home page title -->\n    <h1>{{ 'msg#app.name' | sqMessage }}</h1>\n\n    <!-- Search Form (app/search-form) -->\n    <app-search-form></app-search-form>\n\n    <div class=\"d-flex align-items-center mt-2\">\n        <!-- Login/Logout link -->    \n        <button class=\"btn btn-link\" (click)=\"toggleLogin()\">{{ (loginService.complete ? 'msg#userMenu.logout' : 'msg#userMenu.login') | sqMessage}}</button>\n    \n        <span> &bull; </span>\n    \n        <!-- Dark mode -->   \n        <button class=\"btn btn-link\" (click)=\"toggleDark()\">{{ (isDark()? 'msg#home.lightMode' : 'msg#home.darkMode') | sqMessage}}</button>\n    \n    </div>\n\n    <!-- Home facets -->\n    <div class=\"sq-home-facet-bar container mt-5\" *ngIf=\"homeFacets.length\">\n        <div class=\"row\" *ngIf=\"loginService.complete\">\n\n            <!-- For each activated facet -->\n            <ng-container *ngFor=\"let facet of homeFacets; let i = index\" [ngSwitch]=\"facet\">\n\n                <!-- Recent documents -->\n                <sq-facet-card *ngSwitchCase=\"'recent-documents'\"\n                                [title]=\"'msg#recentDocuments.recentDocuments'\" \n                                [collapsible]=\"false\"\n                                [icon]=\"'fas fa-file-alt'\"\n                                [buttonsStyle]=\"isDark()? 'dark' : 'light'\"\n                                class=\"{{ facetSizing(i, homeFacets.length) }} mb-3\">\n                    <sq-facet-recent-documents #facet [maxDocuments]=\"5\"></sq-facet-recent-documents>\n                </sq-facet-card>\n\n                <!-- Recent queries -->\n                <sq-facet-card *ngSwitchCase=\"'recent-queries'\"\n                                [title]=\"'msg#facet.recentQueries.title'\" \n                                [collapsible]=\"false\"\n                                [icon]=\"'fas fa-history'\"\n                                [buttonsStyle]=\"isDark()? 'dark' : 'light'\"\n                                class=\"{{ facetSizing(i, homeFacets.length) }} mb-3\">\n                    <sq-facet-recent-queries #facet [maxQueries]=\"5\"></sq-facet-recent-queries>\n                </sq-facet-card>\n\n                <!-- Saved queries -->\n                <sq-facet-card *ngSwitchCase=\"'saved-queries'\"\n                                [title]=\"'msg#savedQueries.savedQueries'\" \n                                [collapsible]=\"false\"\n                                [icon]=\"'fas fa-save'\"\n                                [buttonsStyle]=\"isDark()? 'dark' : 'light'\"\n                                class=\"{{ facetSizing(i, homeFacets.length) }} mb-3\">\n                    <sq-facet-saved-queries #facet [maxQueries]=\"5\"></sq-facet-saved-queries>\n                </sq-facet-card>\n\n                <!-- Collections (baskets) -->\n                <sq-facet-card *ngSwitchCase=\"'baskets'\"\n                                [title]=\"'msg#baskets.baskets'\" \n                                [collapsible]=\"false\"\n                                [icon]=\"'fas fa-inbox'\"\n                                [buttonsStyle]=\"isDark()? 'dark' : 'light'\"\n                                class=\"{{ facetSizing(i, homeFacets.length) }} mb-3\">\n                    <sq-facet-baskets #facet [maxBaskets]=\"5\"></sq-facet-baskets>\n                </sq-facet-card>\n\n            </ng-container>\n\n        </div>\n    </div>\n</div>","import {Component, Input, OnChanges, SimpleChanges, OnDestroy} from \"@angular/core\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {Query} from \"@sinequa/core/app-utils\";\nimport {Results} from \"@sinequa/core/web-services\";\nimport {ResultsViewService, ResultsView} from \"../../results-view.service\";\nimport {Action} from \"@sinequa/components/action\";\nimport {Subscription} from 'rxjs';\n\n\n@Component({\n    selector: \"sq-results-view-selector\",\n    templateUrl: \"./results-view-selector.html\"\n})\nexport class BsResultsViewSelector implements OnChanges, OnDestroy {\n    @Input() query: Query;  // Needed to get tab, and possibly include/exclude results views\n    @Input() results: Results;  // Needed to detect Changes\n    // UI inputs\n    @Input() rightAligned: boolean;\n    @Input() useDropdownMenu: boolean = true;\n    @Input() size: string;\n\n    private viewAction: Action | Action[] | undefined;\n    items: Action[];\n\n    constructor(\n        public resultsViewService : ResultsViewService\n    ) {\n        this._subscription = this.resultsViewService.resultsViewSelected.subscribe(\n            (view : ResultsView) => {\n                this.setCurrentViewAction();\n        });\n    }\n\n    private _subscription: Subscription;\n    ngOnDestroy(){\n        if(this._subscription){\n            this._subscription.unsubscribe();\n        }\n    }\n\n    private setCurrentViewAction() {\n        if (!!this.viewAction && !!this.resultsViewService.resultsView) {\n            if (!Utils.isArray(this.viewAction)) {\n                const view = this.resultsViewService.views.find(view => Utils.eqNC(this.resultsViewService.resultsView.name, view.name));\n                if (view) {\n                    this.viewAction.text = view.display || view.name;\n                    this.viewAction.icon = view.icon || 'fas fa-list';\n                }\n                else {\n                    this.viewAction.text = \"msg#results.unselectableViewDisplay\";\n                    this.viewAction.icon = \"far fa-square fa-fw\";\n                }\n                this.viewAction.messageParams = {values: {text: this.viewAction.text}}; // for title\n            }\n            else {\n                this.viewAction.forEach(action => {\n                    action.selected = Utils.eqNC(action.data.name, this.resultsViewService.resultsView.name);\n                });\n            }\n        }\n    }\n\n    private buildViewAction() {\n        if (this.resultsViewService.views.length <= 1) {\n            this.viewAction = undefined;\n            this.items = [];\n            return;\n        }\n        const includedViews = this.resultsViewService.getIncludedViews(this.query.tab);\n        if (includedViews.length <= 1) {\n            this.viewAction = undefined;\n            this.items = [];\n            return;\n        }\n        if (this.useDropdownMenu) {\n            this.viewAction = new Action({\n                title: \"msg#results.viewTitle\",\n                children: includedViews.map(view => new Action({\n                    text: view.display,\n                    icon: view.icon,\n                    data: view,\n                    action: (item: Action, event: Event) => {\n                        this.selectView(item.data);\n                    }\n                }))\n            });\n            this.items = [this.viewAction];\n        }\n        else {\n            this.viewAction = [];\n            for (const view of includedViews) {\n                this.viewAction.push(new Action({\n                    icon: view.icon,\n                    title: view.display,\n                    data: view,\n                    action: (item: Action, event: Event) => {\n                        this.selectView(item.data);\n                    }\n                }));\n            }\n            this.items = this.viewAction;\n        }\n        this.setCurrentViewAction();\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        this.buildViewAction();\n    }\n\n    selectView(view: ResultsView) {\n        this.resultsViewService.selectResultsView(view);\n    }\n}","<div [sq-action-buttons]=\"{items: items, autoAdjust: true, rightAligned: rightAligned, size: size}\"></div>","export * from \"./heatmap.module\";\nexport * from \"./facet-heatmap.component\";\nexport * from \"./heatmap.component\";\nexport * from \"./tooltip.component\";\nexport * from \"./results-heatmap-view\";\n","export default {\n    collapseButton: {\n        collapse: \"Replier\",\n        expand: \"Déplier\"\n    }\n};\n","export default {\n    \"savedQueries\": {\n        \"savedQueries\": \"Gespeicherte Suchanfragen\",\n        \"saveCurrentQuery\": \"Aktuelle Suchanfrage speichern\",\n        \"manageSavedQueries\": \"Aktuelle Suchanfragen verwalten\",\n        \"savedQueryAlreadyExists\": \"Es existiert bereits eine Suchanfrage mit diesem Namen. Möchten Sie sie ersetzen?\",\n        \"noSavedQuery\": \"Sie haben noch keine Suchanfrage gespeichert...\",\n        \"delete\": \"Löschen Sie diese gespeicherte Suche\"\n    },\n\n    \"recentQueries\": {\n        \"noRecentQuery\": \"Sie haben noch keine Suche durchgeführt...\",\n        \"delete\": \"Löschen Sie diese letzte Suche\",\n        \"save\": \"Speichern Sie diese letzte Suche\"\n    },\n\n    \"recentDocuments\": {\n        \"recentDocuments\": \"Kürzlich angesehenes Dokument\",\n        \"noRecentDocument\": \"Sie haben kein Dokument angezeigt\",\n        \"delete\": \"Löschen Sie dieses kürzlich angezeigte Dokument\"\n    },\n\n    \"editSavedQuery\": {\n        \"title\": \"Gespeicherte Suchanfrage\",\n        \"name\": \"Name\"\n    },\n\n    \"exportQuery\": {\n        \"dialogTitle\": \"Export\",\n        \"dialogOutputFormat\": \"Ausgabeformat\",\n        \"dialogMaxCount\": \"Maximale Anzahl der Zeilen\",\n        \"dialogSourceType\": \"Exportiere ...\",\n        \"dialogResult\": \"aktuelle Ergebnisliste\",\n        \"dialogSelection\": \"aktuelle Auswahl\",\n        \"btnTitle\": \"Export\",\n        \"exportResult\": \"Exportiere die Ergebnisliste als {type}\",\n        \"exportSelection\": \"Exportiere die Auswahl als {type}\",\n        \"btnDownload\": \"Herunterladen\",\n        \"btnClose\": \"Schließen\",\n        \"successNotification\": \"Herunterladen beendet\",\n        \"exportedColumns\": \"Zu exportierende Spalten\",\n        \"exportedColumnsLabelTooltip\": \"Wählen Sie die Spalten aus, die Sie exportieren möchten. Eine leere Auswahl bedeutet, dass alle Spalten exportiert werden\",\n        \"dialogMaxCountTooltip\": \"Standardmäßig ist die Anzahl der Ergebnisse auf {count} begrenzt\"\n    },\n\n    \"manageSavedQueries\": {\n        \"title\": \"Gespeicherte Suchanfragen verwalten\",\n        \"edit\": \"Bearbeiten\",\n        \"reorder\": \"Neu sortieren\",\n        \"remove\": \"Entfernen\",\n        \"removeAll\": \"Alle entfernen\",\n        \"export\": \"Exportieren\",\n        \"name\": \"Name\",\n        \"rss\": \"RSS-Feed\"\n    },\n\n};\n","export * from \"./public-api\";","import { Injectable, Inject } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\n\nimport { SqHttpClient } from \"./http-client\";\nimport { HttpService } from './http.service';\nimport { IntlService } from \"@sinequa/core/intl\";\nimport {Utils} from \"@sinequa/core/base\";\n\nimport { START_CONFIG, StartConfig } from \"./start-config.web.service\";\nimport { IQuery } from './query/query';\n\n/**\n * Describes a single sponsored link\n */\nexport interface LinkResult {\n    id: string;\n    title: string;\n    url: string;\n    icon: string;\n    thumbnail: string;\n    tooltip: string;\n    summary: string;\n    rank: number;\n    relevance: number;\n}\n\n/**\n * Describes a set of sponsored links\n */\nexport interface LinksResults {\n    sql: string[];\n    links: LinkResult[];\n}\n\n/**\n * A service for calling the query.links web service.\n */\n@Injectable({\n    providedIn: \"root\"\n})\nexport class SponsoredLinksWebService extends HttpService {\n\n    constructor(\n        @Inject(START_CONFIG) startConfig: StartConfig,\n        private httpClient: SqHttpClient,\n        private intlService: IntlService) {\n        super(startConfig);\n    }\n\n    /**\n     * Queries the server for sponsored links.\n     *\n     * @param query The query information.\n     * @param webService The web service configuration.\n     */\n    getLinks(query: IQuery, webService: string): Observable<LinksResults> {\n        if (!query) {\n            return throwError({ error: \"no query\" });\n        }\n\n        const url = this.makeUrl(\"query.links\");\n        const observable = this.httpClient.post<LinksResults>(url, {\n            app: this.appName,\n            webservice: webService,\n            query,\n            locale: this.intlService.currentLocale.name\n        });\n\n        Utils.subscribe(observable,\n            (response) => {\n                console.log(\"SponsoredLinksService.getLinks success - data: \", response);\n                return response;\n            },\n            (error) => {\n                console.log(\"SponsoredLinksService.getLinks failure - error: \", error);\n            });\n        return observable;\n    }\n}\n","import {Component, Input, HostBinding, Injector, OnChanges, SimpleChanges} from \"@angular/core\";\nimport {ModalButton, ModalRef, ModalResult} from \"@sinequa/core/modal\";\n\n@Component({\n    selector: \"sq-modal-footer\",\n    templateUrl: \"./modal-footer.component.html\",\n    styleUrls: [\"./modal-footer.component.scss\"]\n})\nexport class BsModalFooter implements OnChanges{\n    @Input() buttons: ModalButton[] = [];\n    @Input() isProcessingState: boolean;\n    @HostBinding(\"class.sq-modal-footer\") true;\n\n    constructor(\n        protected modalRef: ModalRef,\n        protected injector: Injector) {\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.isProcessingState) {\n            this.isProcessingState = changes.isProcessingState.currentValue;\n        }\n    }\n\n    buttonClick(button: ModalButton) {\n        if (button.validation && button.validation.controls) {\n            // Mark all controls as dirty so validation errors are shown on all controls after a submit\n            for (const name of Object.keys(button.validation.controls)) {\n                button.validation.controls[name].markAsDirty();\n            }\n        }\n        button.click(this.modalRef);\n        return false;\n    }\n\n    public close(): void {\n        this.modalRef.close(ModalResult.Cancel);\n    }\n}\n","<div class=\"modal-footer\">\n    <ng-container *ngIf=\"!isProcessingState\">\n        <section *ngFor=\"let button of buttons\">\n            <button *ngIf=\"button.visible && !button.anchor\" type=\"{{button.primary ? 'submit' : 'button'}}\" class=\"btn {{button.primary ? 'btn-primary' : button.result < 0 ? '' : 'btn-secondary'}}\" (click)=\"buttonClick(button)\">{{button.getText() | sqMessage}}</button>\n            <a *ngIf=\"button.visible && button.anchor\"\n                href=\"#\"\n                class=\"btn {{button.primary ? 'btn-primary' : button.result < 0 ? 'sq-anchor-btn' : 'btn-secondary'}}\"\n                (click)=\"buttonClick(button)\">{{button.getText() | sqMessage}}</a>\n        </section>\n    </ng-container>\n    <ng-container *ngIf=\"isProcessingState\">\n        <span class=\"loader\"></span>\n        <button type=\"button\" class=\"btn\" (click)=\"close()\">{{ 'msg#btnClose.text' | sqMessage }}</button>\n    </ng-container>\n</div>\n<ng-content></ng-content>\n\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  url: \"https://localhost:4200\",\n  autoSAMLProvider: \"identity-dev\",\n  production: false\n};\n\n  /*\n   * For easier debugging in development mode, you can import the following file\n   * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n   *\n   * This import should be commented out in production mode because it will have a negative impact\n   * on performance if an error is thrown.\n   */\n  // import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Type} from \"@angular/core\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {MessageParams} from \"@sinequa/core/intl\";\n\nexport abstract class IAction {\n    name?: string;\n    text?: string;\n    href?: string;\n    icon?: string;\n    styles?: string | string[] | Set<string> | {[klass: string]: any};\n    iconAfter?: string;\n    separator?: boolean;\n    scrollable?: boolean; // The children are scrollable\n    scrollGroup?: boolean; // A separate item whose children are scrollable \"in place\"\n    component?: Type<any>;\n    componentInputs?: any;\n    data?: any;\n    title?: string; // display as a tooltip\n    selected?: boolean;\n    disabled?: boolean;\n    hidden?: boolean;\n    flattenable?: boolean; // A dropdown with only one child is flattened to show only the child at the top level\n    messageParams?: MessageParams; // i18n - passed to sqMessage in (eg) action-item-content\n    headerGroup?: boolean; // display 'title' property as dropdown header before children\n\n    action?: (item: Action, event: UIEvent) => void;\n    toggle?: (item: Action, open: boolean) => void;\n    updater?: (item: Action) => void;\n    init?: (item: Action) => void;\n    destroy?: (item: Action) => void;\n\n    children?: Action[];\n}\n\nexport class Action extends IAction {\n\n    constructor(options: IAction) {\n        super();\n        Utils.extend(this, options);\n    }\n\n    get hasChildren(): boolean {\n        return !!this.children && (this.children.length > 0);\n    }\n\n    get showSelected(): boolean {\n        return typeof this.selected !== 'undefined';\n    }\n\n    update(): void {\n        if (this.updater) {\n            this.updater(this);\n        }\n        if (this.children) {\n            for (const child of this.children) {\n                child.update();\n            }\n        }\n    }\n}","import {Component, Input, OnChanges, SimpleChanges} from \"@angular/core\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {AppService} from \"@sinequa/core/app-utils\";\nimport {AuditEvent, AuditEventType, CCSortingChoice, Results} from \"@sinequa/core/web-services\";\nimport {Action} from \"@sinequa/components/action\";\nimport {SearchService} from \"../../search.service\";\n\n@Component({\n    selector: \"sq-sort-selector\",\n    templateUrl: \"./sort-selector.html\"\n})\nexport class BsSortSelector implements OnChanges {\n    @Input() results: Results;  // Needed to detect Changes\n    @Input() rightAligned: boolean;\n    @Input() style: string;\n    @Input() size: string;\n    sortAction: Action | undefined;\n\n    constructor(\n        public appService: AppService,\n        public searchService: SearchService) {\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes[\"results\"]) {\n            this.buildSortAction();\n        }\n    }\n\n    private setCurrentSort(name: string) {\n        if (this.sortAction) {\n            const sortingChoices = this.getSortingChoices();\n            const current = sortingChoices && sortingChoices.find((value) => {\n                return Utils.eqNC(value.name, name);\n            });\n            if (current) {\n                const queryOrderBy = this.searchService.query.orderBy;\n                this.sortAction.text = !!queryOrderBy ? \"msg#sortSelector.sortOther\" : current.display || current.name;\n                this.sortAction.icon = !!queryOrderBy ? 'fas fa-sort'\n                    : this.isAscendingSort(current.orderByClause) ? 'fas fa-sort-amount-up'\n                    : this.isDescendingSort(current.orderByClause) ? 'fas fa-sort-amount-down' : 'fas fa-sort';\n            }\n            else {\n                this.sortAction.text = \"msg#sortSelector.sortOther\";\n                this.sortAction.icon = \"fas fa-sort\";\n            }\n            this.sortAction.messageParams = {values: {text: this.sortAction.text}}; // for title\n        }\n    }\n\n    private selectSort(sortingChoice: CCSortingChoice) {\n        this.setCurrentSort(sortingChoice.name);\n        this.searchService.query.sort = sortingChoice.name;\n        const audit: AuditEvent = {\n            type: AuditEventType.Search_Sort,\n            detail: {\n                sort: sortingChoice.name,\n                orderByClause: sortingChoice.orderByClause,\n            }\n        };\n        this.searchService.search(undefined, audit);\n    }\n\n    private buildSortAction() {\n        const sortingChoices = this.getSortingChoices();\n        if (!sortingChoices || sortingChoices.length === 0) {\n            this.sortAction = undefined;\n            return;\n        }\n        this.sortAction = new Action({\n            title: \"msg#sortSelector.sortByTitle\",\n            children: sortingChoices\n                .filter(sortingChoice => this.searchService.hasRelevance || !Utils.includes(sortingChoice.orderByClause, \"globalrelevance\"))\n                .map(sortingChoice => new Action({\n                    icon: this.isAscendingSort(sortingChoice.orderByClause) ? 'fas fa-sort-amount-up'\n                            : this.isDescendingSort(sortingChoice.orderByClause) ? 'fas fa-sort-amount-down' : '',\n                    text: sortingChoice.display || sortingChoice.name,\n                    data: sortingChoice,\n                    action: (item: Action, event: Event) => {\n                        this.selectSort(item.data);\n                    }\n                }))\n        });\n        if (!!this.searchService.results) {\n            this.setCurrentSort(this.searchService.results.sort);\n        }\n    }\n\n    private isAscendingSort(orderByClause: string): boolean {\n        if (!orderByClause) {\n            return false;\n        }\n\n        const lastElement: string = orderByClause.substring(orderByClause.lastIndexOf(' ') + 1);\n        return Utils.eqNC('asc', lastElement);\n    }\n\n    private isDescendingSort(orderByClause: string): boolean {\n        if (!orderByClause) {\n            return false;\n        }\n\n        const lastElement: string = orderByClause.substring(orderByClause.lastIndexOf(' ') + 1);\n        return Utils.eqNC('desc', lastElement);\n    }\n\n    private isTabSearch(): boolean {\n        const query = this.appService.ccquery;\n        if (!query)\n            return false;\n        const tabSearch = query.tabSearch;\n        return !(!tabSearch || !tabSearch.column || !tabSearch.isActive ||\n            !tabSearch.tabs || tabSearch.tabs.length === 0);\n    }\n\n    private getSortingChoices(): CCSortingChoice[] | null | undefined {\n        if (this.isTabSearch()) {\n            const tabName = this.searchService.results && this.searchService.results.tab;\n            if (tabName && this.appService.ccquery) {\n                for (const t of this.appService.ccquery.tabSearch.tabs) {\n                    if (t.name === tabName) {\n                        const s = t.sortingChoices;\n                        if (s && s.length > 0)\n                            return s;\n                        else\n                            break;\n                    }\n                }\n            }\n        }\n        const q = this.appService.ccquery;\n        return q && q.sortingChoices;\n    }\n}","<div class=\"btn-toolbar\" role=\"toolbar\" aria-label=\"Toolbar\">\n    <div class=\"btn-group\" [hidden]=\"!searchService.haveRecords || !sortAction\" [sq-action-buttons]=\"{items: [sortAction], style: style, autoAdjust: true, rightAligned: rightAligned, size: size}\"></div>\n</div>","import {Component, Input} from \"@angular/core\";\nimport {Results} from \"@sinequa/core/web-services\";\nimport {SearchService} from \"../../search.service\";\nimport {BreadcrumbsItem} from \"../../breadcrumbs\";\n\n@Component({\n    selector: \"sq-breadcrumbs\",\n    templateUrl: \"./breadcrumbs.html\",\n    styleUrls: [\"./breadcrumbs.css\"]\n})\nexport class BsBreadcrumbs {\n    @Input() results: Results;\n    @Input() allowDeletion: boolean = true;\n    @Input() displayFieldNames: boolean = true;\n\n    constructor(\n        public searchService: SearchService) {\n    }\n\n    getField(item: BreadcrumbsItem): string {\n        if (item.expr) {\n            if (item.expr.field) {\n                return item.expr.field;\n            }\n            else {\n                if (!item.expr.isStructured) {\n                    return \"text\";\n                }\n                else {\n                    const fields = item.expr.getFields();\n                    return fields.join(\"-\");\n                }\n            }\n        }\n        return \"unknown\";\n    }\n\n    home() {\n        this.searchService.home();\n        return false;\n    }\n\n    selectItem(item: BreadcrumbsItem) {\n        this.searchService.selectBreadcrumbsItem(item);\n        return false;\n    }\n\n    removeItem(item: BreadcrumbsItem) {\n        this.searchService.removeBreadcrumbsItem(item);\n    }\n}","<ol class=\"breadcrumb\">\n    <li class=\"breadcrumb-item\">\n        <a href=\"#\" (click)=\"home()\" title=\"Home\"><span class=\"fas fa-home\"></span></a>\n    </li>\n    <ng-container *ngFor=\"let item of searchService.breadcrumbs?.items\">\n        <li *ngIf=\"!item.hidden\" class=\"breadcrumb-item {{item.active ? 'active' : ''}} sq-breadcrumb-item  sq-breadcrumb-item-{{getField(item)}}\"><!--\n            --><a *ngIf=\"!item.active\" href=\"#\" (click)=\"selectItem(item)\" [innerHTML]=\"item.display | sqExpr:{withFields: displayFieldNames, asHTML: true}\"></a><!--\n            --><span *ngIf=\"item.active\" [innerHTML]=\"item.display | sqExpr:{withFields: displayFieldNames, asHTML: true}\"></span>\n            <span *ngIf=\"allowDeletion\" class=\"fas fa-times\" role=\"button\" (click)=\"removeItem(item)\" title=\"{{'msg#breadcrumbs.itemRemove' | sqMessage}}\"></span>\n        </li>\n    </ng-container>\n</ol>","export * from \"./public-api\";","import { Injectable, Inject, InjectionToken } from \"@angular/core\";\nimport { Router, ActivatedRoute, NavigationEnd } from \"@angular/router\";\nimport { Subject, Observable } from \"rxjs\";\nimport { Utils } from '@sinequa/core/base';\nimport { SearchService } from '@sinequa/components/search';\nimport { Query } from '@sinequa/core/app-utils';\n\n/**\n * Configuration of a Results View\n */\nexport interface ResultsView {\n    /** Name of the results view */\n    name: string;\n    /** Type of the results view (not used internally, but may be useful if multiple views share a common component) */\n    type: string;\n    /** How the results view should be displayed (default to the name) */\n    display?: string;\n    /** Icon class for the results view */\n    icon?: string;\n    /** List of tab for which this tab can be displayed (defaults to all if undefined) */\n    includedTabs?: string[];\n    /** List of tab for which this tab is excluded (defaults to none if undefined) */\n    excludedTabs?: string[];\n    /**\n     * Method called when selecting this results view. It can be used to modify the search query\n     * when a view has specific data to display. If the method returns true, then selecting this view\n     * triggers a search and the view selection becomes effective upon results. If the method results false,\n     * (or if the method is undefined), then selecting this view does not trigger a new search\n     * and the view selection is immediate.\n     */\n    beforeSearch?: (query: Query, previousView: ResultsView) => boolean;\n}\n\nexport interface ResultsViewEvent {\n    type: \"before-select\" | \"after-select\" | \"select-cancelled\";\n}\n\nexport interface ResultsViewBeforeSelectEvent extends ResultsViewEvent {\n    type: \"before-select\";\n    view: ResultsView;\n    promises: Promise<boolean>[];\n}\n\nexport interface ResultsViewAfterSelectEvent extends ResultsViewEvent {\n    type: \"after-select\";\n    view: ResultsView;\n}\n\nexport interface ResultsViewSelectCancelledEvent extends ResultsViewEvent {\n    type: \"select-cancelled\";\n    view: ResultsView;\n}\n\nexport type ResultsViewEvents =\n    ResultsViewBeforeSelectEvent |\n    ResultsViewAfterSelectEvent |\n    ResultsViewSelectCancelledEvent;\n\nexport const RESULTS_VIEWS = new InjectionToken<ResultsView[]>(\"RESULTS_VIEWS\");\nexport const DEFAULT_VIEW = new InjectionToken<ResultsView>(\"DEFAULT_VIEW\");\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ResultsViewService {\n\n    protected _resultsView : ResultsView;\n    protected readonly _resultsViews : ResultsView[];\n\n    protected _resultsViewSelected = new Subject<ResultsView>();\n    protected _events = new Subject<ResultsViewEvents>();\n\n    protected pendingView: ResultsView | undefined;\n\n    /**\n     * Constructor: Expects the configuration for a list of views and\n     * one default view. These views can be set when importing the module in the AppModule\n     * with the ResultsViewModule.forRoot() method.\n     */\n    constructor(\n        @Inject(DEFAULT_VIEW) public defaultView: ResultsView,\n        @Inject(RESULTS_VIEWS) resultsViews: ResultsView[],\n        protected router: Router,\n        protected route: ActivatedRoute,\n        protected searchService: SearchService\n    ) {\n        this._resultsViews = resultsViews;\n        this._resultsView = this.defaultView;\n\n        /**\n         * Listener triggered whenever the URL changes\n         */\n        this.router.events.subscribe(event => {\n            if (event instanceof NavigationEnd) {\n                this.handleNavigation();\n            }\n        });\n\n        /**\n         * Listener triggered whenever new results come in.\n         * Some views must be displayed after a search, hence the\n         * pendingView flag.\n         */\n        this.searchService.resultsStream.subscribe(results => {\n            if(this.pendingView) {\n                this.searchService.queryStringParams.view = this.pendingView.name;\n                this.searchService.navigate({skipSearch: true});\n                this.pendingView = undefined;\n            }\n        });\n\n        // Automatically switch results views, if we go to a tab that has specific list of views\n        this.searchService.events.subscribe(event => {\n            // Event called just before the query for the new tab is searched\n            if(event.type === \"before-select-tab\" && event.query.tab) {\n                const views = this.getIncludedViews(event.query.tab);\n                // If there are views for this tab and they don't include the current one...\n                if(views.length > 0 && !views.includes(this.resultsView)) {\n                    // Set the view as pending\n                    this.pendingView = views[0];\n                    // Modify the query if needed\n                    if(this.pendingView.beforeSearch) {\n                        this.pendingView.beforeSearch(event.query, this.resultsView);\n                    }\n                }\n            }\n        })\n    }\n\n\n    // GETTERS\n\n    public get resultsViewSelected(): Observable<ResultsView> {\n        return this._resultsViewSelected;\n    }\n\n    public get events(): Observable<ResultsViewEvents> {\n        return this._events;\n    }\n\n    public get resultsView(): ResultsView {\n        return this._resultsView;\n    }\n\n    public get views(): ResultsView[] {\n        return this._resultsViews;\n    }\n\n    // EVENT HANDLERS\n\n    /**\n     * Navigate to a new URL including the given results view's name\n     * @param view \n     */\n    protected navigate(view: ResultsView) {\n        let waitForResults = !!view.beforeSearch;\n        if(view.beforeSearch) {\n            waitForResults = view.beforeSearch(this.searchService.query, this.resultsView);\n        }\n        if(!waitForResults) {\n            // We switch view immediately via the search service (which centralizes the navigation)\n            this.searchService.queryStringParams.view = view.name;\n            this.searchService.navigate({skipSearch: true});\n        }\n        else {\n            // We set the view as \"pending\", that is waiting for new results to come in\n            this.pendingView = view;\n            this.searchService.search();\n        }\n    }\n\n    /**\n     * Responds to a change in the URL: Sets the results view if the URL\n     * specifies a different results view name.\n     */\n    protected handleNavigation() {\n        const url = Utils.makeURL(this.router.url);\n        const view = this.getView(url.searchParams.get(\"view\"));\n        if(view && view !== this.resultsView) {\n            this.searchService.queryStringParams.view = view.name; // Needed when refreshing the page\n            this.setResultsView(view);\n        }\n    }\n\n    /**\n     * Sets the results view and emits an event\n     * @param view \n     */\n    protected setResultsView(view: ResultsView) {\n        this._resultsView = view;\n        this._events.next({type: \"after-select\", view});\n        this._resultsViewSelected.next(view);\n    }\n\n\n    // PUBLIC API\n\n    /**\n     * Selects the given results view. This method is asynchronous:\n     * - The selected results view might modify the query before being displayed\n     * - The view selection works with a navigation via the router (adding the view name to the URL)\n     * @param view \n     */\n    public selectResultsView(view: ResultsView) {\n        if (view) {\n            // Raise before event...\n            const beforeEvent: ResultsViewBeforeSelectEvent = {\n                type: \"before-select\",\n                view,\n                promises: []\n            }\n            this._events.next(beforeEvent);\n            if (beforeEvent.promises.length === 0) {\n                this.navigate(view);\n            }\n            else {\n                Promise.all(beforeEvent.promises)\n                    .then((results) => {\n                        const ok = results.every(result => result);\n                        if (ok) {\n                            this.navigate(view);\n                        }\n                        else {\n                            console.log(\"selectResultsView cancelled\");\n                            this._events.next({type: \"select-cancelled\", view});\n                        }\n                    })\n                    .catch((reason) => {\n                        console.log(\"selectResultsView error:\", reason);\n                        this._events.next({type: \"select-cancelled\", view});\n                    });\n            }\n        }\n        else {\n            console.error(\"Undefined Results View\");\n        }\n    }\n\n    /**\n     * Selects the results view with the given name. This method is asynchronous:\n     * - The selected results view might modify the query before being displayed\n     * - The view selection works with a navigation via the router (adding the view name to the URL)\n     * @param viewName \n     */\n    public selectResultsViewName(viewName: string){\n        const view = this.getView(viewName);\n        if (view) {\n            this.selectResultsView(view);\n        }\n    }\n\n    /**\n     * Returns the results view with the given name\n     * @param viewName \n     */\n    public getView(viewName): ResultsView | undefined {\n        return this.views.find(v => v.name === viewName);\n    }\n\n    /**\n     * Returns the list of results views compatible with a given tab\n     * @param tab \n     */\n    public getIncludedViews(tab?: string): ResultsView[] {\n        const views: ResultsView[] = [];\n        for (const view of this.views) {\n            const included = !!view.includedTabs\n                ? view.includedTabs.includes(tab || \"\")\n                : !view.excludedTabs || !view.excludedTabs.includes(tab || \"\");\n\n            if (included) {\n                views.push(view);\n            }\n        }\n        return views;\n    }\n\n}","import {Injectable, OnDestroy} from \"@angular/core\";\nimport {Subject, Observable} from \"rxjs\";\nimport {Utils, MapOf} from \"@sinequa/core/base\";\n\n/**\n * Notification types.\n */\nexport const enum NotificationType {\n    Success,\n    Info,\n    Warning,\n    Error,\n    Last = Error\n}\n\n/**\n * Notification visibility states.\n */\nexport const enum NotificationState {\n    Initial,\n    Showing,\n    Hidden\n}\n\n/**\n * Describes a notification object.\n */\nexport interface Notification {\n    /**\n     * The notification title.\n     */\n    title?: string;\n    /**\n     * The notification text.\n     */\n    text?: string;\n    /**\n     * Message parameters for the notification `text`.\n     */\n    params?: MapOf<any>;\n    /**\n     * Determines whether the notification should close automatically after a period.\n     * The duration is determined by a particular UI implementation.\n     */\n    autoClose?: boolean;\n    /**\n     * The notification type.\n     */\n    type?: NotificationType;\n    /**\n     * The nofification state.\n     */\n    state?: NotificationState;\n}\n\n/**\n * Describes a base notification event.\n */\nexport interface NotificationEvent {\n    /**\n     * The possible notification event types.\n     */\n    type: \"updated\" | \"data-updated\";\n}\n\n/**\n * Describes a notification \"updated\" event. This event is emitted\n * when one or more notifications are added, shown, hidden or deleted.\n */\nexport interface UpdatedEvent extends NotificationEvent {\n    type: \"updated\";\n}\n\n/**\n * Describes a data updated event. This event is emitted by the\n * [NotificationsService.set]{NotificationsService#set} method\n * is called.\n */\nexport interface DataUpdatedEvent extends NotificationEvent {\n    type: \"data-updated\";\n}\n\n/**\n * This service provides methods for managing notifications. No user interface\n * is imposed. It also manages a key-value data store. Events are emitted\n * when the notifications and data store are updated.\n */\n@Injectable({\n    providedIn: \"root\"\n})\nexport class NotificationsService implements OnDestroy {\n    protected data: MapOf<any>;\n    /**\n     * The current notifications.\n     */\n    notifications: Notification[];\n    protected _events = new Subject<UpdatedEvent | DataUpdatedEvent>();\n    protected _notificationsStream = new Subject<Notification>();\n\n    constructor() {\n        this.data = {};\n        this.notifications = [];\n    }\n\n    ngOnDestroy() {\n        this._events.complete();\n    }\n\n    /**\n     * Get the obervable stream of notification events.\n     */\n    get events(): Observable<UpdatedEvent | DataUpdatedEvent> {\n        return this._events;\n    }\n\n    /**\n     * Get the observable stream of notifications. This will\n     * emit each time a notification is added. It will also emit\n     * `null` when notifications are deleted.\n     */\n    get notificationsStream(): Observable<Notification> {\n        return this._notificationsStream;\n    }\n\n    /**\n     * Set a value in the data store. The `data-updated` event\n     * is emitted.\n     *\n     * @param key The value's key.\n     * @param value The value.\n     */\n    set(key: string, value: any) {\n        this.data[key] = value;\n        this._events.next({type: \"data-updated\"});\n    }\n\n    /**\n     * Get a value from the data store.\n     *\n     * @param key The value's key.\n     */\n    get(key: string): any {\n        return this.data[key];\n    }\n\n    /**\n     * Increment a counter in the data store identified by the passed `key`.\n     * The intial value is 0.\n     *\n     * @param key The key for the counter.\n     */\n    enter(key: string) {\n        let value = this.data[key];\n        if (!value) {\n            value = 0;\n        }\n        value++;\n        this.set(key, value);\n    }\n\n    /**\n     * Decrement a counter in the data store identified by the passed `key`.\n     * Calls to `leave` should match calls to `enter`. If the counter becomes negative\n     * an \"underflow\" warning is emitted to the console and the counter set to 0.\n     *\n     * @param key The key for the counter.\n     */\n    leave(key: string) {\n        let value = this.data[key];\n        value--;\n        if (value < 0) {\n            console.warn(\"NotificationsService.leave underflow for:\", key);\n        }\n        if (!value || value < 0) {\n            value = 0;\n        }\n        this.set(key, value);\n    }\n\n    /**\n     * `true` if there are current notifications.\n     */\n    get haveNotifications(): boolean {\n        return this.notifications.length > 0;\n    }\n\n    /**\n     * `true` if the all current notifications are in the `Showing` state.\n     */\n    get allNotificationsShowing(): boolean {\n        for (const notification of this.notifications) {\n            if (notification.state !== NotificationState.Showing) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * `true` if all current notifications are in the `Hidden` state.\n     */\n    get allNotificationsHidden(): boolean {\n        for (const notification of this.notifications) {\n            if (notification.state !== NotificationState.Hidden) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Gets the last added notification.\n     */\n    get lastNotification(): Notification | undefined {\n        if (this.notifications.length > 0) {\n            return this.notifications[this.notifications.length - 1];\n        }\n        return undefined;\n    }\n\n    /**\n     * Add a notification. The `updated` event is emitted and the added notification\n     * is emitted on the notifications stream.\n     *\n     * @param type The notification type.\n     * @param text The notification message text.\n     * @param params Parameters for the message text.\n     * @param title The notification title.\n     * @param autoClose A flag determining whether the notification should auto-close.\n     */\n    notify(type: NotificationType, text: string, params?: MapOf<any>, title?: string, autoClose?: boolean): Notification {\n        const notification: Notification = {\n            type,\n            text,\n            params,\n            title,\n            autoClose\n        };\n        // Replace the last notification if it is the same as the new one\n        const lastNotification = this.lastNotification;\n        if (lastNotification) {\n            notification.state = lastNotification.state;\n            if (Utils.equals(notification, lastNotification)) {\n                this.notifications.splice(this.notifications.length - 1, 1);\n            }\n        }\n        notification.state = NotificationState.Initial;\n        this.notifications.push(notification);\n        this._events.next({type: \"updated\"});\n        this._notificationsStream.next(notification);\n        return notification;\n    }\n\n    /**\n     * Add a `Success` type notification. The notification will auto-close.\n     *\n     * @param text The notification message text.\n     * @param params Parameters for the message text.\n     * @param title The notification title.\n     */\n    success(text: string, params?: MapOf<any>, title?: string): Notification {\n        return this.notify(NotificationType.Success, text, params, title, true);\n    }\n\n    /**\n     * Add an `Info` type notification. The notification will auto-close.\n     *\n     * @param text The notification message text.\n     * @param params Parameters for the message text.\n     * @param title The notification title.\n     */\n    info(text: string, params?: MapOf<any>, title?: string): Notification {\n        return this.notify(NotificationType.Info, text, params, title, true);\n    }\n\n    /**\n     * Add a `Warning` type notification. The nofification will not auto-close.\n     *\n     * @param text The notification message text.\n     * @param params Parameters for the message text.\n     * @param title The notification title.\n     */\n    warning(text: string, params?: MapOf<any>, title?: string): Notification {\n        return this.notify(NotificationType.Warning, text, params, title, false);\n    }\n\n    /**\n     * Add an `Error` type notification. The nofification will not auto-close.\n     *\n     * @param text The notification message text.\n     * @param params Parameters for the message text.\n     * @param title The notification title.\n     */\n    error(text: string, params?: MapOf<any>, title?: string): Notification {\n        return this.notify(NotificationType.Error, text, params, title, false);\n    }\n\n    /**\n     * Set the state of all notifications to `Showing`. The `updated` event is\n     * emitted.\n     */\n    showNotifications() {\n        for (const notification of this.notifications) {\n            notification.state = NotificationState.Showing;\n        }\n        this._events.next({type: \"updated\"});\n    }\n\n    /**\n     * Set the state of all notifications to `Hidden`. The `updated` event is\n     * emitted.\n     */\n    hideNotifications() {\n        for (const notification of this.notifications) {\n            notification.state = NotificationState.Hidden;\n        }\n        this._events.next({type: \"updated\"});\n    }\n\n    /**\n     * Delete all notifications. The `updated` event is\n     * emitted. `null` is emitted on the notifications stream.\n     */\n    deleteAllNotifications() {\n        this.notifications.splice(0);\n        this._events.next({type: \"updated\"});\n        this._notificationsStream.next(undefined);\n    }\n\n    /**\n     * Delete the passed `notification`. The `updated` event is\n     * emitted. `null` is emitted on the notifications stream if no notifications\n     * remain.\n     *\n     * @param notification The notification to delete.\n     */\n    deleteNotification(notification: Notification) {\n        for (let i = 0, ic = this.notifications.length; i < ic; i++) {\n            if (this.notifications[i] === notification) {\n                this.notifications.splice(i, 1);\n                this._events.next({type: \"updated\"});\n                if (this.notifications.length === 0) {\n                    this._notificationsStream.next(undefined);\n                }\n                break;\n            }\n        }\n    }\n\n    /**\n     * Close the passed `notification`. If the notification is in the\n     * `Initial` state then its state is set to `Hidden` otherwise the\n     * notification is deleted. The `updated` event is emitted.\n     *\n     * @param notification The notification to close.\n     */\n    closeNotification(notification: Notification) {\n        if (notification.state === NotificationState.Initial) {\n            notification.state = NotificationState.Hidden;\n            this._events.next({type: \"updated\"});\n        }\n        else {\n            this.deleteNotification(notification);\n        }\n    }\n}\n","import {Component, Input} from \"@angular/core\";\n\n/**\n * A default component to be used by the {@link ValidationDirective} directive to display\n * a validation error message using {@link MessagePipe}.\n */\n@Component({\n    selector: \"sq-validation-message\",\n    template: `\n        <div class=\"sq-validation-message\">{{text | sqMessage:{values: info} }}</div>\n    `\n})\nexport class ValidationMessageComponent {\n    /**\n     * The error message text passed to the `sqMessage` pipe.\n     */\n    @Input() text: string;\n    /**\n     * The entry for the validator in a `ValidationErrors` object. This is passed\n     * as the values to the `sqMessage` pipe.\n     */\n    @Input() info: any;\n}\n","import { Component, Inject, OnDestroy, OnInit } from \"@angular/core\";\nimport { FormControl, FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { MODAL_MODEL, PromptOptions, ModalResult} from \"./modal.service\";\nimport { ModalRef } from \"./modal-ref\";\nimport { Utils } from '@sinequa/core/base';\n\n@Component({\n    selector: \"sq-core-prompt\",\n    template: `\n        <form novalidate [formGroup]=\"form\" style=\"border: solid;padding: 16px;background-color: white;\" cdkTrapFocus [cdkTrapFocusAutoCapture]=\"true\">\n            <h3 style=\"margin-top: 0;\">{{title | sqMessage}}</h3>\n            <div>{{model.message | sqMessage:model.messageParams}}</div>\n            <input type=\"text\" formControlName=\"input\" *ngIf=\"!model.rowCount\">\n            <textarea type=\"text\" formControlName=\"input\" spellcheck=\"on\" rows=\"{{model.rowCount}}\" autofocus *ngIf=\"!!model.rowCount\">\n            </textarea>\n            <ng-container *ngIf=\"showError(inputControl)\">\n                <br>\n                <span style=\"color: red;\">{{form.get(\"input\")?.errors | sqValidationError}}</span>\n            </ng-container>\n            <hr>\n            <button type=\"submit\" (click)=\"ok()\">{{'msg#modal.buttons.ok' | sqMessage}}</button>\n            <button type=\"button\" (click)=\"cancel()\">{{'msg#modal.buttons.cancel' | sqMessage}}</button>\n        </form>\n    `\n})\nexport class Prompt implements OnInit, OnDestroy {\n    inputControl: FormControl;\n    form: FormGroup;\n    formChanges: Subscription;\n\n    constructor(\n        @Inject(MODAL_MODEL) public model: PromptOptions,\n        protected modalRef: ModalRef,\n        protected formBuilder: FormBuilder) {\n    }\n\n    ngOnInit() {\n        this.inputControl = new FormControl(this.model.output, this.model.validators || Validators.required);\n        this.form = this.formBuilder.group({\n            input: this.inputControl\n        });\n        this.formChanges = Utils.subscribe(this.form.valueChanges,\n            (value) => {\n                this.model.output = this.inputControl.value;\n            });\n    }\n\n    ngOnDestroy() {\n        this.formChanges.unsubscribe();\n    }\n\n    showError(control: FormControl): boolean {\n        return control.invalid && (control.dirty || this.modalRef.submitted);\n    }\n\n    ok() {\n        if (!this.form.valid) {\n            return;\n        }\n        this.modalRef.close(ModalResult.OK);\n    }\n\n    cancel() {\n        this.modalRef.close(ModalResult.Cancel);\n    }\n\n    get title(): string {\n        return this.model.title ? this.model.title : \"msg#modal.prompt.title\";\n    }\n\n}\n","import {Component, OnInit, OnDestroy, AfterViewInit, ChangeDetectorRef} from \"@angular/core\";\nimport {Subscription} from \"rxjs\";\nimport {LoginService} from \"./login.service\";\n\n/**\n * A utility base class to assist main components in the handling of the login state of the\n * the application. It initiates the login process and sets `loginComplete` accordingly\n * whenever the login state changes\n */\n@Component({\n    template: ''\n})\nexport class ComponentWithLogin implements OnInit, OnDestroy, AfterViewInit {\n    protected loginSubscription: Subscription;\n    /**\n     * `true` if the application is currently logged in successfully\n     */\n    loginComplete: boolean;\n\n    constructor(\n        protected loginService: LoginService,\n        protected changeDetectorRef: ChangeDetectorRef) {\n    }\n\n    /**\n     * A method called whenever the `session-changed` event is received. This can be\n     * overridden by the subclassing component.\n     */\n    onLoginComplete() {\n    }\n\n    /**\n     * Subscribes to the [LoginService.events]{@link LoginService#events} and sets\n     * the `loginComplete` member whenever the `session-changed` event is received\n     */\n    ngOnInit() {\n        this.loginComplete = this.loginService.complete;\n        this.loginSubscription = this.loginService.events.subscribe(event => {\n            if (event.type === \"session-changed\") {\n                this.loginComplete = this.loginService.complete;\n                this.onLoginComplete();\n                this.changeDetectorRef.markForCheck();\n            }\n        });\n    }\n\n    ngOnDestroy() {\n        this.loginSubscription.unsubscribe();\n    }\n\n    /**\n     * Initiates the login process by calling [LoginService.login]{@link LoginService#login}\n     */\n    ngAfterViewInit() {\n        this.loginService.login();\n    }\n}\n","export * from \"./modal.module\";\nexport * from \"./confirm.component\";\nexport * from \"./prompt.component\";\nexport * from \"./editable/editable\";\nexport * from \"./help/help\";\nexport * from \"./login.component\";\nexport * from \"./modal-footer.component\";\nexport * from \"./modal-header.component\";\nexport * from \"./modal.component\";\nexport * from \"./override-user/override-user\";","import { Directive, Input, Output, HostBinding, EventEmitter, OnChanges, AfterContentInit,\n    ContentChildren, QueryList, HostListener } from \"@angular/core\";\nimport { FocusKeyManager } from \"@angular/cdk/a11y\";\nimport { FocusKeyListItemDirective } from \"./focus-key-list-item.directive\";\nimport { Utils } from \"@sinequa/core/base\";\n\n@Directive({\n    selector: \"[sqFocusKeyList]\"\n})\nexport class FocusKeyListDirective implements OnChanges, AfterContentInit {\n    @Input() activeItem = -1;\n    @Input() withWrap = true;\n    @Output() itemSelect = new EventEmitter<number>();\n    @HostBinding(\"attr.role\") role = \"list\";\n    @ContentChildren(FocusKeyListItemDirective) components: QueryList<FocusKeyListItemDirective>;\n    protected keyManager: FocusKeyManager<FocusKeyListItemDirective>;\n\n    ngOnChanges() {\n        if (this.keyManager) {\n            this.keyManager.setActiveItem(this.activeItem);\n        }\n    }\n\n    ngAfterContentInit() {\n        this.keyManager = new FocusKeyManager<FocusKeyListItemDirective>(this.components);\n        if (this.withWrap) {\n            this.keyManager.withWrap();\n        }\n        if (this.activeItem >= 0 && this.components.length > 0) {\n            Utils.delay().then(() => {\n                this.keyManager.setActiveItem(this.activeItem);\n            });\n        }\n    }\n\n    @HostListener(\"keydown\", [\"$event\"])\n    onKeydown(event) {\n        this.keyManager.onKeydown(event);\n        this.itemSelect.emit(this.keyManager.activeItemIndex !== null ? this.keyManager.activeItemIndex : undefined);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Utils } from \"@sinequa/core/base\";\n\n/**\n * A service to manage navigator downloads\n */\n@Injectable({\n    providedIn: \"root\"\n})\nexport class DownloadWebService {\n\n    /**\n     * Subscribes to the given observable to trigger a download action on the navigator\n     * when the observed object is ready.\n     *\n     * @param observable The observable to subscribe.\n     * @returns The observable for chaining.\n     */\n    public download(observable: Observable<HttpResponse<Blob>>): Observable<HttpResponse<Blob>> {\n        Utils.subscribe(\n            observable,\n            (response: HttpResponse<Blob>) => {\n                const header = response.headers.get('content-disposition');\n                const fileName = header ? header.split('filename=')[1].replace('\"', '').replace('\"', '') : \"\";\n\n                if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n                    // For IE\n                    window.navigator.msSaveOrOpenBlob(response.body, fileName);\n                } else {\n                    const link = document.createElement('a');\n                    document.body.appendChild(link);\n                    const blobUrl = window.URL.createObjectURL(response.body);\n                    link.href = blobUrl;\n                    link.download = fileName;\n                    link.click();\n                    link.remove();\n                    window.URL.revokeObjectURL(blobUrl);\n                }\n\n                return response;\n            }\n        );\n        return observable;\n    }\n}\n","import { Component, Input, OnChanges, SimpleChanges } from \"@angular/core\";\nimport { Results } from \"@sinequa/core/web-services\";\nimport { SearchService, BreadcrumbsItem } from \"@sinequa/components/search\";\nimport { AbstractFacet } from \"../../abstract-facet\";\nimport { Action } from \"@sinequa/components/action\";\n\n@Component({\n    selector: \"sq-facet-mysearch\",\n    templateUrl: \"./facet-mysearch.html\",\n    styleUrls: [\"./facet-mysearch.scss\"],\n})\nexport class BsMySearch extends AbstractFacet implements OnChanges {\n    @Input() results: Results;\n    /** Display icon to delete items */\n    @Input() allowDeletion: boolean = true;\n    /** Display each item's field */\n    @Input() displayFieldNames: boolean = false;\n    /** Make the div collapsible */\n    @Input() collapsible: boolean = false;\n    /** Add a badge likely style to items */\n    @Input() useBadges: boolean = false;\n    /** Wether we Ignore text and fielded search */\n    @Input() ignoreText: boolean = true;\n    /** Items of those facets will be excluded  */\n    @Input() excludedFacets: (string | undefined)[] = [\"search-form\"];\n\n\n    collapsed = false;\n    clearAction: Action;\n    items: BreadcrumbsItem[] = [];\n    fields: string[] = [];\n\n    constructor(public searchService: SearchService) {\n        super();\n\n        this.clearAction = new Action({\n            icon: \"far fa-minus-square\",\n            title: \"msg#facet.filters.clear\",\n            action: () => this.clear(),\n        });\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (!!changes[\"results\"]) {\n            /** Initialize items based on input values */\n            this.items = this.ignoreText\n                ? this.searchService.breadcrumbs?.items.filter(\n                        (item: BreadcrumbsItem) =>\n                            item.expr && !(item.expr && !item.expr.field && !item.expr.isStructured) && !this.excludedFacets.includes(item.facet)\n                    ) || []\n                : this.searchService.breadcrumbs?.items || [];\n\n            /** Retrieve the field name of each item */\n            this.fields = [];\n            for (const item of this.items) {\n                this.fields.push(this.getField(item))\n            }\n\n        }\n    }\n\n    protected getField(item: BreadcrumbsItem): string {\n        if (item.expr) {\n            if (item.expr.field) {\n                return item.expr.field;\n            } else {\n                if (!item.expr.isStructured) {\n                    return \"text\";\n                } else {\n                    const fields = item.expr.getFields();\n                    return fields.join(\"-\");\n                }\n            }\n        }\n        return \"unknown\";\n    }\n\n    removeItem(item: BreadcrumbsItem) {\n        this.searchService.removeBreadcrumbsItem(item);\n    }\n\n    get isEmpty() {\n        return this.items.length === 0;\n    }\n\n    get actions(): Action[] {\n        const actions: Action[] = [];\n        if (!this.isEmpty && this.allowDeletion) {\n            actions.push(this.clearAction);\n        }\n        return actions;\n    }\n\n    protected clear() {\n        for (const item of this.items) {\n            this.searchService.removeBreadcrumbsItem(item);\n        }\n    }\n}\n","<div class=\"my-search d-flex flex-row align-items-center flex-wrap\" [ngClass]=\"collapsed ? 'collapsed-view' : 'expanded-view'\">\n    <ng-container *ngFor=\"let item of items; index as i\">\n        <div *ngIf=\"!item.hidden\"\n            class=\"px-1 ml-1 mb-1 sq-metadata-item sq-metadata-color-{{fields[i]}}\"\n            [ngClass]=\"{'sq-metadata-border': useBadges}\">\n            <span\n                [innerHTML]=\"item.display | sqExpr:{withFields: displayFieldNames, asHTML: true}\"\n                title=\"{{fields[i]}}\">\n            </span>\n            <span\n                *ngIf=\"allowDeletion\"\n                class=\"far fa-times-circle pl-1\"\n                role=\"button\"\n                (click)=\"removeItem(item)\"\n                title=\"{{'msg#facet.mySearch.itemRemove' | sqMessage}}\">\n            </span>\n        </div>\n    </ng-container>\n</div>\n<div *ngIf=\"collapsible && !isEmpty\">\n    <hr>\n    <i class=\"fas fa-chevron-circle-{{collapsed ? 'down' : 'up'}}\" (click)=\"collapsed = !collapsed;\"></i>\n</div>\n","export default {\n    \"alerts\": {\n        \"alerts\": \"Alerts\",\n        \"createAlert\": \"Create Alert\",\n        \"manageAlerts\": \"Manage Alerts\",\n        \"alertAlreadyExists\": \"An alert with that name already exists. Would you like to replace it?\"\n    },\n\n    \"editAlert\": {\n        \"title\": \"Alert\",\n        \"name\": \"Name\",\n        \"frequency\": \"Frequency\",\n        \"days\": \"Days\",\n        \"monday\": \"Monday\",\n        \"tuesday\": \"Tuesday\",\n        \"wednesday\": \"Wednesday\",\n        \"thursday\": \"Thursday\",\n        \"friday\": \"Friday\",\n        \"saturday\": \"Saturday\",\n        \"sunday\": \"Sunday\",\n        \"times\": \"Times\",\n        \"active\": \"Active\",\n        \"updateQuery\": \"Update Query\",\n        \"runQuery\": \"Run Query\",\n        \"lossDataMessage\": \"Do you want to leave without saving your modifications?\"\n    },\n\n    \"manageAlerts\": {\n        \"title\": \"Manage Alerts\",\n        \"edit\": \"Edit\",\n        \"reorder\": \"Reorder\",\n        \"remove\": \"Remove\",\n        \"removeAll\": \"Remove all\"\n    },\n\n};\n","export default {\n    \"results\": {\n        \"viewTitle\": \"View: {text}\",\n        \"unselectableViewDisplay\": \"<Other>\",\n        \"resultsListView\": {\n            \"display\": \"List\",\n            \"selectDocument\": \"Select document\",\n            \"unselectDocument\": \"Unselect document\",\n            \"previewPopup\": \"Document Navigator\",\n            \"previewInCurrentPage\": \"Document Navigator (in current page)\",\n            \"previewInNewTab\": \"Document Navigator (in new tab)\",\n            \"showMetadata\": \"Details\",\n            \"showLabels\": \"Labels\"\n        },\n        \"resultsGridView\": {\n            \"display\": \"Grid\",\n            \"selectDocument\": \"Select document\",\n            \"unselectDocument\": \"Unselect document\",\n            \"selectDocuments\": \"Select documents\",\n            \"unselectDocuments\": \"Unselect documents\"\n        },\n        \"viewPageSize\": \"Number of results per page\",\n        \"viewUpdateApply\": \"Apply\",\n        \"warningNoViewForTab\": \"The '{tab}' tab has no associated result views.\",\n        \"warningCannotDisplayTabOnView\": \"The '{tab}' tab cannot be displayed using '{view}' view because it is not included in the view configuration.\",\n\n        \"resultsAllTab\": \"All\",\n        \"resultsTextTab\": \"Text\",\n        \"results_all_tab\": \"All\",\n        \"results_text_tab\": \"Text\",\n    }\n};\n","export default {\n    \"search\": {\n        \"emptySearchNotification\": \"Please enter some search terms to perform a search\",\n        \"alreadyFiltered\": \"Already selected\"\n    },\n\n    \"breadcrumbs\": {\n        \"emptySearch\": \"<empty search>\",\n        \"itemRemove\": \"Remove\"\n    },\n\n    \"didYouMean\": {\n        \"dymonlyBeforeCorrected\": \"Did you mean: \",\n        \"dymonlyAfterCorrected\": \"?\",\n        \"correctBeforeCorrected\": \"Showing results for: \",\n        \"correctBeforeOriginal\": \". Search instead for: \",\n        \"correctAfterOriginal\": \"\",\n        \"smartBeforeOriginal\": \"Showing results for: \",\n        \"smartBeforeCorrected\": \" and \",\n        \"smartAfterCorrected\": \"\"\n    },\n\n    \"pageSizeSelector\": {\n        \"pageSizeChoice\": \"{size, number} per page\",\n        \"defaultPageSize\": \"Default ({size, number})\",\n        \"defaultPageSizeChoice\": \"{size, number} per page (default)\"\n    },\n\n    \"pager\": {\n        \"pageNumberTitle\": \"Page {page, number}\",\n        \"firstPage\": \"First page\",\n        \"nextPage\": \"Next page\",\n        \"previousPage\": \"Previous page\",\n        \"lastPage\": \"Last page\"\n    },\n\n    \"sortSelector\": {\n        \"sortByTitle\": \"Sort by: {text}\",\n        \"sortOther\": \"<Other>\"\n    },\n\n    \"sort\": {\n        \"relevance\": \"Relevance\",\n        \"date\": \"Date\",\n        \"filename\": \"File name\",\n        \"title\": \"Title\"\n    },\n\n    \"queryIntent\": {\n        \"externalServiceTimeoutError\": \"This result page is incomplete due to an internal timeout. Please retry later.\"\n    }\n};\n","import { Component, Inject, OnDestroy, OnInit } from \"@angular/core\";\nimport { FormControl, FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { MODAL_MODEL, PromptOptions, ModalResult, ModalRef, ModalButton} from \"@sinequa/core/modal\";\nimport { Utils } from '@sinequa/core/base';\n\n@Component({\n    selector: \"sq-prompt\",\n    template: `\n        <form name=\"prompt\" novalidate [formGroup]=\"form\">\n            <sq-modal [title]=\"title\" [buttons]=\"buttons\">\n                <div class=\"form-group sq-form-group\">\n                    <label for=\"input\">{{model.message | sqMessage:model.messageParams}}</label>\n                    <input [sqValidation]=\"form\" type=\"text\" class=\"form-control\" id=\"input\" formControlName=\"input\" spellcheck=\"off\" sqAutofocus *ngIf=\"!model.rowCount\">\n                    <textarea [sqValidation]=\"form\" type=\"text\" class=\"form-control\" id=\"input\" formControlName=\"input\" spellcheck=\"on\" rows=\"{{model.rowCount}}\" sqAutofocus *ngIf=\"!!model.rowCount\">\n                    </textarea>\n                </div>\n            </sq-modal>\n        </form>\n    `\n})\nexport class BsPrompt implements OnInit, OnDestroy {\n    inputControl: FormControl;\n    form: FormGroup;\n    formChanges: Subscription;\n    buttons: ModalButton[];\n\n    constructor(\n        @Inject(MODAL_MODEL) public model: PromptOptions,\n        protected modalRef: ModalRef,\n        protected formBuilder: FormBuilder) {\n    }\n\n    ngOnInit() {\n        this.inputControl = new FormControl(this.model.output, this.model.validators || Validators.required);\n        this.form = this.formBuilder.group({\n            input: this.inputControl\n        });\n        this.formChanges = Utils.subscribe(this.form.valueChanges,\n            (value) => {\n                this.model.output = this.inputControl.value;\n            });\n            \n        this.buttons = [\n            new ModalButton({\n                result: ModalResult.OK,\n                primary: true,\n                validation: this.form\n            }),\n            new ModalButton({\n                result: ModalResult.Cancel\n            })\n        ];\n    }\n\n    ngOnDestroy() {\n        this.formChanges.unsubscribe();\n    }\n\n    get title(): string {\n        return this.model.title ? this.model.title : \"msg#modal.prompt.title\";\n    }\n\n}\n","export * from \"./array-view\";\nexport * from \"./error\";\nexport * from \"./field-value\";\nexport * from \"./item-array-view\";\nexport * from \"./iterator-adaptor\";\nexport * from \"./json\";\nexport * from \"./keyboard\";\nexport * from \"./map-of\";\nexport * from \"./ref\";\nexport * from \"./pattern-matcher\";\nexport * from \"./utils\";\nexport * from \"./base.module\";\n","import {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {BsNotification} from \"./notification/notification\";\nimport {BsNotifications} from \"./notifications/notifications\";\nimport {BsNotificationsManager} from \"./notifications-manager/notifications-manager\";\n\nimport {IntlModule} from \"@sinequa/core/intl\";\nimport {BsActionModule} from \"@sinequa/components/action\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        IntlModule,\n        BsActionModule,\n    ],\n    declarations: [\n        BsNotification, BsNotifications, BsNotificationsManager\n    ],\n    exports: [\n        BsNotifications, BsNotificationsManager\n    ]\n})\nexport class BsNotificationModule {\n}\n","import { Component, OnInit, ChangeDetectorRef, Input, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { Action } from '@sinequa/components/action';\nimport { PrincipalWebService, UserSettingsWebService } from '@sinequa/core/web-services';\nimport { AuthenticationService, LoginService, UserOverride } from '@sinequa/core/login';\nimport { IntlService, Locale } from '@sinequa/core/intl';\nimport { Utils } from '@sinequa/core/base';\nimport { BsOverrideUser } from '@sinequa/components/modal';\nimport { ModalService, ModalResult, ConfirmType, ModalButton } from '@sinequa/core/modal';\nimport { AppService } from '@sinequa/core/app-utils';\nimport {NotificationsService, NotificationType} from '@sinequa/core/notification';\n\n@Component({\n  selector: 'sq-user-menu',\n  templateUrl: './user-menu.component.html'\n})\nexport class BsUserMenuComponent implements OnInit, OnDestroy {\n\n  @Input() icon: string = \"fas fa-user\";\n  @Input() autoAdjust: boolean = true;\n  @Input() autoAdjustBreakpoint: string = 'xl';\n  @Input() collapseBreakpoint: string = 'sm';\n  @Input() size: string;\n\n  menu: Action;\n\n  // User actions\n  loginAction: Action;\n  logoutAction: Action;\n  overrideAction: Action;\n  revertOverrideAction: Action;\n  adminAction: Action;\n  languageAction: Action;\n  resetUserSettings: Action;\n\n  constructor(\n    public principalService: PrincipalWebService,\n    public authenticationService: AuthenticationService,\n    public intlService: IntlService,\n    public loginService: LoginService,\n    public modalService: ModalService,\n    public appService: AppService,\n    public userSettingsService: UserSettingsWebService,\n    public notificationsService: NotificationsService,\n    public changeDetectorRef: ChangeDetectorRef) {\n\n\n    // Actions objects are initialized in the constructor\n\n    // User Menu\n\n    // Login\n    this.loginAction = new Action({\n      text: \"msg#userMenu.login\",\n      title: \"msg#userMenu.login\",\n      action: () => {\n        this.loginService.login();\n      }\n    });\n\n    // Logout\n    this.logoutAction = new Action({\n      text: \"msg#userMenu.logout\",\n      title: \"msg#userMenu.logout\",\n      action: () => {\n        this.loginService.logout();\n        this.changeDetectorRef.markForCheck();\n      }\n    });\n\n    // Override a user's identity\n    this.overrideAction = new Action({\n      text: \"msg#userMenu.overrideUser\",\n      title: \"msg#userMenu.overrideUser\",\n      action: () => {\n        let userOverride = this.authenticationService.userOverride ?\n          Utils.copy<UserOverride>(this.authenticationService.userOverride) : undefined;\n        if (!userOverride) {\n          userOverride = {\n            userName: \"\",\n            domain: \"\"\n          };\n        }\n        this.modalService.open(BsOverrideUser, {model: userOverride})\n          .then((result) => {\n            if (result === ModalResult.OK) {\n              this.loginService.overrideUser(userOverride);\n              this.changeDetectorRef.markForCheck();\n            }\n          });\n      }\n    });\n\n    // Cancel user override\n    this.revertOverrideAction = new Action({\n      text: \"msg#userMenu.revertUserOverride\",\n      title: \"msg#userMenu.revertUserOverride\",\n      action: () => {\n        this.loginService.overrideUser(undefined);\n        this.changeDetectorRef.markForCheck();\n      }\n    });\n\n    // Link to the admin\n    this.adminAction = new Action({\n      text: \"msg#userMenu.administration\",\n      title: \"msg#userMenu.administration\",\n      href: this.appService.adminUrl\n    });\n\n    // Language menu\n    this.languageAction = new Action({\n      text: \"msg#userMenu.language\",\n      title: \"msg#userMenu.language\",\n      children: this.intlService.locales.map(locale =>\n        new Action({\n          text: locale.display,   // \"French\"\n          title: locale.display,   // \"French\"\n          data: locale,   // French locale\n          selected: locale === this.intlService.currentLocale, // Whether French is the current locale\n          iconAfter: \"sq-image sq-flag-\" + locale.name,\n          action: (item: Action, $event: UIEvent) => {    // On click, switch to this language\n            this.intlService.use((item.data as Locale).name).subscribe(\n              (value) => this.languageAction.children!.forEach(a => a.update()));\n          },\n          updater: (action) => {  // Update the status of buttons\n            action.selected = action.data === this.intlService.currentLocale;\n          }\n        })\n      )\n    });\n\n    this.resetUserSettings = new Action({\n      text: \"msg#userMenu.resetUserSettings.menu\",\n      title: \"msg#userMenu.resetUserSettings.menu\",\n      action: () => {\n        this.modalService.confirm({\n          title: \"msg#userMenu.resetUserSettings.modalTitle\",\n          message: \"msg#userMenu.resetUserSettings.modalMessage\", \n          buttons: [\n            new ModalButton({result: ModalResult.OK, text: \"msg#userMenu.resetUserSettings.modalConfirmButton\"}),\n            new ModalButton({result: ModalResult.Cancel, primary: true})\n          ],\n          confirmType: ConfirmType.Warning\n        }).then(res => {\n          if(res === ModalResult.OK) {\n            this.userSettingsService.reset().subscribe({\n              next: () => this.notificationsService.notify(NotificationType.Success, \"msg#userMenu.resetUserSettings.successMessage\"),\n              error: () => this.notificationsService.notify(NotificationType.Error, \"msg#userMenu.resetUserSettings.errorMessage\")\n            });\n          }\n        });\n      }\n    });\n\n  }\n\n  ngOnInit() {\n    this.updateMenu();\n    this._loginSubscription = this.loginService.events.subscribe(event => {\n      if(event.type === \"session-changed\"){\n        this.updateMenu();\n      }\n    });\n    this._principalSubscription = this.principalService.events.subscribe(event => {\n      this.updateMenu();\n    });\n  }\n\n  private _loginSubscription: Subscription;\n  private _principalSubscription: Subscription;\n  ngOnDestroy(){\n    if(this._loginSubscription){\n      this._loginSubscription.unsubscribe();\n    }\n    if(this._principalSubscription){\n      this._principalSubscription.unsubscribe();\n    }\n  }\n\n  updateMenu() {\n    const userActions: Action[] = [];\n\n    if (!this.principalService.principal && !this.authenticationService.userOverrideActive) {\n      userActions.push(this.loginAction);\n    }\n    if (this.principalService.principal) {\n      userActions.push(this.logoutAction);\n    }\n    if (this.authenticationService.userOverrideActive) {\n      userActions.push(this.revertOverrideAction);\n    }\n    if (this.principalService.principal && this.principalService.principal.isAdministrator) {\n      userActions.push(this.overrideAction);\n    }\n    if (this.principalService.principal && (this.principalService.principal.isAdministrator || this.principalService.principal.isDelegatedAdmin)) {\n      userActions.push(this.adminAction);\n    }\n    if(this.loginService.complete) {\n      userActions.push(this.resetUserSettings);\n    }\n    userActions.push(new Action({separator: true}));\n    if (this.intlService.locales.length > 1) {\n      userActions.push(this.languageAction);\n    }\n\n    this.menu = new Action({\n        icon: this.icon,\n        text: this.loginService.complete && this.principalService.principal ? this.principalService.principal.name || \"msg#userMenu.user\" : \"msg#userMenu.user\",\n        children: userActions\n    });\n  }\n\n\n}\n","<li *ngIf=\"!!menu && !menu.hidden\" class=\"nav-item dropdown\" \n    [sq-action-item]=\"{item: menu, size: size, autoAdjust: autoAdjust, autoAdjustBreakpoint: autoAdjustBreakpoint, inMenu: true}\"\n    [collapseBreakpoint]=\"collapseBreakpoint\"\n></li>","const LOAD_COMPONENT_MODULE_PROVIDERS = [];\n\nexport {LOAD_COMPONENT_MODULE_PROVIDERS};\n","export * from \"./public-api\";","export default {\n    \"notification\": {\n        \"title\": \"Benachrichtigungen\",\n        \"showNotifications\": \"Zeige Benachrichtigungen\",\n        \"hideNotifications\": \"Benachrichtigungen verstecken\",\n        \"clearNotifications\": \"Benachrichtigungen löschen\",\n    }\n};\n","import {Component, OnChanges, SimpleChanges, Input} from '@angular/core';\nimport {Results} from \"@sinequa/core/web-services\";\nimport {AppService} from \"@sinequa/core/app-utils\";\nimport {Action} from \"@sinequa/components/action\";\nimport {SearchService} from \"../../search.service\";\n//import {ResultsView} from '@sinequa/components/results-view';\n\n// TODO restore functionality of storing page size in user settings ?\n\n/**\n * Component for choosing the page size of the results view\n *\n */\n@Component({\n    selector: 'sq-page-size-selector',\n    templateUrl: './page-size-selector.html'\n})\nexport class BsPageSizeSelector implements OnChanges {\n    @Input() results: Results;\n    //@Input() resultsView: ResultsView;\n    @Input() showInRegularView: boolean = true;\n    @Input() showInCustomization: boolean;\n    @Input() pageSizes: number[];\n    @Input() rightAligned: boolean;\n\n    public pageSizingAction: Action;\n\n    private availableSizes: number[];\n    private currentPageSize: number;\n\n    constructor(\n        private appService: AppService,\n        private searchService: SearchService\n    ) { }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        this.refreshVisualisation();\n    }\n\n    /*\n    private get globalPageSize(): number {\n        const globalQueryParams = this.userSettingsService.getUserSettings().queryParams;\n        return globalQueryParams ? globalQueryParams.pageSize : undefined;\n    }\n    */\n\n    private get configPageSize(): number {\n        return this.appService.ccquery ? this.appService.ccquery.pageSize : 0;\n    }\n\n    private get defaultPageSize(): number {\n        //let res = this.globalPageSize;\n        //if (!res) {\n        let res = this.configPageSize;\n        if (!res) {\n            res = SearchService.DefaultPageSize;\n        }\n        //}\n\n        return res;\n    }\n\n    private buildPageSizingAction(): Action {\n        this.availableSizes = this.pageSizes ? this.pageSizes.slice(0) : [];\n        this.availableSizes.sort((a, b) => a - b);\n        const children: Action[] = [];\n\n        children.push(new Action({\n            text: 'msg#pageSizeSelector.defaultPageSize',\n            messageParams: { values: { size: this.defaultPageSize } },\n            data: undefined, // To make sure that setCurrentSize() always chooses the default choice text.\n            action: (item: Action, event: Event) => {\n                this.updatePageSize(item.data);\n            }\n        }));\n\n        for (const size of this.availableSizes) {\n            children.push(new Action({\n                text: size.toString(),\n                data: size,\n                action: (item: Action, event: Event) => {\n                    this.updatePageSize(item.data);\n                }\n            }));\n        }\n\n        return new Action({\n            icon: 'fas fa-arrows-alt-v',\n            text: 'msg#pageSizeSelector.pageSizeChoice',\n            children: children\n        });\n    }\n\n    private refreshVisualisation(): void {\n        this.pageSizingAction = this.buildPageSizingAction();\n        if (this.results) {\n            //const queryParams = this.userSettingsService.getViewQueryParams(this.resultsView.name);\n            //this.currentPageSize = queryParams.pageSize;\n            this.setCurrentSize(this.currentPageSize);\n        }\n    }\n\n    private setCurrentSize(size: number): void {\n        if (!size) {\n            this.pageSizingAction.text = 'msg#pageSizeSelector.defaultPageSizeChoice';\n            this.pageSizingAction.messageParams = { values: { size: this.defaultPageSize } };\n        }\n        else {\n            const selectedAction = this.pageSizingAction.children?.find(action => action.data === size);\n            this.pageSizingAction.text = 'msg#pageSizeSelector.pageSizeChoice';\n            this.pageSizingAction.messageParams = { values: { size: selectedAction?.data } };\n        }\n    }\n\n    private updatePageSize(size: number): void {\n        if (this.currentPageSize !== size) {\n            //this.userSettingsService.saveResultsViewPageSize(this.resultsView.name, size);\n            this.currentPageSize = size;\n\n            this.searchService.query.pageSize = size;\n            this.searchService.search();\n        }\n\n        this.setCurrentSize(size);\n    }\n}\n","<div class=\"btn-toolbar\" *ngIf=\"!!results\">\n    <div class=\"btn-group\"\n        [sq-action-buttons]=\"{\n            items: [pageSizingAction],\n            autoAdjust: true,\n            rightAligned: rightAligned\n        }\"></div>\n</div>\n","export * from \"./public-api\";","import {Component, Input, OnChanges, SimpleChanges, AfterViewInit, OnDestroy, ViewChild, ElementRef, EventEmitter} from \"@angular/core\";\nimport {Subscription} from \"rxjs\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {AppService, FormatService, Expr, ExprOperator, ExprBuilder} from \"@sinequa/core/app-utils\";\nimport {IntlService} from \"@sinequa/core/intl\";\nimport {CCColumn, Results, Aggregation} from \"@sinequa/core/web-services\";\nimport {Options, LabelType, ChangeContext} from \"ng5-slider\";\nimport moment from \"moment\";\nimport {FacetService} from \"../../facet.service\";\nimport {SearchService} from \"@sinequa/components/search\";\nimport {UIService} from \"@sinequa/components/utils\";\nimport {AbstractFacet} from \"../../abstract-facet\";\nimport {AdvancedService} from \"@sinequa/components/advanced\";\nimport { Action } from '@sinequa/components/action';\n\nexport enum RoundTarget {\n    number,\n    year,\n    month,\n    week, // ISO\n    day\n}\n\nexport enum RoundType {\n    up,\n    down,\n    nearest\n}\n\nexport interface StepDef {\n    step: string;\n    format: string;\n    minRange: string;\n    active: boolean;\n}\n\n@Component({\n    selector: \"sq-facet-range\",\n    templateUrl: \"./facet-range.html\"\n})\nexport class BsFacetRange extends AbstractFacet implements OnChanges, AfterViewInit, OnDestroy {\n    @Input() name: string; // If ommited, the aggregation name is used\n    @Input() results: Results;\n    @Input() aggregation: string;\n    @Input() min : string;\n    @Input() max : string;\n    @Input() stepDefs: StepDef[];\n    @ViewChild(\"slider\", {static: false}) slider: ElementRef;\n\n    // Aggregation from the Results object\n    data: Aggregation | undefined;\n\n    options: Options;\n    value: number;\n    highValue: number;\n    startValue: number;\n    startHighValue: number;\n    sliderActive: boolean;\n    rangeActive: boolean;\n    rangeSelected: boolean;\n    manualRefresh = new EventEmitter<void>();\n    initDone: boolean;\n    protected column: CCColumn | undefined;\n    protected roundTarget: RoundTarget;\n    protected roundMultiple: number;\n    protected localeChange: Subscription;\n    protected format: string;\n\n    clearFiltersAction: Action;\n    applyFiltersAction: Action;\n    constructor(\n        private facetService: FacetService,\n        protected appService: AppService,\n        protected searchService: SearchService,\n        protected formatService: FormatService,\n        protected intlService: IntlService,\n        protected uiService: UIService,\n        protected advancedService: AdvancedService,\n        protected exprBuilder: ExprBuilder) {\n\n        super();\n\n        this.clearFiltersAction = new Action({\n            icon: \"far fa-minus-square\",\n            title: \"msg#facet.range.clear\",\n            action: () => this.clearRange()\n        });\n\n        this.applyFiltersAction = new Action({\n            icon: \"fas fa-filter\",\n            title: \"msg#facet.range.apply\",\n            action: () => this.applyRange()\n        });\n    }\n\n    protected translate = (value: number, label: LabelType): string => {\n        const value1 = this.roundNearest(value); // to accommodate fractional steps generated for years/months\n\n        if (this.format) {\n            if (this.column && AppService.isDate(this.column)) {\n                const date = new Date(value1);\n                const m = moment(date);\n                return this.intlService.formatMessage(this.format, {date: date, time: Utils.getTime(date), weekDay: m.weekday(), week: m.week(), weekYear: m.weekYear()});\n            }\n            else {\n                return this.intlService.formatMessage(this.format, {value: value1});\n            }\n        }\n        return this.formatService.formatFieldValue(this.column && AppService.isDate(this.column) ? new Date(value1) : value1, this.column);\n    }\n\n    protected roundAdjustment(value: number, multiple: number, roundType: RoundType): number {\n        switch (roundType) {\n            case RoundType.up:\n                return multiple - value % multiple;\n            default:\n            case RoundType.down:\n                return -(value % multiple);\n            case RoundType.nearest: {\n                const adjustUp = multiple - value % multiple;\n                const adjustDown = -(value % multiple);\n                return Math.abs(adjustUp) <= Math.abs(adjustDown) ? adjustUp : adjustDown;\n            }\n        }\n    }\n\n    protected _roundNumberUp(value: number, step: number): number {\n        return (value >= 0 ? Math.ceil(value / step) : Math.floor(value / step)) * step;\n    }\n\n    protected _roundNumberDown(value: number, step: number): number {\n        return (value >= 0 ? Math.floor(value / step) : Math.ceil(value / step)) * step;\n    }\n\n    protected _roundNumber(value: number, step: number, roundType: RoundType): number {\n        switch (roundType) {\n            case RoundType.up:\n                return this._roundNumberUp(value, step);\n            default:\n            case RoundType.down:\n                return this._roundNumberDown(value, step);\n            case RoundType.nearest: {\n                const up = this._roundNumberUp(value, step);\n                const down = this._roundNumberDown(value, step);\n                return Math.abs(up - value) <= Math.abs(down - value) ? up : down;\n            }\n        }\n    }\n\n    protected _getNearestDate(date: Date, upper: Date, lower: Date): Date {\n        return Math.abs(upper.getTime() - date.getTime()) <= Math.abs(lower.getTime() - date.getTime()) ? upper : lower;\n    }\n\n    protected _getNearestTargetDate(date: Date, target: RoundTarget): Date {\n        switch (target) {\n            case RoundTarget.year: {\n                return this._getNearestDate(date, new Date(date.getFullYear() + 1, 0), new Date(date.getFullYear(), 0));\n            }\n            case RoundTarget.month: {\n                return this._getNearestDate(date, new Date(date.getFullYear(), date.getMonth() + 1), new Date(date.getFullYear(), date.getMonth()));\n            }\n            default:\n            case RoundTarget.week:\n            case RoundTarget.day: {\n                return this._getNearestDate(date, new Date(date.getFullYear(), date.getMonth(), date.getDate() + 1), new Date(date.getFullYear(), date.getMonth(), date.getDate()));\n            }\n        }\n    }\n\n    protected _round(value: number, step: number, target: RoundTarget, multiple: number,  roundType = RoundType.down): number {\n        if (this.column && AppService.isDate(this.column)) {\n            let date = new Date(value);\n            if (roundType === RoundType.nearest) {\n                // round to the nearest target year, month or day to adjust for the linear step size and leap years\n                date = this._getNearestTargetDate(date, target);\n            }\n            switch (target) {\n                case RoundTarget.year: {\n                    const year = date.getFullYear();\n                    if (year % multiple !== 0 || date.getMonth() !== 0 || date.getDate() !== 1 ||\n                        date.getHours() !== 0 || date.getMinutes() !== 0 || date.getSeconds() !== 0 || date.getMilliseconds() !== 0) {\n                        date = new Date(year + this.roundAdjustment(year, multiple, roundType), 0);\n                    }\n                    break;\n                }\n                case RoundTarget.month: {\n                    const month = date.getMonth();\n                    if (month % multiple !== 0 || date.getDate() !== 1 ||\n                        date.getHours() !== 0 || date.getMinutes() !== 0 || date.getSeconds() !== 0 || date.getMilliseconds() !== 0) {\n                        date = new Date(date.getFullYear(), month + this.roundAdjustment(month, multiple, roundType));\n                    }\n                    break;\n                }\n                case RoundTarget.week: {\n                    const day = date.getDay();\n                    // First, round to Monday\n                    if (day !== 1/*Monday*/ ||\n                        date.getHours() !== 0 || date.getMinutes() !== 0 || date.getSeconds() !== 0 || date.getMilliseconds() !== 0) {\n                        let adjust: number;\n                        const up = 7 - (day - 1);\n                        const down = -(day - 1);\n                        switch (roundType) {\n                            case RoundType.up:\n                                adjust = up;\n                                break;\n                            default:\n                            case RoundType.down:\n                                adjust = down;\n                                break;\n                            case RoundType.nearest:\n                                adjust = Math.abs(up) >= Math.abs(down) ? up : down;\n                                break;\n                        }\n                        date = new Date(date.getFullYear(), date.getMonth(), date.getDate() + adjust);\n                    }\n                    // Then, round to week number\n                    const m = moment(date);\n                    const week = m.week();\n                    if (week % multiple !== 0) {\n                        date = new Date(date.getFullYear(), date.getMonth(), date.getDate() + (this.roundAdjustment(week, multiple, roundType) * 7));\n                    }\n                    break;\n                }\n                case RoundTarget.day: {\n                    const _date = date.getDate();\n                    if (date.getHours() !== 0 || date.getMinutes() !== 0 || date.getSeconds() !== 0 || date.getMilliseconds() !== 0) {\n                        date = new Date(date.getFullYear(), date.getMonth(), _date + this.roundAdjustment(_date, multiple, roundType));\n                    }\n                    break;\n                }\n            }\n            return date.getTime();\n        }\n        else {\n            return this._roundNumber(value, step, roundType);\n        }\n    }\n\n    protected round(value: number, roundType = RoundType.down): number {\n        return this._round(value, this.options.step || 1, this.roundTarget, this.roundMultiple, roundType);\n    }\n\n    protected roundDown(value: number): number {\n        return this.round(value, RoundType.down);\n    }\n\n    protected roundUp(value: number): number {\n        return this.round(value, RoundType.up);\n    }\n\n    protected roundNearest(value: number): number {\n        return this.round(value, RoundType.nearest);\n    }\n\n    //TODO - remove fix engine hack\n    private fixDate(dateStr: string): string {\n        if (dateStr) {\n            const secondsSep = dateStr.lastIndexOf(\":\");\n            if (secondsSep > 0) {\n                let seconds = Utils.toInt(dateStr.substr(secondsSep + 1));\n                if (seconds < 0) {\n                    seconds = 0;\n                }\n                else if (seconds > 59) {\n                    seconds = 59;\n                }\n                dateStr = dateStr.substr(0, secondsSep + 1) + seconds;\n            }\n        }\n        return dateStr;\n    }\n\n    protected initMinMax() {\n        let min = 0;\n        let max = 0;\n        if (!Utils.isEmpty(this.min) && (!Utils.isEmpty(this.max))) {\n            min = this.parseValue(!!new Date(this.min).getDate()? new Date(this.min) : this.min);\n            max = this.parseValue(!!new Date(this.max).getDate()? new Date(this.max) : this.max);\n        }\n        else {\n            if (this.data?.items) {\n                const item = this.data.items[0];\n                if (item && item.operatorResults) {\n                    if (this.column && AppService.isDate(this.column)) {\n                        //TODO - remove fix engine hack\n                        if (Utils.isString(item.operatorResults.min)) {\n                            const date = Utils.fromSysDateStr(this.fixDate(item.operatorResults.min));\n                            if (Utils.isDate(date)) {\n                                item.operatorResults.min = date;\n                            }\n                        }\n                        if (Utils.isString(item.operatorResults.max)) {\n                            const date = Utils.fromSysDateStr(this.fixDate(item.operatorResults.max));\n                            if (Utils.isDate(date)) {\n                                item.operatorResults.max = date;\n                            }\n                        }\n                        min = Utils.isDate(item.operatorResults.min) ? item.operatorResults.min.getTime() : 0;\n                        max = Utils.isDate(item.operatorResults.max) ? item.operatorResults.max.getTime() : 0;\n                    }\n                    else {\n                        min = Utils.isNumber(item.operatorResults.min) ? item.operatorResults.min : 0;\n                        max = Utils.isNumber(item.operatorResults.max) ? item.operatorResults.max : 0;\n                    }\n                }\n            }\n        }\n        this.options.floor = min;\n        this.options.ceil = max;\n    }\n\n    protected parseValue(value: string | Date): number {\n        if (Utils.isDate(value)) {\n            return value.getTime();\n        }\n        if (!Utils.isString(value)) {\n            return 0;\n        }\n        let _value: number | undefined;\n        if (this.column && this.column.parser) {\n            const str = this.formatService.parseValue(value, this.column.parser);\n            _value = Utils.toNumber(str);\n        }\n        if (Utils.isUndefined(_value)) {\n            _value = this.column && AppService.isDate(this.column) ?\n                Utils.toDuration(value) :\n                Utils.toSize(value);\n        }\n        return _value;\n    }\n\n    protected initStep() {\n        // Select the first step definition where the range >= stepDef.minRange\n        let format: string | undefined;\n        let step: number | undefined;\n        if (this.stepDefs) {\n            for (const stepDef of this.stepDefs) {\n                if (stepDef.step) {\n                    const thisStep = this.parseValue(stepDef.step);\n                    if (thisStep && stepDef.active) {\n                        if (!stepDef.minRange) {\n                            step = thisStep;\n                            format = stepDef.format;\n                            break;\n                        }\n                        else {\n                            // Round min/max for thisStep\n                            const {roundTarget, roundMultiple} = this.getRoundTarget(thisStep);\n                            const min = this._round(this.options.floor || 0, thisStep, roundTarget, roundMultiple, RoundType.down);\n                            const max = this._round(this.options.ceil || 0, thisStep, roundTarget, roundMultiple, RoundType.up);\n                            const range = max - min;\n                            const minRange = this.parseValue(stepDef.minRange);\n                            if (range >= minRange) {\n                                step = thisStep;\n                                format = stepDef.format;\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (!step) {\n            // Default step, default formatting\n            step = this.column && AppService.isDate(this.column) ? Utils.oneDay : 1;\n        }\n        // Adjust step for year/month rounding (we assume daylight savings will balance out over the year)\n        const {roundTarget, roundMultiple} = this.getRoundTarget(step);\n        switch (roundTarget) {\n            case RoundTarget.year:\n                step = roundMultiple * 365.25 * Utils.oneDay;\n                break;\n            case RoundTarget.month:\n                step = roundMultiple * 365.25 * Utils.oneDay / 12;\n                break;\n        }\n        this.roundTarget = roundTarget;\n        this.roundMultiple = roundMultiple;\n        // Set default format based on roundTarget\n        if (!format) {\n            switch (this.roundTarget) {\n                case RoundTarget.year:\n                    format = \"msg#facet.range.year\";\n                    break;\n                case RoundTarget.month:\n                    format = \"msg#facet.range.monthYear\";\n                    break;\n                case RoundTarget.week:\n                    format = \"msg#facet.range.weekYear\";\n                    break;\n                default:\n                    format = \"\";\n                    break;\n            }\n        }\n        this.options.step = step;\n        this.format = format;\n    }\n\n    protected getRoundTarget(step: number): { roundTarget: RoundTarget, roundMultiple: number } {\n        const ret = {\n            roundTarget: RoundTarget.number,\n            roundMultiple: 1\n        };\n        if (this.column && AppService.isDate(this.column)) {\n            if (step % (365 * Utils.oneDay) === 0) {\n                ret.roundTarget = RoundTarget.year;\n                ret.roundMultiple = step / (365 * Utils.oneDay);\n            }\n            else if (step % (30 * Utils.oneDay) === 0) {\n                ret.roundTarget = RoundTarget.month;\n                ret.roundMultiple = step / (30 * Utils.oneDay);\n            }\n            else if (step % (7 * Utils.oneDay) === 0) {\n                ret.roundTarget = RoundTarget.week;\n                ret.roundMultiple = step / (7 * Utils.oneDay);\n            }\n            else if (step % Utils.oneDay === 0) {\n                ret.roundTarget = RoundTarget.day;\n                ret.roundMultiple = step / Utils.oneDay;\n            }\n        }\n        return ret;\n    }\n\n    protected init() {\n        this.options = {\n            draggableRange: true,\n            enforceStep: false,\n            translate: this.translate\n        };\n        this.initMinMax();\n        this.initStep();\n        let ceil = this.options.ceil || 0;\n        let floor = this.options.floor || 0;\n        this.sliderActive = ceil > floor;\n        if (ceil > floor) {\n            floor = this.options.floor = this.roundDown(floor);\n            ceil = this.options.ceil = this.roundUp(ceil);\n        }\n        const [from, to] = this.getRange();\n        this.rangeActive = !Utils.isUndefined(from) || !Utils.isUndefined(to);\n        this.rangeSelected = false;\n        this.value = this.startValue = Math.max(from || floor, floor);\n        this.highValue = this.startHighValue = Math.min(to || ceil, ceil);\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (!this.initDone) {\n            this.initDone = true;\n            this.localeChange = Utils.subscribe(this.intlService.events,\n                (value) => {\n                    this.manualRefresh.emit();\n                });\n        }\n        if (!!changes[\"results\"]) {\n            this.data = this.facetService.getAggregation(this.aggregation, this.results);\n            this.column = this.data && this.appService.getColumn(this.data.column);\n            this.init();\n        }\n    }\n\n    protected onResize = () => {\n        this.manualRefresh.emit();\n    }\n\n    ngAfterViewInit() {\n        this.uiService.addElementResizeListener(this.slider.nativeElement, this.onResize);\n    }\n\n    ngOnDestroy() {\n        if(this.localeChange) {\n            this.localeChange.unsubscribe();\n        }\n        if(this.uiService && this.slider) {\n            this.uiService.removeElementResizeListener(this.slider.nativeElement, this.onResize);\n        }\n    }\n\n    onUserChangeEnd(changeContext: ChangeContext) {\n        this.rangeSelected = this.value !== this.startValue || this.highValue !== this.startHighValue;\n    }\n\n    getRange(): number[] | undefined[] {\n        if (this.column) {\n            let expr: Expr | string;\n            let value;\n            const expression = this.searchService.query?.findSelect(this.column.name)?.expression;\n            if (expression) {\n                expr = this.appService.parseExpr(expression);\n                if (expr instanceof Expr) {\n                    if (expr.values && expr.values.length > 1) {\n                        value = expr.values;\n                    } else {\n                        value = expr.value;\n                    }\n                    if (!Utils.isArray(value)) {\n                        if (expr.operator === ExprOperator.gte) {\n                            value = [value, undefined];\n                        } else if (expr.operator === ExprOperator.lte) {\n                            value = [undefined, value];\n                        }\n                    }\n                    value =  value.map(\n                        (val) => val ? this.advancedService.castAdvancedValue(val, this.column) : val\n                    );\n                    if (AppService.isDate(this.column)) {\n                        value =  value.map(\n                            (val) => val ? new Date(val).getTime() : val\n                        );\n                    }\n                    return value;\n                }\n            }\n        }\n        return [undefined, undefined]\n    }\n\n    setRange(from: number | undefined, to: number | undefined) {\n        let valFrom;\n        let valTo;\n        let expression: string | undefined;\n        if (this.column) {\n            valFrom = AppService.isDate(this.column) && Utils.isNumber(from) ? new Date(from) : from;\n            valTo = AppService.isDate(this.column) && Utils.isNumber(to) ? new Date(to) : to;\n            if (!!valFrom && !!valTo) {\n                expression = this.exprBuilder.makeRangeExpr(this.column.name, valFrom, valTo);\n            } else if (!!valFrom) {\n                expression = this.exprBuilder.makeNumericalExpr(this.column.name, '>=', valFrom);\n            } else if (!!valTo) {\n                expression = this.exprBuilder.makeNumericalExpr(this.column.name, '<=', valTo);\n            }\n            this.searchService.query?.removeSelect(this.column.name);\n            if (expression) {\n                this.searchService.query?.addSelect(\n                    expression,\n                    this.column.name\n                );\n            }\n        }\n    }\n\n    applyRange() {\n        this.setRange(this.roundNearest(this.value), this.roundNearest(this.highValue));\n        this.searchService.search();\n    }\n\n    clearRange() {\n        this.setRange(undefined, undefined);\n        this.searchService.search();\n    }\n\n    get actions(): Action[] {\n        const actions: Action[] = [];\n        if(this.rangeSelected){\n            actions.push(this.applyFiltersAction);\n        }\n        if(this.rangeActive){\n          actions.push(this.clearFiltersAction);\n        }\n        return actions;\n    }\n}\n","<ng-container *ngIf=\"data\">\n    <div #slider class=\"card-body\">\n        <ng5-slider\n            *ngIf=\"sliderActive\"\n            [(value)]=\"value\"\n            [(highValue)]=\"highValue\"\n            [options]=\"options\"\n            [manualRefresh]=\"manualRefresh\"\n            (userChangeEnd)=\"onUserChangeEnd($event)\">\n        </ng5-slider>\n        <span *ngIf=\"!sliderActive\">{{'msg#facet.range.unavailable' | sqMessage}}</span>\n    </div>\n</ng-container>\n","export * from \"./facet-preview/facet-preview\";\nexport * from \"./facet-preview-2/facet-preview.component\";\nexport * from \"./preview-highlights/preview-highlights\";\nexport * from \"./preview-links/preview-links\";\nexport * from \"./preview.module\";\nexport * from \"./preview-panel/preview-panel\";\nexport * from \"./preview-popup/preview-popup\";\nexport * from \"./result-link-preview/result-link-preview\";\nexport * from \"./similar-documents/similar-documents\";\nexport * from './preview-entity-facet/preview-entity-facet.component';\nexport * from './preview-entity-panel/preview-entity-panel.component';\nexport * from './preview-extracts-panel/preview-extracts-panel.component';\nexport * from './preview-search-form/preview-search-form.component';\nexport * from './preview-page-form/preview-page-form.component';\nexport * from './preview-pages-panel/preview-pages-panel.component';\n","import {NgModule} from \"@angular/core\";\n\nimport {NOTIFICATION_MODULE_PROVIDERS} from \"./module.providers\";\n\n/**\n * This module provides a service for managing notifications. It is used by the\n * Sinequa runtime and can also be used for application-specific purposes.\n *\n * The {@link NotificationsInterceptor} in this module should be registered using `HTTP_INTERCEPTORS` in your app module.\n */\n@NgModule({\n    imports: [\n    ],\n    declarations: [\n    ],\n    exports: [\n    ],\n    providers: [\n        ...NOTIFICATION_MODULE_PROVIDERS\n    ]\n})\nexport class NotificationModule {\n}\n","import { Component, EventEmitter, Input, Output, OnChanges } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl } from '@angular/forms';\nimport { Query } from '@sinequa/core/app-utils';\n\n@Component({\n  selector: 'sq-preview-search-form',\n  templateUrl: './preview-search-form.component.html',\n  styleUrls: ['./preview-search-form.component.scss']\n})\nexport class BsPreviewSearchFormComponent implements OnChanges {\n  @Input() query: Query;\n  @Output() searchText = new EventEmitter<string>();\n\n  // Search form\n  readonly form: FormGroup;\n  readonly searchControl: FormControl;\n\n  constructor(\n    private formBuilder: FormBuilder) {\n\n    this.searchControl = new FormControl('');\n    this.form = this.formBuilder.group({\n      search: this.searchControl\n    });\n  }\n\n  /**\n   * Updates the text of the search form when the query changes\n   */\n  ngOnChanges() {\n    this.searchControl.setValue((!this.query || !this.query.text) ? \"\" : this.query.text);\n  }\n\n  /**\n   * Emits an event for the parent component to search this next text\n   */\n  search() {\n    this.searchText.next(this.searchControl.value || \"\");\n  }\n}\n","<form novalidate [formGroup]=\"form\">\n    <div class=\"input-group mb-3\">\n        <div class=\"input-group-prepend\">\n            <label for=\"search-input\" class=\"input-group-text\">{{ 'msg#preview.search' | sqMessage }}</label>\n        </div>\n\n        <input id=\"search-input\" type=\"text\" placeholder=\"{{ 'msg#searchForm.searchFor' | sqMessage }}\" formControlName=\"search\" class=\"form-control\" sqAutofocus>\n\n        <div class=\"input-group-append\">\n            <button class=\"btn btn-primary\" type=\"submit\" (click)=\"search()\" \n                title=\"{{ 'msg#searchForm.search' | sqMessage }}\">\n                <i class=\"fas fa-fw fa-search\"></i>\n            </button>\n        </div>\n    </div>\n</form>","import {NgModule, ModuleWithProviders, Type} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\n\nimport {A11yModule} from \"@angular/cdk/a11y\";\nimport {OverlayModule} from \"@angular/cdk/overlay\";\n\n// Sinequa modules\nimport {BaseModule} from \"@sinequa/core/base\";\nimport {IntlModule} from \"@sinequa/core/intl\";\nimport {ValidationModule} from \"@sinequa/core/validation\";\n\nimport {MODAL_CONFIRM} from \"./modal.service\";\nimport {MODAL_PROMPT} from \"./modal.service\";\n\nimport {MODAL_MODULE_PROVIDERS} from \"./module.providers\";\n\nimport {Confirm} from \"./confirm.component\";\nimport {Prompt} from './prompt.component';\n\n/**\n * This module contains an implementation of a [modal dialog service]{@link ModalService} which can be extended\n * to support UI frameworks such as Bootstrap and Material Design. It uses the `Overlay` and `Portal` funcionality\n * provided by the [Angular CDK]{@link https://material.angular.io/cdk/categories} library.\n */\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n\n        // CDK\n        OverlayModule, // Needed for the modal service\n        A11yModule,\n\n        // Sinequa modules\n        BaseModule,\n        IntlModule,\n        ValidationModule,\n    ],\n    declarations: [\n        Confirm,    // Default confirm\n        Prompt\n    ],\n    exports: [\n    ],\n    providers: [\n        ...MODAL_MODULE_PROVIDERS\n    ]\n})\nexport class ModalModule {\n    static forRoot(confirmModal: Type<any> = Confirm, promptModal: Type<any> = Prompt): ModuleWithProviders<ModalModule> {\n        return {\n            ngModule: ModalModule,\n            providers: [\n                {provide: MODAL_CONFIRM, useValue: confirmModal},\n                {provide: MODAL_PROMPT, useValue: promptModal},\n            ]\n        };\n    }\n}\n","import { Directive, Input, ElementRef, HostListener, Output, EventEmitter, OnInit } from \"@angular/core\";\nimport { Autocomplete, SuggestService, AutocompleteItem, AutocompleteState } from \"@sinequa/components/autocomplete\";\nimport { UIService } from \"@sinequa/components/utils\";\nimport { AppService } from \"@sinequa/core/app-utils\";\nimport { Observable } from 'rxjs';\n\n@Directive({\n    selector: \"[sqAdvancedFormAutocomplete]\",\n})\nexport class BsAdvancedFormAutocomplete extends Autocomplete implements OnInit {\n    @Output() UpdateItem = new EventEmitter<AutocompleteItem | undefined>();\n    @Input() field : string;\n\n    constructor(\n        elementRef: ElementRef,\n        suggestService: SuggestService,\n        appService: AppService,\n        uiService: UIService\n    ) {\n        super(elementRef, suggestService, appService, uiService);\n    }\n\n    /**\n     * The ngOnInit() method from the original directive is overriden\n     * On initialization, we listen to the autocomplete component for\n     * selection events\n     */\n    ngOnInit() {\n        this._dropdownSubscription = this.dropdown.clicked.subscribe((item) => {\n            this.select(item, false); // An item was selected from the autocomplete => take the value\n        });\n        this.start();\n    }\n\n    protected getSuggests() {\n        const value = this.getInputValue();\n        if (value) {\n            // If there is text, make a call to the suggest API\n            this.processSuggests(\n                this.getSuggestsObs(value, [this.field])\n            );\n        } else {\n            // If empty input, restart autocomplete\n            this.start();\n        }\n    }\n\n    protected processSuggests(obs: Observable<AutocompleteItem[]>){\n        obs.subscribe(\n            suggests => {\n                if(this.getState() === AutocompleteState.ACTIVE || this.getState() === AutocompleteState.OPENED){\n                    this.dropdown.update(true, suggests\n                        .filter(item => item.category !== \"$field$\")  // Filter out fields\n                        .map(item => {\n                            if(!item.label){\n                                item.label = this.appService.getLabel(item.category);\n                            }\n                            if (!item.normalized) {\n                                item.normalized = item.display;\n                            }\n                            return item;\n                        }));\n                }\n            },\n            err => {\n                this.dropdown.update(false);\n            },\n            () => {\n                if(this.dropdown.hasItems && this.getState() === AutocompleteState.ACTIVE){\n                    this.open();    // Switch from ACTIVE to OPENED (if not already)\n                }\n                else if(!this.dropdown.hasItems && this.getState() === AutocompleteState.OPENED){   // No data\n                    this.active();  // Switch from OPENED to ACTIVE (if not already)\n                }\n            });\n    }\n\n    protected setAutocompleteItem(item: AutocompleteItem): boolean {\n        if(item) {\n            this.setInputValue(item.display);\n            this.UpdateItem.next({\n                ...item,\n                normalized: item.normalized ? item.normalized : item.display\n            });\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Listen to blur events on the <input> host and overrides the autocomplete blur events\n     */\n    @HostListener(\"blur\", [\"$event\"]) blur(event: FocusEvent) {\n        /** If there is text in the <input/> and not selected from the dropdown ==> set the item manually */\n        if (this.getState() !== AutocompleteState.SELECTED) {\n            if (!!this.getInputValue() && this.getInputValue() !== \"\") {\n                const item = {\n                    display: this.getInputValue(),\n                    normalized: this.getInputValue(),\n                    category: \"\",\n                }\n                this.setAutocompleteItem(item);\n            } else {\n                this.UpdateItem.next(undefined);\n            }\n        }\n        this.init();\n    }\n\n    /**\n     * Overrides the parent inputChanged method, so that it is possible to reinitialize the autocomplete\n     * @param event\n     */\n    @HostListener(\"input\", [\"$event\"]) inputChanged(event: Event) {\n        switch (this.getState()) {\n            case AutocompleteState.OPENED:\n                this.suggest(); // Just request more data, but no state change\n                break;\n            case AutocompleteState.START:\n            case AutocompleteState.ACTIVE:\n                this.active(); // get more data, and change state if not already ACTIVE\n                break;\n            case AutocompleteState.SELECTED:\n                this.start(); // The model changed because we selected a value ==> we restart in case the user keeps typing\n                this.active();\n                break;\n            case AutocompleteState.INIT:\n                break;\n        }\n    }\n}\n","export * from \"./result-selector/result-selector\";\nexport * from \"./results-selector/results-selector\";\nexport * from \"./selection.module\";\nexport * from \"./selection-arranger/selection-arranger.component\";","export * from \"./public-api\";\n","export * from \"./public-api\";","import {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\n\nimport {IntlModule} from \"@sinequa/core/intl\";\n\nimport {BsSelectionModule} from \"@sinequa/components/selection\";\nimport {BsActionModule} from \"@sinequa/components/action\";\n\nimport {BsTooltipComponent} from \"./tooltip.component\";\nimport {BsHeatmapComponent} from \"./heatmap.component\";\nimport {BsFacetHeatmapComponent} from \"./facet-heatmap.component\";\nimport {BsResultsHeatmapView} from \"./results-heatmap-view\";\n\n@NgModule({\n    imports: [\n        FormsModule, ReactiveFormsModule,\n        CommonModule,\n        IntlModule,\n\n        BsSelectionModule,\n        BsActionModule\n    ],\n    declarations: [\n        BsResultsHeatmapView,\n        BsTooltipComponent,\n        BsHeatmapComponent,\n        BsFacetHeatmapComponent\n    ],\n    exports: [\n        BsResultsHeatmapView,\n        BsTooltipComponent,\n        BsHeatmapComponent,\n        BsFacetHeatmapComponent\n    ]\n})\nexport class BsHeatmapModule {\n}","export * from \"./authentication.service\";\nexport * from \"./token.service\";\nexport * from \"./component-with-login.component\";\nexport * from \"./jwt.service\";\nexport * from \"./login.module\";\nexport * from \"./login.service\";\nexport * from \"./login.component\";\nexport * from \"./login.interceptor\";\nexport * from \"./authentication-oauth.service\";\nexport * from \"./authentication-popup.service\";\nexport * from \"./messages/index\";\n","import {NgModule} from \"@angular/core\";\nimport {BaseModule} from \"@sinequa/core/base\";\nimport {IntlModule} from \"@sinequa/core/intl\";\nimport {WebServicesModule} from \"@sinequa/core/web-services\";\n\nimport {APP_UTILS_MODULE_PROVIDERS} from \"./module.providers\";\n\n/**\n * This module contains a utility {@link AppService} for managing the configuration of a Sinequa SBA and a {@link FormatService}\n * for handling the formatting and parsing of Sinequa field values. It also contains an implementation of a {@link Query} class\n * as well as classes for manipulating Sinequa fielded search expressions.\n *\n * The {@link AuditInterceptor} in this module should be registered using `HTTP_INTERCEPTORS` in your app module.\n */\n@NgModule({\n    imports: [\n        BaseModule,\n        IntlModule,\n        WebServicesModule\n    ],\n    declarations: [\n    ],\n    exports: [\n    ],\n    providers: [\n        ...APP_UTILS_MODULE_PROVIDERS\n    ]\n})\nexport class AppUtilsModule {\n}\n","import {Utils} from \"@sinequa/core/base\";\r\nimport _enUtils from \"./en\";\r\nimport _frUtils from \"./fr\";\r\nimport _deUtils from \"./de\";\r\n\r\nconst enUtils = Utils.merge({}, _enUtils);\r\nconst frUtils = Utils.merge({}, _frUtils);\r\nconst deUtils = Utils.merge({}, _deUtils);\r\n\r\nexport { enUtils, frUtils, deUtils };\r\n","import {Directive, Input, OnInit, DoCheck, InjectionToken, Type, Inject, ViewContainerRef} from \"@angular/core\";\nimport {FormGroup, AbstractControl} from \"@angular/forms\";\nimport {Utils, MapOf} from \"@sinequa/core/base\";\nimport {LoadComponentService, LoadedComponent} from \"@sinequa/core/load-component\";\nimport {ValidationService} from \"./validation.service\";\n\n/**\n * Describes the options that can be passed to {@link ValidationDirective}.\n */\nexport interface ValidationOptions {\n    /**\n     * The `FormGroup` container.\n     */\n    form: FormGroup;\n    /**\n     * Identifies the control to validate. Defaults to the value of the `formControlName`\n     * attribute on the element to which the `ValidationDirective` is attached.\n     */\n    controlName?: string;\n    /**\n     * The class name to set on the element if validation passes. Defaults to `is-valid`.\n     */\n    validClass?: string;\n    /**\n     * The class name to set on the element if validation fails. Defaults to `is-invalid`.\n     */\n    invalidClass?: string;\n    /**\n     * The selector to identify children of the element to which to also apply the validity\n     * classes. Defaults to `.form-control`. Set to `null` to not select any children.\n     */\n    childSelector?: string;\n    /**\n     * Custom error messages to use for the validators. By default the messages defined in\n     * {@link ValidationService} are used.\n     */\n    errorMessages?: MapOf<string>;\n}\n\n/**\n * An injection token that can be provided to override the component loaded by {@link ValidationDirective}\n * to display validation error messages. The default component is {@link ValidationMessageComponent}.\n */\nexport const VALIDATION_MESSAGE_COMPONENT = new InjectionToken<Type<any>>(\"VALIDATION_MESSAGE_COMPONENT\");\n\n/**\n * A directive to automatically add validity classes to the element to which it is attached. In addition,\n * when the associated `FormControl` is invalid a component is dynamically loaded after the element to display\n * the validation message.\n * The component to load can be specified by providing the {@link VALIDATION_MESSAGE_COMPONENT} injection token.\n * By default, the {@link ValidationMessageComponent} component is used.\n */\n@Directive({\n    selector: \"[sqValidation]\"\n})\nexport class ValidationDirective implements OnInit, DoCheck {\n    @Input(\"sqValidation\") options: FormGroup | ValidationOptions;\n    private element: HTMLElement;\n    private form: FormGroup;\n    private control: AbstractControl;\n    private validClass?: string;\n    private invalidClass?: string;\n    private childSelector?: string;\n    private errorMessages?: MapOf<string>;\n    private validationMessage: LoadedComponent;\n    private active: boolean;\n    private valid: boolean;\n    private dirty: boolean;\n    private error?: string;\n    private errorInfo?: string;\n\n    constructor(\n        @Inject(VALIDATION_MESSAGE_COMPONENT) private validationMessageComponent: Type<any>,\n        private viewContainerRef: ViewContainerRef,\n        private loadComponentService: LoadComponentService,\n        private validationService: ValidationService) {\n        this.element = viewContainerRef.element.nativeElement;\n    }\n\n    ngOnInit() {\n        if (!this.options) {\n            console.log(\"Validation.ngOnInit - no options\");\n            return;\n        }\n        let controlName;\n        if (this.options instanceof FormGroup) {\n            this.form = this.options;\n        }\n        else {\n            this.form = this.options.form;\n            controlName = this.options.controlName;\n            this.validClass = this.options.validClass;\n            this.invalidClass = this.options.invalidClass;\n            this.childSelector = this.options.childSelector;\n            this.errorMessages = this.options.errorMessages;\n        }\n        if (!this.form) {\n            console.log(\"Validation.ngOnInit - no form model\");\n            return;\n        }\n        if (!this.form.controls) {\n            console.log(\"Validation.ngOnInit - no form controls\");\n            return;\n        }\n        if (controlName) {\n            this.control = this.form.controls[controlName];\n        }\n        else {\n            const formControlName = this.element.getAttribute(\"formControlName\");\n            if (formControlName) {\n                this.control = this.form.controls[formControlName];\n            }\n        }\n        if (!this.control) {\n            console.log(\"Validation.ngOnInit - no control\");\n            return;\n        }\n        if (!this.validClass) {\n            this.validClass = \"is-valid\";\n        }\n        if (!this.invalidClass) {\n            this.invalidClass = \"is-invalid\";\n        }\n        if (Utils.isUndefined(this.childSelector)) {\n            this.childSelector = \".form-control\";\n        }\n        this.valid = this.control.valid;\n        this.dirty = this.control.dirty;\n        this.active = true;\n        this.error = undefined;\n    }\n\n    private getFirstError(): string | undefined {\n        if (this.control.errors) {\n            return Object.keys(this.control.errors)[0];\n        }\n        return undefined;\n    }\n\n    private getErrorText(error?: string): string {\n        if (error && this.errorMessages && !!this.errorMessages[error]) {\n            return this.errorMessages[error];\n        }\n        return this.validationService.getErrorText(error);\n    }\n\n    private getErrorInfo(error?: string): any {\n        if (error && this.control.errors) {\n            return this.control.errors[error];\n        }\n        return undefined;\n    }\n\n    private setValidityClasses() {\n        const add = this.control.valid ? this.validClass : this.invalidClass;\n        const remove = this.control.valid ? this.invalidClass : this.validClass;\n        if (remove) {\n            this.element.classList.remove(remove);\n        }\n        if (add) {\n            this.element.classList.add(add);\n        }\n        if (this.childSelector) {\n            const children = Array.from(this.element.querySelectorAll(this.childSelector));\n            children.forEach(element => {\n                if (remove) {\n                    element.classList.remove(remove);\n                }\n                if (add) {\n                    element.classList.add(add);\n                }\n            });\n        }\n    }\n\n    private removeValidityClasses() {\n        if (this.validClass) {\n            this.element.classList.remove(this.validClass);\n        }\n        if (this.invalidClass) {\n            this.element.classList.remove(this.invalidClass);\n        }\n        if (this.childSelector) {\n            const children = Array.from(this.element.querySelectorAll(this.childSelector));\n            children.forEach(element => {\n                if (this.validClass) {\n                    element.classList.remove(this.validClass);\n                }\n                if (this.invalidClass) {\n                    element.classList.remove(this.invalidClass);\n                }\n            });\n        }\n    }\n\n    /**\n     * Update the validity classes on the element depending on the validity state of the\n     * associated `FormControl`. If the control is invalid then the validation message component\n     * is loaded to display an error message.\n     */\n    ngDoCheck() {\n        if (!this.active) {\n            return;\n        }\n        if (this.valid === this.control.valid && this.dirty === this.control.dirty) {\n            const firstError = this.getFirstError();\n            const errorInfo = this.getErrorInfo(firstError);\n            if (firstError === this.error && errorInfo === this.errorInfo) {\n                return;\n            }\n            this.error = firstError;\n            this.errorInfo = errorInfo;\n        }\n        this.valid = this.control.valid;\n        this.dirty = this.control.dirty;\n        if (this.control.dirty) {\n            this.setValidityClasses();\n            if (this.control.valid) {\n                if (this.validationMessage) {\n                    this.validationMessage.componentRef.instance.text = \"\";\n                }\n            }\n            else {\n                if (!this.validationMessage) {\n                    this.validationMessage =\n                        this.loadComponentService.loadComponent({component: this.validationMessageComponent}, this.viewContainerRef);\n                }\n                const error = this.getFirstError();\n                this.validationMessage.componentRef.instance.text = this.getErrorText(error);\n                this.validationMessage.componentRef.instance.info = this.getErrorInfo(error);\n            }\n        }\n        else {\n            this.removeValidityClasses();\n            if (this.validationMessage) {\n                this.validationMessage.componentRef.instance.text = \"\";\n            }\n        }\n    }\n}\n","export default {\n    \"modal\": {\n        \"login\": {\n            \"title\": \"Connexion\",\n            \"userName\": \"Identifiant\",\n            \"password\": \"Mot de passe\",\n            \"singleSignOn\": \"Authentification unique\",\n            \"signInWith\": \"S'identifier avec ...\"\n        }\n    },\n};\n","export default {\n    \"results\": {\n        \"viewTitle\": \"Anzeige: {text}\",\n        \"unselectableViewDisplay\": \"<Andere>\",\n        \"resultsListView\": {\n            \"display\": \"Liste\",\n            \"selectDocument\": \"Dokument auswählen\",\n            \"unselectDocument\": \"Dokumentauswahl aufheben\",\n            \"previewPopup\": \"[Dokument-Navigator]\",\n            \"previewInCurrentPage\": \"[Dokument-Navigator (auf der aktuellen Seite)]\",\n            \"previewInNewTab\": \"[Dokument-Navigator (in einem neuen Reiter)]\",\n            \"showMetadata\": \"[Metadaten]\",\n            \"showLabels\": \"[Etiketten]\"\n        },\n        \"resultsGridView\": {\n            \"display\": \"Tabelle\",\n            \"selectDocument\": \"Dokument auswählen\",\n            \"unselectDocument\": \"Dokumentauswahl aufheben\",\n            \"selectDocuments\": \"Dokumente auswählen\",\n            \"unselectDocuments\": \"Dokumentauswahl aufheben\"\n        },\n        \"viewPageSize\": \"Anzahl der Ergebnisse pro Seite\",\n        \"viewUpdateApply\": \"Anwenden\",\n        \"warningNoViewForTab\": \"Der Reiter '{tab}' hat keine zugewiesenen Ergebnisansichten.\",\n        \"warningCannotDisplayTabOnView\": \"Der Reiter '{tab}' kann nicht mit der Ansicht '{view}' angezeigt werden, da diese nicht in der Ansichtskonfiguration enthalten ist.\",\n\n        \"resultsAllTab\": \"Alle\",\n        \"resultsTextTab\": \"Text\",\n        \"results_all_tab\": \"Alle\",\n        \"results_text_tab\": \"Text\",\n    }\n};\n","import {Pipe, ChangeDetectorRef} from \"@angular/core\";\nimport {AbstractIntlPipe, IntlService} from \"@sinequa/core/intl\";\n\n@Pipe({name: \"sqNumber\", pure: false})\nexport class NumberPipe extends AbstractIntlPipe {\n    constructor(\n        intlService: IntlService,\n        changeDetectorRef: ChangeDetectorRef) {\n        super(intlService, changeDetectorRef);\n    }\n\n    updateValue(key: number | string, params: Intl.NumberFormatOptions): void {\n        super.updateValue(key, params);\n        this.value = typeof key === \"number\" ? this.intlService.formatNumber(key, params) : key;\n    }\n}","import {Component, Input} from '@angular/core';\n\n@Component({\n    selector: \"sq-tooltip\",\n    template: `\n<div [ngStyle]=\"style\" [ngClass]=\"orientation\" class=\"sq-tooltip position-absolute card\">\n    <div class=\"card-body bg-{{theme}} p-2\">\n        <ng-content></ng-content>\n    </div>\n</div>\n`,\n    styles: [`\n.sq-tooltip {\n    z-index: 10;\n}\n\n.sq-tooltip::after {\n    content: \" \";\n    position: absolute;\n    top: 12px;\n    border-width: 8px;\n    border-style: solid;\n}\n\n.sq-tooltip.right::after {\n    left: -17px;\n    border-color: transparent rgb(0,0,0,0.125) transparent transparent;\n}\n\n.sq-tooltip.left::after {\n    right: -17px;\n    border-color: transparent transparent transparent rgb(0,0,0,0.125);\n}\n    `]\n})\nexport class BsTooltipComponent {\n    @Input() orientation: \"left\" | \"right\" = \"right\";\n    @Input() left = 0;\n    @Input() right = 0;\n    @Input() top = 0;\n    @Input() theme: \"light\" | \"dark\" = \"light\";\n\n    get style() {\n        if(this.orientation === \"right\") {\n            return {\n                'left.px': this.left + 7,\n                'top.px': this.top - 21, // Align tooltip arrow\n            }\n        }\n        else {\n            return {\n                'right.px': this.right + 7,\n                'top.px': this.top - 21, // Align tooltip arrow\n            }\n        }\n    }\n}","export default {\n    \"resultSelector\": {\n        \"selectDocument\": \"Sélectionner le document\",\n        \"unselectDocument\": \"Désélectionner le document\"\n    },\n    \"resultsSelector\": {\n        \"selectDocuments\": \"{count, selectordinal, =0 {} other {(#)}}\",\n        \"selectDocumentsTitle\": \"Sélectionner les documents\",\n        \"unselectDocumentsTitle\": \"Désélectionner les documents\",\n    },\n    \"selection\": {\n        \"selectedDocuments\": \"{count, plural, =0 {} one {# document sélectionné} other {# documents sélectionnés}}\"\n    }\n};\n","import {Utils} from \"@sinequa/core/base\";\nimport {enIntl, frIntl, deIntl} from \"@sinequa/core/intl\";\nimport _enValidation from \"./en\";\nimport _frValidation from \"./fr\";\nimport _deValidation from \"./de\";\n\nconst enValidation = Utils.merge({}, _enValidation, enIntl);\nconst frValidation = Utils.merge({}, _frValidation, frIntl);\nconst deValidation = Utils.merge({}, _deValidation, deIntl);\n\nexport { enValidation, frValidation, deValidation };\n","export * from \"./labels-autocomplete/labels-autocomplete.component\";\nexport * from \"./labels.module\";\nexport * from \"./rename-label/rename-label\";\nexport * from \"./labels-menu/labels-menu.component\";\nexport * from \"./delete-label/delete-label\";\nexport * from \"./add-label/add-label\";\nexport * from \"./edit-label/edit-label\";\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Action } from '@sinequa/components/action';\nimport { LoginService } from '@sinequa/core/login';\nimport { BasketsService } from '../../baskets.service';\n\n@Component({\n  selector: 'sq-baskets-menu',\n  templateUrl: './baskets-menu.component.html'\n})\nexport class BsBasketsMenuComponent implements OnInit {\n  @Input() searchRoute: string = \"/search\";\n  @Input() icon: string = \"fas fa-shopping-basket\";\n  @Input() autoAdjust: boolean = true;\n  @Input() autoAdjustBreakpoint: string = 'xl';\n  @Input() collapseBreakpoint: string = 'sm';\n  @Input() size: string;\n\n  menu: Action | undefined;\n\n  // Basket actions\n  createAction: Action;\n  manageAction: Action;\n\n  constructor(\n    public loginService: LoginService,\n    public basketsService: BasketsService) {\n\n    this.createAction = new Action({\n      text: \"msg#baskets.createBasket\",\n      title: \"msg#baskets.createBasket\",\n      action: _ => { this.basketsService.createBasketModal(); }\n    });\n\n    this.manageAction = new Action({\n      text: \"msg#baskets.manageBaskets\",\n      title: \"msg#baskets.manageBaskets\",\n      action: _ => { this.basketsService.manageBasketsModal(); }\n    });\n  }\n\n  ngOnInit() {\n    this.updateMenu();\n    this.basketsService.changes.subscribe({\n      next: () => { this.updateMenu(); }\n    });\n    this.loginService.events.subscribe(event => {\n      if(event.type === \"session-changed\"){\n        this.updateMenu();\n      }\n    });\n  }\n\n  updateMenu() {\n\n    if (!this.loginService.complete) {\n        this.menu = undefined;\n        return;\n    }\n\n    const basketsActions: Action[] = [];\n\n    if (this.basketsService.hasBasket) {\n        const scrollGroup = new Action({\n            scrollGroup: true,\n            children: this.basketsService.baskets.map(basket => new Action({\n                text: basket.name,\n                title: basket.name,\n                data: basket,\n                action: () => this.basketsService.searchBasket(basket, this.searchRoute)\n            }))\n        });\n        basketsActions.push(scrollGroup);\n    }\n\n    basketsActions.push(this.createAction);\n\n    if (this.basketsService.hasBasket) {\n      basketsActions.push(this.manageAction);\n    }\n\n    this.menu = new Action({\n      icon: this.icon,\n      text: \"msg#baskets.baskets\",\n      title: \"msg#baskets.baskets\",\n      children: basketsActions\n    });\n  }\n}\n","<li *ngIf=\"!!menu && !menu.hidden\" class=\"nav-item dropdown\" \n    [sq-action-item]=\"{item: menu, size: size, autoAdjust: autoAdjust, autoAdjustBreakpoint: autoAdjustBreakpoint, inMenu: true}\"\n    [collapseBreakpoint]=\"collapseBreakpoint\"\n></li>","import { ArrayView } from \"./array-view\";\nimport { IteratorAdaptor } from \"./iterator-adaptor\";\n\n/**\n * A generic interface describing a name and associated value\n */\nexport interface NameValuePair<U, V> {\n    name: U;\n    value: V;\n}\n\n/**\n * An {@link ArrayView} of {@link NameValuePair}\n */\nexport interface NameValueArrayView<U, V> extends ArrayView<NameValuePair<U, V>> {\n    getName(index: number): U;\n    getValue(index: number): V;\n    items(): IterableIterator<NameValuePair<U, V>>;\n    names(): IterableIterator<U>;\n    values(): IterableIterator<V>;\n}\n\nclass ArrayBasedView<T, U, V> implements NameValueArrayView<U, V> {\n    constructor(\n        private base: T[],\n        private nameSelector: (t: T) => U,\n        private valueSelector: (t: T) => V\n    ) { }\n\n    get length(): number {\n        return this.base.length;\n    }\n\n    get(index: number): NameValuePair<U, V> {\n        return this.toNameValuePair(this.base[index]);\n    }\n\n    getName(index: number): U {\n        return this.nameSelector(this.base[index]);\n    }\n\n    getValue(index: number): V {\n        return this.valueSelector(this.base[index]);\n    }\n\n    private toNameValuePair(obj: T): NameValuePair<U, V> {\n        return { name: this.nameSelector(obj), value: this.valueSelector(obj) };\n    }\n\n    /*\n        Iterators\n    */\n\n    [Symbol.iterator](): IterableIterator<NameValuePair<U, V>> {\n        return this.items();\n    }\n\n    items(): IterableIterator<NameValuePair<U, V>> {\n        return IteratorAdaptor.forIterable(\n            this.base,\n            (obj) => this.toNameValuePair(obj)\n        );\n    }\n\n    names(): IterableIterator<U> {\n        return IteratorAdaptor.forIterable(this.base, this.nameSelector);\n    }\n\n    values(): IterableIterator<V> {\n        return IteratorAdaptor.forIterable(this.base, this.valueSelector);\n    }\n\n    forEach(callback: (item: NameValuePair<U, V>, index?: number, items?: NameValueArrayView<U, V>) => void, thisArg?: any) {\n        for (let idx = 0; idx < this.length; idx++) {\n            const r = this.get(idx);\n            if (thisArg)\n                callback.call(thisArg, r, idx, this);\n            else\n                callback(r, idx, this);\n        }\n        return this;\n    }\n}\n\n/**\n * A helper class for creating {@link NameValueArrayView} instances\n */\n// @dynamic\nexport class NameValueArrayViewHelper {\n    /**\n     * Creates a {@link NameValueArrayView} from an array of {@link NameValuePair} items\n     *\n     * @param items An array of `NameValuePair` items\n     */\n    static fromArray<U, V>(items: NameValuePair<U, V>[]): NameValueArrayView<U, V> {\n        return new ArrayBasedView(items || [], p => p.name, p => p.value);\n    }\n\n    static fromObjects<T>(items: T[], nameKey: keyof T, valueKey: keyof T): NameValueArrayView<T[keyof T], T[keyof T]> {\n        return new ArrayBasedView(items || [], p => p[nameKey], p => p[valueKey]);\n    }\n\n    static from<T, U, V>(items: T[], nameSelector: (t: T) => U, valueSelector: (t: T) => V): NameValueArrayView<U, V> {\n        return new ArrayBasedView(items || [], nameSelector, valueSelector);\n    }\n}\n","export * from \"./load-component.module\";\nexport * from \"./load-component.service\";\nexport * from \"./load-component.directive\";\n","import {Component} from \"@angular/core\";\nimport {Action} from \"@sinequa/components/action\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {Subscription} from \"rxjs\";\nimport {UIService} from \"@sinequa/components/utils\";\n\n@Component({\n    selector: \"sq-fullscreen-activator\",\n    templateUrl: \"./fullscreen-activator.html\"\n})\nexport class BsFullscreenActivator {\n    action: Action;\n    resizeSubscription: Subscription | undefined;\n\n    constructor(\n        private uiService: UIService) {\n        this.buildAction();\n    }\n\n    getFullscreenIcon(): string {\n        return !this.isFullscreen() ? \"fas fa-expand\" : \"fas fa-compress\";\n    }\n\n    getFullscreenTitle(): string {\n        return !this.isFullscreen() ? \"msg#statusbar.fullscreenTitleEnter\" : \"msg#statusbar.fullscreenTitleExit\";\n    }\n\n    buildAction() {\n        this.action = new Action({\n            icon: this.getFullscreenIcon(),\n            title: this.getFullscreenTitle(),\n            action: (item, $event) => {\n                this.toggleFullscreen();\n                item.icon = this.getFullscreenIcon();\n                item.title = this.getFullscreenTitle();\n            },\n            init: (item) => {\n\n                this.resizeSubscription = Utils.subscribe(this.uiService.resizeEvent,\n                    (event) => {\n                        this.action.icon = this.getFullscreenIcon();\n                        this.action.title = this.getFullscreenTitle();\n                    });\n\n            },\n            destroy: (item) => {\n\n                if (this.resizeSubscription) {\n                    this.resizeSubscription.unsubscribe();\n                    this.resizeSubscription = undefined;\n                }\n\n            }\n        });\n    }\n\n    requestFullscreen() {\n        const doc = window.document;\n        const docEl = doc.documentElement;\n        const requestFullScreen = docEl[\"requestFullscreen\"] || docEl[\"mozRequestFullScreen\"] || docEl[\"webkitRequestFullScreen\"] || docEl[\"msRequestFullscreen\"];\n        if (requestFullScreen) {\n            requestFullScreen.call(docEl);\n        }\n    }\n\n    cancelFullscreen() {\n        const doc = window.document;\n        const cancelFullScreen = doc[\"exitFullscreen\"] || doc[\"mozCancelFullScreen\"] || doc[\"webkitExitFullscreen\"] || doc[\"msExitFullscreen\"];\n        if (cancelFullScreen) {\n            cancelFullScreen.call(doc);\n        }\n    }\n\n    isFullscreen() {\n        const doc = window.document;\n        return doc[\"fullscreenElement\"] || doc[\"mozFullScreenElement\"] || doc[\"webkitFullscreenElement\"] || doc[\"msFullscreenElement\"];\n    }\n\n    toggleFullscreen() {\n        if (!this.isFullscreen()) {\n            this.requestFullscreen();\n        }\n        else {\n            this.cancelFullscreen();\n        }\n    }\n}","<div class=\"btn-toolbar\">\n    <div class=\"btn-group\" [sq-action-buttons]=\"{items: [action]}\"></div>\n</div>","import {ViewEncapsulation, Component, Input, OnChanges, SimpleChanges, Output, EventEmitter} from \"@angular/core\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {Record} from \"@sinequa/core/web-services\";\nimport {AppService} from \"@sinequa/core/app-utils\";\nimport {SearchService} from \"@sinequa/components/search\";\n\n\n@Component({\n    selector: \"sq-result-title\",\n    templateUrl: \"./result-title.html\",\n    styles: [`\nsq-result-title {\n    font-size: 1.25rem;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n}\n.match-highlight {\n    font-weight: bold;\n    font-style: italic;\n}\n    `],\n    encapsulation: ViewEncapsulation.None   // Currently necessary for the match-highlight\n})\nexport class ResultTitle implements OnChanges {\n    /** The record which title we want to display */\n    @Input() record: Record;\n    /**\n     * \"open\" mode: Display a link which opens the original document (url1) if available, or emits a titleClicked event to perform an action otherwise\n     * \"action\" mode: Display a link which emits a titleClicked event to perform an action\n     * \"open-if-url\" mode: Display a link which opens the original document (url1) if available, or displays a SPAN with the title otherwise\n     * \"display\" mode: Only display a SPAN element (no link)\n     */\n    @Input() titleLinkBehavior: \"open\" | \"action\" | \"open-if-url\" | \"display\" = \"open\";\n    /** Optional field name containing the title. Otherwise displayTitle or title are used */\n    @Input() field: string = \"\";\n    /** Optional custom target used in the link */\n    @Input() originalDocTarget: string | undefined;\n    /** Event emitter to perform actions at the parent level */\n    @Output() titleClicked = new EventEmitter<boolean>();   // TODO: Custom options to get title & URL (replace pluginservice)\n\n    public title: string;\n    private titleField: string;\n    private documentUrl: string;\n\n    constructor(\n        public searchService: SearchService,\n        private appService: AppService) {\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes[\"record\"]) {\n            this.titleField = this.appService.resolveColumnAlias(this.field);\n            this.title = this.getTitle();\n            this.documentUrl = this.record.url1;\n        }\n    }\n\n    get hasLinkBehaviour(): boolean {\n        return this.titleLinkBehavior === \"open\" || (this.titleLinkBehavior === \"open-if-url\" && this.hasUrl);\n    }\n\n    /**\n     * A span is shown in \"display\" mode or \"open-if-url\" mode when no url is present\n     * A link is shown in all other cases (even in \"open\" mode with no url, which is equivalent to \"action\" mode)\n     */\n    get hasSpanBehaviour(): boolean {\n        return this.titleLinkBehavior === \"display\" || (this.titleLinkBehavior === \"open-if-url\" && !this.hasUrl);\n    }\n\n    public get href(): string {\n        return (this.hasLinkBehaviour && this.documentUrl) || \"#\";\n    }\n\n    public get target(): string {\n        return (this.hasLinkBehaviour && this.documentUrl) ? this.originalDocTarget || '_blank' : \"_self\";\n    }\n    \n    public get hasUrl(): boolean {\n        return !!this.documentUrl;\n    }\n\n    private getTitle(): string {\n        let title;\n        if (this.titleField) {\n            title = Utils.escapeHtml(this.record[this.titleField]);\n        }\n        if (!title) {\n            title = this.record.displayTitle || Utils.escapeHtml(this.record.title);\n        }\n        return title;\n    }\n\n    public click() : boolean {\n        const isLink = this.hasLinkBehaviour && !!this.documentUrl; // true if this is a regular link (performs the default action)\n        if(isLink)\n            this.searchService.notifyOpenOriginalDocument(this.record);\n        this.titleClicked.emit(isLink); // Can be use to trigger actions\n        return isLink;\n    }\n}","<!-- Display a regular SPAN if the component is supposed to have a link behavior but has no URL -->\n<span *ngIf=\"hasSpanBehaviour\" class=\"sq-result-title\" title=\"{{this.record.title}}\" [innerHTML]=\"title\"></span>\n<!-- Display a link if a URL exists or the component is used to trigger an action -->\n<a *ngIf=\"!hasSpanBehaviour\" class=\"sq-result-title\" title=\"{{this.record.title}}\" href=\"{{href}}\" target=\"{{target}}\" [innerHTML]=\"title\" (click)=\"click()\"></a>\n","import {Injectable} from \"@angular/core\";\nimport {Validators, ValidatorFn, AbstractControl, ValidationErrors} from \"@angular/forms\";\nimport {IntlService} from \"@sinequa/core/intl\";\nimport {FormatService} from \"@sinequa/core/app-utils\";\nimport {Utils} from \"@sinequa/core/base\";\n\n/**\n * @ignore\n */\nfunction isEmptyInputValue(value: any): boolean {\n    // we don't check for string here so it also works with arrays\n    return value === null || value === undefined || value.length === 0;\n}\n\nconst processInputValue = (value: any) => { // add support for object values of the advanced search\n  if (Utils.isArray(value)) {\n    return value.map(\n      (val) => {\n        if (Utils.isObject(val) && val.hasOwnProperty(\"value\")) {\n          return val.value;\n        }\n        return val;\n      }\n    )\n  } else {\n    if (Utils.isObject(value) && value.hasOwnProperty(\"value\")) {\n      return [value.value];\n    }\n    return [value];\n  }\n}\n\n// Email regular expression, taken from built-in Angular validators.\n/**\n * @ignore\n */\nconst EMAIL_REGEXP = /^(?=.{1,254}$)(?=.{1,64}@)[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+(\\.[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+)*@[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?(\\.[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?)*$/;\n\n/**\n * Enumerates the supported validator types.\n */\nexport enum ValidatorType {\n    Min = \"Min\",\n    Max = \"Max\",\n    Required = \"Required\",\n    Email = \"Email\",\n    Pattern = \"Pattern\",\n    Integer = \"Integer\",\n    Number = \"Number\",\n    Date = \"Date\",\n    Range = \"Range\",\n}\n\n/**\n * Describes a `Validator` object.\n */\nexport interface Validator {\n    /**\n     * The validator's type.\n     */\n    type: ValidatorType;\n    /**\n     * The validator's name.\n     */\n    name: string;\n    /**\n     * The validator's error message to be displayed when a value is invalid.\n     */\n    errorMessage: string;\n    /**\n     * `true` if the validator is to be applied.\n     */\n    active: boolean;\n}\n\n/**\n * Defines the default error messages for each validator.\n */\nconst errorMessagesMap = {\n    // Built-in Angular validators\n    min: \"msg#validation.min\",\n    max: \"msg#validation.max\",\n    required: \"msg#validation.required\",\n    requiredTrue: \"msg#validation.requiredTrue\",\n    email: \"msg#validation.email\",\n    minlength: \"msg#validation.minLength\",\n    maxlength: \"msg#validation.maxLength\",\n    pattern: \"msg#validation.pattern\",\n\n    // Custom\n    unique: \"msg#validation.unique\",\n    integer: \"msg#validation.integer\",\n    number: \"msg#validation.number\",\n    date: \"msg#validation.date\",\n    range: \"msg#validation.range\"\n};\n\n\n/**\n * This service provides a set of locale-sensitive validators with support for arrays.\n * The validator error messages are {@link IntlService} `msg#` messages of the form:\n * `msg#validation.<validator name>`.\n */\n@Injectable({\n    providedIn: \"root\"\n})\nexport class ValidationService {\n    constructor(\n        protected formatService: FormatService,\n        protected intlService: IntlService) {\n    }\n\n    /**\n     * A pattern validator based on Angular's `Validators.pattern` with support for value arrays.\n     *\n     * @param pattern The pattern.\n     * @returns The validation function.\n     */\n    static patternValidator(pattern: string | RegExp): ValidatorFn {\n        // #region This code region is based on Validators.pattern()\n        if (!pattern) {\n            return Validators.nullValidator;\n        }\n\n        let regex: RegExp;\n        let regexStr: string;\n        if (typeof pattern === 'string') {\n            regexStr = '';\n\n            if (pattern.charAt(0) !== '^') {\n                regexStr += '^';\n            }\n\n            regexStr += pattern;\n\n            if (pattern.charAt(pattern.length - 1) !== '$') {\n                regexStr += '$';\n            }\n\n            regex = new RegExp(regexStr);\n        } else {\n            regexStr = pattern.toString();\n            regex = pattern;\n        }\n        // #endregion\n\n        return (control: AbstractControl): ValidationErrors | null => {\n            if (isEmptyInputValue(control.value)) {\n                return null;  // don't validate empty values to allow optional controls\n            }\n\n            let values: any[] = [];\n            values = processInputValue(control.value);\n\n            for (const value of values) {\n                if (!regex.test(value)) {\n                    return {pattern: {requiredPattern: pattern.toString(), actualValue: value}};\n                }\n            }\n\n            return null;\n        };\n    }\n\n    /**\n     * A pattern validator based on Angular's `Validators.email` with support for value arrays.\n     *\n     * @param control The control to validate.\n     * @returns The result.\n     */\n    static emailValidation(control: AbstractControl): ValidationErrors | null {\n        if (isEmptyInputValue(control.value)) {\n            return null;  // don't validate empty values to allow optional controls\n        }\n\n        let values: any[] = [];\n        values = processInputValue(control.value);\n\n        for (const value of values) {\n            if (!EMAIL_REGEXP.test(value)) {\n                return {email: true};\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * Get the name of the first validator in a map of validation errors.\n     * @param errors The validation errors\n     * @returns The name of the first validator, if any - `undefined` otherwise.\n     */\n    getFirstError(errors: ValidationErrors): string | undefined {\n        if (errors) {\n            return Object.keys(errors)[0];\n        }\n        return undefined;\n    }\n\n    /**\n     * Get the error message associated with the passed validator.\n     * @param name The name of a validator.\n     * @returns The error message.\n     */\n    getErrorText(name?: string): string {\n        const text = name ? errorMessagesMap[name] : undefined;\n        if (!text) {\n            return \"Unknown validator: \" + name;\n        }\n        return text;\n    }\n\n    /**\n     * Get the error message associated with first validator in a map of validation errors.\n     * @param errors The validation errors.\n     * @returns The error message.\n     */\n    getFirstErrorText(errors: ValidationErrors): string | undefined {\n        if (errors) {\n            const error = this.getFirstError(errors);\n            if (error) {\n                return this.getErrorText(error);\n            }\n        }\n        return undefined;\n    }\n\n    /**\n     * Get the data held for the first error in a map of validation errors\n     * @param errors The validation errors.\n     */\n    getFirstErrorInfo(errors: ValidationErrors): any {\n        if (errors) {\n            const error = this.getFirstError(errors);\n            if (error) {\n                return errors[error];\n            }\n        }\n        return undefined;\n    }\n\n    /**\n     * Get a validator function that validates that values are greater than or equal\n     * to the passed `min` value. The function supports single values and arrays of\n     * values and will optionally parse the values using the {@link FormatService} if\n     * a parser is passed. Dates will be parsed according to the current locale.\n     *\n     * @param min The minimum value to test against. The type determines\n     * how the test will be made.\n     * @param parser An optional parser name.\n     */\n    minValidator(min: string | number | Date, parser?: string): ValidatorFn {\n        return (control: AbstractControl): ValidationErrors | null => {\n            if (isEmptyInputValue(control.value) || isEmptyInputValue(min)) {\n                return null;  // don't validate empty values to allow optional controls\n            }\n\n            let values: any[] = [];\n            values = processInputValue(control.value);\n\n            for (const value of values) {\n                if (!isEmptyInputValue(value)) {\n                    let value1 = value;\n                    if (parser) {\n                        value1 = this.formatService.parseValue(value1, parser);\n                    }\n                    let cmp = 0;\n                    if (Utils.isNumber(min)) {\n                        if (Utils.testFloat(value1)) {\n                            value1 = Utils.toNumber(value1);\n                            cmp = value1 - min;\n                        }\n                    }\n                    else if (Utils.isString(min)) {\n                        cmp = Utils.compare(value1, min);\n                    }\n                    else if (Utils.isDate(min)) {\n                        if (Utils.isString(value1)) {\n                            value1 = this.intlService.parseDate(value1);\n                            if (value1) {\n                                cmp = value1.getTime() - min.getTime();\n                            }\n                        }\n                        else if (Utils.isDate(value1)) { // ngx-bootstrap returns date values (new Date(NaN) if invalid)\n                            cmp = value1.getTime() - min.getTime();\n                        }\n                    }\n                    if (cmp < 0) {\n                        return {min: {min, actual: value}};\n                    }\n                }\n            }\n            return null;\n        };\n    }\n\n    /**\n     * Get a validator function that validates that values are less than or equal\n     * to the passed `max` value. The function supports single values and arrays of\n     * values and will optionally parse the values using the {@link FormatService} if\n     * a parser is passed. Dates will be parsed according to the current locale.\n     *\n     * @param max The maximum value to test against. The type determines\n     * how the test will be made.\n     * @param parser An optional parser name.\n     */\n    maxValidator(max: string | number | Date, parser?: string): ValidatorFn {\n        return (control: AbstractControl): ValidationErrors | null => {\n            if (isEmptyInputValue(control.value) || isEmptyInputValue(max)) {\n                return null;  // don't validate empty values to allow optional controls\n            }\n            let values: any[] = [];\n            values = processInputValue(control.value);\n\n            for (const value of values) {\n                if (!isEmptyInputValue(value)) {\n                    let value1 = value;\n                    if (parser) {\n                        value1 = this.formatService.parseValue(value1, parser);\n                    }\n                    let cmp = 0;\n                    if (Utils.isNumber(max)) {\n                        if (Utils.testFloat(value1)) {\n                            value1 = Utils.toNumber(value1);\n                            cmp = value1 - max;\n                        }\n                    }\n                    else if (Utils.isString(max)) {\n                        cmp = Utils.compare(value1, max);\n                    }\n                    else if (Utils.isDate(max)) {\n                        if (Utils.isString(value1)) {\n                            value1 = this.intlService.parseDate(value1);\n                            if (value1) {\n                                cmp = value1.getTime() - max.getTime();\n                            }\n                        }\n                        else if (Utils.isDate(value1)) { // ngx-bootstrap returns date values (new Date(NaN) if invalid)\n                            cmp = value1.getTime() - max.getTime();\n                        }\n                    }\n                    if (cmp > 0) {\n                        return {max: {max, actual: value}};\n                    }\n                }\n            }\n            return null;\n        };\n    }\n\n    /**\n     * Get a validator function that validates that values are integers. The function\n     * supports single values and arrays of values and will optionally parse the values\n     * using the {@link FormatService} if a parser is passed.\n     *\n     * @param parser An optional parser name.\n     */\n    integerValidator(parser?: string): ValidatorFn {\n        return (control: AbstractControl): ValidationErrors | null => {\n            if (isEmptyInputValue(control.value)) {\n                return null;  // don't validate empty values to allow optional controls\n            }\n            let values: any[] = [];\n            values = processInputValue(control.value);\n\n            for (const value of values) {\n                if (!isEmptyInputValue(value)) {\n                    let value1 = value;\n                    if (parser) {\n                        value1 = this.formatService.parseValue(value1, parser);\n                    }\n                    if (!Utils.testInteger(value1)) {\n                        return {integer: {value}};\n                    }\n                }\n            }\n            return null;\n        };\n    }\n\n    /**\n     * Get a validator function that validates that values are numeric. The function\n     * supports single values and arrays of values and will optionally parse the values\n     * using the {@link FormatService} if a parser is passed.\n     *\n     * @param parser An optional parser name.\n     */\n    numberValidator(parser?: string): ValidatorFn {\n        return (control: AbstractControl): ValidationErrors | null => {\n            if (isEmptyInputValue(control.value)) {\n                return null;  // don't validate empty values to allow optional controls\n            }\n            let values: any[] = [];\n            values = processInputValue(control.value);\n\n            for (const value of values) {\n                if (!isEmptyInputValue(value)) {\n                    let value1 = value;\n                    if (parser) {\n                        value1 = this.formatService.parseValue(value1, parser);\n                    }\n                    if (!Utils.testFloat(value1)) {\n                        return {number: {value}};\n                    }\n                }\n            }\n            return null;\n        };\n    }\n\n    /**\n     * Get a validator function that validates that values are dates. The function\n     * supports single values and arrays of values and will optionally parse the values\n     * using the {@link FormatService} if a parser is passed. Dates will be parsed according\n     * to the current locale.\n     *\n     * @param parser An optional parser name.\n     */\n    dateValidator(parser?: string): ValidatorFn {\n        return (control: AbstractControl): ValidationErrors | null => {\n            if (isEmptyInputValue(control.value)) {\n                return null;  // don't validate empty values to allow optional controls\n            }\n            let values: any[] = [];\n            values = processInputValue(control.value);\n\n            for (const value of values) {\n                if (!isEmptyInputValue(value)) {\n                    if (Utils.isString(value)) {\n                        let value1 = value;\n                        if (parser) {\n                            value1 = this.formatService.parseValue(value1, parser);\n                        }\n                        if (!this.intlService.parseDate(value1)) {\n                            return {date: {value}};\n                        }\n                    }\n                    else if (Utils.isDate(value)) { // ngx-bootstrap returns date values (new Date(NaN) if invalid)\n                        if (isNaN(value.getTime())) {\n                            return {date: {value}};\n                        }\n                    }\n                }\n            }\n            return null;\n        };\n    }\n\n    /**\n     * Get a validator function that validates that, for pair of values, the second value is\n     * greater than the first. If one or both values are empty then the validation passes.\n     * The validator function supports single values and arrays of values and will optionally\n     * parse the values using the {@link FormatService} if a parser is passed. Dates will be\n     * parsed according to the current locale.\n     *\n     * @param type A value whose type indicates how the range test will be made.\n     * @param parser An optional parser name.\n     */\n    rangeValidator(type: string | number | Date, parser?: string): ValidatorFn {\n        return (control: AbstractControl): ValidationErrors | null => {\n            if (isEmptyInputValue(control.value) || !Utils.isArray(control.value) || control.value.length !== 2) {\n                return null;  // don't validate empty values to allow optional controls\n            }\n            let value1 = control.value[0];\n            let value2 = control.value[1];\n            if (isEmptyInputValue(value1) || isEmptyInputValue(value2)) {\n                return null;\n            }\n            if (parser) {\n                value1 = this.formatService.parseValue(value1, parser);\n                value2 = this.formatService.parseValue(value2, parser);\n            }\n            let cmp = 0;\n            if (Utils.isString(type)) {\n                cmp = Utils.compare(value2, value1);\n            }\n            else if (Utils.isDate(type)) {\n                let date1: Date | undefined;\n                let date2: Date | undefined;\n                if (Utils.isString(value1)) {\n                    date1 = this.intlService.parseDate(value1);\n                }\n                else if (Utils.isDate(value1)) { // ngx-bootstrap returns date values (new Date(NaN) if invalid)\n                    date1 = value1;\n                }\n                if (Utils.isString(value2)) {\n                    date2 = this.intlService.parseDate(value2);\n                }\n                else if (Utils.isDate(value2)) { // ngx-bootstrap returns date values (new Date(NaN) if invalid)\n                    date2 = value2;\n                }\n                if (date1 && date2) {\n                    cmp = date2.getTime() - date1.getTime();\n                }\n            }\n            else if (Utils.isNumber(type)) {\n                if (Utils.testFloat(value1) && Utils.testFloat(value2)) {\n                    const num1 = Utils.toNumber(value1);\n                    const num2 = Utils.toNumber(value2);\n                    if (num1 !== null && num2 !== null) {\n                        cmp = num2 - num1;\n                    }\n                }\n            }\n            return cmp < 0 ? {range: {value1, value2}} : null;\n        };\n    }\n}\n","import {Component, Input} from \"@angular/core\";\nimport {SelectionService} from \"../../selection.service\";\nimport {Action} from '@sinequa/components/action';\n\n@Component({\n    selector: \"sq-results-selector\",\n    templateUrl: \"./results-selector.html\"\n})\nexport class BsResultsSelector {\n    @Input() size: string;\n    @Input() style: string;\n    @Input() rightAligned: boolean;\n\n    constructor(\n        public selectionService: SelectionService) {\n    }\n\n    public get actions(): Action[] {\n        return this.rightAligned? this.selectionService.selectionActions.slice().reverse() : this.selectionService.selectionActions;\n    }\n}\n","<div class=\"btn-group\" [sq-action-buttons]=\"{items: actions, size: size, style: style, rightAligned: rightAligned}\"></div>","export * from \"./action-buttons/action-buttons\";\nexport * from \"./action-item/action-item\";\nexport * from \"./action-item-content/action-item-content\";\nexport * from \"./action-menu/action-menu\";\nexport * from \"./dropdown-menu/dropdown-menu\";\nexport * from \"./dropdown.directive\";\nexport * from \"./dropdown.service\";\nexport * from \"./action.module\";","export default {\n    results: {\n        missingTerms: \"Missing terms:\",\n        resultsCount: \"{count, plural, =0 {no results} one {# result} other {# results}}\",\n    },\n    userRatings: {\n        average: \"Average: {average}\"\n    },\n};\n","import {Injectable, Inject} from \"@angular/core\";\nimport {Observable, of} from \"rxjs\";\nimport {map} from \"rxjs/operators\";\nimport {SqHttpClient} from \"./http-client\";\nimport {HttpService} from \"./http.service\";\nimport {START_CONFIG, StartConfig} from \"./start-config.web.service\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {Suggestion} from \"./suggest/suggestion\";\nimport {IQuery} from \"./query/query\";\n\n/**\n * A service for calling the suggestfield web service\n */\n@Injectable({\n    providedIn: \"root\"\n})\nexport class SuggestFieldWebService extends HttpService {\n    constructor(\n        @Inject(START_CONFIG) startConfig: StartConfig,\n        private httpClient: SqHttpClient) {\n        super(startConfig);\n    }\n\n    /**\n     * Gets suggestions for the passed text for a set of fields and in the context of the passed query\n     *\n     * @param text The text to match\n     * @param fields The fields for which to return suggestions\n     * @param query The query context\n     */\n    get(text: string, fields: string | string[], query?: IQuery): Observable<Suggestion[]> {\n        if (!fields) {\n            return of([]);\n        }\n        else {\n            if (!Utils.isArray(fields)) {\n                fields = [fields];\n            }\n            const observable = this.httpClient.post<{suggests: Suggestion[]}>(this.makeUrl(\"suggestfield\"), {\n                app: this.appName,\n                text: text,\n                fields: fields,\n                query: query\n            }).pipe(map((value) => {\n                value.suggests.forEach(value => value.display = Utils.toSqlValue(value.display)); // because dates get automatically converted by the interceptor\n                return value.suggests;\n            }));\n            return observable;\n        }\n    }\n}","import { Component, ElementRef, Output, EventEmitter, Input, ViewChild, OnChanges, AfterViewInit } from '@angular/core';\n\nimport * as d3 from 'd3';\n\nexport interface HeatmapItem {\n    x: string;\n    y: string;\n    count: number;\n    value: string;\n    display: string;\n    selected?: boolean;\n}\n\n@Component({\n    selector: \"sq-heatmap\",\n    templateUrl: \"./heatmap.component.html\",\n    styleUrls: ['./heatmap.component.scss']\n})\nexport class BsHeatmapComponent implements OnChanges, AfterViewInit {\n    /**\n     * Raw data to display (will be filtered in function of maxX and maxY parameters)\n     */\n    @Input() data: HeatmapItem[];\n\n    // Graphical parameters\n    @Input() height = 600;\n    @Input() width = 600;\n    @Input() margin = {top: 100, bottom: 20, left: 100, right: 40};\n    @Input() transition = 1000; // Transition time in ms (0 to avoid transitions)\n\n    // Interaction parameters\n    @Input() itemsClickable = true;\n    @Input() axisClickable = true;\n\n    // Axis/Scales parameters\n    @Input() buckets = 9; // Color buckets\n    @Input() colorScheme = \"schemeBlues\"; // Color scheme from D3\n    @Input() maxX = 20; // Max items on X\n    @Input() maxY = 20; // Max items on Y\n    @Input() theme: \"light\" | \"dark\" = \"light\";\n    \n    // Events from user interactions\n    @Output() itemClicked = new EventEmitter<HeatmapItem>();\n    @Output() axisClicked = new EventEmitter<{value: string, axis: 'x' | 'y'}>();\n\n    // D3 Scales\n    x: d3.ScaleBand<string>;\n    y: d3.ScaleBand<string>;\n    color: d3.ScaleQuantile<string>;\n\n    // Axes\n    @ViewChild(\"xAxis\") gx: ElementRef;\n    @ViewChild(\"yAxis\") gy: ElementRef;\n    xAxis: d3.Selection<SVGGElement, string, null, undefined>;\n    yAxis: d3.Selection<SVGGElement, string, null, undefined>;\n    \n    // Data actually displayed\n    dataFiltered: HeatmapItem[] = [];\n\n    // Tooltip    \n    tooltipItem?: HeatmapItem;\n    tooltipOrientation: \"left\" | \"right\";\n    tooltipTop: number;\n    tooltipRight: number;\n    tooltipLeft: number;\n\n    // Misc\n    viewInit: boolean;\n    originalCount: number;\n\n    constructor(\n        private el: ElementRef\n    ){}\n\n    /**\n     * ngOnChanges is used to respond to changes in the data (or chart parameter)\n     */\n    ngOnChanges() {\n\n        this.data = this.data || [];\n\n        // Pre-process data\n        const xLabels = Array.from(new Set(this.data.map(value => value.x))).slice(0, this.maxX);\n        const yLabels = Array.from(new Set(this.data.map(value => value.y))).slice(0, this.maxY);\n        this.dataFiltered = this.data.filter(value => xLabels.includes(value.x) && yLabels.includes(value.y));\n\n        // Create scales\n        this.x = d3.scaleBand<string>()\n            .domain(xLabels)\n            .range([0, this.width-this.margin.left-this.margin.right]);\n\n        this.y = d3.scaleBand<string>()\n            .domain(yLabels)\n            .range([0, this.height-this.margin.top-this.margin.bottom]);\n\n        this.color = d3.scaleQuantile<string>()\n            .domain(this.dataFiltered.map(item => item.count))\n            .range(d3[this.colorScheme][this.buckets]);\n\n        // Note: ngOnChanges is always called once, before ngAfterViewInit\n        if(this.viewInit) {\n            this.buildChart(!!this.transition);\n        }\n    }\n\n    // Note: In onAfterViewInit we can access gx and gy, obtained with @ViewChild.\n    // At this point we can call buildChart()\n    ngAfterViewInit(){\n        this.xAxis = d3.select(this.gx.nativeElement);\n        this.yAxis = d3.select(this.gy.nativeElement);\n        this.viewInit = true;\n\n        this.buildChart();\n    }\n    \n    /**\n     * buildChart() actually only builds the axes of the chart, since the\n     * rest is build automatically with Angular syntax in the template.\n     * We build axis programmatically (with D3 selects) to benefit from the\n     * D3 abstractions and transitions.\n     * @param update \n     */\n    buildChart(update?: boolean){\n                    \n        if(update){\n            const t = d3.transition().duration(this.transition) as d3.Transition<any, any, any, any>;\n    \n            this.xAxis.transition(t)\n                .call(d3.axisTop<string>(this.x).tickSize(0))\n                .on(\"end\", () => this.xAxis.selectAll<SVGTextElement, string>('text').each(this.wrap));\n\n            this.yAxis.transition(t)\n                .call(d3.axisLeft<string>(this.y).tickSize(0))\n                .on(\"end\", () => this.yAxis.selectAll<SVGTextElement, string>('text').each(this.wrap));\n            \n        }\n        else {\n            this.xAxis.call(d3.axisTop<string>(this.x).tickSize(0));\n            this.yAxis.call(d3.axisLeft<string>(this.y).tickSize(0));\n        }\n\n        this.xAxis.selectAll(\".domain\").remove(); // Remove the axis line\n        this.xAxis.selectAll<SVGTextElement, string>(\"text\")  // Tilt the text\n            .attr(\"transform\", \"rotate(-35)\")\n            .style(\"text-anchor\", \"start\")\n            .each(this.wrap)\n            .on(\"click\", d => this.onAxisClicked(d, 'x'));\n\n        this.yAxis.selectAll(\".domain\").remove(); // Remove the axis line\n        this.yAxis.selectAll<SVGTextElement, string>(\"text\")\n            .each(this.wrap)\n            .on(\"click\", d => this.onAxisClicked(d, 'y'));\n    }\n\n    /**\n     * Called when the user hovers the mouse over a heatmap tile\n     * @param item \n     * @param event \n     */\n    onMouseOver(item: HeatmapItem, event: MouseEvent){\n        this.tooltipItem = item;\n\n        const x = this.x(item.x) as number;\n        const y = this.y(item.y) as number;\n\n        // Since we use viewBox to auto-adjust the SVG to the container size, we have to\n        // convert from the SVG coordinate system to the HTML coordinate system\n        const actualWidth = (this.el.nativeElement as HTMLElement).offsetWidth;\n        const scale = actualWidth / this.width;\n        const relativeX = x / this.width;\n\n        // Tooltip to the right\n        if(relativeX < 0.5) {\n            this.tooltipOrientation = \"right\";\n            this.tooltipLeft = scale * (this.margin.left + x + this.x.bandwidth() - 3);\n        }\n        // Tooltip to the left\n        else {\n            this.tooltipOrientation = \"left\";\n            this.tooltipRight = actualWidth - scale * (this.margin.left + x + 3);\n        }\n        this.tooltipTop = scale * (this.margin.top + y + 0.5*this.y.bandwidth()); // Align tooltip arrow\n    }\n\n    /**\n     * Called when the user clicks on a heatmap tile\n     * @param item \n     */\n    onItemClicked(item: HeatmapItem){\n        if(this.itemsClickable){\n            this.itemClicked.next(item);\n        }\n    }\n\n    /**\n     * Called when the user clicks on an axis item\n     * @param value \n     * @param axis \n     */\n    onAxisClicked(value: string, axis: 'x' | 'y'){\n        if(this.axisClickable){\n            this.axisClicked.next({axis: axis, value: value});\n        }\n    }\n\n    /**\n     * Builds the list of legend items\n     */\n    getLegend() {\n        const legend: {x: number, width: number, color: string, start: number}[] = [];\n        const quantiles = this.color.quantiles();\n        const bucketWidth = (this.width - this.margin.left - this.margin.right) / this.buckets;\n        for(let i=0; i < this.buckets; i++){\n            const color = this.color(i===0? 0 : quantiles[i-1]);\n            if(i === 0 || color !== legend[legend.length-1].color){\n                legend.push({\n                    x: legend.length * bucketWidth,\n                    width: bucketWidth,\n                    color: color,\n                    start: i===0? 0 : quantiles[i-1]\n                });\n            }\n        }\n        return legend;\n    }\n\n    /**\n     * Truncates the axis strings to fit inside 90px width\n     */\n    wrap = (d: string, i: number, nodes: SVGTextElement[] | ArrayLike<SVGTextElement>) => {\n        const self = d3.select(nodes[i]);\n        let textLength = nodes[i].getComputedTextLength();\n        let text = self.text();\n        const fullText = self.text();\n        while (textLength > 90 && text.length > 0) {\n          text = text.slice(0, -1)\n          self.text(text + '...');\n          textLength = nodes[i].getComputedTextLength();\n        }\n        self.append('svg:title').text(fullText);\n    };\n}\n","<svg [attr.viewBox]=\"'0 0 '+width+' '+height\">\n\n    <!-- Legend -->\n    <g *ngIf=\"data.length\" [attr.transform]=\"'translate('+this.margin.left+', 10)'\" class=\"legend\">\n        <g *ngFor=\"let item of getLegend()\">\n            <rect [attr.x]=\"item.x\" [attr.width]=\"item.width\" height=\"15\" [attr.fill]=\"item.color\"></rect>\n            <line [attr.x1]=\"item.x\" [attr.x2]=\"item.x\" [attr.y2]=\"27\" stroke=\"lightgrey\"></line>\n            <text [attr.x]=\"item.x + 3\" y=\"27\">{{ item.start | number : '1.0-0'}}</text>\n        </g>\n    </g>\n\n    <g [attr.transform]=\"'translate('+this.margin.left+','+ margin.top +')'\">\n        <!-- X Axis (built in the controler) -->\n        <g #xAxis [ngClass]=\"{clickable: axisClickable}\" class=\"axis\"></g>\n\n        <!-- Y Axis (built in the controler) -->\n        <g #yAxis [ngClass]=\"{clickable: axisClickable}\" class=\"axis\"></g>\n\n        <!-- Heatmap tiles -->\n        <rect *ngFor=\"let item of dataFiltered\" class=\"tile\" \n            [ngClass]=\"{clickable: itemsClickable, selected: item.selected}\"\n            [attr.x]=\"x(item.x)\" \n            [attr.y]=\"y(item.y)\"\n            [attr.width]=\"x.bandwidth()\" \n            [attr.height]=\"y.bandwidth()\"\n            [attr.fill]=\"color(item.count)\"            \n            (mouseover)=\"onMouseOver(item, $event)\"\n            (mouseout)=\"tooltipItem = undefined\"\n            (click)=\"onItemClicked(item)\">\n        </rect>\n        \n    </g>\n    \n    <text class=\"bottom-legend\" [attr.transform]=\"'translate('+(width-margin.right)+', '+(height-5)+')'\">\n        {{'msg#heatmap.showing' | sqMessage:{values: {shown: dataFiltered.length, total: data.length} } }}\n    </text>\n\n</svg>\n\n<!-- Tooltip -->\n<sq-tooltip *ngIf=\"tooltipItem\" class=\"text-center\"\n    [orientation]=\"tooltipOrientation\" [left]=\"tooltipLeft\" [right]=\"tooltipRight\" [top]=\"tooltipTop\" [theme]=\"theme\">\n    <strong>{{tooltipItem.display || tooltipItem.value}}</strong>\n    <div>{{'msg#heatmap.tooltip' | sqMessage:{values: {count: tooltipItem.count} } }}</div>\n</sq-tooltip>\n","const NOTIFICATION_MODULE_PROVIDERS = [];\n\nexport {NOTIFICATION_MODULE_PROVIDERS};\n","import {Component, OnInit, OnDestroy, Inject} from \"@angular/core\";\nimport {FormBuilder, FormGroup, FormControl, Validators} from \"@angular/forms\";\nimport {Subscription} from \"rxjs\";\nimport {MODAL_MODEL, ModalButton, ModalResult} from \"@sinequa/core/modal\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {Basket} from \"../../baskets.service\";\n\n@Component({\n    selector: \"sq-edit-basket\",\n    templateUrl: \"./edit-basket.html\"\n})\nexport class BsEditBasket implements OnInit, OnDestroy {\n    nameControl: FormControl;\n    form: FormGroup;\n    formChanges: Subscription;\n    buttons: ModalButton[];\n\n    constructor(\n        @Inject(MODAL_MODEL) public model: Basket,\n        private formBuilder: FormBuilder) {\n    }\n\n    ngOnInit() {\n        this.nameControl = new FormControl(this.model.name, Validators.required);\n        this.form = this.formBuilder.group({\n            basketName: this.nameControl\n        });\n        this.formChanges = Utils.subscribe(this.form.valueChanges,\n            (value) => {\n                this.model.name = this.nameControl.value;\n            }\n        );\n\n        this.buttons = [\n            new ModalButton({\n                result: ModalResult.OK,\n                primary: true,\n                validation: this.form\n            }),\n            new ModalButton({\n                result: ModalResult.Cancel\n            })\n        ];\n    }\n\n    ngOnDestroy() {\n        this.formChanges.unsubscribe();\n    }\n}\n","<form name=\"editBasket\" novalidate [formGroup]=\"form\">\n    <sq-modal [title]=\"'msg#editBasket.title'\" [buttons]=\"buttons\">\n        <div class=\"form-group sq-form-group\">\n            <label for=\"basketName\">{{'msg#editBasket.name' | sqMessage}}</label>\n            <input [sqValidation]=\"form\" type=\"text\" class=\"form-control\" id=\"basketName\" formControlName=\"basketName\" spellcheck=\"off\" sqAutofocus>\n        </div>\n    </sq-modal>\n</form>","import {Component, Input, OnChanges, SimpleChanges, ChangeDetectorRef, ChangeDetectionStrategy} from \"@angular/core\";\nimport {Results, TreeAggregation, AggregationItem, TreeAggregationNode} from \"@sinequa/core/web-services\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {FacetService} from \"../../facet.service\";\nimport {Action} from \"@sinequa/components/action\";\nimport {AbstractFacet} from \"../../abstract-facet\";\nimport { FormControl, FormGroup } from \"@angular/forms\";\nimport { Observable, of, Subscription } from \"rxjs\";\nimport { catchError, debounceTime, distinctUntilChanged, map, switchMap } from \"rxjs/operators\";\n\n@Component({\n    selector: \"sq-facet-tree\",\n    templateUrl: \"./facet-tree.html\",\n    styleUrls: [\"./facet-tree.scss\"],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BsFacetTree extends AbstractFacet implements OnChanges {\n    @Input() name: string; // If ommited, the aggregation name is used\n    @Input() results: Results;\n    @Input() aggregation: string;\n    @Input() showCount: boolean = true; // Show the number of occurrences\n    @Input() allowExclude: boolean = true; // Allow to exclude selected items\n    @Input() allowOr: boolean = true; // Allow to search various items in OR mode\n    @Input() searchable: boolean = true; // Allow to search for items in the facet\n    @Input() expandedLevel: number = 2;\n    @Input() forceMaxHeight: boolean = true; // Allow to display a scrollbar automatically on long list items\n    @Input() displayActions = false;\n\n    // Aggregation from the Results object\n    data: TreeAggregation | undefined;\n    originalItems: AggregationItem[] | undefined;\n    \n    private readonly subscriptions: Subscription[] = [];\n\n    // Sets to keep track of selected/excluded/filtered items\n    private readonly filtered = new Set<AggregationItem>();\n    \n    readonly selected = new Map<string,TreeAggregationNode>();\n\n    hiddenSelected: TreeAggregationNode[] = [];\n    // TODO keep track of excluded terms and display them with specific color private\n    // readonly filtered = new Set<AggregationItem>();\n\n    // Search\n    myGroup: FormGroup;\n    searchQuery: FormControl; // ngModel for textarea\n    suggestDelay = 200;\n    searchActive = false;\n    noResults = false;\n    \n    // Actions (displayed in facet menu)\n    // All actions are built in the constructor\n    private readonly filterItemsOr: Action;\n    private readonly excludeItems: Action;\n    private readonly clearFilters: Action;\n    public readonly searchItems: Action;\n\n\n    constructor(\n        private facetService: FacetService,\n        private changeDetectorRef: ChangeDetectorRef){\n            super();\n\n            this.myGroup = new FormGroup({\n                searchQuery: new FormControl()\n            });\n    \n            this.searchQuery = this.myGroup.get(\"searchQuery\") as FormControl;\n            this.subscriptions[\"suggest\"] = this.suggest$(this.searchQuery.valueChanges)\n                .subscribe(values => {\n                    if(this.data) {\n                        let items = this.searchQuery.value? values : this.originalItems;\n                        this.data = {\n                            column: this.data.column,\n                            name: this.data.name,\n                            isTree: true,\n                            items\n                        }\n                        // Refresh hiddenSelected list when the list of items is updated\n                        this.refreshHiddenSelected();\n                        this.searchActive = false;\n                        this.changeDetectorRef.markForCheck();\n                    }\n                });\n    \n            // Keep documents with ANY of the selected items\n            this.filterItemsOr = new Action({\n                icon: \"fas fa-filter\",\n                title: \"msg#facet.filterItems\",\n                action: () => {\n                    if (this.data) {\n                        this.facetService.addFilterSearch(this.getName(), this.data, this.getSelectedItems());\n                    }\n                }\n            });\n\n            // Exclude document with selected items\n            this.excludeItems = new Action({\n                icon: \"fas fa-times\",\n                title: \"msg#facet.excludeItems\",\n                action: () => {\n                    if (this.data) {\n                        this.facetService.addFilterSearch(this.getName(), this.data, this.getSelectedItems(), {not: true});\n                    }\n                }\n            });\n\n            // Clear the current filters\n            this.clearFilters = new Action({\n                icon: \"far fa-minus-square\",\n                title: \"msg#facet.clearSelects\",\n                action: () => {\n                    this.facetService.clearFiltersSearch(this.getName(), true);\n                }\n            });\n\n            // Search for a value in this list\n            this.searchItems = new Action({\n                icon: \"fas fa-search\",\n                title: \"msg#facet.searchItems\",\n                action: (item, event) => {\n                    item.selected = !item.selected;\n                    if(!item.selected){\n                        this.clearSearch();\n                    }\n                    event.stopPropagation();\n                    this.changeDetectorRef.markForCheck();\n                }\n            });\n    }\n\n    /**\n     * Name of the facet, used to create and retrieve selections\n     * through the facet service.\n     */\n    getName() : string {\n        return this.name || this.aggregation;\n    }\n\n    /**\n     * OnChanges listener awaits new results from the search service\n     * This completely resets the display\n     * @param changes\n     */\n    ngOnChanges(changes: SimpleChanges) {\n        if (this.showCount === undefined) this.showCount = true;\n        if (this.searchable === undefined) this.searchable = true;\n        if (this.allowExclude === undefined) this.allowExclude = true;\n        if (this.allowOr === undefined) this.allowOr = true;\n\n        if (!!changes[\"results\"]) {     // New data from the search service\n            this.filtered.clear();\n            this.selected.clear();\n            this.hiddenSelected.length = 0;\n            this.data = this.facetService.getAggregation(this.aggregation, this.results, {\n                facetName: this.getName(),\n                levelCallback: this.initNodes\n            });\n            this.originalItems = this.data?.items;\n            this.searchItems.selected = false;\n            this.clearSearch();\n        }\n    }\n\n    // For each new node, set up properties necessary for display\n    // This callback could also be used to filter or sorts nodes, etc.\n    @Input()\n    initNodes = (nodes: TreeAggregationNode[], level: number, node: TreeAggregationNode) => {\n        if(node.$filtered){\n            this.filtered.add(node);\n        }\n        if(node.hasChildren && !node.$opened && node.items && node.items.length >= 0 && level <= this.expandedLevel){\n            node.$opened = true;\n        }\n    }\n\n    /**\n     * Returns all the actions that are relevant in the current context\n     */\n    get actions(): Action[] {\n\n        const actions: Action[] = [];\n\n        if(this.selected.size > 0) {\n            if(this.allowOr){\n                actions.push(this.filterItemsOr);\n            }\n            if(this.allowExclude){\n                actions.push(this.excludeItems);\n            }\n        }\n\n        if(this.hasFiltered()) {\n            actions.push(this.clearFilters);\n        }\n        \n        if(this.searchable){\n            actions.push(this.searchItems);\n        }\n\n        return actions;\n    }\n\n\n    // Filtered items\n\n    /**\n     * Returns true if the given AggregationItem is filtered\n     * @param item\n     */\n    isFiltered(item: AggregationItem) : boolean {\n        return this.filtered.has(item);\n    }\n\n    /**\n     * Returns true if there is an active selection (or exclusion) from this facet\n     */\n    hasFiltered(): boolean {\n        return this.facetService.hasFiltered(this.getName());\n    }\n\n    /**\n     * Called when clicking on a facet item text\n     * @param item\n     * @param event\n     */\n    filterItem(item: AggregationItem, event) : boolean {\n        if (this.data) {\n            if(!this.isFiltered(item)) {\n                this.facetService.addFilterSearch(this.getName(), this.data, item);\n            }\n            else {\n                this.facetService.removeFilterSearch(this.getName(), this.data, item);\n            }\n        }\n        event.preventDefault();\n        event.stopPropagation();\n        return false;   // Stop the propagation of the event (link inside link)\n    }\n\n\n    // Selected items\n\n    /**\n     * Returns true if the given AggregationItem is selected\n     * @param item\n     */\n    isSelected(item: TreeAggregationNode) : boolean {\n        return this.selected.has(item.$path!);\n    }\n\n    /**\n     * Returns all the selected items\n     */\n    getSelectedItems(): TreeAggregationNode[] {\n        return Array.from(this.selected.values());\n    }\n\n    /**\n     * Called when selecting/unselecting an item in the facet\n     * @param item\n     */\n    selectItem(item: TreeAggregationNode) : boolean {\n        if(!this.isFiltered(item)){\n            if(this.selected.has(item.$path!)) {\n                this.selected.delete(item.$path!);\n            }\n            else {\n                this.selected.set(item.$path!, item);\n            }\n            this.refreshHiddenSelected();\n        }\n        return false;\n    }\n\n    refreshHiddenSelected() {\n        this.hiddenSelected = this.getSelectedItems()\n            .filter(item => !this.find(this.data?.items as TreeAggregationNode[], item));\n    }\n\n    find(items: TreeAggregationNode[] | undefined, item: TreeAggregationNode) {\n        if(items) {\n            for(let i of items) {\n                if(i.$path === item.$path || (i.$opened && this.find(i.items, item))) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Expand/Collapse a Tree node (the data may need to downloaded from the server)\n     * @param item\n     */\n    open(item: TreeAggregationNode, event: Event){\n        if (item.hasChildren) {\n            item.$opened = !item.$opened;\n            if (!item.items || item.items.length === 0) {\n                item['$opening'] = true;\n                if (this.data) {\n                    Utils.subscribe(this.facetService.open(this.getName(), this.data, item, this.initNodes),\n                        (results) => {\n                            item['$opening']= false;\n                            this.refreshHiddenSelected();\n                            this.changeDetectorRef.markForCheck();\n                        });\n                }\n            }\n            this.refreshHiddenSelected();\n        }\n        event.preventDefault();\n        event.stopPropagation();\n        return false; // Prevent default action\n    }\n\n    /* AbstractFacet abstract methods */\n    isHidden(): boolean {\n        return !this.data;\n    }\n\n\n    // Search    \n\n    clearSearch() {\n        this.searchQuery.setValue(\"\"); // Remove suggestions if some remain\n        this.noResults = false;\n    }\n    \n    /**\n     * Called on NgModel change (searchQuery)\n     * Uses the suggestfield API to retrieve suggestions from the server\n     * The suggestions \"override\" the data from the distribution (until search results are cleared)\n     */\n    suggest$ = (text$: Observable<string>) => text$.pipe(\n        debounceTime(this.suggestDelay),\n        distinctUntilChanged(),\n        switchMap(term => {\n            if (term.trim() === \"\") {\n                this.noResults = false;\n                return of([]);\n            }\n            this.changeDetectorRef.markForCheck();\n            this.searchActive = true;\n            return this.facetService.suggest(term, this.data?.column || '').pipe(\n                catchError(err => {\n                    console.log(err);\n                    this.noResults = false;\n                    return of([]);\n                }),\n                map(suggests => {\n                    const items = this.facetService.suggestionsToTreeAggregationNodes(suggests, term, this.data);\n                    this.noResults = items.length === 0 && term.trim() !== \"\";\n                    return items;\n                })\n            )\n        })\n    )\n\n    ngOnDestroy() {\n        this.subscriptions.forEach(subscription => subscription.unsubscribe());\n    }\n\n}","<div *ngIf=\"!isHidden()\" class=\"list-group list-group-flush\" [ngClass]=\"{'scrollable': forceMaxHeight }\">\n    <div *ngIf=\"displayActions && actions\" class=\"d-flex pb-2 pr-2\">\n        <div class=\"btn-group ml-auto\"\n            [sq-action-buttons]=\"{items: actions, size: 'sm'}\">\n        </div>\n    </div>\n    \n    <div *ngIf=\"searchItems.selected\" class=\"position-relative\" [formGroup]=\"myGroup\">\n        <div class=\"p-1\">\n            <input class=\"form-control\" sqAutofocus\n                formControlName=\"searchQuery\"\n                [placeholder]=\"'msg#facet.searchPlaceholder' | sqMessage\">\n        </div>\n        <sq-loading-bar [active]=\"searchActive\"></sq-loading-bar>\n    </div>\n    \n    <!-- hidden selected items -->\n    <div *ngFor=\"let item of hiddenSelected\"\n        class=\"d-flex flex-row align-items-center list-group-item list-group-item-primary border-0 px-3 py-1 facet-row cursor-pointer\"\n        [title]=\"'msg#facet.itemUnselect' | sqMessage\"\n        (click)=\"selectItem(item)\">\n\n        <a href=\"#\" (click)=\"filterItem(item, $event)\"\n            [title]=\"'msg#facet.filterItem' | sqMessage:{'terme':(item.$path | slice:1:-1)}\"\n            class=\"text-truncate mr-auto\">{{item.$path | slice:1:-1}}</a>\n        \n        <span *ngIf=\"showCount && item.count\" class=\"ml-2 text-muted small\">{{item.count | sqNumber}}</span>\n    </div>\n\n    <span *ngIf=\"noResults\" class=\"d-block text-center text-muted small py-1\"><i>{{'msg#facet.searchNoResult' | sqMessage}}</i></span>\n\n    <ng-container *ngTemplateOutlet=\"itemsTpl; context:data\"></ng-container>\n\n</div>\n\n<ng-template #itemsTpl let-items=\"items\">\n    <ng-container *ngFor=\"let item of items\">\n\n        <a  class=\"d-flex flex-row align-items-center list-group-item border-0 pl-1 pr-3 py-1\"\n            [ngClass]=\"{'list-group-item-primary':isSelected(item),'list-group-item-success':isFiltered(item),'list-group-item-action':!isFiltered(item), 'filtered':isFiltered(item) }\" \n            [title]=\"(isFiltered(item)? 'msg#facet.selectedValue' : 'msg#facet.itemSelect') | sqMessage\" \n            (click)=\"selectItem(item)\" href=\"#\">\n    \n            <span class=\"mr-auto text-truncate\" [ngStyle]=\"{'margin-left.rem' : item['$level'] - 1}\">\n\n                <a *ngIf=\"item['hasChildren']\" class=\"item-opener\" href=\"#\" (click)=\"open(item, $event)\" [title]=\"(item['$opened'] ? 'msg#facet.closeItem' : 'msg#facet.openItem') | sqMessage\">\n                    <span *ngIf=\"item['$opening']\" class=\"fas fa-sync fa-fw fa-spin\"></span>\n                    <span *ngIf=\"!item['$opening'] && item['$opened']\" class=\"fas fa-caret-down fa-fw\"></span>\n                    <span *ngIf=\"!item['$opening'] && !item['$opened']\" class=\"fas fa-caret-right fa-fw\"></span>\n                </a>\n                <span *ngIf=\"!item['hasChildren']\" class=\"fas fa-fw\"></span>\n    \n                <a  href=\"#\" (click)=\"filterItem(item, $event)\" \n                    role=\"button\" [title]=\"item | sqValue:item.$column\"\n                    class=\"text-truncate\"> {{item | sqValue:item.$column}}</a>\n\n            </span>\n            \n            <i class=\"ml-2 far fa-check-square\" *ngIf=\"isFiltered(item)\"></i>\n\n            <span *ngIf=\"showCount && item.count\" class=\"ml-2 text-muted small\">{{item.count | sqNumber}}</span>\n    \n        </a>\n\n        <ng-container *ngIf=\"item['$opened']\">\n\n            <ng-container *ngTemplateOutlet=\"itemsTpl; context:item\"></ng-container>\n\n        </ng-container>\n\n    </ng-container>\n\n</ng-template>\n","export default {\n    \"feedback\":{\n        \"text\" : \"\",\n        \"title\": \"Sende Rückmeldung an den Sinequa-Admin\",\n        \"content\": {\n          \"text\": \"Inhalt\",\n          \"title\": \"Vorschlag zum Hinzufügen neuer Inhalte oder zur Verbesserung vorhandener Inhalte\"\n        },\n        \"ui\": {\n          \"text\": \"Benutzeroberfläche\",\n          \"title\": \"Schlage Verbesserungen für die Benutzeroberfläche vor\"\n        },\n        \"lang\": {\n          \"text\": \"Sprache\",\n          \"title\": \"Schlage Verbesserungen für die Sprachverarbeitung vor wie neue Worte oder Synonyme, die zu den Wörterbüchern hinzugefügt werden sollen (dies hat direkte Auswirkungen auf die Relevanzberechnung der Suchmaschine)\"\n        },\n        \"other\": {\n          \"text\": \"Andere\",\n          \"title\": \"Reichen Sie einen Vorschlag für eine zusätzliche Funktion oder andere Verbesserungvorschläge ein\"\n        },\n        \"thankyou\": \"Vielen Dank für Ihre Rückmeldung!\",\n        \"quality\": {\n          \"label\": \"Qualität des Dokuments:\"\n        },\n        \"relevance\": {\n          \"label\": \"Relevanz des Dokuments:\"\n        },\n        \"labels\" : {\n            \"public\": {\n              \"label\": \"Etiketten:\"\n            },\n            \"private\": {\n              \"label\": \"Private Etiketten:\"\n            }\n        }\n    }\n};\n","import {Injectable, OnDestroy} from \"@angular/core\";\r\nimport {IntlService} from \"@sinequa/core/intl\";\r\nimport {NotificationsService} from \"@sinequa/core/notification\";\r\nimport {Subject} from \"rxjs\";\r\n\r\n// eslint-disable-next-line no-var\r\ndeclare var webkitSpeechRecognition: any;\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class VoiceRecognitionService implements OnDestroy {\r\n  recognition;\r\n  recognizing = false;\r\n  ignore_onend = false;\r\n  start_timestamp;\r\n\r\n  text = new Subject<string>();\r\n  started = new Subject<boolean>();\r\n  available = false;\r\n\r\n  constructor(\r\n    private intlService: IntlService,\r\n    private notify: NotificationsService\r\n  ) {}\r\n\r\n  init() {\r\n    this.intlService.events.subscribe(() => {\r\n      this.recognition.lang = this.intlService.currentLocale.data?.intl.locale;\r\n    }\r\n    );\r\n\r\n    try {\r\n      this.recognition = new webkitSpeechRecognition();\r\n      this.recognition.continuous = false;\r\n      this.recognition.interimResults = true;\r\n      this.recognition.lang = this.intlService.currentLocale.data?.intl.locale;\r\n\r\n      this.recognition.addEventListener(\"error\", this.onError);\r\n      this.recognition.addEventListener(\"result\", this.onResult);\r\n      this.recognition.addEventListener(\"start\", this.onStart);\r\n      this.recognition.addEventListener(\"end\", this.onEnd);\r\n      this.available = true;\r\n    } catch (error) {\r\n      this.available = false;\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.recognition.removeEventListener(\"error\", this.onError);\r\n    this.recognition.removeEventListener(\"result\", this.onResult);\r\n    this.recognition.removeEventListener(\"start\", this.onStart);\r\n    this.recognition.removeEventListener(\"end\", this.onEnd);\r\n  }\r\n\r\n  start() {\r\n    if (this.recognizing) {\r\n      this.stop();\r\n      return;\r\n    }\r\n\r\n    this.text.next(\"\");\r\n    this.started.next(true);\r\n    this.recognition.start();\r\n  }\r\n\r\n  stop() {\r\n    this.recognition.stop();\r\n    this.started.next(false);\r\n  }\r\n\r\n  toggleRecognition() {\r\n    if (this.recognizing) {\r\n      this.stop();\r\n    } else {\r\n      this.start();\r\n    }\r\n  }\r\n\r\n  private onResult = e => {\r\n    const transcript = Array.from(e.results)\r\n      .map((result: any) => result[0])\r\n      .map(result => result.transcript)\r\n      .join(\"\");\r\n\r\n    this.text.next(transcript);\r\n  };\r\n\r\n  private onStart = event => {\r\n    this.recognizing = true;\r\n    this.start_timestamp = event.timeStamp;\r\n  };\r\n\r\n  private onEnd = () => {\r\n    if (this.ignore_onend) {\r\n      return;\r\n    }\r\n    this.recognizing = false;\r\n    this.started.next(false);\r\n  };\r\n\r\n  private onError = event => {\r\n    let message: string = event.error;\r\n    switch (event.error) {\r\n      case \"no-speech\": {\r\n        message = \"No speech was detected.\";\r\n        break;\r\n      }\r\n      case \"audio-capture\": {\r\n        message = \"Audio capture failed.\";\r\n        break;\r\n      }\r\n      case \"not-allowed\": {\r\n        if (event.timeStamp - this.start_timestamp < 100) {\r\n          message = \"info_blocked\";\r\n        } else {\r\n          message = \"The user agent is not allowing any speech input to occur for reasons of security, privacy or user preference.\";\r\n        }\r\n        break;\r\n      }\r\n      case \"aborted\": {\r\n        message = \"Speech input was aborted somehow, maybe by some user-agent-specific behavior such as UI that lets the user cancel speech input.\"\r\n        break;\r\n      };\r\n      case \"network\": {\r\n        message = \"Some network communication that was required to complete the recognition failed.\";\r\n        break;\r\n      }\r\n      case \"service-not-allowed\": {\r\n        message = \"The user agent is not allowing the web application requested speech service, but would allow some speech service, to be used either because the user agent doesn’t support the selected one or because of reasons of security, privacy or user preference.\";\r\n        break;\r\n      }\r\n      case \"bad-grammar\": {\r\n        message = \"There was an error in the speech recognition grammar or semantic tags, or the grammar format or semantic tag format is unsupported.\";\r\n        break;\r\n      }\r\n      case \"language-not-supported\": {\r\n        message = `The language [${this.recognition.lang}] was not supported.`;\r\n        this.recognition.lang = \"en-US\";\r\n        break;\r\n      }\r\n    }\r\n    this.notify.warning(message);\r\n    this.ignore_onend = true;\r\n    this.started.next(false);\r\n  };\r\n}\r\n\r\nexport module VoiceRecognitionService {}","import {NgModule} from \"@angular/core\";\nimport {Collapse} from \"./collapse.component\";\nimport {CollapseButton} from \"./collapse-button.component\";\nimport {CollapseLink} from \"./collapse-link.component\";\nimport {CommonModule} from \"@angular/common\";\nimport {IntlModule} from \"@sinequa/core/intl\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        IntlModule\n    ],\n    declarations: [\n        Collapse, CollapseButton, CollapseLink\n    ],\n    exports: [\n        Collapse, CollapseButton, CollapseLink\n    ],\n})\nexport class CollapseModule {\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { SqHttpClient } from \"./http-client\";\nimport { HttpService } from './http.service';\nimport {Utils} from \"@sinequa/core/base\";\nimport {START_CONFIG, StartConfig} from \"./start-config.web.service\";\nimport { ExportOutputFormat, ExportSourceType } from './config/ccapp';\nimport { IQuery } from './query/query';\nimport { Results } from \"./query.web.service\";\nimport { AuditEventType } from './audit.web.service';\n\n/**\n * A service to export the result of a query.\n */\n@Injectable({\n    providedIn: \"root\"\n})\nexport class QueryExportWebService extends HttpService {\n\n    constructor(\n        @Inject(START_CONFIG) startConfig: StartConfig,\n        private httpClient: SqHttpClient) {\n        super(startConfig);\n    }\n\n    private logErrorToConsole(methodName: string, errorMessage: string): void {\n        console.log(`queryExportService.${methodName} ${errorMessage}.`);\n    }\n\n    private preliminaryCheck(\n        methodName: string,\n        webService: string,\n        format: ExportOutputFormat): Observable<HttpResponse<Blob>> | undefined {\n\n        if (!this.appName) {\n            const errorMessage = 'No app';\n            this.logErrorToConsole(methodName, errorMessage);\n            return throwError({ error: errorMessage});\n        }\n\n        if (!webService) {\n            const errorMessage = 'No web service';\n            this.logErrorToConsole(methodName, errorMessage);\n            return throwError({ error: errorMessage});\n        }\n\n        if (!format || format as ExportOutputFormat === ExportOutputFormat.None) {\n            const errorMessage = 'No output format';\n            this.logErrorToConsole(methodName, errorMessage);\n            return throwError({ error: errorMessage});\n        }\n\n        return undefined;\n    }\n\n    /**\n     * Exports the current result.\n     *\n     * @param webService The configuration for the export web service.\n     * @param query The query to export.\n     * @param format The export format.\n     * @param maxCount (Optional) The maximum number of exported rows.\n     * @param exportedColumns (Optional) The columns to export, empty means all columns.\n     */\n    public exportResult(\n        webService: string,\n        query: IQuery,\n        results: Results | undefined,\n        format: ExportOutputFormat,\n        maxCount?: number,\n        exportedColumns?: string[]\n    ): Observable<HttpResponse<Blob>> {\n\n        const methodName = 'exportResult';\n        const preliminaryCheckResult = this.preliminaryCheck(methodName, webService, format);\n        if (preliminaryCheckResult) {\n            return preliminaryCheckResult;\n        }\n\n        if (!query) {\n            const errorMessage = 'No query';\n            this.logErrorToConsole(methodName, errorMessage);\n            return throwError({ error: errorMessage});\n        }\n\n        const postData = {\n            app: this.appName,\n            webService,\n            query,\n            type: ExportSourceType[ExportSourceType.Result],\n            format: ExportOutputFormat[format],\n            maxCount: maxCount ? maxCount.toString() : undefined,\n            exportedColumns: exportedColumns,\n            $auditRecord: {\n                type: AuditEventType.Search_ExportCSV,\n                detail: {\n                    \"result-id\": !!results ? results.id : undefined\n                }\n            }\n        };\n\n        return this.doExport(postData);\n    }\n\n    /**\n     * Exports the current selected records.\n     *\n     * @param webService The configuration for the export web service.\n     * @param query\n     * @param selection\n     * @param format The export format.\n     * @param maxCount (Optional) The maximum number of exported rows.\n     * @param exportedColumns (Optional) The columns to export, empty means all columns.\n     */\n    public exportSelection(\n        webService: string,\n        query: IQuery,\n        results: Results | undefined,\n        selection: string[],\n        format: ExportOutputFormat,\n        maxCount?: number,\n        exportedColumns?: string[]\n    ): Observable<HttpResponse<Blob>> {\n\n        const methodName = 'exportSelection';\n        const preliminaryCheckResult = this.preliminaryCheck(methodName, webService, format);\n        if (preliminaryCheckResult) {\n            return preliminaryCheckResult;\n        }\n\n        if (!query) {\n            const errorMessage = 'No query';\n            this.logErrorToConsole(methodName, errorMessage);\n            return throwError({ error: errorMessage});\n        }\n\n        if (!selection || selection.length === 0) {\n            const errorMessage = 'No selection';\n            this.logErrorToConsole(methodName, errorMessage);\n            return throwError({ error: errorMessage});\n        }\n\n        const postData = {\n            app: this.appName,\n            webService,\n            query,\n            selection,\n            type: ExportSourceType[ExportSourceType.Selection],\n            format: ExportOutputFormat[format],\n            maxCount: maxCount ? maxCount.toString() : undefined,\n            exportedColumns: exportedColumns,\n            $auditRecord: {\n                type: AuditEventType.Search_Selection_ExportCSV,\n                detail: {\n                    \"result-id\": !!results ? results.id : undefined\n                }\n            }\n        };\n\n        return this.doExport(postData);\n    }\n\n    /**\n     * Exports the result of a saved query.\n     *\n     * @param webService The configuration for the export web service.\n     * @param queryName The query name.\n     * @param format The export format.\n     * @param maxCount (Optional) The maximum number of exported rows.\n     * @param exportedColumns (Optional) The columns to export, empty means all columns.\n     */\n    public exportSavedQuery(\n        webService: string,\n        queryName: string,\n        format: ExportOutputFormat,\n        maxCount?: number,\n        exportedColumns?: string[]\n    ): Observable<HttpResponse<Blob>> {\n\n        const methodName = 'exportSavedQuery';\n        const preliminaryCheckResult = this.preliminaryCheck(methodName, webService, format);\n        if (preliminaryCheckResult) {\n            return preliminaryCheckResult;\n        }\n\n        if (!queryName) {\n            const errorMessage = 'No saved query';\n            this.logErrorToConsole(methodName, errorMessage);\n            return throwError({ error: errorMessage});\n        }\n\n        const postData = {\n            app: this.appName,\n            webService,\n            type: ExportSourceType[ExportSourceType.SavedQuery],\n            format: ExportOutputFormat[format],\n            name: queryName,\n            maxCount: maxCount ? maxCount.toString() : undefined,\n            exportedColumns: exportedColumns,\n            $auditRecord: {\n                type: AuditEventType.Search_SavedQuery_ExportCSV,\n                detail: {\n                    query: queryName\n                }\n            }\n        };\n\n        return this.doExport(postData);\n    }\n\n    private doExport(body: {}): Observable<HttpResponse<Blob>> {\n        const observable = this.httpClient.post(\n            this.makeUrl('query.export'),\n            body,\n            {\n                observe: 'response',\n                responseType: 'blob'\n            }\n        );\n\n        Utils.subscribe(\n            observable,\n            (response: HttpResponse<Blob>) => {\n                console.log('queryExportService.export success: ', this.readBlobFileName(response));\n                return response;\n            },\n            (error) => {\n                console.log('queryExportService.export failure - error: ', error);\n            });\n\n        return observable;\n    }\n\n    private readBlobFileName(response: HttpResponse<Blob>): string {\n        const header = response.headers.get('content-disposition');\n        return header ? header.split('filename=')[1].replace('\"', '').replace('\"', '') : \"\";\n    }\n}\n","export default {\n    \"alerts\": {\n        \"alerts\": \"Alertes\",\n        \"createAlert\": \"Créer une alerte\",\n        \"manageAlerts\": \"Gérer les alertes\",\n        \"alertAlreadyExists\": \"Une alerte avec ce nom existe déjà. Voulez-vous la remplacer ?\"\n    },\n\n    \"editAlert\": {\n        \"title\": \"Alerte\",\n        \"name\": \"Nom\",\n        \"frequency\": \"Fréquence\",\n        \"days\": \"Jours\",\n        \"monday\": \"lundi\",\n        \"tuesday\": \"mardi\",\n        \"wednesday\": \"mercredi\",\n        \"thursday\": \"jeudi\",\n        \"friday\": \"vendredi\",\n        \"saturday\": \"samedi\",\n        \"sunday\": \"dimanche\",\n        \"times\": \"Horaires\",\n        \"active\": \"Active\",\n        \"updateQuery\": \"Mettre à jour la requête\",\n        \"runQuery\": \"Exécuter la requête\",\n        \"lossDataMessage\": \"Voulez-vous quitter sans sauvegarder vos modifications ?\"\n    },\n\n    \"manageAlerts\": {\n        \"title\": \"Gérer les alertes\",\n        \"edit\": \"Editer\",\n        \"reorder\": \"Réorganiser\",\n        \"remove\": \"Effacer\",\n        \"removeAll\": \"Effacer tout\"\n    },\n\n};\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { RecentDocumentsService, RecentDocument } from '../../recent-documents.service';\nimport { AbstractFacet } from '@sinequa/components/facet';\nimport { Action } from '@sinequa/components/action';\nimport { SearchService } from '@sinequa/components/search';\n\n@Component({\n  selector: 'sq-facet-recent-documents',\n  templateUrl: './facet-recent-documents.html',\n  styles: [`\n.recent-document-item .document-delete{\n    opacity: 0;\n}\n\n.recent-document-item:hover .document-delete{\n    opacity: 1;\n    transition: opacity 0.2s ease-in-out;\n}\n  `]\n})\nexport class BsFacetRecentDocuments extends AbstractFacet  {\n    @Input() searchRoute: string = \"/preview\";\n    @Input() maxDocuments: number = 5;\n    @Input() enableDelete: boolean = true;\n    @Input() openOriginal: boolean = false;\n    @Output() documentOpened = new EventEmitter<RecentDocument>();\n\n    page: number = 0;\n\n    previousPage: Action;\n    nextPage: Action;\n\n    constructor(\n        public recentDocumentsService: RecentDocumentsService,\n        public searchService: SearchService) {\n        super();\n\n        this.previousPage = new Action({\n            icon: \"fas fa-chevron-left\",\n            title: \"msg#facet.previous\",\n            action: () => {\n                this.page--;\n            },\n            updater: (action: Action) => {\n                action.disabled = this.page <= 0;\n                action.hidden = this.maxPage === 0;\n            }\n        });\n        this.nextPage = new Action({\n            icon: \"fas fa-chevron-right\",\n            title: \"msg#facet.next\",\n            action: () => {\n                this.page++;\n            },\n            updater: (action: Action) => {\n                action.disabled = this.page >= this.maxPage;\n                action.hidden = this.maxPage === 0;\n            }\n        });\n    }\n\n    get maxPage(): number {\n        return Math.max(0, Math.ceil(this.recentDocumentsService.recentdocuments.length / this.maxDocuments) - 1);\n    }\n\n    get startIndex(): number {\n        return this.page * this.maxDocuments;\n    }\n\n    get endIndex(): number {\n        return (this.page+1) * this.maxDocuments;\n    }\n\n    get actions(): Action[] {\n        this.previousPage.update();\n        this.nextPage.update();\n        return [this.previousPage, this.nextPage];\n    }\n\n    openRecentDocument(document: RecentDocument) {\n        if(this.openOriginal && !!document.url1){\n            this.searchService.notifyOpenOriginalDocument(<any> document);\n        }\n        this.documentOpened.emit(document); // Can be use to trigger actions, like the preview\n        return true;\n    }\n\n    deleteDocument(document: RecentDocument, event: Event){\n        this.recentDocumentsService.deleteRecentDocument(document);\n        this.page = Math.min(this.page, this.maxPage);\n        return false;\n    }\n\n    getQueryParams(document: RecentDocument) {\n        return {\n            id: document.id,\n            query: this.searchService.makeQuery().toJsonForQueryString()\n        };\n    }\n}\n","<div class=\"list-group list-group-flush\">\n    <ng-container *ngFor=\"let document of recentDocumentsService.recentdocuments | slice:startIndex:endIndex\">\n        <a *ngIf=\"openOriginal && document.url1; else internalLink\"\n            class=\"recent-document-item list-group-item list-group-item-action d-flex align-items-center\"\n            [attr.href]=\"document.url1\" target=\"_blank\" rel=\"noopener\"\n            (click)=\"openRecentDocument(document)\">\n            <span class=\"document-text mr-auto text-truncate\" title=\"{{ document.title }}\">{{ document.title }}</span>\n            <span *ngIf=\"document.date\" class=\"document-date ml-2 text-muted small text-right\">{{ document.date | sqDate }}</span>\n            <i *ngIf=\"enableDelete\" class=\"document-delete ml-2 fas fa-times\" [title]=\"'msg#recentDocuments.delete' | sqMessage\" (click)=\"deleteDocument(document, $event)\"></i>\n        </a>\n        <ng-template #internalLink>\n        <a class=\"recent-document-item list-group-item list-group-item-action d-flex align-items-center\"\n            [routerLink]=\"searchRoute\" [queryParams]=\"getQueryParams(document)\"\n            (click)=\"openRecentDocument(document)\">\n            <span class=\"document-text mr-auto text-truncate\" title=\"{{ document.title }}\">{{ document.title }}</span>\n            <span *ngIf=\"document.date\" class=\"document-date ml-2 text-muted small text-right\">{{ document.date | sqDate }}</span>\n            <i *ngIf=\"enableDelete\" class=\"document-delete ml-2 fas fa-times\" [title]=\"'msg#recentDocuments.delete' | sqMessage\" (click)=\"deleteDocument(document, $event)\"></i>\n        </a>\n        </ng-template>\n    </ng-container>\n    <div *ngIf=\"recentDocumentsService.recentdocuments.length == 0\" class=\"list-group-item text-center text-muted font-italic small py-5\">\n        {{ 'msg#recentDocuments.noRecentDocument' | sqMessage }}\n    </div>\n</div>","import {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {A11yModule} from \"@angular/cdk/a11y\";\n\nimport {IntlModule} from \"@sinequa/core/intl\";\n\n// Formatting pipes\nimport {DatePipe} from \"./pipes/date-pipe\";\nimport {ExprPipe} from \"./pipes/expr-pipe\";\nimport {MemorySizePipe} from \"./pipes/memory-size-pipe\";\nimport {MomentPipe} from \"./pipes/moment-pipe\";\nimport {NumberPipe} from \"./pipes/number-pipe\";\nimport {RelativeTimePipe} from \"./pipes/relative-time-pipe\";\nimport {TimePipe} from \"./pipes/time-pipe\";\nimport {ValuePipe} from \"./pipes/value-pipe\";\n\n// UI Directives\nimport {Autofocus} from \"./directives/autofocus\";\nimport {ClickOutside} from \"./directives/click-outside\";\nimport {MediaIf} from \"./directives/media-if\";\nimport {ScrollIntoView} from \"./directives/scroll-into-view\";\nimport {FocusKeyListDirective} from \"./directives/focus-key-list.directive\";\nimport {FocusKeyListItemDirective} from \"./directives/focus-key-list-item.directive\";\nimport {ResizeEventDirective} from \"./directives/resize-event.directive\";\nimport {StickyComponent} from \"./directives/sticky\";\nimport {TooltipComponent} from \"./directives/tooltip/tooltip.component\";\nimport {TooltipDirective} from \"./directives/tooltip/tooltip.directive\";\n\n// UI Service\nimport {SCREEN_SIZE_RULES} from \"./ui.service\";\n\nexport const defaultScreenSizeRules = {\n    xxl: \"(min-width: 1920px)\",\n    xl: \"(min-width: 1200px) and (max-width: 1919.98px)\",\n    lg: \"(min-width: 992px) and (max-width: 1199.98px)\",\n    md: \"(min-width: 768px) and (max-width: 991.98px)\",\n    sm: \"(min-width: 576px) and (max-width: 767.98px)\",\n    xs: \"(max-width: 575.98px)\",\n};\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        IntlModule\n    ],\n    declarations: [\n        DatePipe, ExprPipe, MemorySizePipe, MomentPipe, NumberPipe, RelativeTimePipe, TimePipe, ValuePipe,\n        Autofocus, ClickOutside, MediaIf, ScrollIntoView, FocusKeyListDirective, FocusKeyListItemDirective, \n        ResizeEventDirective, StickyComponent, TooltipComponent, TooltipDirective\n    ],\n    exports: [\n        DatePipe, ExprPipe, MemorySizePipe, MomentPipe, NumberPipe, RelativeTimePipe, TimePipe, ValuePipe,\n        Autofocus, ClickOutside, MediaIf, ScrollIntoView, FocusKeyListDirective, FocusKeyListItemDirective,\n        ResizeEventDirective, StickyComponent, TooltipComponent, TooltipDirective\n    ],\n    providers: [\n        {\n            provide: SCREEN_SIZE_RULES,\n            useValue: defaultScreenSizeRules\n        }\n    ]\n})\nexport class UtilsModule {\n}\n","import {Injectable, Inject, OnDestroy, Type, InjectionToken, Optional} from \"@angular/core\";\nimport {HttpErrorResponse} from \"@angular/common/http\";\nimport {Router} from \"@angular/router\";\nimport {BehaviorSubject, Observable, forkJoin, of, throwError} from \"rxjs\";\nimport {flatMap} from \"rxjs/operators\";\nimport {Utils, SqError, SqErrorCode} from \"@sinequa/core/base\";\nimport {START_CONFIG, StartConfig, CCApp, PrincipalWebService, Principal,\n    UserSettingsWebService, UserSettings} from \"@sinequa/core/web-services\";\nimport {ModalService, ModalResult} from \"@sinequa/core/modal\";\nimport {NotificationsService} from \"@sinequa/core/notification\";\nimport {AppService} from \"@sinequa/core/app-utils\";\nimport {AuthenticationService, ProcessedCredentials, Credentials, UserOverride} from \"./authentication.service\";\n\n/**\n * Describes the different session events that are emitted by the {@link LoginService}\n * * `session-start`: emitted after successful login\n * * `session-end`: emitted after logout and also when the {@link LoginService} is destroyed\n * * `session-changed`: emitted whenever the login state changes - login, logout and user override\n */\nexport interface SessionEvent {\n    type: \"session-start\" | \"session-end\" | \"session-changed\";\n}\n\n\n/**\n * An `InjectionToken` to set the component to use for the login modal dialog which is displayed\n * by the {@link LoginService} when performing a manual login. This makes the service independent\n * of any particular UI framework. If manual login is to be used a component must be configured by\n * providing this token.\n */\nexport const MODAL_LOGIN = new InjectionToken<Type<any>>('MODAL_LOGIN');\n\n/**\n * Describes the data retrieved during the login process.\n */\nexport interface LoginData {\n    /**\n     * The application configuration.\n     */\n    app: CCApp;\n    /**\n     * The principal corresponding to the logged in user.\n     */\n    principal: Principal;\n    /**\n     * The user settings for the logged in user.\n     */\n    userSettings: UserSettings;\n}\n\n/**\n * A high-level service to manage user login\n */\n@Injectable({\n    providedIn: \"root\"\n})\nexport class LoginService implements OnDestroy {\n    /**\n     * `true` if a user is currently logged in\n     */\n    complete: boolean;\n    // getCredentials handling (concurrent calls)\n    protected loginModalPromise: Promise<ModalResult> | undefined;\n    protected processCredentialsPromise: Promise<ProcessedCredentials | undefined> | undefined;\n    protected checkPrincipalPromise: Promise<Principal> | undefined;\n    protected automaticLoginPromise: Promise<any> | undefined;\n    protected _events = new BehaviorSubject<SessionEvent>({type: \"session-changed\"});\n\n    constructor(\n        @Inject(START_CONFIG) protected startConfig: StartConfig,\n        @Inject(MODAL_LOGIN) protected loginModal: Type<any>,\n        @Optional() protected router: Router,\n        protected appService: AppService,\n        protected principalService: PrincipalWebService,\n        protected userSettingsService: UserSettingsWebService,\n        protected modalService: ModalService,\n        protected notificationsService: NotificationsService,\n        protected authenticationService: AuthenticationService) {\n        // NB unload doesn't fire reliably so we listen for beforeunload\n        window.addEventListener(\"beforeunload\", this.beforeUnloadEventListener);\n    }\n\n    protected beforeUnloadEventListener = (e: Event) => {\n        this._events.next({type: \"session-end\"});\n    }\n\n    ngOnDestroy() {\n        this._events.complete();\n        window.removeEventListener(\"beforeunload\", this.beforeUnloadEventListener);\n    }\n\n    /**\n     * Get an `Observable` stream of {@link SessionEvent} events emitted by the service\n     */\n    get events(): Observable<SessionEvent> {\n        return this._events;\n    }\n\n    /**\n     * Get the currently logged in {@link Principal}, if any. Note that a principal can exist\n     * without the login being complete. For example, in the situation where access is denied to\n     * the selected app.\n     */\n    get principal(): Principal | undefined {\n        return this.principalService.principal;\n    }\n\n    private setComplete() {\n        const complete = this.complete;\n        this.complete = !!this.appService.app && !!this.principalService.principal && !!this.userSettingsService.userSettings;\n        if (this.complete) {\n            if (!this.authenticationService.userOverrideFailed) {\n                this.notificationsService.hideNotifications();\n            }\n            this.authenticationService.userOverrideFailed = false;\n        }\n        if (!!complete !== !!this.complete) {\n            this._events.next({type: \"session-changed\"});\n        }\n    }\n\n    /**\n     * Perform a logout of the currently logged in user. [AppService.app]{@link AppService#app},\n     * [PrincipalWebService.principal]{@link PrincipalWebService#prinicpal} and\n     * [UserSettingsWebService.userSettings]{@link UserSettingsWebService#userSettings} are reset.\n     * The `session-end` event is emitted\n     */\n    logout() {\n        this._events.next({type: \"session-end\"});\n        this.appService.clear();\n        this.principalService.principal = undefined;\n        this.userSettingsService.userSettings = undefined;\n        this.authenticationService.deactivateUserOverride();\n        this.authenticationService.logout();\n        this.setComplete();\n    }\n\n    /**\n     * Override the current user to the user specified in `userOverride`. Only an administrator\n     * is permitted to do this. They can revert to the normal login by calling this method with\n     * `undefined`\n     *\n     * @param userOverride The user override\n     */\n    overrideUser(userOverride: UserOverride | undefined) {\n        this.authenticationService.userOverride = userOverride;\n        this.appService.clear();\n        this.principalService.principal = undefined;\n        this.userSettingsService.userSettings = undefined;\n        this.setComplete();\n        Utils.delay().then(() => this.login());\n    }\n\n    private switchPrincipal(principal: Principal) {\n        if (!principal.isAdministrator) {\n            this.authenticationService.deactivateUserOverride();\n        }\n        this.principalService.principal = principal;\n        this.userSettingsService.userSettings = undefined;\n        Utils.delay().then(() => this.login());\n    }\n\n    /**\n     * Initiate the user login process. The method attempts to retrieve\n     * the [application configuration]{@link CCApp}, the\n     * [logged in user]{@link Principal} and the [user settings]{@link UserSettings}.\n     * If a user is not currently authenticated then authentication is performed using\n     * the {@link AuthenticationService} - OAuth/SAML if configured on the Sinequa Server\n     * or manual using a login modal dialog provided using the {@link MODAL_LOGIN} injection\n     * token.\n     */\n    login(): Observable<LoginData> {\n        const appName = this.appService.appName;\n        if (!appName) {\n            return throwError({error: \"App not specified\"});\n        }\n        let appNeeded: boolean;\n        if (this.router) {\n            const hash = window.location.hash.replace(\"#\", \"\");\n            const href = hash.split(\"?\")[0];\n            const params = new URLSearchParams(hash.split(\"?\")[1]);\n            const queryParams = {}\n            params.forEach((v, k) => queryParams[k] = v);\n\n            // Pick up any user override from the query string\n            const overrideUser = queryParams[\"overrideUser\"];\n            const overrideDomain = queryParams[\"overrideDomain\"];\n            if (overrideUser) {\n                this.authenticationService.userOverride = {\n                    userName: overrideUser,\n                    domain: overrideDomain\n                };\n                delete queryParams[\"overrideUser\"];\n                delete queryParams[\"overrideDomain\"];\n                const url = Utils.makeURL(href);\n                this.router.navigate([url.pathname], {queryParams});\n            }\n        }\n\n        interface ObservableLoginData {\n            app: Observable<CCApp> | undefined;\n            principal: Observable<Principal> | undefined;\n            userSettings: Observable<UserSettings> | undefined;\n        }\n\n        const makeObservables = (): ObservableLoginData => {\n            const observables: ObservableLoginData = {\n                app: undefined,\n                principal: undefined,\n                userSettings: undefined\n            };\n            if (!this.appService.app || (appName && this.appService.app.name !== appName)) {\n                appNeeded = true;\n                observables.app = this.appService.init();\n            }\n            else {\n                observables.app = of(this.appService.app);\n            }\n            let loadUserSettings = false;\n            if (!this.principalService.principal) {\n                loadUserSettings = true;\n                observables.principal = this.principalService.load();\n            }\n            else {\n                observables.principal = of(this.principalService.principal);\n            }\n            if (!this.userSettingsService.userSettings || loadUserSettings) {\n                observables.userSettings = this.userSettingsService.load();\n            }\n            else {\n                observables.userSettings = of(this.userSettingsService.userSettings);\n            }\n            return observables;\n        };\n\n        const observable = this.authenticationService.autoAuthenticate()\n            .pipe(flatMap((success) => {\n                const observables = makeObservables();\n                return forkJoin<ObservableLoginData, keyof ObservableLoginData>(observables);\n            }));\n        Utils.subscribe(observable,\n            (result) => {\n                console.log(\"loginService.login ok: \", result);\n                this.setComplete();\n                if (appNeeded) {\n                    this._events.next({type: \"session-start\"});\n                }\n            },\n            (error) => {\n                console.log(\"loginService.login failed: \", error);\n                // proceed to logout to clean process\n                this.logout();\n                return throwError(error);\n            });\n        return observable;\n    }\n\n    private getAutomaticProvider(): string | undefined {\n        if (this.startConfig.providers) {\n            return Object.keys(this.startConfig.providers).find((value) => {\n                const provider = this.startConfig.providers && this.startConfig.providers[value];\n                return !!provider && (provider as any).automatic;\n            });\n        }\n        return undefined;\n    }\n\n    /**\n     * Called by the {@link HttpInterceptor} on reception of an `HTTP 401` response.\n     * This will either initiate an auto login process (OAuth/SAML) if configured on\n     * the Sinequa server or display the login modal dialog to request user credentials\n     *\n     * @param response An `HTTP 401` response\n     * @param acceptCurrent If `true` and the `AuthenticationService` currently has\n     * processed credentials then use them instead of starting a new login\n     * @returns A promise that is resolved when credentials have been obtained. Note that\n     * when auto-authentication is configured the promise will be rejected and the browser\n     * redirected to the OAuth/SAML redirect url\n     */\n    getCredentials(response: HttpErrorResponse, acceptCurrent: boolean): Promise<void> {\n        if (acceptCurrent && this.authenticationService.processedCredentials) {\n            return Promise.resolve(); // initiate retry\n        }\n        if (!this.startConfig.usePopupForLogin && this.authenticationService.autoLoginActive) {\n            return this.authenticationService.autoAuthenticate().toPromise()\n                .then(result => {\n                    if (result/*auto-authentication initiated*/) {\n                        return Promise.reject(\"performing auto login\");\n                    }\n                    else {\n                        return undefined;\n                    }\n                });\n        }\n        let firstCaller = false;\n        const automaticProvider = this.getAutomaticProvider();\n        if (automaticProvider) {\n            if (!this.automaticLoginPromise) {\n                this.automaticLoginPromise = this.authenticationService.authenticateWithProvider(automaticProvider).toPromise();\n                firstCaller = true;\n            }\n            return this.automaticLoginPromise\n                .then((result) => {\n                    // NB response should be the return value from JOAuth/JSaml json methods\n                    // It can be undefined eg if the popup fails to open\n                    this.automaticLoginPromise = undefined;\n                    return result ? Promise.resolve() : Promise.reject(\"popup failed?\");\n                })\n                .catch((reason) => {\n                    this.automaticLoginPromise = undefined;\n                    const error = new SqError(SqErrorCode.autoLoginError);\n                    if (firstCaller) {\n                        this.notificationsService.error(error.message);\n                    }\n                    throw error;\n                });\n        }\n        const credentials: Credentials = {};\n        if (this.authenticationService.processedCredentials) {\n            credentials.userName = this.authenticationService.processedCredentials.userName;\n        }\n        if (!this.loginModalPromise) {\n            this.loginModalPromise = this.modalService.open(this.loginModal, {model: credentials});\n            firstCaller = true;\n        }\n        return this.loginModalPromise\n            .then((result) => {\n                this.loginModalPromise = undefined;\n                // result === ModalResult.Yes is a special return from Login when using AuthenticationService.authenticateWithProvider\n                if (result === ModalResult.OK || result === ModalResult.Yes) {\n                    if (!this.processCredentialsPromise) {\n                        this.processCredentialsPromise = result === ModalResult.Yes ?\n                            Promise.resolve<ProcessedCredentials | undefined>(undefined) :\n                            this.authenticationService.authenticate(credentials, response);\n                    }\n                    return this.processCredentialsPromise\n                        .then((value) => {\n                            this.processCredentialsPromise = undefined;\n                            if (result !== ModalResult.Yes) {\n                                this.authenticationService.processedCredentials = value;\n                            }\n                            if (!this.checkPrincipalPromise) {\n                                this.checkPrincipalPromise = this.principalService.get(false).toPromise();\n                            }\n                            return this.checkPrincipalPromise\n                                .then((principal) => {\n                                    this.checkPrincipalPromise = undefined;\n                                    if (!this.principalService.principal || this.principalService.principal.id === principal.id) {\n                                        // no current principal OR prinicpal unchanged - initiate retry\n                                        return Promise.resolve();\n                                    }\n                                    const error = new SqError(SqErrorCode.principalSwitched);\n                                    if (firstCaller) {\n                                        this.switchPrincipal(principal);\n                                        this.notificationsService.info(error.message);\n                                    }\n                                    throw error;\n                                })\n                                .catch((reason) => {\n                                    this.checkPrincipalPromise = undefined;\n                                    throw reason;\n                                });\n                        })\n                        .catch((reason) => {\n                            this.processCredentialsPromise = undefined;\n                            if (SqError.is(reason, SqErrorCode.principalSwitched)) {\n                                throw reason;\n                            }\n                            throw new SqError(SqErrorCode.processedCredentialsError);\n                        });\n                }\n                else {\n                    this.authenticationService.processedCredentials = undefined; // clean slate\n                    const error = new SqError(SqErrorCode.loginCancelled);\n                    if (firstCaller) {\n                        this.notificationsService.info(error.message);\n                    }\n                    throw error;\n                }\n            })\n            .catch((reason) => {\n                if (!SqError.is(reason, SqErrorCode.principalSwitched)) {\n                    this.authenticationService.processedCredentials = undefined; // clean slate\n                }\n                this.loginModalPromise = undefined;\n                throw reason;\n            });\n    }\n}\n","export default {\n    \"search\": {\n        \"emptySearchNotification\": \"Veuillez saisir des termes de recherche pour effectuer une recherche\",\n        \"alreadySelected\": \"Déjà sélectionné\"\n    },\n\n    \"breadcrumbs\": {\n        \"emptySearch\": \"<recherche vide>\",\n        \"itemRemove\": \"Supprimer\"\n    },\n\n    \"didYouMean\": {\n        \"dymonlyBeforeCorrected\": \"Essayez avec cette orthographe : \",\n        \"dymonlyAfterCorrected\": \"\",\n        \"correctBeforeCorrected\": \"Résultats pour : \",\n        \"correctBeforeOriginal\": \". Essayez avec l'orthographe : \",\n        \"correctAfterOriginal\": \"\",\n        \"smartBeforeOriginal\": \"Résultats pour : \",\n        \"smartBeforeCorrected\": \" et \",\n        \"smartAfterCorrected\": \"\"\n    },\n\n    \"pageSizeSelector\": {\n        \"pageSizeChoice\": \"{size, number} par page\",\n        \"defaultPageSize\": \"Défaut ({size, number})\",\n        \"defaultPageSizeChoice\": \"{size, number} par page (défaut)\"\n    },\n\n    \"pager\": {\n        \"pageNumberTitle\": \"Page {page, number}\",\n        \"firstPage\": \"Première page\",\n        \"nextPage\": \"Page suivante\",\n        \"previousPage\": \"Page précédente\",\n        \"lastPage\": \"Dernière page\"\n    },\n\n    \"sortSelector\": {\n        \"sortByTitle\": \"Trier par: {text}\",\n        \"sortOther\": \"<Autre>\"\n    },\n\n    \"sort\": {\n        \"relevance\": \"Pertinence\",\n        \"date\": \"Date\",\n        \"filename\": \"Nom de fichier\",\n        \"title\": \"Titre\"\n    },\n\n    \"queryIntent\": {\n        \"externalServiceTimeoutError\": \"Cette page de résultat est incomplète due à un délai d'attente interne dépassé. S'il vous plaît, réessayez plus tard.\"\n    }\n};\n","import {Injectable, OnDestroy, RendererFactory2, Renderer2} from \"@angular/core\";\nimport {Subject, Observable} from \"rxjs\";\nimport {Keys} from \"@sinequa/core/base\";\n\n// Based on  Bootstrap (v4.4.1): dropdown.js\n\nexport interface DropdownEvent {\n    type: \"clear\" | \"toggle\";\n}\n\nexport interface DropdownClearEvent extends DropdownEvent {\n    type: \"clear\";\n    sourceEvent: KeyboardEvent | MouseEvent | undefined;\n}\n\nexport interface DropdownToggleEvent extends DropdownEvent {\n    type: \"toggle\";\n    element: Element;\n}\n\nexport type DropdownEvents = DropdownClearEvent | DropdownToggleEvent;\n\nexport const gClassName = {\n    DISABLED        : 'disabled',\n    SHOW            : 'show',\n    DROPUP          : 'dropup',\n    DROPRIGHT       : 'dropright',\n    DROPLEFT        : 'dropleft',\n    MENURIGHT       : 'dropdown-menu-right',\n    MENULEFT        : 'dropdown-menu-left',\n    POSITION_STATIC : 'position-static'\n};\n\nexport const gSelector = {\n    DROPDOWN      : '.dropdown',\n    DATA_TOGGLE   : '[data-toggle=\"dropdown\"]',\n    FORM_CHILD    : '.dropdown form',\n    MENU          : '.dropdown-menu',\n    NAVBAR_NAV    : '.navbar-nav',\n    VISIBLE_ITEMS : '.dropdown-menu .dropdown-item:not(.disabled):not(:disabled)'\n};\n\nexport const gAttachmentMap = {\n    TOP       : 'top-start',\n    TOPEND    : 'top-end',\n    BOTTOM    : 'bottom-start',\n    BOTTOMEND : 'bottom-end',\n    RIGHT     : 'right-start',\n    RIGHTEND  : 'right-end',\n    LEFT      : 'left-start',\n    LEFTEND   : 'left-end'\n};\n\n@Injectable({\n    providedIn: \"root\"\n})\nexport class BsDropdownService implements OnDestroy {\n    protected _events: Subject<DropdownEvents>;\n    protected unlisteners: (() => void)[];\n    protected renderer: Renderer2;\n\n    constructor(\n        rendererFactory: RendererFactory2\n    ) {\n        this._events = new Subject<DropdownEvents>();\n        this.renderer = rendererFactory.createRenderer(null, null);\n        this.unlisteners = [];\n        this.unlisteners.push(this.renderer.listen(document, \"keydown\", this.dataApiKeydownHandler));\n        this.unlisteners.push(this.renderer.listen(document, \"click\", this.clearMenus));\n        this.unlisteners.push(this.renderer.listen(document, \"keyup\", this.clearMenus));\n        this.unlisteners.push(this.renderer.listen(document, \"click\", this.toggle));\n        this.unlisteners.push(this.renderer.listen(document, \"click\", this.formChildClick));\n    }\n\n    ngOnDestroy() {\n        this._events.complete();\n        this.unlisteners.forEach((unlistener) => unlistener());\n    }\n\n    get events(): Observable<DropdownEvents> {\n        return this._events;\n    }\n\n    private matchDescendant(base: Element, event: Event, selector: string): HTMLElement | null {\n        let element: HTMLElement | null = event.target as HTMLElement;\n        while (element && element !== base) {\n            if (element.matches(selector)) {\n                return element;\n            }\n            element = element.parentElement;\n        }\n        return null;\n    }\n\n    private getSelectorFromElement(element: HTMLElement) {\n        let selector = element.getAttribute('data-target');\n\n        if (!selector || selector === '#') {\n            const hrefAttr = element.getAttribute('href');\n            selector = hrefAttr && hrefAttr !== '#' ? hrefAttr.trim() : '';\n        }\n\n        try {\n            return document.querySelector(selector) ? selector : null;\n        }\n        catch (err) {\n            return null;\n        }\n    }\n\n    getParentFromElement(element: HTMLElement): Node | null {\n        let parent: HTMLElement | null = null;\n        const selector = this.getSelectorFromElement(element);\n\n        if (selector) {\n            parent = document.querySelector(selector);\n        }\n        if (!parent) {\n            // Account for scroll menus and sub menus\n            parent = element.parentElement;\n            while (parent &&\n                (parent.classList.contains(\"sq-scroll-menu\") ||\n                parent.classList.contains(\"sq-scroll-menu-item\") ||\n                parent.classList.contains(\"dropdown-submenu\"))) {\n                parent = parent.parentElement;\n            }\n        }\n        return parent;\n    }\n\n    private dataApiKeydownHandler = (event: KeyboardEvent): boolean | void => {\n        const descendant = this.matchDescendant(document.documentElement, event, `${gSelector.DATA_TOGGLE},${gSelector.MENU}`);\n        if (!descendant) {\n            return;\n        }\n        // If not input/textarea:\n        //  - And not a key in REGEXP_KEYDOWN => not a dropdown command\n        // If input/textarea:\n        //  - If space key => not a dropdown command\n        //  - If key is other than escape\n        //    - If key is not up or down => not a dropdown command\n        //    - If trigger inside the menu => not a dropdown command\n        if (/input|textarea/i.test((event.target as Element).tagName) ?\n            event.which === Keys.space || event.which !== Keys.esc &&\n            (event.which !== Keys.down && event.which !== Keys.up || (event.target as Element).closest(gSelector.MENU)) :\n            !(event.which === Keys.up || event.which === Keys.down || event.which === Keys.esc)) {\n            return;\n        }\n\n        event.preventDefault();\n        event.stopPropagation();\n\n        if (/*TODO descendant.disabled || */descendant.classList.contains(gClassName.DISABLED)) {\n            return;\n        }\n\n        const parent = this.getParentFromElement(descendant);\n        const isActive = parent instanceof HTMLElement && parent.classList.contains(gClassName.SHOW);\n\n        if (!isActive && event.which === Keys.esc) {\n            return;\n        }\n\n        if (!isActive || isActive && (event.which === Keys.esc || event.which === Keys.space)) {\n            if (event.which === Keys.esc) {\n                const toggle = parent instanceof Element && parent.querySelector(gSelector.DATA_TOGGLE);\n                if (toggle instanceof HTMLElement) {\n                    // toggle.dispatchEvent(new Event(\"focus\", {bubbles: true}));\n                    // NB $(toggle).trigger('focus') will set the focus on toggle\n                    toggle.focus();\n                }\n            }\n\n            descendant.dispatchEvent(new Event(\"click\", {bubbles: true}));\n            return;\n        }\n\n        let items: HTMLElement[] = [];\n        if (parent instanceof Element) {\n            items = items.slice.call(parent.querySelectorAll(gSelector.VISIBLE_ITEMS))\n                .filter((item: Element) => item instanceof HTMLElement && (item.offsetWidth > 0 || item.offsetHeight > 0));\n        }\n\n        if (items.length === 0) {\n            return;\n        }\n\n        let index = items.indexOf(event.target as HTMLElement);\n\n        if (event.which === Keys.up && index > 0) { // Up\n            index--;\n        }\n\n        if (event.which === Keys.down && index < items.length - 1) { // Down\n            index++;\n        }\n\n        if (index < 0) {\n            index = 0;\n        }\n\n        items[index].focus();\n    }\n\n    private clearMenus = (event: KeyboardEvent | MouseEvent): boolean | void => {\n        if (event && (event.which === 3 /*RIGHT_MOUSE_BUTTON_WHICH*/ ||\n            event.type === 'keyup' && event.which !== Keys.tab)) {\n            return;\n        }\n        this._events.next({type: \"clear\", sourceEvent: event});\n    }\n\n    private toggle = (event: UIEvent): boolean | void => {\n        const descendant = this.matchDescendant(document.documentElement, event, gSelector.DATA_TOGGLE);\n        if (!descendant) {\n            return;\n        }\n        event.preventDefault();\n        event.stopPropagation();\n        this._events.next({type: \"toggle\", element: descendant});\n    }\n\n    private formChildClick = (event: UIEvent): boolean | void => {\n        if (!this.matchDescendant(document.documentElement, event, gSelector.FORM_CHILD)) {\n            return;\n        }\n        event.stopPropagation();\n    }\n\n    raiseClear() {\n        this._events.next({type: \"clear\", sourceEvent: undefined});\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { UserSettingsWebService } from '@sinequa/core/web-services';\n\n/**\n * The role of this service is to bundle together the simple preferences of\n * the user and synchronise them with the user settings.\n *\n * Usage:\n * this.userPreferences.get(\"foo\")\n * this.userPreferences.set(\"foo\", \"bar\")\n * this.userPreferences.sync()\n */\n@Injectable({\n    providedIn: \"root\"\n})\nexport class UserPreferences {\n\n    constructor(\n        private userSettingsService: UserSettingsWebService\n    ) {\n    }\n\n    private get prefs(): any {\n        if(!this.userSettingsService.userSettings)\n            this.userSettingsService.userSettings = {};\n        if(!this.userSettingsService.userSettings[\"prefs\"])\n            this.userSettingsService.userSettings[\"prefs\"] = {};\n        return this.userSettingsService.userSettings[\"prefs\"];\n    }\n\n    /**\n     * Returns the value of a property\n     * @param property the name of this property\n     */\n    public get(property: string) {\n        return this.prefs[property.toLowerCase()];\n    }\n\n    /**\n     * Sets the value of a property\n     * @param property the name of this property\n     * @param value the value\n     * @param skipSync whether we should skyp syncing (to update multiple properties for example)\n     */\n    public set(property: string, value: any, skipSync?: boolean) {\n        this.prefs[property.toLowerCase()] = value;\n        if(!skipSync){\n            this.sync();\n        }\n    }\n\n    /**\n     * Deletes a given property from the preferences\n     * @param property the name of this property\n     * @param skipSync whether we should skyp syncing (to update multiple properties for example)\n     */\n    public delete(property: string, skipSync?: boolean) {\n        if(Object.prototype.hasOwnProperty.call(this.prefs, property.toLowerCase())) {\n            this.prefs[property.toLowerCase()] = null;\n            if(!skipSync){\n                this.sync();\n            }\n        }\n    }\n\n    /**\n     * Synchronizes the user preferences with the server\n     */\n    public sync(){\n        this.userSettingsService.patch({prefs: this.prefs});\n    }\n\n}","import {Component, Input, Output, OnChanges, SimpleChanges, EventEmitter} from \"@angular/core\";\nimport {Record} from \"@sinequa/core/web-services\";\nimport {AppService} from \"@sinequa/core/app-utils\";\nimport {SearchService} from \"@sinequa/components/search\";\n\n@Component({\n    selector: \"sq-result-thumbnail\",\n    templateUrl: \"./result-thumbnail.html\"\n})\nexport class ResultThumbnail implements OnChanges {\n    @Input() record: Record;\n    @Input() linkBehavior: \"open\" | \"action\" = \"open\";\n    @Input() thumbnailColumn: string;\n    @Input() defaultThumbnail: string = \"\";\n    @Output() thumbnailClicked = new EventEmitter<boolean>();\n    thumbnailUrl: string;\n    private documentUrl: string;\n\n    constructor(\n        private appService: AppService,\n        private searchService: SearchService) {\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (!!changes[\"record\"]) {\n            this.documentUrl = this.record.url1;\n            if (!!this.thumbnailColumn) {\n                this.thumbnailUrl = this.record[this.thumbnailColumn];\n            }\n            if (!this.thumbnailUrl && !!this.record.thumbnailUrl) {\n                this.thumbnailUrl = this.record.thumbnailUrl;\n            }\n            if (!this.thumbnailUrl && !!this.defaultThumbnail) {\n                this.thumbnailUrl = this.defaultThumbnail;\n            }\n            this.thumbnailUrl = this.appService.updateUrlForCors(this.thumbnailUrl);\n        }\n    }\n\n    get hasLinkBehaviour(): boolean {\n        return this.linkBehavior === \"open\";\n    }\n\n    public get href(): string {\n        return (this.hasLinkBehaviour && this.documentUrl) || \"#\";\n    }\n\n    public get target(): string {\n        return (this.hasLinkBehaviour && this.documentUrl) ? \"_blank\" : \"_self\";\n    }\n\n    public click() : boolean {\n        const isLink = this.hasLinkBehaviour && !!this.documentUrl; // true if this is a regular link (performs the default action)\n        if(isLink)\n            this.searchService.notifyOpenOriginalDocument(this.record);\n        this.thumbnailClicked.emit(isLink); // Can be use to trigger actions\n        return isLink;\n    }\n}","<a *ngIf=\"thumbnailUrl\" href=\"{{href}}\" target=\"{{target}}\" (click)=\"click()\">\n    <img src=\"{{thumbnailUrl}}\">\n</a>","import {Utils} from \"@sinequa/core/base\";\nimport {enLogin, frLogin, deLogin} from \"@sinequa/core/login\";\n\nconst enCore = Utils.merge({}, enLogin);\nconst frCore = Utils.merge({}, frLogin);\nconst deCore = Utils.merge({}, deLogin);\n\nexport { enCore, frCore, deCore };\n","export default {\n    \"heatmap\": {\n        \"name\": \"Heatmap\",\n        \"nodata\": \"No data to display\",\n        \"maxX\": \"Max items on X axis\",\n        \"maxY\": \"Max items on Y axis\",\n        \"rescale\": \"Re-scale axes\",\n        \"colors\": \"Color scheme\",\n        \"blue\": \"Blue\",\n        \"red\": \"Red\",\n        \"green\": \"Green\",\n        \"diverging\": \"Diverging\",\n        \"spectral\": \"Spectral\",\n        \"cool\": \"Cool\",\n        \"defaults\": \"Defaults\",\n        \"showing\": \"Showing {shown, number} of {total, number} tiles\",\n        \"tooltip\": \"{count, plural, one {# item} other {# items}}\"\n    },\n};\n","export * from \"./alerts.module\";\nexport * from \"./alerts-menu/alerts-menu.component\";\nexport * from \"./edit-alert/edit-alert\";\nexport * from \"./manage-alerts/manage-alerts\";","import {NgModule, ModuleWithProviders} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\n\nimport {Ng5SliderModule} from \"ng5-slider\";\n\nimport {IntlModule} from \"@sinequa/core/intl\";\n\nimport {UtilsModule} from \"@sinequa/components/utils\";\nimport {CollapseModule} from \"@sinequa/components/collapse\";\nimport {BsActionModule} from \"@sinequa/components/action\";   // needed for sq-action-button\nimport {BsSearchModule} from \"@sinequa/components/search\";   // needed for refine facet / didyoumean\nimport {BsAutocompleteModule} from \"@sinequa/components/autocomplete\";  // needed for refine facet\n\nimport {FacetState, ALL_FACETS, DEFAULT_FACETS} from \"../facet.service\";\nimport {BsRefine} from \"./facet-refine/facet-refine\";\nimport {BsFacetBar} from \"./facet-bar/facet-bar\";\nimport {BsMySearch} from \"./facet-mysearch/facet-mysearch\";\nimport {BsFacetRange} from \"./facet-range/facet-range\";\nimport {BsFacetCard} from \"./facet-card/facet-card\";\nimport {BsFacetList} from \"./facet-list/facet-list\";\nimport {BsFacetTree} from \"./facet-tree/facet-tree\";\nimport {BsFacetFilters} from \"./facet-filters/facet-filters\";\nimport {BsFacetMultiComponent} from \"./facet-multi/facet-multi.component\";\nimport { BsFacetTagCloud } from './facet-tag-cloud/facet-tag-cloud';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n\n        IntlModule,\n\n        UtilsModule,\n        CollapseModule,\n        BsActionModule,\n        BsSearchModule,\n        BsAutocompleteModule,\n\n        Ng5SliderModule\n    ],\n    declarations: [\n        BsFacetCard, BsFacetList, BsFacetTree,\n        BsFacetFilters,\n        BsRefine,\n        BsFacetRange, BsMySearch, BsFacetBar,\n        BsFacetMultiComponent,\n        BsFacetTagCloud\n    ],\n    exports: [\n        BsFacetCard, BsFacetList, BsFacetTree,\n        BsFacetFilters,\n        BsRefine,\n        BsFacetRange, BsMySearch, BsFacetBar,\n        BsFacetMultiComponent,\n        BsFacetTagCloud\n    ],\n})\nexport class BsFacetModule {\n    public static forRoot(allFacets: any[]|undefined = undefined, defaultFacets: FacetState[]|undefined = undefined): ModuleWithProviders<BsFacetModule> {\n        return {\n            ngModule: BsFacetModule,\n            providers: [\n                {\n                    provide: ALL_FACETS,\n                    useValue: allFacets\n                },\n                {\n                    provide: DEFAULT_FACETS,\n                    useValue: defaultFacets\n                },\n            ]\n        };\n    }\n}\n","import {Component, Input, ChangeDetectionStrategy} from '@angular/core';\r\nimport {animate, style, transition, trigger} from '@angular/animations';\r\n\r\n@Component({\r\n  selector: 'sqx-tooltip',\r\n  styleUrls: ['./tooltip.component.css'],\r\n  template: `<div class=\"sq-tooltip\" @tooltip>{{ text }}</div>`,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [\r\n    trigger('tooltip', [\r\n      transition(':enter', [\r\n        style({opacity: 0}),\r\n        animate(300, style({opacity: 1})),\r\n      ]),\r\n      transition(':leave', [\r\n        animate(300, style({opacity: 0})),\r\n      ]),\r\n    ]),\r\n  ],\r\n})\r\nexport class TooltipComponent {\r\n\r\n  @Input() text = '';\r\n}","export default {\n\n    \"userMenu\": {\n        \"user\": \"User\",\n        \"login\": \"Login\",\n        \"overrideUser\": \"Override User\",\n        \"settings\": \"Settings\",\n        \"revertUserOverride\": \"Revert User Override\",\n        \"administration\": \"Administration\",\n        \"logout\": \"Logout\",\n\n        \"language\": \"Language\",\n        \n        \"resetUserSettings\": {\n            \"menu\": \"Reset user settings\",\n            \"modalTitle\": \"Reset user settings\",\n            \"modalMessage\": \"You are about to reset ALL your user data (recent queries, collections, alerts, preferences, etc.). Do you want to continue?\",\n            \"modalConfirmButton\": \"Confirm\",\n            \"successMessage\": \"Reset user settings succefully\",\n            \"errorMessage\": \"Reset user settings failed\"\n        }\n    },\n\n    \"editUserSettings\": {\n        \"title\": \"Settings\",\n        \"language\": \"UI Language\",\n        \"pageSize\": \"Number of results per page\",\n        \"email\": \"Email\"\n    }\n\n};\n","import {Injectable, Optional, Inject, OnDestroy, InjectionToken} from \"@angular/core\";\nimport {Subject, Observable, concat, of, throwError} from \"rxjs\";\nimport {map, last} from \"rxjs/operators\";\nimport IntlMessageFormat from \"intl-messageformat\";\nimport memoizeFormatConstructor from \"intl-format-cache\";\n// TODO - check loading of locale data per locale - the ponyfill doesn't seem to work\nimport \"@formatjs/intl-relativetimeformat/polyfill\";\nimport \"intl-pluralrules\";\nimport get from \"lodash/get\";\nimport {Utils, MapOf, JsonObject} from \"@sinequa/core/base\";\n// We support loading d3 bundled and unbundled as it is typically easier\n// for others to integrate bundled examples but some 3rd party libs (eg swimlane/charts)\n// load d3 unbundled.\nimport {FormatLocaleDefinition, formatDefaultLocale} from \"d3-format\";\nimport {TimeLocaleDefinition, timeFormatDefaultLocale} from \"d3-time-format\";\nimport * as d3 from \"d3\";\nimport moment from \"moment\";\n\n/**\n * @ignore\n */\nconst formatters = {\n    getMessageFormat: memoizeFormatConstructor(IntlMessageFormat),\n    getNumberFormat: memoizeFormatConstructor(Intl.NumberFormat),\n    getDateTimeFormat: memoizeFormatConstructor(Intl.DateTimeFormat),\n    getRelativeTimeFormat: memoizeFormatConstructor(Intl.RelativeTimeFormat),\n    getPluralRules: memoizeFormatConstructor(Intl.PluralRules)\n};\n\n/**\n * @ignore\n */\nconst DATE_TIME_FORMAT_OPTIONS = [\n    \"dateStyle\",\n    \"timeStyle\",\n    \"localeMatcher\",\n    \"timeZone\",\n    \"hour12\",\n    \"hourCycle\",\n    \"formatMatcher\",\n    \"weekday\",\n    \"era\",\n    \"year\",\n    \"month\",\n    \"day\",\n    \"hour\",\n    \"minute\",\n    \"second\",\n    \"timeZoneName\",\n];\n\n/**\n * @ignore\n */\nconst NUMBER_FORMAT_OPTIONS = [\n    \"localeMatcher\",\n    \"style\",\n    \"currency\",\n    \"currencyDisplay\",\n    \"useGrouping\",\n    \"minimumIntegerDigits\",\n    \"minimumFractionDigits\",\n    \"maximumFractionDigits\",\n    \"minimumSignificantDigits\",\n    \"maximumSignificantDigits\",\n];\n\n/**\n * @ignore\n */\nconst RELATIVE_TIME_FORMAT_OPTIONS = [\n    \"localeMatcher\",\n    \"numeric\",\n    \"style\"\n];\n\n/**\n * Describes event emitted by {@link IntlService} when the current locale changes\n */\nexport interface LocaleChangeEvent {\n    /**\n     * The name of the newly selected locale\n     */\n    locale: string;\n}\n\n/**\n * Describes the data that can be set in a Sinequa locale. Instances are normally\n * defined in application locale modules which can be included statically or loaded\n * dynamically\n */\nexport interface LocaleData {\n    /**\n     * Options pertaining to the `Intl` API\n     */\n    intl: {\n        locale: string\n    };\n    /**\n     * Options pertaining to the `Moment.js` library\n     */\n    moment?: { // default to built-in en-us, data is auto set by moment.defineLocale when the locale module is loaded\n        locale: string\n    };\n    /**\n     * Options pertaining to the `D3.js` library\n     */\n    d3?: {\n        locale: string,\n        format: FormatLocaleDefinition,\n        time: TimeLocaleDefinition\n    };\n    /**\n     * The messages (ICU Message syntax) for this locale\n     */\n    messages: JsonObject;\n}\n\n/**\n * Describes a Sinequa locale\n */\nexport interface Locale {\n    /**\n     * The name identifying the locale\n     */\n    name: string;\n    /**\n     * A display name for the locale\n     */\n    display: string;\n    /**\n     * The directionality of text in this locale (left-to-right or right-to-left)\n     */\n    direction?: \"ltr\" | \"rtl\";\n    /**\n     * The locale data for the locale\n     */\n    data?: LocaleData;\n}\n\n/**\n * @ignore\n */\ninterface NextLang {\n    start: number;\n    end: number;\n    lang1: number;\n    lang2: number;\n}\n\n\n// moment needs to be set globally to load moment locales successfully when the locales are bundled in the main rollup bundle\n// see: https://github.com/rollup/rollup/issues/641\nimport \"./import-moment\";\n\n/**\n * Describes the locales configuration object defined by an application and used by the {@link IntlService}\n */\nexport interface LocalesConfig {\n    /**\n     * The default locale\n     */\n    defaultLocale: Locale;\n    /**\n     * The set of locales supported by the application\n     */\n    locales?: Locale[];\n    /**\n     * An optional loader for the dynamic loading of locale data\n     * for locales that do not define the data statically\n     */\n    loadLocale?(locale: string): Observable<LocaleData>;\n}\n\n/**\n * An injection token used to initialize the [locales configuration]{@link LocalesConfig} of {@link IntlModule}\n */\nexport const LOCALES_CONFIG = new InjectionToken<LocalesConfig>('LOCALES_CONFIG');\n\n/**\n * Describes the object to specify custom ICU Message formats\n */\nexport interface IntlFormats {\n    /**\n     * Format options for dates\n     */\n    date?: MapOf<Intl.DateTimeFormatOptions>;\n    /**\n     * Format options for times\n     */\n    time?: MapOf<Intl.DateTimeFormatOptions>;\n    /**\n     * Format options for numbers\n     */\n    number?: MapOf<Intl.NumberFormatOptions>;\n    /**\n     * Format options for relative times\n     */\n    relativeTime?: MapOf<Intl.RelativeTimeFormatOptions>;\n}\n\n/**\n * Describes a general configuration object for the {@link IntlModule}\n */\nexport interface IntlConfig {\n    /**\n     * Custom formats for ICU Message processing\n     */\n    formats?: IntlFormats;\n}\n\n/**\n * An injection token used to initialize the [general configuration]{@link IntlConfig} of {@link IntlModule}\n */\nexport const INTL_CONFIG = new InjectionToken<IntlConfig>('INTL_CONFIG');\n\n/**\n * Default custom ICU Message formats\n */\nconst DEFAULT_FORMATS: IntlFormats = {\n    date: {\n        sqDateTime: {\n            day: \"2-digit\",\n            month: \"2-digit\",\n            year: \"numeric\",\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n            second: \"2-digit\"\n        },\n        sqDate: {\n            day: \"2-digit\",\n            month: \"2-digit\",\n            year: \"numeric\"\n        },\n        sqYear: {\n            year: \"numeric\"\n        },\n        sqMonthYear: {\n            month: \"short\",\n            year: \"numeric\"\n        }\n    },\n    time: {\n    },\n    number: {\n        sqWeek: {\n            minimumIntegerDigits: 2,\n            useGrouping: false\n        },\n        sqYear: {\n            useGrouping: false\n        },\n        sqNoGrouping: {\n            useGrouping: false\n        },\n        sqZeroDecimalPlaces: {\n            maximumFractionDigits: 0\n        },\n        sqOneDecimalPlace: {\n            maximumFractionDigits: 1\n        },\n        sqTwoDecimalPlaces: {\n            maximumFractionDigits: 2\n        },\n        sqThreeDecimalPlaces: {\n            maximumFractionDigits: 3\n        },\n        sqFourDecimalPlaces: {\n            maximumFractionDigits: 4\n        },\n        sqFiveDecimalPlaces: {\n            maximumFractionDigits: 5\n        }\n    }\n};\n\n/* eslint-disable jsdoc/check-alignment,jsdoc/check-indentation,jsdoc/newline-after-description */\n/**\n * This service provides methods for managing locales and for formatting dates, numbers and strings using\n * [ICU Message syntax]{@link https://formatjs.io/guides/message-syntax/}. [Messages]{@link LocaleData#messages} stored\n * in a locale's data are referenced using a key in the following form: `msg#<JSONPath>`. Given the following messages:\n``` json\n{\n    \"myComponent\": {\n        \"title\": \"Component: {name}\",\n        \"footer\": \"Created on {created, date, medium} by {author}\"\n    }\n}\n```\n * this key: `msg#myComponent.footer` references myComponent's footer message. The message itself uses\n * ICU Message syntax.\n *\n * This service registers a number of [default custom ICU formats]{@link DEFAULT_FORMATS}. These can be overridden or\n * extended by providing the [INTL_CONFIG]{@link INTL_CONFIG} injection token.\n */\n/* eslint-enable jsdoc/check-alignment, jsdoc/check-indentation, jsdoc/newline-after-description */\n@Injectable({\n    providedIn: \"root\"\n})\nexport class IntlService implements OnDestroy {\n    /**\n     * The prefix for ICU messages to be retrieved from [LocaleData.messages]{@link LocaleData#messages}\n     * by {@link formatMessage}\n     */\n    readonly messagePrefix = \"msg#\";\n    /**\n     * An alternative prefix for inline ICU messages processed by {@link formatMessage}\n     */\n    readonly textPrefix = \"txt#\";\n    /**\n     * The available locales\n     */\n    locales: Locale[];\n    /** The current locale */\n    currentLocale: Locale;\n    protected intlLocale: string;\n    /** The current direction */\n    direction: \"ltr\" | \"rtl\";\n    protected _events: Subject<LocaleChangeEvent>;\n    protected formats: IntlFormats;\n\n    constructor(\n        @Optional() @Inject(INTL_CONFIG) protected intlConfig: IntlConfig,\n        @Optional() @Inject(LOCALES_CONFIG) protected localesConfig: LocalesConfig\n    ) {\n        if (!this.intlConfig) {\n            this.intlConfig = {};\n        }\n        if (!localesConfig) {\n            if (!localesConfig) {\n                console.error(\"LOCALES_CONFIG has not been provided by the calling app. \" +\n                    \"Please import IntlModule using the forRoot method to which you should pass a LocalesConfig object\");\n            }\n        }\n        this._events = new Subject<LocaleChangeEvent>();\n        this.locales = localesConfig.locales || [localesConfig.defaultLocale];\n    }\n\n    private static getLanguage(name: string) {\n        const sepPos = name.indexOf(\"-\");\n        if (sepPos === -1) {\n            return name;\n        }\n        return name.substring(0, sepPos);\n    }\n\n    private static getBrowserLanguages(): string[] {\n        if ((navigator as any).languages) {\n            return (navigator as any).languages;\n        }\n        const language = navigator.language || (navigator as any).userLanguage ||\n            (navigator as any).browserLanguage || (navigator as any).systemLanguage;\n        return !!language ? [language] : [];\n    }\n\n    ngOnDestroy() {\n        this._events.complete();\n    }\n\n    /**\n     * The observable events emitted by this service\n     */\n    get events(): Observable<LocaleChangeEvent> {\n        return this._events;\n    }\n\n    private getInitialLocale(): Locale {\n        const language = window.localStorage.getItem(\"sinequa-locale\");\n        const languages = !!language ? [language] : IntlService.getBrowserLanguages();\n        let locale = this.getLocale(languages);\n        if (locale) {\n            return locale;\n        }\n        locale = this.getLocale(languages, true);\n        if (locale) {\n            return locale;\n        }\n        return this.localesConfig.defaultLocale;\n    }\n\n    /**\n     * Initialize the service. The current locale is initialized to either the `sinequa-locale` local\n     * storage value, the browser language or the default locale.\n     *\n     * This method is called automatically by the {@link IntlModule} at application startup.\n     *\n     * @return An observable of the current locale\n     */\n    init(): Observable<string> {\n        // Set up formats\n        this.formats = Utils.merge(DEFAULT_FORMATS, this.intlConfig.formats);\n        // Load default locale\n        let observable = this.use(this.localesConfig.defaultLocale.name, false);\n        const initialLocale = this.getInitialLocale();\n        if (initialLocale !== this.localesConfig.defaultLocale) {\n            // Load initial locale if different to default\n            console.log(\"Setting initial locale: \", initialLocale.name);\n            observable = concat<string>(observable, this.use(initialLocale.name, false)).pipe(last<string>());\n        }\n        Utils.subscribe(observable,\n            (value) => {\n                console.log(\"Initial locale set: \", value);\n            });\n        return observable;\n    }\n\n    private loadData(locale: string): Observable<LocaleData> {\n        if (!this.localesConfig.loadLocale) {\n            return throwError(\"Dynamic locale loading has not been implemented in the calling app - \"  +\n                \"please add a loadLocale handler to your LocalesConfig\");\n        }\n        return this.localesConfig.loadLocale(locale);\n    }\n\n    private getLocale(names: string | string[], approximate = false): Locale | undefined {\n        if (typeof names === \"string\") {\n            names = [names];\n        }\n        for (const name of names) {\n            const locale = this.locales.find((locale1) => {\n                if (locale1.name === name) {\n                    return true;\n                }\n                if (approximate && IntlService.getLanguage(locale1.name) === IntlService.getLanguage(name)) {\n                    return true;\n                }\n                return false;\n            });\n            if (locale) {\n                return locale;\n            }\n        }\n        return undefined;\n    }\n\n    /**\n     * Change the current locale. The change is made asynchronously as the locale may need to be\n     * downloaded. The current locale is optionally stored in local storage (`sinequa-locale`)\n     * to be picked up the next time the service is initialized\n     *\n     * @param locale The name of the locale to use\n     * @param store If `true` the current locale is stored in local storage\n     */\n    use(locale: string, store = true): Observable<string> {\n        const newLocale = this.getLocale(locale);\n        if (!newLocale) {\n            return throwError({error: \"unsupported locale\"});\n        }\n\n        const observable = !!newLocale.data ? of(newLocale.data) : this.loadData(locale);\n        Utils.subscribe<LocaleData>(observable,\n            (data) => {\n                this.currentLocale = newLocale;\n\n                if (store) {\n                    window.localStorage.setItem(\"sinequa-locale\", this.currentLocale.name);\n                }\n\n                this.direction = this.currentLocale.direction || \"ltr\";\n\n                if (!this.currentLocale.data) {\n                    this.currentLocale.data = data;\n                }\n\n                // Set moment locale\n                if (this.currentLocale.data.moment) {\n                    // Set (and define if necessary) moment locale (it auto-defines when we are not bundled)\n                    if (moment.locale(this.currentLocale.data.moment.locale) !== this.currentLocale.data.moment.locale) {\n                        console.log(`moment locale not defined: ${this.currentLocale.data.moment.locale} - defaulting to en`);\n                        moment.locale(\"en\");\n                    }\n                }\n                else {\n                    moment.locale(\"en\");\n                }\n\n                // Set d3 locale\n                if (this.currentLocale.data.d3) {\n                    formatDefaultLocale(this.currentLocale.data.d3.format);\n                    timeFormatDefaultLocale(this.currentLocale.data.d3.time);\n                    d3.formatDefaultLocale(this.currentLocale.data.d3.format);\n                    d3.timeFormatDefaultLocale(this.currentLocale.data.d3.time);\n                }\n\n                if (this.currentLocale.data.intl && this.currentLocale.data.intl.locale) {\n                    this.intlLocale = this.currentLocale.data.intl.locale;\n                }\n                else {\n                    this.intlLocale = this.localesConfig.defaultLocale.data ? this.localesConfig.defaultLocale.data.intl.locale : \"en\";\n                }\n                return of(this.intlLocale);\n            });\n\n        const observable2 = observable.pipe(map((value) => {\n            return this.currentLocale.name;\n        }));\n\n        Utils.subscribe(observable2,\n            (name) => {\n                this._events.next({locale: name});\n            });\n\n        return observable2;\n    }\n\n    private getDefaultMessages(): any {\n        const _default = this.locales.find((value) => !!value.data && !!value.data.messages);\n        if (_default) {\n            return _default.data && _default.data.messages;\n        }\n        return {};\n    }\n\n    private getMessages(): any {\n        let messages;\n        if (this.currentLocale && this.currentLocale.data) {\n            messages = this.currentLocale.data.messages;\n        }\n        if (!messages) {\n            messages = this.getDefaultMessages();\n        }\n        return messages;\n    }\n\n    /**\n     * Get the message from the current locale that corresponds to the passed `key`.\n     * If the is not prefixed by {@link messagePrefix} then `null` is returned\n     *\n     * @param key The message key\n     */\n    getMessage(key: string): string | undefined {\n        if (!Utils.startsWith(key, this.messagePrefix)) {\n            return undefined;\n        }\n        key = key.substr(this.messagePrefix.length);\n        const messages = this.getMessages();\n        let message = get(messages, key);\n        if (!message) {\n            const defaultMessages = this.getDefaultMessages();\n            if (messages !== defaultMessages) {\n                message = get(defaultMessages, key);\n            }\n        }\n        return message;\n    }\n\n    // Returned start and end are for the text BEFORE the language specifier and so refer to the previous\n    // language not the one returned by the same call to this method\n    private nextLang(text: string, start: number, allowNone: boolean): NextLang | undefined {\n        for (let i = start, ic = text.length - 3; i < ic; i++) {\n            if (text[i] === \"[\" && text[i + 3] === \"]\") {\n                return {\n                    start,\n                    end: i,\n                    lang1: text.charCodeAt(i + 1),\n                    lang2: text.charCodeAt(i + 2)\n                };\n            }\n        }\n        if (allowNone) {\n            return {\n                start,\n                end: text.length,\n                lang1: -1,\n                lang2: -1\n            };\n        }\n        return undefined;\n    }\n\n    // ([nnn])<default>[fr]<french>[de]<german>...\n    private sysLang(text: string): string {\n        if (!text) {\n            return text;\n        }\n        let iStart = 0;\n        const len = text.length;\n        // Skip order\n        let i = 0;\n        if (text[i] === \"[\") {\n            while (i < len && text[i] >= \"0\" && text[i] <= \"9\") {\n                i++;\n            }\n            if (text[i] === \"]\") {\n                iStart = i + 1;\n            }\n        }\n        // Pick out default value\n        const defaultLang = this.nextLang(text, iStart, false);\n        if (!defaultLang) {\n            return text; // Not a sys lang formatted text\n        }\n        // Look for a matching language\n        const lang1 = this.currentLocale.name.charCodeAt(0);\n        const lang2 = this.currentLocale.name.charCodeAt(1);\n        let curLang: NextLang | undefined = defaultLang;\n        while (curLang) {\n            if (lang1 === curLang.lang1 && lang2 === curLang.lang2) {\n                // We have a matching language, get its text\n                const nextLang = this.nextLang(text, curLang.end + 4, true);\n                return text.substring(nextLang!.start, nextLang!.end);\n            }\n            else {\n                curLang = this.nextLang(text, curLang.end + 4, false);\n            }\n        }\n        // return default language text\n        return text.substring(defaultLang.start, defaultLang.end);\n    }\n\n    private processFormatMessage(message: string, values = {}): string {\n        const hasValues = Object.keys(values).length > 0;\n        if (!hasValues) {\n            return message;\n        }\n        if (message) {\n            try {\n                const formatter = formatters.getMessageFormat(message, this.intlLocale, this.formats, {formatters});\n                const formattedMessage = formatter.format(values);\n                return formattedMessage;\n            }\n            catch (e) {\n                console.log(\"IntlService.processFormatMessage error:\", e);\n                return message;\n            }\n        }\n        else {\n            return message;\n        }\n    }\n\n    /**\n     * Format a message identified by a `key`. Any values referenced\n     * by the message are taken from an optional `values` map. The key can be\n     * in a variety of forms:\n     * * a Sinequa \"syslang\" string: `apple[fr]pomme[de]Apfel`\n     * * a message key resolved in the [messages]{@link LocaleData#messages} of the current\n     * locale:  `msg#path1.path2.path3`\n     * * an ICU message using the `txt#` prefix: `txt#Hello {name}`\n     *\n     * @param key The message identifier\n     * @param values Values referenced by an ICU message\n     * @return The formatted message. If the key is not resolved then it is returned unprocessed\n     */\n    formatMessage(key: string, values?: MapOf<any>): string {\n        key = Utils.trim(key);\n        const sysLangStr = this.sysLang(key);\n        if (sysLangStr !== key) {\n            return sysLangStr;\n        }\n        const _values = {};\n        if (values) {\n            for (const valueName of Object.keys(values)) {\n                const value = values[valueName];\n                if (value && Utils.isString(value)) {\n                    _values[valueName] = this.formatMessage(value);\n                }\n                else {\n                    _values[valueName] = value;\n                }\n            }\n        }\n        if (Utils.startsWith(key, this.messagePrefix)) {\n            if (Utils.eq(key, this.messagePrefix)) {\n                return key;\n            }\n            let message = this.getMessage(key);\n            if (!Utils.isString(message)) {\n                message = key;\n            }\n            const formattedMessage = this.processFormatMessage(message, _values);\n            return formattedMessage;\n        }\n        else if (Utils.startsWith(key, this.textPrefix)) {\n            if (Utils.eq(key, this.textPrefix)) {\n                return key;\n            }\n            key = key.substr(this.textPrefix.length);\n            const formattedMessage = this.processFormatMessage(key, _values);\n            return formattedMessage;\n        }\n        else {\n            return key;\n        }\n    }\n\n    /**\n     * Format an ICU Message string\n     *\n     * @param text An ICU Message to format\n     * @param values Values referenced by an ICU message\n     */\n    formatText(text: string, values?: {}): string {\n        const formattedMessage = this.processFormatMessage(text, values);\n        return formattedMessage;\n    }\n\n    /**\n     * Parse a date string in the current locale - eg `04/09/1986`\n     *\n     * @param value A date string\n     * @returns The parse `Date` or `undefined` if the date cannot be parsed\n     */\n    parseDate(value: string): Date | undefined {\n        const m = moment(value, \"L\");\n        if (m.isValid()) {\n            return m.toDate();\n        }\n        return undefined;\n    }\n\n    private getNamedFormat(type: string, name: string): Intl.DateTimeFormatOptions | Intl.NumberFormatOptions | undefined {\n        const format = this.formats && this.formats[type] && this.formats[type][name];\n        if (format) {\n            return format;\n        }\n        console.warn(`IntlService.getNamedFormat - not found - type: ${type}, name: ${name}`);\n        return undefined;\n    }\n\n    private filterProps(props: {[k: string]: any}, whitelist: string[], defaults: {[k: string]: any} = {}): any {\n        return whitelist.reduce<{[k: string]: string}>((filtered, name) => {\n            if (props.hasOwnProperty(name)) {\n                filtered[name] = props[name];\n            }\n            else if (defaults.hasOwnProperty(name)) {\n                filtered[name] = defaults[name];\n            }\n            return filtered;\n        }, {});\n    }\n\n    /**\n     * Format a date in the current locale according to the passed options. If the passed `value` is not a `Date`\n     * then one is constructed from it.\n     *\n     * @param value The date to format\n     * @param options The options can include a custom format\n     */\n    formatDate(value: string | number | Date, options: Intl.DateTimeFormatOptions & { format?: string } = {}): string {\n        const {format} = options;\n        const date = value instanceof Date ? value : new Date(value);\n        const defaults = (format && this.getNamedFormat(\"date\", format)) || {};\n        const filteredOptions = this.filterProps(options, DATE_TIME_FORMAT_OPTIONS, defaults);\n        try {\n            return formatters.getDateTimeFormat(this.intlLocale, filteredOptions).format(date);\n        }\n        catch (e) {\n            console.warn(\"IntlService.formatDate:\", e);\n        }\n        return String(date);\n    }\n\n    /**\n     * Format a time in the current locale according to the passed options. If the passed `value` is not a `Date` then one is\n     * constructed from it.\n     *\n     * @param value The date to format\n     * @param options The options can include a custom format\n     */\n    formatTime(value: string | number | Date, options: Intl.DateTimeFormatOptions & { format?: string } = {}): string {\n        const {format} = options;\n        const date = value instanceof Date ? value : new Date(value);\n        const defaults = (format && this.getNamedFormat(\"time\", format)) || {};\n        let filteredOptions = this.filterProps(options, DATE_TIME_FORMAT_OPTIONS, defaults);\n        if (!filteredOptions.hour && !filteredOptions.minute && !filteredOptions.second) {\n            // Add default formatting options if hour, minute, or second isn't defined.\n            filteredOptions = Object.assign({},\n                filteredOptions,\n                {\n                    hour: 'numeric',\n                    minute: 'numeric'\n                });\n        }\n        try {\n            return formatters.getDateTimeFormat(this.intlLocale, filteredOptions).format(date);\n        }\n        catch (e) {\n            console.warn(\"IntlService.formatTime:\", e);\n        }\n        return String(date);\n    }\n\n    private makeRelativeTimeParams(value: Date): { value: number, unit: Intl.RelativeTimeUnit } {\n        const diff = value.getTime() - Utils.now.getTime();\n        const absDiff = Math.abs(diff);\n        if (absDiff < Utils.oneSecond) {\n            return { value: 0, unit: \"seconds\" };\n        }\n        else if (absDiff < Utils.oneMinute) {\n            return { value: Utils.roundAway(diff / Utils.oneSecond), unit: \"seconds\" };\n        }\n        else if (absDiff < Utils.oneHour) {\n            return { value: Utils.roundAway(diff / Utils.oneMinute), unit: \"minutes\" };\n        }\n        else if (absDiff < Utils.oneDay) {\n            return { value: Utils.roundAway(diff / Utils.oneHour), unit: \"hours\" };\n        }\n        else if (absDiff < (Utils.oneDay * 30)) {\n            return { value: Utils.roundAway(diff / Utils.oneDay), unit: \"days\" };\n        }\n        else if (absDiff < (Utils.oneDay * 365)) {\n            return { value: Utils.roundAway(diff / (Utils.oneDay * 30)), unit: \"months\" };\n        }\n        else {\n            return { value: Utils.roundAway(diff / (Utils.oneDay * 365)), unit: \"years\" };\n        }\n    }\n\n    /**\n     * Format a relative time in the current locale according to the passed options\n     *\n     * @param value The relative time to format. Negative number values represent times in the past.\n     * If a Date value is passed then a number value and unit are deduced automatically based on\n     * the current date and time.\n     * @param unit The relative time unit (eg years, days or seconds). Must be passed if value\n     * is a number.\n     * @param options The options can include a custom format\n     */\n    formatRelativeTime(\n        value: string | number | Date | undefined, unit?: Intl.RelativeTimeUnit,\n        options: Intl.RelativeTimeFormatOptions & { format?: string } = {}\n    ): string {\n        if (value === undefined) {\n            return \"\";\n        }\n        if (Utils.isString(value)) {\n            value = new Date(value);\n        }\n        if (Utils.isDate(value)) {\n            const params =  this.makeRelativeTimeParams(value);\n            value = params.value;\n            unit = params.unit;\n        }\n        const { format } = options;\n        const defaults = (format && this.getNamedFormat(\"relativeTime\", format)) || {};\n        const filteredOptions = this.filterProps(options, RELATIVE_TIME_FORMAT_OPTIONS, defaults);\n        if (!filteredOptions.numeric) {\n            filteredOptions.numeric = \"auto\"; // default is always - we prefer auto\n        }\n        try {\n            return formatters.getRelativeTimeFormat(this.intlLocale, filteredOptions).format(value, unit);\n        }\n        catch (e) {\n            console.warn(\"IntlService.formatRelativeTime:\", e);\n        }\n        return String(value);\n    }\n\n    /**\n     * Format a number in the current locale\n     *\n     * @param value The number to format\n     * @param options The options can include a custom format\n     */\n    formatNumber(value: any, options: Intl.NumberFormatOptions & { format?: any } = {}): string {\n        const {format} = options;\n        const defaults = format && this.getNamedFormat(\"number\", format);\n        const filteredOptions = this.filterProps(options, NUMBER_FORMAT_OPTIONS, defaults);\n        try {\n          return formatters.getNumberFormat(this.intlLocale, filteredOptions).format(value);\n        }\n        catch (e) {\n            console.warn(\"IntlService.formatNumber:\", e);\n        }\n        return String(value);\n    }\n}\n","export * from \"./public-api\";","import {Pipe, ChangeDetectorRef} from \"@angular/core\";\nimport {AbstractIntlPipe, IntlService} from \"@sinequa/core/intl\";\nimport {Expr, ExprMessageOptions} from \"@sinequa/core/app-utils\";\nimport {Utils} from \"@sinequa/core/base\";\n\n@Pipe({name: \"sqExpr\", pure: false})\nexport class ExprPipe extends AbstractIntlPipe {\n    constructor(\n        intlService: IntlService,\n        changeDetectorRef: ChangeDetectorRef) {\n        super(intlService, changeDetectorRef);\n    }\n\n    updateValue(key: Expr | string, params: ExprMessageOptions): void {\n        super.updateValue(key, params);\n        if (key instanceof Expr) {\n            const message = key.toMessage(params);\n            this.value = this.intlService.formatMessage(message.message, message.values);\n        }\n        else {\n            this.value = this.intlService.formatMessage(key);\n            if (params && params.asHTML) {\n                this.value = Utils.encodeHTML(this.value);\n            }\n        }\n    }\n}","import {Injectable, Inject} from \"@angular/core\";\nimport {Observable} from \"rxjs\";\nimport {SqHttpClient} from \"./http-client\";\nimport {HttpService} from \"./http.service\";\nimport {AuditEvents} from \"./audit.web.service\";\nimport {START_CONFIG, StartConfig} from \"./start-config.web.service\";\nimport {CCApp} from \"./config/ccapp\";\n\n/**\n * Defines the object returned by a call to [AppWebService.refresh]{@link AppWebService#refresh}. If the upToDate\n * member is false then the app member contains the latest version of the app configuration\n */\nexport interface CCAppRefresh {\n    upToDate: boolean;\n    app?: CCApp;\n}\n\n/**\n * This service provides methods to retrieve and refresh the configuration of an app\n */\n@Injectable({\n    providedIn: \"root\"\n})\nexport class AppWebService extends HttpService {\n    /**\n     * Constructor\n     *\n     * @param startConfig Provides the app name\n     * @param httpClient The HTTP client\n     */\n    constructor(\n        @Inject(START_CONFIG) startConfig: StartConfig,\n        private httpClient: SqHttpClient) {\n        super(startConfig);\n\n        if (!this.appName) {\n            console.error(\"Missing app name!\");\n        }\n    }\n\n    /**\n     * Gets the app configuration for the app name\n     *\n     * @returns An observable of the app configuration\n     */\n    get(): Observable<CCApp> {\n        const observable = this.httpClient.get<CCApp>(this.makeUrl(\"app\"), {\n            params: this.makeParams({\n                app: this.appName || \"\"\n            })\n        });\n        observable\n            .subscribe(\n                (response) => {\n                //console.log(\"appWebService.get success - data: \", response);\n                    return response;\n                },\n                (error) => {\n                    //console.log(\"appWebService.get failure - reason: \", error);\n                });\n        return observable;\n    }\n\n    /**\n     * Refreshes the app configuration based on a version identifier\n     *\n     * @param appVersionId The current app version id [CCApp.versionId]{@link CCApp#versionId}\n     * @param auditEvents Audit events to be recorded for this call\n     *\n     * @returns An observable of an object containing a flag indicating whether the configuration was up to date. If false\n     * then the app member of the object will be set to the new version of the configuration.\n     */\n    refresh(appVersionId: string, auditEvents?: AuditEvents): Observable<CCAppRefresh> {\n        const observable = this.httpClient.get<{upToDate: boolean, app: CCApp}>(this.makeUrl(\"app\"), {\n            params: this.makeParams({\n                app: this.appName || \"\",\n                versionId: appVersionId,\n                $auditRecord: auditEvents\n            })\n        });\n        observable\n            .subscribe(\n                (response) => {\n                    //console.log(\"appWebService.refresh success - data: \", response);\n                    return response;\n                },\n                (error) => {\n                    //console.log(\"appWebService.refresh failure - reason: \", error);\n                });\n        return observable;\n    }\n}","import {Component, Input, OnChanges, SimpleChanges, ChangeDetectorRef, ChangeDetectionStrategy, OnInit, OnDestroy} from \"@angular/core\";\nimport {Results, Aggregation, AggregationItem} from \"@sinequa/core/web-services\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {FacetService} from \"../../facet.service\";\nimport {Action} from \"@sinequa/components/action\";\nimport {AbstractFacet} from \"../../abstract-facet\";\nimport {BehaviorSubject, Observable, of, Subscription} from 'rxjs';\nimport {catchError, debounceTime, distinctUntilChanged, map, switchMap} from 'rxjs/operators';\nimport {FormControl, FormGroup} from '@angular/forms';\n\n@Component({\n    selector: \"sq-facet-list\",\n    templateUrl: \"./facet-list.html\",\n    styleUrls: [\"./facet-list.scss\"],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BsFacetList extends AbstractFacet implements OnChanges, OnInit, OnDestroy {\n    @Input() name: string; // If ommited, the aggregation name is used\n    @Input() results: Results;\n    @Input() aggregation: string;\n    @Input() showCount: boolean = true; // Show the number of occurrences\n    @Input() searchable: boolean = true; // Allow to search for items in the facet\n    @Input() allowExclude: boolean = true; // Allow to exclude selected items\n    @Input() allowOr: boolean = true; // Allow to search various items in OR mode\n    @Input() allowAnd: boolean = true; // Allow to search various items in AND mode\n    @Input() displayEmptyDistributionIntervals: boolean = false; // If the aggregration is a distribution, then this property controls whether empty distribution intervals will be displayed\n    @Input() displayActions = false;\n    @Input() showProgressBar = false;    // Allow to display item count as progress bar\n\n    // Aggregation from the Results object\n    data$ = new BehaviorSubject<Aggregation | undefined>(undefined)\n    items$ = new BehaviorSubject<AggregationItem[]>([]);\n    data = () => this.data$.getValue();\n    subscriptions: Subscription[] = [];\n\n    filtering: boolean = false;\n\n    // Search\n    myGroup: FormGroup;\n    searchQuery: FormControl; // ngModel for textarea\n    suggestDelay = 200;\n    noResults = false;\n    searchActive = false;\n    suggestions$: BehaviorSubject<AggregationItem[]> = new BehaviorSubject<AggregationItem[]>([]);\n    \n    /** Sum of all items count value */\n    sumOfCount: number;\n\n    /** List of selected items */\n    selected: AggregationItem[] = [];\n\n    /** Selected items that are not visible in the current aggregation (or suggestions in search mode) */\n    hiddenSelected: AggregationItem[] = [];\n    \n    /** List of excluded/filtered items */\n    filtered: AggregationItem[] = [];\n\n\n    // Loading more data\n    private skip = 0;\n    /** num of items currently displayed in the facet */\n    private count = 0;\n    /** Does facet has more items to display ? */\n    loadingMore = false;\n\n    // Actions (displayed in facet menu)\n    // All actions are built in the constructor\n    private readonly filterItemsOr: Action;\n    private readonly filterItemsAnd: Action;\n    private readonly excludeItems: Action;\n    private readonly clearFilters: Action;\n    public readonly searchItems: Action;\n\n    constructor(\n        private facetService: FacetService,\n        private changeDetectorRef: ChangeDetectorRef) {\n        super();\n\n        this.myGroup = new FormGroup({\n            searchQuery: new FormControl()\n        });\n\n        this.searchQuery = this.myGroup.get(\"searchQuery\") as FormControl;\n        this.subscriptions[\"suggest\"] = this.suggest$(this.searchQuery.valueChanges)\n            .subscribe(values => {\n                this.suggestions$.next(values);\n                // Refresh hiddenSelected list when the list of items is updated\n                this.refreshHiddenSelected();\n                this.searchActive = false;\n                this.changeDetectorRef.markForCheck();\n            });\n\n        // Keep documents with ANY of the selected items\n        this.filterItemsOr = new Action({\n            icon: \"fas fa-filter\",\n            title: \"msg#facet.filterItems\",\n            action: () => {\n                if (this.data()) {\n                    this.facetService.addFilterSearch(this.getName(), this.data() as Aggregation, this.selected);\n                }\n            }\n        });\n\n        // Keep documents with ALL the selected items\n        this.filterItemsAnd = new Action({\n            icon: \"fas fa-bullseye\",\n            title: \"msg#facet.filterItemsAnd\",\n            action: () => {\n                if (this.data()) {\n                    this.facetService.addFilterSearch(this.getName(), this.data() as Aggregation, this.selected, {and: true});\n                }\n            }\n        });\n\n        // Exclude document with selected items\n        this.excludeItems = new Action({\n            icon: \"fas fa-times\",\n            title: \"msg#facet.excludeItems\",\n            action: () => {\n                if (this.data()) {\n                    this.facetService.addFilterSearch(this.getName(), this.data() as Aggregation, this.selected, {not: true});\n                }\n            }\n        });\n\n        // Clear the current filters\n        this.clearFilters = new Action({\n            icon: \"far fa-minus-square\",\n            title: \"msg#facet.clearSelects\",\n            action: () => {\n                this.facetService.clearFiltersSearch(this.getName(), true);\n            }\n        });\n\n        // Search for a value in this list\n        this.searchItems = new Action({\n            icon: \"fas fa-search\",\n            title: \"msg#facet.searchItems\",\n            action: (item, event) => {\n                item.selected = !item.selected;\n                if(!item.selected){\n                    this.clearSearch();\n                }\n                event.stopPropagation();\n                this.changeDetectorRef.markForCheck();\n            }\n        });\n    }\n\n    clearSearch() {\n        this.searchQuery.setValue(\"\"); // Remove suggestions if some remain\n        this.noResults = false;\n        this.suggestions$.next([]);\n    }\n\n    /**\n     * Name of the facet, used to create and retrieve selections\n     * through the facet service.\n     */\n    getName() : string {\n        return this.name || this.aggregation;\n    }\n\n    /**\n     * OnChanges listener awaits new results from the search service\n     * This completely resets the display\n     * @param changes\n     */\n    ngOnChanges(changes: SimpleChanges) {\n        if (this.showCount === undefined) this.showCount = true;\n        if (this.searchable === undefined) this.searchable = true;\n        if (this.allowExclude === undefined) this.allowExclude = true;\n        if (this.allowOr === undefined) this.allowOr = true;\n        if (this.allowAnd === undefined) this.allowAnd = true;\n\n        if (!!changes[\"results\"]) {     // New data from the search service\n            if(!this.count){\n                this.count = this.facetService.getAggregationCount(this.aggregation);\n            }\n            this.filtered.length = 0;\n            this.selected.length = 0;\n            this.hiddenSelected.length = 0;\n            this.skip = 0;\n            this.searchItems.selected = false;\n            this.clearSearch();\n            this.data$.next(this.facetService.getAggregation(this.aggregation, this.results));\n        }\n    }\n\n    ngOnInit() {\n        this.subscriptions[\"data\"] = this.data$.pipe(\n            map(data => {\n                const nonFilteredItems = this.refreshFiltered(data);\n\n                return !data?.isDistribution || this.displayEmptyDistributionIntervals?\n                    nonFilteredItems : nonFilteredItems.filter(item => item.count > 0);\n            }),\n        ).subscribe(items => {\n            this.sumOfCount = items.length > 0 ? items.map(item => item.count).reduce((acc, value) => acc += value) / 100 : 0;\n            this.items$.next(items);\n            // Refresh hiddenSelected list when the list of items is updated\n            this.refreshHiddenSelected();\n        });\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.forEach(subscription => subscription.unsubscribe());\n    }\n\n    /**\n     * Returns all the actions that are relevant in the current context\n     */\n    get actions(): Action[] {\n\n        const actions: Action[] = [];\n\n        if (this.selected.length > 0) {\n            if(this.allowOr){\n                actions.push(this.filterItemsOr);\n            }\n            if(this.allowAnd && this.selected.length > 1){\n                actions.push(this.filterItemsAnd);\n            }\n            if(this.allowExclude){\n                actions.push(this.excludeItems);\n            }\n        }\n\n        if(!this.hasSuggestions() && this.hasFiltered()) {\n            actions.push(this.clearFilters);\n        }\n\n        if(this.searchable){\n            actions.push(this.searchItems);\n        }\n\n        return actions;\n    }\n\n\n    // Filtered items\n\n    /**\n     * Actualize the state of filtered items (note that excluded terms are not in the distribution, so the equivalent cannot be done)\n     */\n    refreshFiltered(data: Aggregation | undefined): AggregationItem[] {\n        // refresh filters from breadcrumbs\n        const items = this.facetService.getAggregationItemsFiltered(this.getName(), data?.valuesAreExpressions);\n        items.forEach(item => {\n            if (!this.isFiltered(data, item)) {\n                this.filtered.push(item);\n            }\n        });\n\n        const nonFilteredItems: AggregationItem[] = [];\n        data?.items?.forEach(item => {\n            const indx = this.facetService.filteredIndex(data, this.filtered, item);\n            if (this.facetService.itemFiltered(this.getName(), data, item)) {\n                if (!this.isFiltered(data, item)) {\n                    this.filtered.push(item);\n                } else {\n                    this.filtered[indx].count = item.count;\n                }\n            } else {\n                // sometime facetService.itemFiltered() could returns false but item is present in breadcrumbs\n                if (indx !== -1) {\n                    this.filtered[indx].count = item.count;\n                } else {\n                    nonFilteredItems.push(item);\n                }\n            }\n        });\n        return nonFilteredItems;\n    }\n\n    refreshHiddenSelected() {\n        this.hiddenSelected = this.selected.filter(item => {\n            const idx = this.hasSuggestions()\n                ? this.facetService.findAggregationItemIndex(this.suggestions$.getValue(), item)\n                : this.facetService.findAggregationItemIndex(this.items$.getValue() || [], item);\n            return idx === -1;\n        });\n    }\n\n    /**\n     * Returns true if the given AggregationItem is filtered\n     * @param item\n     */\n    isFiltered(data: Aggregation | undefined, item: AggregationItem): boolean {\n        return this.facetService.filteredIndex(data, this.filtered, item) !== -1;\n    }\n\n    /**\n     * Returns true if there is an active selection (or exclusion) from this facet\n     */\n    hasFiltered(): boolean {\n        return this.facetService.hasFiltered(this.getName());\n    }\n\n    /**\n     * Called when clicking on a facet item text\n     * @param item\n     * @param event\n     */\n    filterItem(item: AggregationItem, event) {\n        const data = this.data();\n        if (data) {\n            this.filtering = true;\n            if (!this.isFiltered(data, item)) {\n                this.facetService.addFilterSearch(this.getName(), data, item);\n            }\n            else {\n                this.facetService.removeFilterSearch(this.getName(), data, item);\n            }\n        }\n        event.preventDefault();\n    }\n\n\n    // Selected items\n\n    /**\n     * Returns true if the given AggregationItem is selected\n     * @param item\n     */\n    isSelected(item: AggregationItem) : boolean {\n        return this.facetService.findAggregationItemIndex(this.selected, item) !== -1;\n    }\n\n\n    /**\n     * Called when selecting/unselecting an item in the facet\n     * @param item\n     */\n    selectItem(item: AggregationItem, e: Event) {\n        e.preventDefault();\n        if(!this.filtering) {\n            this.updateSelected(item);\n            e.stopPropagation();\n        }\n        this.filtering = false;\n    }\n\n    private updateSelected(item: AggregationItem) {\n        if (!this.isFiltered(this.data(), item)) {\n            const index = this.facetService.findAggregationItemIndex(this.selected, item);\n            if (index === -1) {\n                this.selected.push(item);\n            } else {\n                this.selected.splice(index, 1);\n            }\n            this.refreshHiddenSelected();\n        }\n    }\n\n\n    // Loading more items\n\n    /**\n     * Returns true if this facet can get more data from the server\n     * (The only way to guess is to check if the facet is \"full\", it capacity being the (skip+)count)\n     */\n    get hasMore(): boolean {\n        return this.resultsLength >= this.skip + this.count;\n    }\n\n    get resultsLength() {\n        return this.items$.getValue().length + this.filtered.length\n    }\n\n    /**\n     * Called on loadMore button click\n     */\n    loadMore(e: Event) {\n        e.stopPropagation();\n        if (this.data()) {\n            const skip = this.resultsLength;    // avoid hasMore() to return false when fetching data\n            this.loadingMore = true;\n            this.changeDetectorRef.markForCheck();\n\n            Utils.subscribe(this.facetService.loadData(this.aggregation, skip, this.count),\n                agg => {\n                    this.skip = skip;\n                    if (agg?.items && this.data()) {\n                        agg.items = this.items$.getValue().concat(agg.items);\n                        this.data$.next(agg);\n                    }\n                },\n                undefined,\n                () => {\n                    this.loadingMore = false;\n                    this.changeDetectorRef.markForCheck();\n                });\n        }\n        return false; // Avoids following href\n    }\n\n\n    // Suggest / Search\n\n    /**\n     * Returns true if the search mode is active (ie. there are suggestions to display in place of the aggregation)\n     */\n    hasSuggestions(): boolean {\n        return this.suggestions$.getValue().length > 0 || this.noResults;\n    }\n\n    /**\n     * Called on NgModel change (searchQuery)\n     * Uses the suggestfield API to retrieve suggestions from the server\n     * The suggestions \"override\" the data from the distribution (until search results are cleared)\n     */\n    suggest$ = (text$: Observable<string>) => text$.pipe(\n        debounceTime(this.suggestDelay),\n        distinctUntilChanged(),\n        switchMap(term => {\n            if (term.trim() === \"\") {\n                this.noResults = false;\n                return of([]);\n            }\n            this.searchActive = true;\n            this.changeDetectorRef.markForCheck();\n            return this.facetService.suggest(term, this.data()?.column || '').pipe(\n                catchError(err => {\n                    console.log(err);\n                    this.noResults = false;\n                    return of([]);\n                }),\n                map(items => {\n                    const suggestions = items.slice(0, this.count)\n                        .map(item => this.facetService.suggestionToAggregationItem(item))\n                        .filter(item => !this.isFiltered(this.data(), item));\n\n                    this.noResults = suggestions.length === 0 && term.trim() !== \"\";\n                    return suggestions;\n                })\n            )\n        })\n    )\n\n    /* AbstractFacet abstract methods */\n    isHidden(): boolean {\n        return !this.data();\n    }\n    \n    /**\n     * Convert facet item count to percentage width\n     * @param count item count\n     * @returns a % string representation\n     */\n    getPercent(count: number): string {\n        return `${100 - (count / this.sumOfCount)}%`;\n    }\n}\n","<div *ngIf=\"!isHidden()\" class=\"list-group list-group-flush\">\n    <div *ngIf=\"displayActions && actions\" class=\"d-flex pb-2 pr-2\">\n        <div class=\"btn-group ml-auto\"\n            [sq-action-buttons]=\"{items: actions, size: 'sm'}\">\n        </div>\n    </div>\n\n    <div *ngIf=\"searchItems.selected\" class=\"position-relative\" [formGroup]=\"myGroup\">\n        <div class=\"p-1\">\n            <input class=\"form-control\" sqAutofocus\n                formControlName=\"searchQuery\"\n                [placeholder]=\"'msg#facet.searchPlaceholder' | sqMessage\">\n        </div>\n        <sq-loading-bar [active]=\"searchActive\"></sq-loading-bar>\n    </div>\n\n    <!-- filtered items -->\n    <div  *ngFor=\"let item of filtered\"\n        class=\"d-flex flex-row align-items-center list-group-item list-group-item-action list-group-item-success text-truncate border-0 px-3 py-1 facet-row cursor-pointer\"\n        [ngClass]=\"{'list-group-item-success': !item.$excluded, 'list-group-item-secondary': item.$excluded}\"\n        [title]=\"'msg#facet.selectedValue' | sqMessage\"\n        (click)=\"filterItem(item, $event)\">\n\n        <a href=\"#\" class=\"text-truncate mr-auto\">{{item | sqValue:item.$column}}</a>\n\n        <span *ngIf=\"showCount && item.count\" class=\"ml-2 text-muted small\">{{item.count | sqNumber}}</span>\n        <span class=\"fa-stack cursor-pointer\">\n            <i class=\"ml-2 far fa-minus-square fa-stack-1x icons icon-hover rotate\"></i>\n            <i class=\"ml-2 far fa-check-square fa-stack-1x icons icon-default rotate\"></i>\n        </span>\n\n    </div>\n\n    <!-- hidden selected items -->\n    <div  *ngFor=\"let item of hiddenSelected\"\n        class=\"d-flex flex-row align-items-center list-group-item list-group-item-primary text-truncate border-0 px-3 py-1 facet-row cursor-pointer\"\n        [title]=\"'msg#facet.itemUnselect' | sqMessage\"\n        (click)=\"selectItem(item, $event)\">\n\n        <a  href=\"#\" (click)=\"filterItem(item, $event)\"\n            [title]=\"'msg#facet.filterItem' | sqMessage:{'terme':(item | sqValue:item.$column)}\"\n            class=\"text-truncate mr-auto\">{{item | sqValue:item.$column}}</a>\n        \n        <span *ngIf=\"showCount && item.count\" class=\"ml-2 text-muted small\">{{item.count | sqNumber}}</span>\n    </div>\n\n    <!--- suggestions items -->\n    <div *ngFor=\"let suggest of suggestions$ | async\"\n        class=\"d-flex flex-row align-items-center list-group-item list-group-item-action text-truncate border-0 px-3 py-1 facet-row cursor-pointer\"\n        [ngClass]=\"{'list-group-item-primary': isSelected(suggest)}\"\n        (click)=\"selectItem(suggest, $event)\">\n        \n        <a  href=\"#\" (click)=\"filterItem(suggest, $event)\"\n            role=\"button\" \n            title=\"{{ 'msg#facet.filterItem' | sqMessage:{'terme':(suggest | sqValue:suggest.$column)} }}\"\n            class=\"text-truncate mr-auto\">{{suggest | sqValue:suggest.$column}}</a>                \n\n        <span *ngIf=\"showCount && suggest.count\" class=\"ml-2 text-muted small\" style=\"z-index: 1;\">{{suggest.count | sqNumber}}</span>\n    \n    </div>\n    <span *ngIf=\"noResults\" class=\"d-block text-center text-muted small py-1\"><i>{{'msg#facet.searchNoResult' | sqMessage}}</i></span>\n\n    <div *ngIf=\"!hasSuggestions()\" class=\"facet-results-scrollable\">\n        <!--- aggregation items without filtered -->\n        <div *ngFor=\"let item of items$ | async\"\n            class=\"position-relative list-group-item list-group-item-action border-0 px-3 py-1 facet-row cursor-pointer\"\n            [ngClass]=\"{ 'list-group-item-primary': isSelected(item) }\"\n            [title]=\"(isSelected(item) ? 'msg#facet.itemUnselect' : 'msg#facet.itemSelect') | sqMessage\"\n            (click)=\"selectItem(item, $event)\">\n\n            <div *ngIf=\"showProgressBar && resultsLength > 1\" class=\"position-absolute progress-bar progress-color\" [style.--count]=\"getPercent(item.count)\"></div>\n            <div class=\"d-flex justify-content-between align-items-baseline\">\n                <a  href=\"#\" (click)=\"filterItem(item, $event)\" style=\"z-index: 1;\"\n                    [title]=\"'msg#facet.filterItem' | sqMessage:{'terme':(item | sqValue:item.$column)}\"\n                    class=\"text-truncate mr-auto\">{{item | sqValue:item.$column}}</a>\n\n                <span *ngIf=\"showCount && item.count\" class=\"ml-2 text-muted small\" style=\"z-index: 1;\">{{item.count | sqNumber}}</span>\n            </div>\n        </div>\n\n        <a *ngIf=\"hasMore\" class=\"d-block border-0 px-3 py-1 text-center\" (click)=\"loadMore($event)\" href=\"#\">\n            <span *ngIf=\"loadingMore\" class=\"fas fa-sync fa-fw fa-spin\"></span>\n            <small *ngIf=\"!loadingMore\">{{'msg#facet.loadMore' | sqMessage}}</small>\n        </a>\n    </div>\n\n</div>","import {Injectable, Inject} from \"@angular/core\";\nimport {START_CONFIG, StartConfig, SqHttpClient, HttpService} from \"@sinequa/core/web-services\";\nimport {Observable} from \"rxjs\";\nimport {map} from \"rxjs/operators\";\nimport {Credentials} from \"./authentication.service\";\n\n/**\n * A service to retrieve a JWT (JSON Web Token) from the Sinequa server.\n */\n@Injectable({\n    providedIn: \"root\"\n})\nexport class JWTService extends HttpService {\n\n    constructor(\n        @Inject(START_CONFIG) startConfig: StartConfig,\n        private httpClient: SqHttpClient) {\n        super(startConfig);\n    }\n\n    /**\n     * Get a JWT from the Sinequa server using the passed credentials. The JWT is received in a cookie\n     * and the associated CSRF token in the response payload.\n     *\n     * @param credentials The credentials to be used for the JWT. These are sent in clear text\n     */\n    getToken(credentials: Credentials): Observable<string> {\n        const observable = this.httpClient.post<{csrfToken: string}>(this.makeUrl(\"webToken\"),\n            {\n                action: \"get\",\n                user: credentials.userName,\n                password: credentials.password,\n                tokenInCookie: true,\n            },\n            {\n                params: this.makeParams({\n                    noUserOverride: true,\n                    noAutoAuthentication: true\n                })\n            });\n        return observable.pipe(\n            map((value) => {\n                return value.csrfToken;\n            }));\n    }\n}\n","import {Type} from \"@angular/core\";\nimport {OverlayRef} from '@angular/cdk/overlay';\nimport {Subject, Observable, of} from \"rxjs\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {ModalResult} from \"./modal.service\";\n\n/**\n * Describes the event raised by an {@link IModalRef} instance before a modal dialog is closed.\n */\nexport interface CheckCloseEvent {\n    /**\n     * The result passed to the [IModalRef.close]{@link IModalRef#close} method.\n     */\n    result: ModalResult;\n    /**\n     * A flag that can be set by the event receiver to indicate that the closing of the modal dialog\n     * should be cancelled.\n     */\n    cancelled?: Observable<boolean>;\n}\n\n/**\n * Describes the object returned by the [ModalService.openRef]{@link ModalService.openRef} method\n * to maintain a reference to the opened modal.\n */\nexport interface IModalRef {\n    /**\n     * The component instance of the referenced modal component.\n     */\n    componentInstance: Type<any> | undefined;\n    /**\n     * A stream that emits before the referenced modal is closed to allow an observer\n     * to cancel the closing.\n     */\n    checkClose(): Observable<CheckCloseEvent>;\n    /**\n     * A stream that emits before the referenced modal is closed.\n     */\n    beforeClosed(): Observable<ModalResult>;\n    /**\n     * A stream that emits after the referenced modal is closed.\n     */\n    afterClosed(): Observable<ModalResult>;\n    /**\n     * Close the referenced modal with the passed `result`.\n     * @param result The referenced modal's result.\n     */\n    close(result: ModalResult);\n}\n\n/**\n * An implementation of the {@link IModalRef} interface.\n */\nexport class ModalRef implements IModalRef {\n    /**\n     * The component instance of the referenced modal component.\n     */\n    componentInstance: Type<any> | undefined;\n    /**\n     * A flag indicating whether the referenced modal has been submitted.\n     */\n    submitted: boolean;\n    private _checkClose = new Subject<CheckCloseEvent>();\n    private _beforeClosed = new Subject<ModalResult>();\n    private _afterClosed = new Subject<ModalResult>();\n    private formElement: HTMLFormElement | undefined;\n\n    constructor(private overlayRef: OverlayRef) {\n    }\n\n    /**\n     * A stream that emits before the referenced modal is closed to allow an observer\n     * to cancel the closing.\n     */\n    checkClose(): Observable<CheckCloseEvent> {\n        return this._checkClose.asObservable();\n    }\n\n    /**\n     * A stream that emits before the referenced modal is closed.\n     */\n    beforeClosed(): Observable<ModalResult> {\n        return this._beforeClosed.asObservable();\n    }\n\n    /**\n     * A stream that emits aftervthe referenced modal is closed.\n     */\n    afterClosed(): Observable<ModalResult> {\n        return this._afterClosed.asObservable();\n    }\n\n    /**\n     * Close the referenced modal with the passed `result`.\n     * @param result The referenced modal's result.\n     */\n    close(result = ModalResult.Cancel) {\n        // Delay to allow submit handling\n        Utils.delay().then(() => {\n            const checkCloseEvent: CheckCloseEvent = { result };\n            this._checkClose.next(checkCloseEvent);\n            (checkCloseEvent.cancelled || of(false)).subscribe(\n                (cancelled) => {\n                    if (!cancelled) {\n                        this._checkClose.complete();\n                        this._beforeClosed.next(result);\n                        this._beforeClosed.complete();\n                        this.removeSubmitListener();\n                        this.overlayRef.detachBackdrop();\n                        this.overlayRef.dispose();\n                        this.componentInstance = undefined;\n                        this._afterClosed.next(result);\n                        this._afterClosed.complete();\n                    }\n                }\n            );\n        });\n    }\n\n    private submitListener = (event) => {\n        this.submitted = true;\n        event.preventDefault();\n        return false;\n    }\n\n    /**\n     * Disable the standard browser submit handling on any HTML form in the modal component.\n     */\n    disableSubmit() {\n        if (!this.formElement) {\n            const formElement = this.overlayRef.overlayElement.querySelector(\"form\");\n            if (formElement) {\n                this.formElement = formElement;\n                this.formElement.addEventListener(\"submit\", this.submitListener);\n            }\n        }\n    }\n\n    private removeSubmitListener() {\n        if (this.formElement) {\n            this.formElement.removeEventListener(\"submit\", this.submitListener);\n            this.formElement = undefined;\n        }\n    }\n}\n","import { Component, Input, Output, EventEmitter, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { HighlightValue, PreviewData, CCColumn } from '@sinequa/core/web-services';\nimport { PreviewDocument } from '../../preview-document';\nimport { AbstractFacet } from '@sinequa/components/facet';\nimport { Action } from '@sinequa/components/action';\nimport { AppService } from '@sinequa/core/app-utils';\n\n@Component({\n  selector: 'sq-preview-entity-facet',\n  templateUrl: './preview-entity-facet.component.html',\n  styleUrls: ['./preview-entity-facet.component.scss']\n})\nexport class BsPreviewEntityFacetComponent extends AbstractFacet implements OnInit, OnChanges {\n  @Input() entity: string;  // Required from init\n  @Input() data: HighlightValue[];  // Required from init\n  @Input() previewData: PreviewData;  // Required from init and does not change (facet is rebuilt if it does)\n  @Input() previewDocument: PreviewDocument;  // May be null at the start\n  @Input() startUnchecked: boolean;\n  @Output() itemsChecked = new EventEmitter<boolean>();\n\n  count: number = 10;\n  sortFreq: boolean = true;\n  hidden = new Map<string, boolean>();\n  nav = new Map<string, number>();\n  column: CCColumn | undefined;\n\n  checkAction: Action;\n  sortFreqAction: Action;\n  sortAlphaAction: Action;\n\n  constructor(\n    private appService:AppService\n  ) {\n    super();\n\n    this.checkAction = new Action({\n      icon: \"far fa-check-square\",\n      title: \"msg#preview.highlightFilters.keepNone\",\n      action: this.unselectAll,\n      updater: (action: Action) => {\n        let foundHidden = false;\n        let foundNotHidden = false;\n        this.data.forEach(value => {\n          foundHidden = foundHidden || this.hidden.get(value.value) || false;\n          foundNotHidden = foundNotHidden || !this.hidden.get(value.value);\n        });\n        if(!foundHidden){ // All items selected\n          action.action = this.unselectAll;\n          action.icon = \"far fa-check-square\";\n          action.title = \"msg#preview.highlightFilters.keepNone\";\n        }\n        else if(!foundNotHidden){ // All items unselected\n          action.action = this.selectAll;\n          action.icon = \"far fa-square\";\n          action.title = \"msg#preview.highlightFilters.keepAll\";\n        }\n        else { // Some items selected\n          action.action = this.selectAll;\n          action.icon = \"far fa-check-square\";\n          action.title = \"msg#preview.highlightFilters.keepAll\";\n        }\n      }\n    });\n    this.sortAlphaAction = new Action({\n      icon: \"fas fa-sort-alpha-down\",\n      title: \"msg#preview.sortAlphabetically\",\n      action: () => {\n        this.sortFreq = false;\n      }\n    });\n    this.sortFreqAction = new Action({\n      icon: \"fas fa-sort-amount-down\",\n      title: \"msg#preview.sortFrequency\",\n      action: () => {\n        this.sortFreq = true;\n      }\n    });\n  }\n\n  get actions(): Action[]{\n    const actions: Action[] = [];\n    if(this.previewDocument){\n      actions.push(this.checkAction);\n    }\n    actions.push(this.sortFreq? this.sortAlphaAction : this.sortFreqAction);\n    return actions;\n  }\n\n  /**\n   * Uncheck items if needed\n   */\n  ngOnInit(){\n    if(this.startUnchecked){\n      this.unselectAll();\n      this.checkAction.update();\n    }\n    this.column = this.appService.getColumn(this.entity);\n  }\n\n  /**\n   * Since the preview document comes after the preview data, we need to wait for that change\n   * and apply the hidden state in the document.\n   * @param changes\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if(changes[\"previewDocument\"]){\n      if(this.previewDocument){\n        this.data.forEach(val => {\n          if(this.hidden.get(val.value)){\n            this.previewDocument.toggleHighlight(this.entity, false, val.value);\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * Returns the entities to be displayed in the facet, performing truncation and sorting of the input list\n   */\n  get entityValues(): HighlightValue[] {\n    return this.data.sort((a,b) => {\n      const d = b.locations.length - a.locations.length;\n      return this.sortFreq && d !== 0?  d : a.displayValue.localeCompare(b.displayValue);\n    }).slice(0, this.count);\n  }\n\n  /**\n   * Returns the number of occurrences of a given value.\n   * If the user used the facet to navigate, the format is \"i / count\"\n   * @param value\n   */\n  entityCount(value: HighlightValue): string {\n    let count = value.locations.length + \"\";\n    const navValue = this.nav.get(value.value);\n    if(navValue !== undefined){\n      count = (navValue+1) + \" / \" + count;\n    }\n    return count;\n  }\n\n  /**\n   * Return whether the entity is hidden (unchecked) or not\n   * @param value\n   */\n  entityHidden(value: HighlightValue): boolean {\n    return !!this.hidden.get(value.value);\n  }\n\n  /**\n   * Shows all the entities in the list\n   */\n  showAll(){\n    this.count = this.data.length;\n    return false;\n  }\n\n  /**\n   * Toggles the hidden (checked/unchecked) state of a value in the list.\n   * Modifies the provided preview document.\n   * @param value\n   */\n  toggleEntity(value: HighlightValue){\n    this.hidden.set(value.value, !this.hidden.get(value.value));\n    if(this.previewDocument){\n      this.previewDocument.toggleHighlight(this.entity, !this.hidden.get(value.value), value.value);\n    }\n    this.checkAction.update();\n  }\n\n  /**\n   * Unselect all entities (set hidden)\n   */\n  unselectAll = (action?: Action) => {\n    if(this.previewDocument){\n      this.previewDocument.toggleHighlight(this.entity, false);\n    }\n    this.data.forEach((value)=> {\n      this.hidden.set(value.value, true);\n    });\n    if(action){\n      action.update();\n      this.itemsChecked.next(false);\n    }\n  }\n\n  /**\n   * Select all entities (unset hidden)\n   */\n  selectAll = (action: Action) => {\n    if(this.previewDocument){\n      this.previewDocument.toggleHighlight(this.entity, true);\n    }\n    this.data.forEach((value)=> {\n      this.hidden.set(value.value, false);\n    });\n    if(action){\n      action.update();\n      this.itemsChecked.next(true);\n    }\n  }\n\n  /**\n   * Navigate to the next value of this entity.\n   * Modifies the provided preview document.\n   * @param value\n   */\n  nextEntity(value: HighlightValue){\n    let navValue = this.nav.get(value.value);\n    if(navValue === undefined){\n      navValue = 0;\n      this.nav.set(value.value, navValue);\n    }\n    else if(navValue < value.locations.length-1){\n      navValue++;\n      this.nav.set(value.value, navValue);\n    }\n    this.selectEntity(this.entity, value.value, navValue);\n  }\n\n  /**\n   * Navigate to the next value of this entity.\n   * Modifies the provided preview document.\n   * @param value\n   */\n  prevEntity(value: HighlightValue){\n    let navValue = this.nav.get(value.value);\n    if(navValue === undefined){\n      navValue = 0;\n      this.nav.set(value.value, navValue);\n    }\n    else if(navValue > 0){\n      navValue--;\n      this.nav.set(value.value, navValue);\n    }\n    this.selectEntity(this.entity, value.value, navValue);\n  }\n\n  /**\n   * Navigate to the given occurrence of an entity in a specific category\n   * Modifies the provided preview document.\n   * @param category\n   * @param value\n   * @param i\n   */\n  selectEntity(category: string, value: string, i: number){\n    const indexes = this.getEntityIndexes(category, value);\n    this.previewDocument.selectHighlight(category, indexes[i]);\n  }\n\n  /**\n   * Helper function to find the indexes of all occurrences of a entity value in the document\n   * @param category\n   * @param value\n   */\n  private getEntityIndexes(category: string, value: string) {\n    const indexes: number[] = [];\n    for (let i = 0; i < this.previewData.highlightsPerLocation['length']; i++) {\n      const highlight = this.previewData.highlightsPerLocation[i];\n      const categories = Object.keys(highlight.positionInCategories);\n      for (const currentCategory of categories) {\n        if (currentCategory === category) {\n          for (const highlightValue of highlight.values) {\n            if (highlightValue === value) {\n              indexes.push(highlight.positionInCategories[category]);\n            }\n          }\n        }\n      }\n    }\n    return indexes;\n  }\n}\n","<div class=\"list-group list-group-flush entity-facet\">\n    <div class=\"list-group-item align-items-center border-0 py-1 px-3 d-flex\" *ngFor=\"let value of entityValues\">\n        <span class=\"text-muted px-1 cursor-pointer\" (click)=\"toggleEntity(value)\">\n            <i class=\"far\" [ngClass]=\"{'fa-check-square': !entityHidden(value), 'fa-square': entityHidden(value)}\"></i>\n        </span>\n        <span class=\"mr-auto mx-1\">{{ value.displayValue | sqValue:column }}</span>\n        <span class=\"text-muted small mx-1\">{{ entityCount(value) }}</span>\n        <span *ngIf=\"previewDocument\" class=\"text-muted px-1 cursor-pointer\" (click)=\"prevEntity(value)\" title=\"{{ 'msg#preview.previousHighlightButtonAltText' | sqMessage }}\"><i class=\"fas fa-chevron-left\"></i></span>\n        <span *ngIf=\"previewDocument\" class=\"text-muted px-1 cursor-pointer\" (click)=\"nextEntity(value)\" title=\"{{ 'msg#preview.nextHighlightButtonAltText' | sqMessage }}\"><i class=\"fas fa-chevron-right\"></i></span>\n    </div>\n    <div class=\"list-group-item border-0 py-1 text-center\" *ngIf=\"data.length > count\">\n        <a class=\"text-muted small\" href=\"#\" (click)=\"showAll()\" title=\"{{ 'msg#preview.showAll' | sqMessage }}\">{{ 'msg#preview.showAll' | sqMessage }}</a>\n    </div>\n</div>\n","  import {Component, ElementRef, ViewChild, Input, OnDestroy, AfterViewInit} from '@angular/core';\r\n  import {SearchService} from '../../search.service';\r\n\r\n  @Component({\r\n    selector: 'sq-scroller',\r\n    template: `<div #anchor style=\"height:5px\"></div>`\r\n  })\r\n  export class BsScroller implements AfterViewInit, OnDestroy {\r\n  @Input() options = {};\r\n  @ViewChild('anchor') anchor: ElementRef<HTMLElement>;\r\n\r\n  private observer: IntersectionObserver;\r\n\r\n  constructor(private searchService: SearchService) {}\r\n\r\n  ngAfterViewInit() {\r\n    const options = {\r\n      root: null,\r\n      ...this.options\r\n    };\r\n\r\n    this.observer = new IntersectionObserver(([entry]) => {\r\n      if(entry.isIntersecting) {\r\n        this.searchService.loadMore();\r\n      }\r\n    }, options);\r\n\r\n    this.observer.observe(this.anchor.nativeElement);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.observer.disconnect();\r\n  }\r\n\r\n}","import {Utils} from \"@sinequa/core/base\";\nimport {enIntl, frIntl, deIntl} from \"@sinequa/core/intl\";\nimport {enModal, frModal, deModal} from \"@sinequa/core/modal\";\nimport {enValidation, frValidation, deValidation} from \"@sinequa/core/validation\";\nimport _enLogin from \"./en\";\nimport _frLogin from \"./fr\";\nimport _deLogin from \"./de\";\n\nconst enLogin = Utils.merge({}, _enLogin, enIntl, enModal, enValidation);\nconst frLogin = Utils.merge({}, _frLogin, frIntl, frModal, frValidation);\nconst deLogin = Utils.merge({}, _deLogin, deIntl, deModal, deValidation);\n\nexport { enLogin, frLogin, deLogin };\n","import {Component, OnInit, OnDestroy, ChangeDetectorRef} from \"@angular/core\";\nimport {Subscription} from \"rxjs\";\nimport {NotificationsService, Notification, NotificationState} from \"@sinequa/core/notification\";\n\n@Component({\n    selector: \"sq-notifications\",\n    templateUrl: \"./notifications.html\"\n})\nexport class BsNotifications implements OnInit, OnDestroy {\n    private subscription: Subscription;\n    notifications: Notification[];\n\n    constructor(\n        private notificationsService: NotificationsService,\n        private changeDetectorRef: ChangeDetectorRef) {\n        this.notifications = [];\n    }\n\n    ngOnInit() {\n        this.loadNotifications();\n        this.subscription = this.notificationsService.events.subscribe(\n            (event) => {\n                if (event.type === \"updated\") {\n                    this.loadNotifications();\n                    this.changeDetectorRef.markForCheck();\n                }\n            });\n    }\n\n    ngOnDestroy() {\n        this.subscription.unsubscribe();\n    }\n\n    loadNotifications() {\n        this.notifications.splice(0);\n        for (const notification of this.notificationsService.notifications) {\n            if (notification.state !== NotificationState.Hidden) {\n                this.notifications.unshift(notification);\n            }\n        }\n    }\n}","<div class=\"sq-notifications\">\n    <sq-notification *ngFor=\"let notification of notifications\" [notification]=\"notification\"></sq-notification>\n</div>","import {LocaleData} from \"@sinequa/core/intl\";\nimport \"moment/locale/fr\";\nimport d3Format from \"d3-format/locale/fr-FR.json\";\nimport d3Time from \"d3-time-format/locale/fr-FR.json\";\nimport {frCore} from \"@sinequa/core\";\nimport appMessages from \"./messages/fr.json\";\nimport \"intl/locale-data/jsonp/fr-FR\"; // Safari\nimport \"@formatjs/intl-relativetimeformat/dist/locale-data/fr\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {frUtils} from \"@sinequa/components/utils\";\nimport {frAdvanced} from \"@sinequa/components/advanced\";\nimport {frAlerts} from \"@sinequa/components/alerts\";\nimport {frBaskets} from \"@sinequa/components/baskets\";\nimport {frFacet} from \"@sinequa/components/facet\";\nimport {frFeedback} from \"@sinequa/components/feedback\";\nimport {frHeatmap} from \"@sinequa/analytics/heatmap\";\nimport {frLabels} from \"@sinequa/components/labels\";\nimport {frMetadata} from \"@sinequa/components/metadata\";\nimport {frNotification} from \"@sinequa/components/notification\";\nimport {frPreview} from \"@sinequa/components/preview\";\nimport {frResult} from \"@sinequa/components/result\";\nimport {frResultsView} from \"@sinequa/components/results-view\";\nimport {frSavedQueries} from \"@sinequa/components/saved-queries\";\nimport {frSelection} from \"@sinequa/components/selection\";\nimport {frSearch} from \"@sinequa/components/search\";\nimport {frStatusBar} from \"@sinequa/components/status-bar\";\nimport {frUserSettings} from \"@sinequa/components/user-settings\";\n\nd3Format.thousands = \" \"; // consistency with intl-number-format\n\nconst messages = Utils.merge({}, frCore, frUtils, frAdvanced, frAlerts, frBaskets, frFacet, frFeedback, frHeatmap, frLabels, frMetadata,\n    frNotification, frPreview, frResult, frResultsView, frSavedQueries, frSelection, frSearch, frStatusBar, frUserSettings, appMessages);\n\nexport default <LocaleData>{\n    intl: {\n        locale: \"fr-FR\"\n    },\n    moment: {\n        locale: \"fr\"\n    },\n    d3: {\n        locale: \"fr-FR\",\n        format: d3Format,\n        time: d3Time\n    },\n    messages: messages\n};","import {Utils} from \"@sinequa/core/base\";\nimport {enSearch, frSearch, deSearch} from \"@sinequa/components/search\";\n\nimport _enSelection from \"./en\";\nimport _frSelection from \"./fr\";\nimport _deSelection from \"./de\";\n\nconst enSelection = Utils.merge({}, _enSelection, enSearch);\nconst frSelection = Utils.merge({}, _frSelection, frSearch);\nconst deSelection = Utils.merge({}, _deSelection, deSearch);\n\nexport { enSelection, frSelection, deSelection };\n","import {Component, Input} from \"@angular/core\";\nimport {Results} from \"@sinequa/core/web-services\";\nimport {FacetService} from \"../../facet.service\";\n\n@Component({\n    selector: \"sq-facet-bar\",\n    templateUrl: \"./facet-bar.html\"\n})\nexport class BsFacetBar {\n    @Input() results: Results;\n    @Input() containerIndex: number = 0; // There could be various facet bars (but only one service and storage array)\n\n    constructor(\n        private facetService: FacetService) {\n    }\n\n    get facets(): any[] { // Which facets are actually displayed in this facet bar\n        const facets = this.facetService.getFacets(this.containerIndex);\n        return facets;\n    }\n\n}","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <ng-content></ng-content>\n        <ng-container *ngFor=\"let f of facets\">\n            <sq-facet-card [ngSwitch]=\"f.type\" class=\"{{f['className']}}\" [title]=\"f.title\">\n                <sq-facet-list #facet *ngSwitchCase=\"'list'\" [name]=\"f.name\" [results]=\"results\" [aggregation]=\"f.aggregations\"></sq-facet-list>\n                <sq-facet-tree #facet *ngSwitchCase=\"'tree'\" [name]=\"f.name\" [results]=\"results\" [aggregation]=\"f.aggregations\"></sq-facet-tree>\n                <!-- Note: Removing the support for charts, but could be enabled back via a more generic ng-template approach (get all ng-template passed by transclusion and map them to a facet type) -->\n            </sq-facet-card>\n        </ng-container> \n    </div>\n</div>","import {Component, Input, OnInit, AfterViewInit, OnDestroy, ViewChild, forwardRef, ElementRef} from \"@angular/core\";\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from \"@angular/forms\";\nimport {Subscription} from \"rxjs\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {IntlService} from \"@sinequa/core/intl\";\nimport {BsDatepickerDirective, BsDatepickerConfig} from \"ngx-bootstrap/datepicker\";\nimport moment from \"moment\";\n\nexport const DATE_PICKER_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => BsDatePicker),\n    multi: true\n};\n\nexport interface DatePickerOptions {\n    name?: string;\n    system?: boolean; // default false\n    minDate?: Date;\n    maxDate?: Date;\n}\n\n@Component({\n    selector: \"sq-date-picker\",\n    template: `\n        <div class=\"sq-date-picker form-row\">\n            <div class=\"col\">\n                <input type=\"text\" #input class=\"form-control\" autocomplete=\"off\" bsDatepicker triggers=\"click\" #picker=\"bsDatepicker\" [bsConfig]=\"bsConfig()\" [ngModel]=\"value\" (ngModelChange)=\"updateValue($event)\" [placeholder]=\"dateFormat\" />\n            </div>\n        </div>\n    `,\n    providers: [DATE_PICKER_VALUE_ACCESSOR]\n})\nexport class BsDatePicker implements OnInit, AfterViewInit, OnDestroy, ControlValueAccessor {\n\n    private readonly SystemFormat: string = 'YYYY-MM-DD';\n\n    @Input() options: DatePickerOptions;\n    value: Date;\n    private onChangeCallback: (_: any) => void = () => {};\n    private localeChange: Subscription;\n    @ViewChild(\"picker\", {static: false}) picker: BsDatepickerDirective;\n    @ViewChild('input', {static: false}) input: ElementRef;\n\n    constructor(\n        public intlService: IntlService) {\n    }\n\n    ngOnInit() {\n        if (!this.options) {\n            this.options = {};\n        }\n    }\n\n    public get dateFormat(): string {\n        return this.options.system ? this.SystemFormat : moment.localeData().longDateFormat('L');\n    }\n\n    setLocale() {\n        if (!!this.picker && this.picker.isOpen) {\n            this.picker.hide();\n            this.picker.show();\n        }\n    }\n\n    ngAfterViewInit() {\n        this.setLocale();\n        this.localeChange = Utils.subscribe(this.intlService.events,\n            (value) => {\n                this.setLocale();\n            });\n    }\n\n    ngOnDestroy() {\n        if (this.localeChange) {\n            this.localeChange.unsubscribe();\n        }\n    }\n\n    bsConfig(): BsDatepickerConfig {\n        return <any>{\n            minDate: this.options.minDate,\n            maxDate: this.options.maxDate,\n            containerClass:'theme-default',\n            showWeekNumbers: false,\n            dateInputFormat: this.options.system ? this.SystemFormat : moment.localeData().longDateFormat('L')\n        };\n    }\n\n    updateValue(value: Date) {\n        this.value = value;\n        this.zeroTimes(this.value);\n        this.onChangeCallback(this.value);\n        this.focus();\n    }\n\n    private zeroTimes(value: Date): void {\n        if (Utils.isDate(value)) { // includes null checking\n            value.setHours(0, 0, 0, 0);\n        }\n    }\n\n    public focus(): void {\n        if (this.input) {\n            this.input.nativeElement.focus();\n        }\n    }\n\n    //#region ControlValueAccessor\n    writeValue(value: Date): void {\n        this.value = value;\n    }\n\n    registerOnChange(fn: any): void {\n        this.onChangeCallback = fn;\n    }\n\n    registerOnTouched(fn: any): void {\n    }\n    //#endregion\n}\n","import {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\n\nimport {IntlModule} from \"@sinequa/core/intl\";\nimport {ValidationModule} from \"@sinequa/core/validation\";\nimport {BsActionModule} from \"@sinequa/components/action\";\nimport {BsModalModule} from \"@sinequa/components/modal\";\n\nimport {BsFeedbackMenu} from \"./feedback-menu/feedback-menu\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        IntlModule,\n        BsActionModule,\n        ValidationModule,\n        BsModalModule\n    ],\n    declarations: [\n        BsFeedbackMenu\n    ],\n    exports: [\n        BsFeedbackMenu\n    ]\n})\nexport class BsFeedbackModule {\n}\n","import {\n    Injectable,\n    Inject,\n    InjectionToken,\n    Type,\n    OnDestroy,\n} from \"@angular/core\";\nimport { Observable, of, Subscription } from \"rxjs\";\nimport {\n    PrincipalWebService,\n    LabelsWebService,\n    AuditEventType,\n    LabelsRights,\n} from \"@sinequa/core/web-services\";\nimport { AppService, ValueItem } from \"@sinequa/core/app-utils\";\nimport { Utils } from \"@sinequa/core/base\";\nimport { SearchService } from \"@sinequa/components/search\";\nimport { ModalService, ModalResult } from \"@sinequa/core/modal\";\nimport { Action } from \"@sinequa/components/action\";\nimport { IntlService } from \"@sinequa/core/intl\";\nimport { NotificationsService } from \"@sinequa/core/notification\";\nimport { SelectionService } from \"@sinequa/components/selection\";\n\nexport interface LabelsComponents {\n    renameModal: Type<any>;\n    labelsAutocompleteComponent: Type<any>;\n    deleteModal: Type<any>;\n    addModal: Type<any>;\n    editModal: Type<any>;\n}\n\nexport interface ModalProperties {\n    public: boolean;\n    allowEditPublicLabels: boolean;\n    allowManagePublicLabels: boolean;\n    allowNewLabels: boolean;\n    disableAutocomplete: boolean;\n    action: number;\n    radioButtons: any[];\n}\n\nexport const enum UpdateLabelsAction {\n    add,\n    remove,\n    rename,\n    delete,\n    bulkAdd,\n    bulkRemove,\n    edit,\n}\n\nexport const LABELS_COMPONENTS = new InjectionToken<LabelsComponents>(\n    \"LABELS_COMPONENTS\"\n);\n\n@Injectable({\n    providedIn: \"root\",\n})\nexport class LabelsService implements OnDestroy {\n    private _privateLabelsPrefix: string | undefined;\n    private static readonly defaultLabelsRights: LabelsRights = {\n        canManagePublicLabels: true,\n        canEditPublicLabels: true,\n    };\n    private labelsRightsSubscription: Subscription | undefined;\n    private labelsRights: LabelsRights | undefined;\n\n    constructor(\n        private labelsWebService: LabelsWebService,\n        private appService: AppService,\n        private searchService: SearchService,\n        private modalService: ModalService,\n        private principalWebService: PrincipalWebService,\n        private intlService: IntlService,\n        private notificationService: NotificationsService,\n        private selectionService: SelectionService,\n        @Inject(LABELS_COMPONENTS) public labelsComponents: LabelsComponents\n    ) {\n        this.principalWebService.events.subscribe((event) => {\n            switch (event.type) {\n                case \"changed\":\n                    this._privateLabelsPrefix = undefined;\n                    this.labelsRights = undefined;\n                    this.labelsRightsSubscription = undefined;\n                    break;\n            }\n        });\n    }\n\n    public get publicLabelsField(): string | undefined {\n        return this.appService.cclabels\n            ? this.appService.cclabels.publicLabelsField\n            : undefined;\n    }\n\n    public get privateLabelsField(): string | undefined {\n        return this.appService.cclabels\n            ? this.appService.cclabels.privateLabelsField\n            : undefined;\n    }\n\n    public get labelsAutoSuggestWildcard(): string | undefined {\n        return this.appService.cclabels\n            ? this.appService.cclabels.labelsAutoSuggestWildcard\n            : undefined;\n    }\n\n    public get allowPublicLabelsManagement(): boolean {\n        return this.appService.cclabels\n            ? this.appService.cclabels.allowPublicLabelsCreation\n            : false;\n    }\n\n    public get allowPublicLabelsEdition(): boolean {\n        return this.appService.cclabels\n            ? this.appService.cclabels.allowPublicLabelsModification\n            : false;\n    }\n\n    public get userLabelsRights(): LabelsRights {\n        let rights: LabelsRights | undefined;\n        if (!this.labelsRights) {\n            if (!this.labelsRightsSubscription) {\n                const observable = this.labelsWebService.getUserRights();\n                this.labelsRightsSubscription = Utils.subscribe(\n                    observable,\n                    (response) => (rights = response)\n                );\n            } else {\n                rights = LabelsService.defaultLabelsRights;\n            }\n            this.labelsRights = !!rights\n                ? rights\n                : LabelsService.defaultLabelsRights;\n        }\n        return this.labelsRights;\n    }\n\n    ngOnDestroy() {\n        if (this.labelsRightsSubscription) {\n            this.labelsRightsSubscription.unsubscribe();\n        }\n    }\n\n    /** From navbar */\n    public renameLabelModal(): Promise<ModalResult> {\n        const data = {\n            oldValues: [],\n            newValue: \"\",\n            properties: this._modalProperties(UpdateLabelsAction.rename),\n        };\n        return this.modalService.open(this.labelsComponents.renameModal, {\n            model: data,\n        });\n    }\n\n    public deleteLabelModal(): Promise<ModalResult> {\n        const data = {\n            values: [],\n            properties: this._modalProperties(UpdateLabelsAction.delete),\n        };\n        return this.modalService.open(this.labelsComponents.deleteModal, {\n            model: data,\n        });\n    }\n\n    public bulkAddLabelModal(): Promise<ModalResult> {\n        const data = {\n            values: [],\n            properties: this._modalProperties(UpdateLabelsAction.bulkAdd),\n        };\n        return this.modalService.open(this.labelsComponents.addModal, {\n            model: data,\n        });\n    }\n\n    public bulkRemoveLabelModal(): Promise<ModalResult> {\n        const data = {\n            values: [],\n            properties: this._modalProperties(UpdateLabelsAction.bulkRemove),\n        };\n        return this.modalService.open(this.labelsComponents.deleteModal, {\n            model: data,\n        });\n    }\n\n    private _modalProperties(action: number): ModalProperties {\n        const allowManagePublicLabels: boolean =\n            this.allowPublicLabelsManagement &&\n            this.userLabelsRights &&\n            this.userLabelsRights.canManagePublicLabels;\n        const allowEditPublicLabels: boolean =\n            this.allowPublicLabelsEdition &&\n            this.userLabelsRights &&\n            this.userLabelsRights.canEditPublicLabels;\n        let allowNewLabels: boolean = false;\n        let radioButtonsConf: any;\n\n        switch (action) {\n            case UpdateLabelsAction.rename:\n            case UpdateLabelsAction.remove:\n            case UpdateLabelsAction.delete:\n            case UpdateLabelsAction.bulkRemove:\n                allowNewLabels = false;\n                break;\n            case UpdateLabelsAction.add:\n            case UpdateLabelsAction.bulkAdd:\n            case UpdateLabelsAction.edit:\n                allowNewLabels = true;\n                break;\n            default:\n                break;\n        }\n\n        switch (action) {\n            case UpdateLabelsAction.rename:\n            case UpdateLabelsAction.delete:\n                radioButtonsConf = this._getModalRadioButtonsConf(\n                    allowManagePublicLabels\n                );\n                break;\n            case UpdateLabelsAction.add:\n            case UpdateLabelsAction.bulkAdd:\n            case UpdateLabelsAction.remove:\n            case UpdateLabelsAction.bulkRemove:\n            case UpdateLabelsAction.edit:\n                radioButtonsConf = this._getModalRadioButtonsConf(\n                    allowManagePublicLabels || allowEditPublicLabels\n                );\n                break;\n            default:\n                break;\n        }\n\n        return {\n            allowEditPublicLabels: allowEditPublicLabels,\n            allowManagePublicLabels: allowManagePublicLabels,\n            allowNewLabels: allowNewLabels,\n            action: action,\n            ...radioButtonsConf,\n        };\n    }\n\n    private _getModalRadioButtonsConf(publicRight: boolean): any {\n        let isPublic: boolean = true;\n        let disableAutocomplete: boolean = false;\n        let radioButtons: any[] = [];\n        let publicRadioButton = {\n            id: \"publicLabel\",\n            name: \"msg#labels.public\",\n            value: true,\n            disabled: false,\n            checked: true,\n        };\n        let privateRadioButton = {\n            id: \"privateLabel\",\n            name: \"msg#labels.private\",\n            value: false,\n            disabled: false,\n            checked: false,\n        };\n        if (!!this.publicLabelsField && !!this.privateLabelsField) {\n            if (publicRight) {\n                isPublic = true;\n                radioButtons = [publicRadioButton, privateRadioButton];\n            } else {\n                isPublic = false;\n                publicRadioButton = {\n                    ...publicRadioButton,\n                    disabled: true,\n                    checked: false,\n                };\n                privateRadioButton = {\n                    ...privateRadioButton,\n                    disabled: true,\n                    checked: true,\n                };\n                radioButtons = [publicRadioButton, privateRadioButton];\n            }\n        } else if (!!this.publicLabelsField) {\n            if (publicRight) {\n                isPublic = true;\n                publicRadioButton = {\n                    ...publicRadioButton,\n                    disabled: true,\n                    checked: true,\n                };\n                radioButtons = [publicRadioButton];\n            } else {\n                isPublic = false;\n                disableAutocomplete = true;\n                publicRadioButton = {\n                    ...publicRadioButton,\n                    disabled: true,\n                    checked: false,\n                };\n                radioButtons = [publicRadioButton];\n            }\n        } else if (!!this.privateLabelsField) {\n            isPublic = false;\n            privateRadioButton = {\n                ...privateRadioButton,\n                disabled: true,\n                checked: true,\n            };\n            radioButtons = [privateRadioButton];\n        }\n\n        return {\n            public: isPublic,\n            disableAutocomplete: disableAutocomplete,\n            radioButtons: radioButtons,\n        };\n    }\n    /** END From navbar */\n\n    /** From result selector */\n    public buildSelectionAction(): Action | undefined {\n        if (!this.publicLabelsField && !this.privateLabelsField) {\n            return undefined;\n        }\n        const action = new Action({\n            icon: \"fas fa-tags\",\n            title: \"msg#labels.labels\",\n            action: () => {\n                this.editLabelModal();\n            },\n        });\n        if (action) {\n            action.updater = (action) => {\n                action.hidden = !this.selectionService.haveSelectedRecords;\n            };\n            action.hidden = true;\n        }\n        return action;\n    }\n\n    public editLabelModal(): Promise<ModalResult> {\n        const data = {\n            valuesToBeAdded: [],\n            valuesToBeRemoved: [],\n            properties: this._modalProperties(UpdateLabelsAction.edit),\n        };\n        return this.modalService.open(this.labelsComponents.editModal, {\n            model: data,\n        });\n    }\n    /** END result selector */\n\n\n    addLabels(\n        labels: string[],\n        ids: string[],\n        _public: boolean\n    ): Observable<void> {\n        if (!labels || labels.length === 0 || !ids || ids.length === 0) {\n            return of();\n        }\n        const observable = this.labelsWebService.add(labels, ids, _public);\n        return observable;\n    }\n\n    removeLabels(\n        labels: string[],\n        ids: string[],\n        _public: boolean\n    ): Observable<void> {\n        if (!labels || labels.length === 0 || !ids || ids.length === 0) {\n            return of();\n        }\n        const observable = this.labelsWebService.remove(labels, ids, _public);\n        return observable;\n    }\n\n    selectLabels(labels: string[], _public: boolean): Promise<boolean> {\n        const field =\n            this.appService.cclabels &&\n            (_public\n                ? this.appService.cclabels.publicLabelsField\n                : this.appService.cclabels.privateLabelsField);\n        if (!field) {\n            return Promise.resolve(false);\n        }\n        const items: ValueItem[] = [];\n        const selectedLabels: string[] = this.getSelectedLabels(field);\n        for (let label of labels) {\n            const display = label;\n            if (!_public) {\n                label = <string>this.addPrivatePrefix(label);\n            }\n            if (selectedLabels.indexOf(label) === -1) {\n                items.push({\n                    value: label,\n                    display: display,\n                });\n            }\n        }\n\n        this.searchService.addFieldSelect(field, items);\n        return this.searchService.search(undefined, {\n            type: AuditEventType.Label_Open,\n            detail: {\n                label: !!labels ? labels.toString() : null,\n                public: _public,\n            },\n        });\n    }\n\n    /**\n     * Retrieves the labels that are not in the current filters of breadcrumbs\n     *\n     * @param field The column index containing the labels.\n     * @returns The selected labels\n     */\n    private getSelectedLabels(field: string): string[] {\n        const labels: string[] = [];\n        if (field && this.searchService.breadcrumbs?.activeSelects) {\n            for (const select of this.searchService.breadcrumbs.activeSelects) {\n                if (select.expr) {\n                    const values = select.expr.getValues(field);\n                    values.forEach((value) => {\n                        if (labels.indexOf(value) === -1) {\n                            labels.push(value);\n                        }\n                    });\n                }\n            }\n        }\n        return labels;\n    }\n\n    renameLabels(\n        labels: string[],\n        newLabel: string,\n        _public: boolean\n    ): Observable<void> {\n        if (!labels || labels.length === 0) {\n            return of();\n        }\n        const observable = this.labelsWebService.rename(\n            labels,\n            newLabel,\n            _public\n        );\n        Utils.subscribe(\n            observable,\n            () => {},\n            () => {\n                this.notificationService.error(\"msg#renameLabel.errorFeedback\");\n            },\n            () => {\n                this.notificationService.success(\n                    \"msg#renameLabel.successFeedback\"\n                );\n                this.searchService.search(); /** Update the display immediately in the components and facets*/\n            }\n        );\n        return observable;\n    }\n\n    deleteLabels(labels: string[], _public: boolean): Observable<void> {\n        if (!labels || labels.length === 0) {\n            return of();\n        }\n        const observable = this.labelsWebService.delete(labels, _public);\n        Utils.subscribe(\n            observable,\n            () => {},\n            () => {\n                this.notificationService.error(\"msg#deleteLabel.errorFeedback\");\n            },\n            () => {\n                this.notificationService.success(\n                    \"msg#deleteLabel.successFeedback\"\n                );\n                this.searchService.search(); /** Update the display immediately in the components and facets*/\n            }\n        );\n        return observable;\n    }\n\n    bulkAddLabels(labels: string[], _public: boolean): Observable<void> {\n        if (!labels || labels.length === 0) {\n            return of();\n        }\n        const observable = this.labelsWebService.bulkAdd(\n            labels,\n            this.searchService.query,\n            _public\n        );\n        Utils.subscribe(\n            observable,\n            () => {},\n            () => {\n                this.notificationService.error(\n                    \"msg#bulkAddLabel.errorFeedback\"\n                );\n            },\n            () => {\n                this.notificationService.success(\n                    \"msg#bulkAddLabel.successFeedback\"\n                );\n                this.searchService.search(); /** Update the display immediately in the components and facets*/\n            }\n        );\n        return observable;\n    }\n\n    bulkRemoveLabels(labels: string[], _public: boolean): Observable<void> {\n        if (!labels || labels.length === 0) {\n            return of();\n        }\n        const observable = this.labelsWebService.bulkRemove(\n            labels,\n            this.searchService.query,\n            _public\n        );\n        Utils.subscribe(\n            observable,\n            () => {},\n            () => {\n                this.notificationService.error(\n                    \"msg#bulkRemoveLabel.errorFeedback\"\n                );\n            },\n            () => {\n                this.notificationService.success(\n                    \"msg#bulkRemoveLabel.successFeedback\"\n                );\n                this.searchService.search(); /** Update the display immediately in the components and facets*/\n            }\n        );\n        return observable;\n    }\n\n    get privateLabelsPrefix(): string {\n        if (!this.principalWebService.principal) {\n            return \"\";\n        }\n        if (!this._privateLabelsPrefix && this.appService.cclabels) {\n            if (\n                this.appService.isTree(\n                    this.appService.cclabels.privateLabelsField\n                )\n            ) {\n                this._privateLabelsPrefix = Utils.addUrl(\n                    \"/\",\n                    Utils.replace(\n                        this.principalWebService.principal.userId,\n                        \"|\",\n                        \"/\"\n                    ),\n                    \"/\"\n                );\n            } else {\n                this._privateLabelsPrefix =\n                    this.principalWebService.principal.userId + \"|\";\n            }\n        }\n        return this._privateLabelsPrefix || \"\";\n    }\n\n    sort(labels: string[], _public: boolean): string[] {\n        if (!labels) return labels;\n        return labels.sort((a, b) => {\n            if (!a) return -1;\n            if (!b) return 1;\n            if (!_public) {\n                a = <string>this.removePrivatePrefix(a);\n                b = <string>this.removePrivatePrefix(b);\n            }\n            a = this.intlService.formatMessage(a);\n            b = this.intlService.formatMessage(b);\n            return a.localeCompare(b);\n        });\n    }\n\n    split(labels: string): string[] {\n        if (!labels) {\n            return [];\n        }\n        return labels\n            .trim()\n            .split(/\\s*;\\s*/)\n            .filter((value) => {\n                return value !== \"\";\n            });\n    }\n\n    private _addPrivatePrefix(label: string): string {\n        if (\n            this.appService.cclabels &&\n            this.appService.isTree(this.appService.cclabels.privateLabelsField)\n        ) {\n            return Utils.addUrl(this.privateLabelsPrefix, label);\n        } else {\n            return this.privateLabelsPrefix + label;\n        }\n    }\n\n    addPrivatePrefix(labels: string | string[]): string | string[] {\n        if (typeof labels === \"string\") {\n            return this._addPrivatePrefix(labels);\n        } else {\n            for (let i = 0, ic = labels.length; i < ic; i++) {\n                labels[i] = this._addPrivatePrefix(labels[i]);\n            }\n            return labels;\n        }\n    }\n\n    private _removePrivatePrefix(label: string): string {\n        if (label.indexOf(this.privateLabelsPrefix) === 0) {\n            if (\n                this.appService.cclabels &&\n                this.appService.isTree(\n                    this.appService.cclabels.privateLabelsField\n                )\n            ) {\n                return label.slice(this.privateLabelsPrefix.length - 1);\n            } else {\n                return label.slice(this.privateLabelsPrefix.length);\n            }\n        }\n        return label;\n    }\n\n    removePrivatePrefix(labels: string | string[]): string | string[] {\n        if (typeof labels === \"string\") {\n            return this._removePrivatePrefix(labels);\n        } else {\n            for (let i = 0, ic = labels.length; i < ic; i++) {\n                labels[i] = this._removePrivatePrefix(labels[i]);\n            }\n            return labels;\n        }\n    }\n}\n","export * from \"./public-api\";","import {Component, Input, OnChanges, SimpleChanges} from \"@angular/core\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {Record} from \"@sinequa/core/web-services\";\n\n@Component({\n    selector: \"sq-result-extracts\",\n    templateUrl: \"./result-extracts.html\",\n    styles: [`\np, ul {\n    margin: 0;\n    color: #676767;\n    font-size: 0.9em;\n}\n    `]\n})\nexport class ResultExtracts implements OnChanges {\n    @Input() record: Record;\n    @Input() limitLinesDisplayed: boolean;\n    @Input() showLinesExpander: boolean;\n    @Input() showTextAlways: boolean;\n    @Input() showLongExtracts: boolean;\n    @Input() hideDate: boolean;\n    @Input() maxLongExtracts: number;\n    @Input() dateFormat: Intl.DateTimeFormatOptions = {year: 'numeric', month: 'short', day: 'numeric'};\n    collapsed: boolean = true;\n    text: string | undefined;\n    longExtracts: string[] | undefined;\n    extractsClass: string;\n\n    setup() {\n        this.text = undefined;\n        this.longExtracts = undefined;\n        if (this.showTextAlways) {\n            this.text = Utils.encodeHTML(this.record.text);\n            this.extractsClass = \"sq-text-extracts\";\n        }\n        else {\n            if (this.showLongExtracts && (this.record[\"extracts\"] || this.record[\"extractsperpartname\"] )) {\n                this.longExtracts = [];\n                // extractsperpartname is a complex structure where extracts are stored in an object: \"highlight.data\"\n                // in a csv field (';' separator)\n                let recordExtracts = this.record[\"extracts\"] || this.record[\"extractsperpartname\"].highlight[0].data.split(\";\");\n                if (this.maxLongExtracts) {\n                    recordExtracts = recordExtracts.slice(0, this.maxLongExtracts * 3);\n                }\n                for (let i = 0; i < recordExtracts.length; i += 3) {\n                    this.longExtracts.push(recordExtracts[i].replace(/\\{b\\}/g, \"<strong>\").replace(/\\{nb\\}/g, \"</strong>\"));\n                }\n                this.extractsClass = \"sq-long-extracts\";\n            }\n            else if (this.record.relevantExtracts) {\n                this.text = this.record.relevantExtracts;\n                this.extractsClass = \"sq-relevant-extracts\";\n            }\n            else {\n                this.text = Utils.encodeHTML(this.record.text);\n                this.extractsClass = \"sq-text-extracts\";\n            }\n        }\n\n        if (!this.limitLinesDisplayed || !this.collapsed) {\n            this.extractsClass += \" sq-show-all\";\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        this.setup();\n    }\n\n    collapseClick(event: Event) {\n        this.collapsed = !this.collapsed;\n        this.setup();\n        event.preventDefault();\n    }\n}","<ng-container *ngIf=\"text || longExtracts\">\n    <p *ngIf=\"!longExtracts\" class=\"{{extractsClass}} sq-text\">\n        <span *ngIf=\"record.modified && !hideDate\" class=\"extracts-date\">{{record.modified | sqDate:dateFormat}}{{!!text ? ' - ' : ''}}</span>\n        <span class=\"extracts-text\" [innerHTML]=\"text\"></span>\n    </p>\n    <ng-container *ngIf=\"longExtracts\">\n        <p *ngIf=\"record.modified && !hideDate\" class=\"{{extractsClass}} extracts-date sq-text\">{{record.modified | sqDate:dateFormat}}</p>\n        <ul *ngIf=\"longExtracts\" class=\"{{extractsClass}} sq-text\">\n            <li *ngFor=\"let extract of longExtracts\" [innerHTML]=\"extract\"></li>\n        </ul>\n    </ng-container>\n    <a *ngIf=\"showLinesExpander\" class=\"sq-text\" href=\"#\" (click)=\"collapseClick($event)\">\n        <sq-collapse-button [collapsed]=\"collapsed\"></sq-collapse-button>\n    </a>\n</ng-container>\n","import {NgModule, APP_INITIALIZER, ModuleWithProviders, Type} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\n\nimport {BaseModule} from \"@sinequa/core/base\";\n\nimport {IntlService, LOCALES_CONFIG, LocalesConfig} from \"./intl.service\";\nimport {MessagePipe} from \"./message.pipe\";\nimport {INTL_MODULE_PROVIDERS} from \"./module.providers\";\n\n/**\n * An APP_INITIALIZER factory function for initialising the {@link IntlService} before any UI is displayed\n */\nexport function IntlInitializer(intlService: IntlService): () => Promise<string> {\n    const init = () => intlService.init().toPromise();\n    return init;\n}\n\n/**\n * This module contains core internationalization functionality for the formatting of numbers, dates and strings.\n * It is based on the industry standard\n * [Intl]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl} API\n * and an implementation of the ICU Message syntax provided by [FormatJS]{@link https://formatjs.io/}.\n *\n * The module provides mechanisms for the definition and loading of locales which can be extended with library specific\n * locale information. By default, locales contain support for `Moment.js` and `D3.js`.\n *\n * The module can be initialized by importing it using the `forRoot` static method or otherwise providing the\n * {@link LOCALES_CONFIG} injection token\n */\n@NgModule({\n    imports: [\n        CommonModule,\n        BaseModule\n    ],\n    declarations: [\n        MessagePipe\n    ],\n    exports: [\n        MessagePipe\n    ],\n    providers: [\n        {provide: APP_INITIALIZER, useFactory: IntlInitializer, deps: [IntlService], multi: true},\n        ...INTL_MODULE_PROVIDERS\n    ]\n})\nexport class IntlModule {\n    static forRoot(localeConfig: Type<LocalesConfig>): ModuleWithProviders<IntlModule> {\n        return {\n            ngModule: IntlModule,\n            providers: [\n                {provide: LOCALES_CONFIG, useClass: localeConfig},\n            ]\n        };\n    }\n}\n","import {Utils} from \"@sinequa/core/base\";\nimport {enModal, frModal, deModal} from \"@sinequa/components/modal\";\nimport _enFeedback from \"./en\";\nimport _frFeedback from \"./fr\";\nimport _deFeedback from \"./de\";\n\nconst enFeedback = Utils.merge({}, _enFeedback, enModal);\nconst frFeedback = Utils.merge({}, _frFeedback, frModal);\nconst deFeedback = Utils.merge({}, _deFeedback, deModal);\n\nexport { enFeedback, frFeedback, deFeedback };\n","export default {\n    \"advanced\": {\n        \"rangeSeparator\": \" / \",\n        \"dateRangePicker\": {\n            \"separator\": \" / \"\n        },\n        \"rangeInput\": {\n            \"separator\": \"/\"\n        },\n        \"select\": {\n            \"nItems\": \"{count} éléments sélectionnés\",\n            \"allItems\": \"Tous les éléments\",\n            \"noItems\": \"Aucun élément\"\n        }\n    }\n};\n","import {Pipe, ChangeDetectorRef} from \"@angular/core\";\nimport {AbstractIntlPipe, IntlService} from \"@sinequa/core/intl\";\n\n@Pipe({name: \"sqRelativeTime\", pure: false})\nexport class RelativeTimePipe extends AbstractIntlPipe {\n    constructor(\n        intlService: IntlService,\n        changeDetectorRef: ChangeDetectorRef) {\n        super(intlService, changeDetectorRef);\n    }\n\n    updateValue(key: string |number | Date | undefined, params: {unit: Intl.RelativeTimeUnit} & Intl.RelativeTimeFormatOptions & { format?: string }): void {\n        super.updateValue(key, params);\n        this.value = this.intlService.formatRelativeTime(key, params ? params.unit : undefined, params);\n    }\n}","import { Component, Input } from \"@angular/core\";\nimport { Principal } from \"@sinequa/core/web-services\";\n\n@Component({\n    selector: \"sq-metadata-access-lists-item-single-access-list\",\n    templateUrl: \"./metadata-access-lists-item-single-access-list.html\",\n    styleUrls: [\"./metadata-access-lists-item-single-access-list.css\"]\n})\nexport class MetadataAccessListsItemSingleAccessList {\n\n    @Input() private readonly authorized: boolean;\n    @Input() public readonly index: number;\n    @Input() public readonly accessList: Principal[];\n    public collapsed = true;\n\n    public get headerMessage(): string {\n        return \"msg#metadata.accessLists.\" + (this.authorized ? \"authorizedListHeader\" : \"deniedListHeader\");\n    }\n\n    public collapseClick(event: Event) {\n        this.collapsed = !this.collapsed;\n        event.preventDefault();\n    }\n}\n","<div class=\"accessListHeader\">\n    {{ headerMessage | sqMessage:{values: {value: index} } }}\n    <a href=\"#\" (click)=\"collapseClick($event)\">\n        <sq-collapse-button class=\"collapseButton\" [collapsed]=\"collapsed\">\n        </sq-collapse-button>\n    </a>\n</div>\n<sq-collapse [collapsed]=\"collapsed\">\n    <ng-template>\n        <div class=\"accessListBody\">\n            <div class=\"principalList\">\n                <div *ngFor=\"let principal of accessList\" class=\"principal\">\n                    <div class=\"domain\">{{ principal.domain }}</div>\n                    <div class=\"separator\"> | </div>\n                    <div class=\"id\">{{ principal.id }}</div>\n                </div>\n            </div>\n        </div>    \n    </ng-template>\n</sq-collapse>\n","import {Utils, MapOf, IRef, FieldValue} from \"@sinequa/core/base\";\nimport {AppService} from \"../app.service\";\nimport {AppServiceHelpers} from \"../app-service-helpers\";\nimport {CCColumn, EngineType} from \"@sinequa/core/web-services\";\nimport {IntlService} from \"@sinequa/core/intl\";\nimport {FormatService} from \"../format.service\";\n\n/**\n * Describes a context for processing expressions\n */\nexport interface ExprContext {\n    appService: AppService;\n    formatService: FormatService;\n    intlService: IntlService;\n    disallowFulltext?: boolean;\n}\n\n/**\n * The operators accepted in fielded search expressions\n */\nexport const enum ExprOperator {\n    none,\n    eq,\n    gt,\n    gte,\n    lt,\n    lte,\n    neq,\n    regex,\n    like,\n    contains,\n    in,\n    between\n}\n\n/**\n * The range operators accepted in fielded search expressions\n */\nexport const enum ExprRange {\n    none,\n    gteLte,\n    gteLt,\n    gtLte,\n    gtLt\n}\n\n/**\n * An object containing the data necessary to format an `Expr` using\n * [IntlService.formatMessage]{@link IntlService#formatMessage}\n */\nexport interface ExprMessage {\n    /**\n     * The `IntlService` compatible message string\n     */\n    message: string;\n    /**\n     * Any values referenced by `message`\n     */\n    values?: {\n        [key: string]: FieldValue\n    };\n}\n\n/**\n * Options to be used with `Expr.toMessage`\n */\nexport interface ExprMessageOptions {\n    /**\n     * If `true`, field names are included in the message\n     */\n    withFields?: boolean;\n    /**\n     * If `true`, use any display value set in the expression\n     */\n    useDisplay?: boolean;\n    /**\n     * Include HTML formatting in the message\n     */\n    asHTML?: boolean;\n    /**\n     * If `true`, don't include any outer `NOT` operator in the message\n     */\n    hideOuterNot?: boolean;\n}\n\n/**\n * @ignore\n */\ninterface ExprMessageCtxt {\n    inner: boolean;\n    message: string[];\n    values: {\n        [key: string]: FieldValue\n    };\n    valueIndex: number;\n}\n\n/**\n * Describes a location in a fielded search expression\n */\nexport interface ExprLocation {\n    start: number;\n    length: number;\n}\n\n/**\n * Describes a location and value in a fielded search expression\n */\nexport interface ExprValueLocation extends ExprLocation {\n    value: string;\n}\n\n/**\n * Describes a location, value and field in a fielded search expression\n */\nexport interface ExprValueInfo extends ExprValueLocation {\n    field: string;\n}\n\n/**\n * Describes the data used in [Expr.evaluate]{@link Expr#evaluate}\n */\nexport interface ExprEvaluationContext {\n    [key: string]: any;\n}\n\n/**\n * Describes an initialization object used in the construction of an {@link Expr} from a value\n */\nexport interface ExprValueInitializer {\n    /**\n     * The expression context\n     */\n    exprContext: ExprContext;\n    /**\n     * A single value\n     */\n    value?: string;\n    /**\n     * An array of values\n     */\n    values?: string[];\n    /**\n     * Locations of the values used in range expressions\n     */\n    locations?: ExprLocation[];\n    /**\n     * The operator used in the expression\n     */\n    operator?: ExprOperator;\n    /**\n     * The field name\n     */\n    field?: string;\n    /**\n     * The display value\n     */\n    display?: string;\n}\n\n/**\n * Describes an initialization object used in the construction of a boolean {@link Expr} with a pair of operands\n */\nexport interface ExprOperandsInitializer {\n    /**\n     * The expression context\n     */\n    exprContext: ExprContext;\n    /**\n     * The first operand\n     */\n    op1: Expr;\n    /**\n     * If `true` this `Expr` represents an `AND` expression, otherwise it represents an `OR` expression\n     */\n    and: boolean;\n    /**\n     * The second operand\n     */\n    op2: Expr;\n    /**\n     * The field name\n     */\n    field?: string;\n    /**\n     * The display value\n     */\n    display?: string;\n}\n\n/**\n * Represents a parsed fielded search expression. A tree of expression nodes is built when an expression\n * combines sub-expressions using boolean operators\n */\nexport class Expr {\n\n    private _field: string | undefined = undefined;\n\n    /**\n     * Return the field name of this expression. Return the first ancestor's non-empty field\n     * if the field on this node is empty\n     */\n    public get field(): string | undefined {\n        let expr: Expr = this;\n        while (expr) {\n            if (!Utils.isEmpty(expr._field)) {\n                return expr._field;\n            }\n            expr = expr.parent;\n        }\n        return undefined;\n    }\n\n    /**\n     * Set the field name of this expression\n     */\n    public set field(value: string | undefined) {\n        this._field = value;\n    }\n\n    private _display: string | undefined = undefined;\n    private _displayObj: {label?: string, display?: string} | undefined = undefined;\n\n    /**\n     * Return the display value of this expression. Return the first ancestor's non-empty display value\n     * if the display value on this node is empty\n     */\n    public get display(): string | undefined {\n        let expr: Expr = this;\n        while (expr) {\n            if (!Utils.isEmpty(expr._display)) {\n                return expr._display;\n            }\n            expr = expr.parent;\n        }\n        return undefined;\n    }\n\n    /**\n     * Set the display value of this expression. If the display value is a valid stringified JSON object\n     * then set `displayObj` to the parsed object\n     */\n    public set display(value: string | undefined) {\n        this._display = value;\n        if (!this._display) {\n            this._displayObj = undefined;\n        }\n        else {\n            if (this._display[0] === \"{\" && this._display[this._display.length - 1] === \"}\") {\n                try {\n                    this._displayObj = Utils.fromJson(this._display);\n                }\n                catch (e) {\n                    this._displayObj = undefined;\n                }\n            }\n            else {\n                this._displayObj = undefined;\n            }\n        }\n    }\n\n    /**\n     * Return the display object of this expression. Return the first ancestor's non-empty display object\n     * if the display object on this node is empty\n     */\n    public get displayObj(): {label?: string, display?: string} | undefined {\n        let expr: Expr = this;\n        while (expr) {\n            if (expr._displayObj) {\n                return expr._displayObj;\n            }\n            expr = expr.parent;\n        }\n        return undefined;\n    }\n\n    /**\n     * The values of this expression\n     */\n    public values: string[] | undefined = undefined;\n    /**\n     * The locations of the values of this expression\n     */\n    public locations: ExprLocation[] | undefined;\n\n    /**\n     * Return the value of this expression. Note that range expressions may have multiple values\n     */\n    public get value(): string | undefined {\n        if (!this.values || this.values.length === 0) {\n            return undefined;\n        }\n        return this.values[0];\n    }\n\n    /**\n     * Set the value of this expression\n     */\n    public set value(value: string | undefined) {\n        if (value === undefined) {\n            this.values = undefined;\n        }\n        else {\n            if (!this.values) {\n                this.values = [];\n            }\n            this.values[0] = value;\n            this.values.length = 1;\n        }\n    }\n\n    /**\n     * The operator of this expression\n     */\n    public operator: ExprOperator;\n    /**\n     * If `true` then this expression included the `NOT` boolean operator\n     */\n    public not: boolean;\n    /**\n     * If `true` then the operands of this expression are combined with the `AND` operator.\n     * Otherwise the operands are combined with the `OR` operator\n     */\n    public and: boolean;\n    /**\n     * The operands of this expression, if any\n     */\n    public operands: Expr[];\n    /**\n     * The parent expression, if any\n     */\n    public parent: Expr;\n    /**\n     * The expression context\n     */\n    public exprContext: ExprContext;\n    /**\n     * The distance specified in a `NEAR` expression\n     */\n    public near: number;\n    /**\n     * The position of this expression's value in the original text\n     */\n    public start: number;\n    /**\n     * The length of this expression's value in the original text\n     */\n    public length: number;\n    private mergedStructured: boolean;\n\n    // for evaluate\n    private _evaluationRegExps: MapOf<RegExp | undefined>;\n    private get evaluationRegExps(): MapOf<RegExp | undefined> {\n        if (!this._evaluationRegExps) {\n            this._evaluationRegExps = {};\n        }\n        return this._evaluationRegExps;\n    }\n\n    constructor(init: ExprValueInitializer | ExprOperandsInitializer) {\n        if (!(<ExprOperandsInitializer>init).op1) {\n            const valueInit: ExprValueInitializer = <ExprValueInitializer>init;\n            this.exprContext = valueInit.exprContext;\n            if (!Utils.isUndefined(valueInit.value)) {\n                this.value = ExprParser.unescape(valueInit.value);\n            }\n            else if (!Utils.isUndefined(valueInit.values)) {\n                this.values = ExprParser.unescapeList(valueInit.values);\n            }\n            this.locations = valueInit.locations;\n            this.field = valueInit.field;\n            this.display = valueInit.display;\n            this.operator = !Utils.isUndefined(valueInit.operator) ? valueInit.operator : ExprOperator.none;\n            this.near = -1;\n            this.start = -1;\n            this.length = 0;\n        }\n        else {\n            const opsInit: ExprOperandsInitializer = init as ExprOperandsInitializer;\n            this.exprContext = opsInit.exprContext;\n            this.field = opsInit.field;\n            this.display = opsInit.display;\n            this.addOperand(opsInit.op1);\n            this.addOperand(opsInit.op2);\n            this.and = opsInit.and;\n            this.near = -1;\n            this.start = -1;\n            this.length = 0;\n        }\n    }\n\n    /**\n     * Add an operand to this expression\n     *\n     * @param operand The operand to add\n     * @param contextField The parser's field context, if any\n     * @param prepend If `true` the operand is prepended to the operands\n     */\n    public addOperand(operand: Expr, contextField?: string, prepend = false) {\n        if (Utils.isUndefined(contextField)) {\n            contextField = this.field;\n        }\n        if (!this.operands) {\n            this.operands = [];\n        }\n        if (!Utils.isEmpty(this.field) && Utils.isEmpty(operand.field) && !operand.isStructured) {\n            if (Utils.isEmpty(contextField)) {\n                // Prefer setting the fields explicitly on the target operands rather the Field to \"text\" on the source operand\n                // operand.field = ExprParser.fieldPartnamePrefix + \"text\";\n                for (const expr of this.operands) {\n                    if (Utils.isEmpty(expr._field)) {\n                        expr._field = this.field;\n                    }\n                }\n                this.field = undefined;\n            }\n        }\n        if (!Utils.eqNC(this.field || \"\", operand.field || \"\")) {\n            operand._field = operand.field;\n        }\n        else {\n            operand._field = undefined;\n        }\n        if (!Utils.isEmpty(this.display)) {\n            operand._display = undefined;\n        }\n        if (prepend) {\n            this.operands.unshift(operand);\n        }\n        else {\n            this.operands.push(operand);\n        }\n        operand.parent = this;\n    }\n\n    /**\n     * Return `true` if this expression is a leaf node (does have a value)\n     */\n    public get isLeaf(): boolean {\n        // if (this.value === null && !this.operands) throw \"Expr.isLeaf - bad expression\";\n        return !!this.value;\n    }\n\n    /**\n     * Make an expression object\n     *\n     * @param exprContext The expression context\n     * @param text The value of the expression\n     * @param field The parser's field context\n     * @param display The display value\n     * @param allowEmptyValue Determines how empty values will be processed when making the expression\n     */\n    public static makeExpr(exprContext: ExprContext, text: string, field: string, display: string, allowEmptyValue: boolean): Expr | undefined {\n        if (!Expr.getIsStructuredField(exprContext, Expr.resolveField(exprContext, field))) {\n            return new Expr({\n                exprContext: exprContext,\n                value: text,\n                field: field,\n                display: display\n            });\n        }\n\n        const values: IRef<string[] | undefined> = {value: undefined};\n        const locations: IRef<ExprLocation[] | undefined> = {value: undefined};\n        const operator: IRef<ExprOperator> = {value: ExprOperator.none};\n        const range: IRef<ExprRange> = {value: ExprRange.none};\n        Expr.parseValue(exprContext, text, field, allowEmptyValue, values, locations, operator, range);\n        if (range.value !== ExprRange.none && values.value && locations.value) {\n            const value1 = values.value[0];\n            const value2 = values.value[1];\n            const location1 = locations.value[0];\n            const location2 = locations.value[1];\n            if (range.value === ExprRange.gteLte && !Utils.eqNC(value1, \"*\") && !Utils.eqNC(value2, \"*\")) {\n                return new Expr({\n                    exprContext: exprContext,\n                    values: values.value,\n                    locations: locations.value,\n                    field: field,\n                    display: display,\n                    operator: ExprOperator.between\n                });\n            }\n            const expr1 = !Utils.eqNC(value1, \"*\") ? new Expr({\n                exprContext: exprContext,\n                value: value1,\n                locations: [location1],\n                field: field,\n                display: display,\n                operator: range.value === ExprRange.gteLt || range.value === ExprRange.gteLte ? ExprOperator.gte : ExprOperator.gt\n            }) : null;\n            const expr2 = !Utils.eqNC(value2, \"*\") ? new Expr({\n                exprContext: exprContext,\n                value: value2,\n                locations: [location2],\n                field: field,\n                display: display,\n                operator: range.value === ExprRange.gteLte || range.value === ExprRange.gtLte ? ExprOperator.lte : ExprOperator.lt\n            }) : undefined;\n            if (!expr1 && !expr2) {\n                return undefined;\n            }\n            if (!(!!expr1 && !!expr2)) return !!expr1 ? expr1 : expr2;\n            return new Expr({\n                exprContext: exprContext,\n                op1: expr1,\n                and: true,\n                op2: expr2,\n                display: display\n            });\n        }\n        return new Expr({\n            exprContext: exprContext,\n            values: values.value,\n            locations: locations.value,\n            field: field,\n            display: display,\n            operator: operator.value\n        });\n    }\n\n    private static resolveField(exprContext: ExprContext, field: string | null | undefined): string {\n        if (Utils.isString(field)) {\n            return exprContext.appService.resolveColumnName(field);\n        }\n        return \"\";\n    }\n\n    private static getColumn(exprContext: ExprContext, field: string | undefined): CCColumn | undefined {\n        return exprContext.appService.getColumn(field);\n    }\n\n    /**\n     * Return the {@link CCColumn} corresponding to this expression\n     */\n    get column(): CCColumn | undefined {\n        return Expr.getColumn(this.exprContext, this.field);\n    }\n\n    private static getIsStructuredField(exprContext: ExprContext, field: string | undefined): boolean {\n        if (!field) {\n            return false;\n        }\n        if (exprContext.disallowFulltext) {\n            return true;\n        }\n        else {\n            if (field[0] === \":\") {\n                return false; // :: => take partname over column\n            }\n            if (Utils.eqNCN(field, \"exists\", \"missing\")) {\n                return true;\n            }\n            return !!Expr.getColumn(exprContext, field);\n        }\n    }\n\n    /**\n     * Return `true` if the expression has a non-fulltext field. In this case the expression will be a leaf node\n     */\n    get isStructuredField(): boolean {\n        if (!this.isLeaf) {\n            return false;\n        }\n        return Expr.getIsStructuredField(this.exprContext, this.field);\n    }\n\n    /**\n     * Return `true` if the expression only contains non-fulltext fields\n     */\n    public get isStructured(): boolean {\n        if (this.mergedStructured) {\n            return true;\n        }\n        if (this.isLeaf) {\n            return this.isStructuredField;\n        }\n        if (!this.operands) {\n            return false;\n        }\n        for (const operand of this.operands) {\n            if (!operand.isStructured) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Return `true` if the expression and its ancestors do not have `not` set to `true`\n     */\n    public get isPositive(): boolean {\n        let positive = true;\n        let current: Expr = this;\n        while (current != null) {\n            positive = positive && !current.not;\n            current = current.parent;\n        }\n        return positive;\n    }\n\n    /**\n     * Return an `ExprValueLocation` object for the passed text. Leading and trailing\n     * whitespace is excluded\n     */\n    static getValueAndLocation(text: string): ExprValueLocation {\n        let start = 0;\n        let length = text.length;\n        const value1 = Utils.trimStart(text);\n        start += length - value1.length;\n        length -= length - value1.length;\n        const value2 = Utils.trimEnd(value1);\n        length -= length - value2.length;\n        return {\n            value: value2,\n            start: start,\n            length: length\n        };\n    }\n\n    private static parseValue(exprContext: ExprContext, text: string, field: string, allowEmptyValue: boolean, values: IRef<string[] | undefined>, locations: IRef<ExprLocation[] | undefined>, operator: IRef<ExprOperator>, range: IRef<ExprRange>) {\n        if (Utils.isEmpty(text) && !allowEmptyValue) {\n            return;\n        }\n        const first = text[0];\n        const last = text[text.length - 1];\n        let vl: ExprValueLocation;\n        if (\"[{\".includes(first) && \"]}\".includes(last)) {\n            text = text.substr(1, text.length - 2);\n            let sepLen = 4;\n            let sep = text.indexOf(\" TO \");\n            if (sep === -1) {\n                sepLen = 2;\n                sep = text.indexOf(\"..\");\n            }\n            if (sep === -1) {\n                const vls = ExprParser.valuesAndLocationsFromText(text, ',');\n                values.value = [];\n                locations.value = [];\n                vls.forEach(vl1 => {\n                    values.value!.push(vl1.value);\n                    locations.value!.push({start: 1 + vl1.start, length: vl1.length});\n                });\n                operator.value = ExprOperator.in;\n                return;\n            }\n            vl = Expr.getValueAndLocation(text.substr(0, sep));\n            values.value = [vl.value];\n            locations.value = [{start: 1 + vl.start, length: vl.length}];\n            vl = Expr.getValueAndLocation(text.substr(sep + sepLen));\n            values.value.push(vl.value);\n            locations.value.push({start: 1 + sep + sepLen + vl.start, length: vl.length});\n            if (first === \"[\") {\n                range.value = last === \"]\" ? ExprRange.gteLte : ExprRange.gteLt;\n            }\n            else { // '{'\n                range.value = last === \"}\" ? ExprRange.gtLt : ExprRange.gtLte;\n            }\n            return;\n        }\n        vl = {\n            value: text,\n            start: 0,\n            length: text.length\n        };\n        if (text.startsWith(\"=\")) {\n            operator.value = ExprOperator.eq;\n            vl = Expr.getValueAndLocation(text.substr(1));\n            vl.start += 1;\n        }\n        else if (text.startsWith(\">=\")) {\n            operator.value = ExprOperator.gte;\n            vl = Expr.getValueAndLocation(text.substr(2));\n            vl.start += 2;\n        }\n        else if (text.startsWith(\">\")) {\n            operator.value = ExprOperator.gt;\n            vl = Expr.getValueAndLocation(text.substr(1));\n            vl.start += 1;\n        }\n        else if (text.startsWith(\"<=\")) {\n            operator.value = ExprOperator.lte;\n            vl = Expr.getValueAndLocation(text.substr(2));\n            vl.start += 2;\n        }\n        else if (text.startsWith(\"<>\")) {\n            operator.value = ExprOperator.neq;\n            vl = Expr.getValueAndLocation(text.substr(2));\n            vl.start += 2;\n        }\n        else if (text.startsWith(\"<\")) {\n            operator.value = ExprOperator.lt;\n            vl = Expr.getValueAndLocation(text.substr(1));\n            vl.start += 1;\n        }\n        else if (text.startsWith(\"~\")) {\n            operator.value = ExprOperator.regex;\n            vl = Expr.getValueAndLocation(text.substr(1));\n            vl.start += 1;\n        }\n        else if (text.length > 1 && text.startsWith(\"/\") && text.endsWith(\"/\")) {\n            operator.value = ExprOperator.regex;\n            vl.value = text.substr(1, text.length - 2);\n            vl.start = 1;\n            vl.length = vl.value.length;\n        }\n        if (text.startsWith(\"\\\"\") && text.endsWith(\"\\\"\")) {\n            vl.value = text.substr(1, text.length - 2);\n            vl.start = 1;\n            vl.length = vl.value.length;\n        }\n        values.value = [vl.value];\n        locations.value = [{start: vl.start, length: vl.length}];\n    }\n\n    private static getOperatorText(operator: ExprOperator): string {\n        switch (operator) {\n            case ExprOperator.eq: return \"=\";\n            case ExprOperator.gt: return \">\";\n            case ExprOperator.gte: return \">=\";\n            case ExprOperator.lt: return \"<\";\n            case ExprOperator.lte: return \"<=\";\n            case ExprOperator.neq: return \"<>\";\n            case ExprOperator.regex: return \"REGEXP\";\n            case ExprOperator.like: return \"LIKE\";\n            case ExprOperator.contains: return \"CONTAINS\";\n            case ExprOperator.in: return \"IN\";\n            case ExprOperator.between: return \"BETWEEN\";\n            default: return \"=\";\n        }\n    }\n\n    /**\n     * Find the first `ExprValueInfo` object from a starting position in this expression\n     *\n     * @param start The position at which to start the search\n     */\n    findValue(start: number): ExprValueInfo | undefined {\n        if (this.isLeaf) {\n            if (start >= this.start && start <= this.start + this.length) {\n                if (!this.isStructured) {\n                    return {\n                        /* eslint-disable-next-line */\n                        value: this.value!,\n                        /* eslint-disable-next-line */\n                        field: this.field!,\n                        start: this.start,\n                        length: this.length\n                    };\n                }\n                else if (!!this.locations && this.values && this.values.length === this.locations.length) {\n                    for (let i = 0, ic = this.values.length; i < ic; i++) {\n                        const value = this.values[i];\n                        const location = this.locations[i];\n                        if (start >= this.start + location.start && start <= this.start + location.start + location.length) {\n                            return {\n                                value,\n                                /* eslint-disable-next-line */\n                                field: this.field!,\n                                start: this.start + location.start,\n                                length: location.length\n                            };\n                        }\n                    }\n                }\n            }\n        }\n        else if (!!this.operands) {\n            for (const expr of this.operands) {\n                const value = expr.findValue(start);\n                if (value) {\n                    return value;\n                }\n            }\n        }\n        return undefined;\n    }\n\n    /**\n     * Combine two expressions into a single expression. The second expression will be added to\n     * the first expression and the first expression returned if the first expression is non-leaf\n     * and is an `AND` expression and not negated. Otherwise, a new `AND` expression will be created\n     * to which both expressions are added as operands.\n     */\n    static combine(expr1: Expr, expr2: Expr): Expr {\n        if (!expr1) {\n            return expr2;\n        }\n        if (!expr2) {\n            return expr1;\n        }\n        if (!expr1.isLeaf && expr1.and && !expr1.not) {\n            if (expr1.isLeaf || !expr2.and || expr2.not) {\n                expr1.addOperand(expr2);\n            }\n            else {\n                for (const expr3 of expr2.operands) {\n                    expr1.addOperand(expr3);\n                }\n            }\n            return expr1;\n        }\n        return new Expr({\n            exprContext: expr1.exprContext,\n            op1: expr1,\n            and: true,\n            op2: expr2\n        });\n    }\n\n    private normalizeField(field: string | undefined): string | undefined {\n        if (field && field[0] === ExprParser.fieldPartnamePrefix) {\n            return field.substr(1);\n        }\n        return field;\n    }\n\n    private shouldDisplayField(): boolean {\n        if (!this.field && !this.parent) { // top level full text\n            return true;\n        }\n        return !!this.field && (!this.parent || !Utils.eqNC(this.field, this.parent.field || \"\"));\n    }\n\n    private getOperatorString(): string {\n        if (this.operator === ExprOperator.none || this.operator === ExprOperator.eq) {\n            return \"\";\n        }\n        return Expr.getOperatorText(this.operator);\n    }\n\n    private escapeValue(value: string | null | undefined): string {\n        if (!!value && !!this.column && (AppServiceHelpers.isString(this.column) || AppServiceHelpers.isCsv(this.column))) {\n            return ExprParser.escape(value);\n        }\n        return value || \"\";\n    }\n\n    private getValueString(): string {\n        if (this.operator === ExprOperator.between && this.values && this.values.length === 2) {\n            return `[${this.escapeValue(this.values[0])}..${this.escapeValue(this.values[1])}]`;\n        }\n        if (this.values && this.values.length > 1) {\n            const sb: string[] = [];\n            for (const value of this.values) {\n                if (sb.length > 0) {\n                    sb.push(\", \");\n                }\n                sb.push(this.escapeValue(value));\n            }\n            sb.unshift(\"[\");\n            sb.push(\"]\");\n            return sb.join(\"\");\n        }\n        return this.escapeValue(this.value);\n    }\n\n    private addFieldToString(sb: string[]): boolean {\n        let added = false;\n        if (this.shouldDisplayField()) {\n            sb.push(this.normalizeField(this.field) || \"text\");\n            added = true;\n        }\n        if (this.display) {\n            sb.push(ExprParser.escape(this.display));\n            added = true;\n        }\n        if (added) {\n            sb.push(\":\");\n        }\n        return added;\n    }\n\n    private _toString(withFields: boolean, inner: boolean): string {\n        const sb: string[] = [];\n        if (this.isLeaf) {\n            if (this.not) {\n                sb.push(\"NOT \");\n            }\n            if (withFields) {\n                this.addFieldToString(sb);\n            }\n            sb.push(this.getOperatorString());\n            sb.push(this.getValueString());\n        }\n        else {\n            if (!this.operands) {\n                return \"\";\n            }\n            if (this.not) {\n                sb.push(\"NOT \");\n            }\n            let bracketed = inner;\n            if (this.addFieldToString(sb)) {\n                bracketed = true;\n            }\n            if (bracketed) {\n                sb.push(\"(\");\n            }\n            let first = true;\n            for (const operand of this.operands) {\n                if (!first) {\n                    if (this.and) {\n                        sb.push(\" AND \");\n                    }\n                    else {\n                        sb.push(\" OR \");\n                    }\n                }\n                first = false;\n                sb.push(operand._toString(withFields, true));\n            }\n            if (bracketed) {\n                sb.push(\")\");\n            }\n        }\n        return sb.join(\"\");\n    }\n\n    /**\n     * Return a string representation of this expression\n     *\n     * @param withFields If `true`, include field names\n     */\n    toString(withFields = true): string {\n        return this._toString(withFields, false);\n    }\n\n    private addDisplay(options: ExprMessageOptions, ctxt: ExprMessageCtxt, display: string) {\n        this._addValue(options, ctxt, this.value || \"\", display);\n    }\n\n    private encodeHTML(text: string, options: ExprMessageOptions): string {\n        if (options && options.asHTML) {\n            return Utils.encodeHTML(text);\n        }\n        else {\n            return text;\n        }\n    }\n\n    private _addValue(options: ExprMessageOptions, ctxt: ExprMessageCtxt, value: string, display?: string) {\n        if (options.asHTML) {\n            ctxt.message.push(`<span class=\"sq-value\">`);\n        }\n        const column = this.exprContext.appService.getColumn(this.field);\n        const valueId = `value${ctxt.valueIndex++}`;\n        let _value: FieldValue = value;\n        let _display: string | undefined;\n        if (display) {\n            _display = this.encodeHTML(ExprParser.unescape(display), options);\n        }\n        if (column && AppServiceHelpers.isNumber(column) && Utils.testFloat(value)) {\n            _value = +value;\n        }\n        else if (column && AppServiceHelpers.isDate(column)) {\n            _value = Utils.fromSysDateStr(value) || value;\n        }\n        else if (column && AppServiceHelpers.isBoolean(column)) {\n            _value = Utils.isTrue(value);\n        }\n        else if (Utils.isString(_value)) {\n            _value = this.encodeHTML(_value, options);\n        }\n        ctxt.message.push(`{${valueId}}`);\n        ctxt.values[valueId] = column\n            ? this.exprContext.formatService.formatFieldValue({value: _value, display: _display}, column)\n            : _display || _value;\n        if (options.asHTML) {\n            ctxt.message.push(`</span>`);\n        }\n    }\n\n    private addValue(options: ExprMessageOptions, ctxt: ExprMessageCtxt) {\n        if (this.values) {\n            if (this.operator === ExprOperator.between && this.values.length === 2) {\n                this._addValue(options, ctxt, this.values[0]);\n                ctxt.message.push(\" \");\n                this.addOperator(\"AND\", options, ctxt);\n                ctxt.message.push(\" \");\n                this._addValue(options, ctxt, this.values[1]);\n            }\n            else if (this.values.length > 1) {\n                let first = true;\n                for (const value of this.values) {\n                    ctxt.message.push(first ? \"[\" : \", \");\n                    first = false;\n                    this._addValue(options, ctxt, value);\n                }\n                ctxt.message.push(\"]\");\n            }\n            else {\n                this._addValue(options, ctxt, this.values[0]);\n            }\n        }\n    }\n\n    private addText(options: ExprMessageOptions, ctxt: ExprMessageCtxt, text: string) {\n        const valueId = `value${ctxt.valueIndex++}`;\n        const message = `{${valueId}}`;\n        ctxt.message.push(message);\n        ctxt.values[valueId] = this.encodeHTML(text, options);\n    }\n\n    private addFieldLabel(options: ExprMessageOptions, ctxt: ExprMessageCtxt) {\n        const displayObj = this.displayObj;\n        if (displayObj && displayObj.label) {\n            this.addText(options, ctxt, displayObj.label);\n        }\n        else if (this.field) {\n            const label = this.exprContext.appService.getLabel(this.normalizeField(this.field) || \"\");\n            this.addText(options, ctxt, label);\n        }\n        else {\n            if (!this.isStructured) {\n                const label = this.exprContext.appService.getLabel(\"text\");\n                this.addText(options, ctxt, label);\n            }\n            else {\n                const fields = this.getFields();\n                fields.forEach((field, index) => {\n                    if (index !== 0) {\n                        this.addText(options, ctxt, \"/\");\n                    }\n                    const label = this.exprContext.appService.getLabel(field);\n                    this.addText(options, ctxt, label);\n                });\n            }\n        }\n    }\n\n    private addField(options: ExprMessageOptions, ctxt: ExprMessageCtxt) {\n        if (options.asHTML) {\n            ctxt.message.push(`<span class=\"sq-field\">`);\n        }\n        this.addFieldLabel(options, ctxt);\n        if (options.asHTML) {\n            ctxt.message.push(`</span>`);\n            ctxt.message.push(`<span class=\"sq-separator\">`);\n        }\n        this.addText(options, ctxt, \"msg#system.fieldSeparator\");\n        if (options.asHTML) {\n            ctxt.message.push(`</span>`);\n        }\n    }\n\n    private addOperator(operator: string, options: ExprMessageOptions, ctxt: ExprMessageCtxt) {\n        if (!operator) {\n            return;\n        }\n        if (options.asHTML) {\n            ctxt.message.push(`<span class=\"sq-operator\">`);\n        }\n        ctxt.message.push(this.encodeHTML(operator, options));\n        if (options.asHTML) {\n            ctxt.message.push(`</span>`);\n        }\n    }\n\n    private _toMessage(ctxt: ExprMessageCtxt, options?: ExprMessageOptions): ExprMessage {\n        const inner = ctxt.inner;\n        ctxt.inner = true;\n        if (!options) {\n            options = {};\n        }\n        if (Utils.isUndefined(options.useDisplay)) {\n            options.useDisplay = true;\n        }\n\n        const displayObj = this.displayObj;\n        const display = (displayObj ? displayObj.display : undefined) || this.display;\n        const showNot = this.not && (inner || !options.hideOuterNot);\n        const showField = (options.withFields || inner) && this.shouldDisplayField();\n        if (options.useDisplay && !!display) {\n            if (showNot) {\n                this.addOperator(\"NOT\", options, ctxt);\n                ctxt.message.push(\" \");\n            }\n            if (showField) {\n                this.addField(options, ctxt);\n            }\n            this.addDisplay(options, ctxt, display);\n        }\n        else if (this.isLeaf) {\n            if (showNot) {\n                this.addOperator(\"NOT\", options, ctxt);\n                ctxt.message.push(\" \");\n            }\n            if (showField) {\n                this.addField(options, ctxt);\n            }\n            const operator = this.getOperatorString();\n            if (operator) {\n                this.addOperator(operator, options, ctxt);\n                ctxt.message.push(\" \");\n            }\n            this.addValue(options, ctxt);\n        }\n        else {\n            if (!this.operands) {\n                return {message: \"\"};\n            }\n            if (showNot) {\n                this.addOperator(\"NOT\", options, ctxt);\n                ctxt.message.push(\" \");\n            }\n            let bracketed = inner;\n            if (showField) {\n                this.addField(options, ctxt);\n                bracketed = true;\n            }\n            if (bracketed) {\n                ctxt.message.push(\"(\");\n            }\n            let first = true;\n            for (const operand of this.operands) {\n                if (!first) {\n                    if (this.and) {\n                        ctxt.message.push(\" \");\n                        this.addOperator(\"AND\", options, ctxt);\n                        ctxt.message.push(\" \");\n                    }\n                    else {\n                        ctxt.message.push(\" \");\n                        this.addOperator(\"OR\", options, ctxt);\n                        ctxt.message.push(\" \");\n                    }\n                }\n                first = false;\n                operand._toMessage(ctxt, options);\n            }\n            if (bracketed) {\n                ctxt.message.push(\")\");\n            }\n        }\n        if (inner) {\n            return {message: \"\"};\n        }\n        return {\n            message: ctxt.message.join(\"\"),\n            values: ctxt.values\n        };\n    }\n\n    /**\n     * Return an `ExprMessage` for the expression which can be used with [IntlService.formatMessage]{@link IntlService#formatMessage}\n     * for display purposes\n     */\n    toMessage(options?: ExprMessageOptions): ExprMessage {\n        return this._toMessage({\n            inner: false,\n            message: [\"txt#\"],\n            values: {},\n            valueIndex: 0\n        }, options);\n    }\n\n    private static matchNode(context: ExprContext, expr1: Expr, expr2: Expr): boolean {\n        if (expr1.isLeaf !== expr2.isLeaf) {\n            return false;\n        }\n        if (expr1.isLeaf) {\n            if (expr1.isStructured !== expr2.isStructured) {\n                return false;\n            }\n            if (expr1.not !== expr2.not) {\n                return false;\n            }\n            const field1 = context.appService.resolveColumnAlias(expr1.field);\n            const field2 = context.appService.resolveColumnAlias(expr2.field);\n            if (field1 !== field2) {\n                return false;\n            }\n            const operator1 = expr1.operator === ExprOperator.none ? ExprOperator.eq : expr1.operator;\n            const operator2 = expr2.operator === ExprOperator.none ? ExprOperator.eq : expr2.operator;\n            if (operator1 !== operator2) {\n                return false;\n            }\n        }\n        if (!expr1.isLeaf) {\n            if (expr1.and !== expr2.and) {\n                return false;\n            }\n            // All of the structured and non-structured operands in expr2 must be in expr1 so check that there are at least enough\n            // operands available. (The actual matching of the contents of the operand nodes is done in the recursive calls to MatchNode)\n            if (!expr1.operands !== !expr2.operands) {\n                return false;\n            }\n            let expr1StructuredCount = 0, expr1UnstructuredCount = 0, expr2StructuredCount = 0, expr2UnstructuredCount = 0;\n            expr1.operands.forEach((operand) => { if (operand.isStructured) { expr1StructuredCount++; } else { expr1UnstructuredCount++; }});\n            expr2.operands.forEach((operand) => { if (operand.isStructured) { expr2StructuredCount++; } else { expr2UnstructuredCount++; }});\n            if ((expr2StructuredCount > expr1StructuredCount) || (expr2UnstructuredCount > expr1UnstructuredCount)) {\n                return false;\n            }\n        }\n        const values1Length = expr1.values ? expr1.values.length : 0;\n        const values2Length = expr2.values ? expr2.values.length : 0;\n        if (values1Length !== values2Length) {\n            return false;\n        }\n        if (values1Length && expr1.values && expr2.values) {\n            for (const value1 of expr1.values) {\n                let found = false;\n                for (const value2 of expr2.values) {\n                    if (Utils.eqNC(value1, value2)) {\n                        found = true;\n                    }\n                }\n                if (!found) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Return `true` if this expression matches the passed one\n     */\n    matchNode(expr: Expr): boolean {\n        return Expr.matchNode(this.exprContext, this, expr);\n    }\n\n    /**\n     * Returns the matching expression or sub-expression in this expression with the passed one.\n     *\n     * @param expr The expression to match\n     * @param filter An option filter function called on first level candidate sub-expressions\n     * before matching within them\n     */\n    find(expr: Expr, filter?: (expr: Expr) => boolean): Expr | null {\n        if (this.matchNode(expr)) {\n            if (!this.isLeaf && this.operands) {\n                for (const child1 of expr.operands) {\n                    let found = false;\n                    for (const child2 of this.operands) {\n                        if (filter && filter(child2)) {\n                            continue;\n                        }\n                        if (child2.find(child1)) {\n                            found = true;\n                            break;\n                        }\n                    }\n                    if (!found) {\n                        return null;\n                    }\n                }\n            }\n            return this;\n        }\n        else {\n            if (!this.isLeaf && this.operands) {\n                for (const child of this.operands) {\n                    if (filter && filter(child)) {\n                        continue;\n                    }\n                    if (child.find(expr)) {\n                        return child;\n                    }\n                }\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Perform the passed `action` on this expression and any descendant operands\n     *\n     * @param action The action to perform\n     */\n    forEach(action: (expr: Expr) => void) {\n        action(this);\n        if (this.operands) {\n            for (const operand of this.operands) {\n                operand.forEach(action);\n            }\n        }\n    }\n\n    /**\n     * Execute the callback function on this node and any descendants until the callback returns a truthy value\n     * in which case immediately return `true`. Otherwise return `false`.\n     */\n    some(callback: (expr: Expr) => boolean): boolean {\n        if (callback(this)) {\n            return true;\n        }\n        if (this.operands) {\n            for (const operand of this.operands) {\n                if (operand.some(callback)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Execute the callback function on this node and any descendants until the callback returns a falsy value\n     * in which case, immediately return `false`. Otherwise return `true`.\n     */\n    every(callback: (expr: Expr) => boolean): boolean {\n        if (!callback(this)) {\n            return false;\n        }\n        if (this.operands) {\n            for (const operand of this.operands) {\n                if (!operand.every(callback)) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Return `true` if the exoression has at least one fulltext operand.\n     * The test on `isPositive` filters expressions that only contain\n     * negative fulltext terms which will be ignored on the server. Fulltext\n     * expressions must have at least one positive term.\n     */\n    get hasRelevance(): boolean {\n        return this.some(expr => expr.isLeaf && !expr.isStructured && expr.isPositive);\n    }\n\n    /**\n     * Return an array of all fields used in this expression\n     */\n    getFields(): string[] {\n        const fields: string[] = [];\n        this.forEach((expr) => {\n            const field = this.exprContext.appService.resolveColumnAlias(expr.field);\n            if (field) {\n                if (!fields.find((field1) => Utils.eqNC(field, field1))) {\n                    fields.push(field);\n                }\n            }\n        });\n        return fields;\n    }\n\n    /**\n     * Return an array of all values used in this expression that pertain to the passed field and where the associated `isPositive`\n     * field matches the passed `positive` parameter\n     *\n     * @param field The field for which values are to be returned\n     * @param positive The value to test against `isPositive`\n     */\n    getValues(field: string, positive = true): string[] {\n        const values: string[] = [];\n        const column = this.exprContext.appService.resolveColumnName(field);\n        this.forEach((expr) => {\n            if (column) {\n                const column1 = this.exprContext.appService.resolveColumnName(expr.field);\n                if (!Utils.eqNC(column, column1)) {\n                    return;\n                }\n            }\n            if (expr.isLeaf && expr.isPositive === positive && expr.values) {\n                values.push(...expr.values);\n            }\n        });\n        return values;\n    }\n\n    private getDataValue(data: ExprEvaluationContext, field?: string, defaultScope?: string): any {\n        if (!data) {\n            return undefined;\n        }\n        const fields = Utils.split(field || \"\", \".\");\n        if (fields.length >= 1 && Utils.isUndefined(data[fields[0]]) && !!defaultScope) {\n            // By default, look on the \"defaultScope\" sub-object\n            fields.unshift(...Utils.split(defaultScope, \".\"));\n        }\n        let value: any = data;\n        for (const _field of fields) {\n            if (!value) {\n                break;\n            }\n            value = value[_field];\n        }\n        return value;\n    }\n\n    private getWildcardRegExp(value: string): RegExp | undefined {\n        if (value) {\n            let regExp = this.evaluationRegExps[value];\n            if (!Utils.isUndefined(regExp)) {\n                return regExp;\n            }\n            let haveWildcards = false;\n            let escaping = false;\n            const sb: string[] = [];\n            for (const ch of value) {\n                switch (ch) {\n                    // Handle wildcards and wildcard escaping\n                    case \"\\\\\":\n                        if (escaping) {\n                            sb.push(\"\\\\\\\\\");\n                            escaping = false;\n                        }\n                        else {\n                            escaping = true;\n                        }\n                        break;\n                    case \"*\":\n                        if (escaping) {\n                            sb.push(\"\\\\\");\n                            sb.push(ch);\n                            escaping = false;\n                        }\n                        else {\n                            haveWildcards = true;\n                            sb.push(\".*?\");\n                        }\n                        break;\n                    case \"?\":\n                        if (escaping) {\n                            sb.push(\"\\\\\");\n                            sb.push(ch);\n                            escaping = false;\n                        }\n                        else {\n                            haveWildcards = true;\n                            sb.push(\".\");\n                        }\n                        break;\n                    // Escape other regexp special characters\n                    case \"-\":\n                    case \"/\":\n                    case \"^\":\n                    case \"$\":\n                    case \"+\":\n                    case \".\":\n                    case \"(\":\n                    case \")\":\n                    case \"|\":\n                    case \"[\":\n                    case \"]\":\n                    case \"{\":\n                    case \"}\":\n                        sb.push(\"\\\\\");\n                        sb.push(ch);\n                        escaping = false;\n                        break;\n                    // All other characters just emit\n                    default:\n                        sb.push(ch);\n                        escaping = false;\n                        break;\n                }\n            }\n            if (haveWildcards) {\n                regExp = new RegExp(\"^\" + sb.join(\"\") + \"$\", \"i\");\n                this.evaluationRegExps[value] = regExp;\n                return regExp;\n            }\n            else {\n                this.evaluationRegExps[value] = undefined;\n            }\n        }\n        return undefined;\n    }\n\n    // NB comparisons with NaN always return false\n    private compare(value: string | string[] | undefined, dataValue: any, equality?: boolean): number {\n        if (Utils.isArray(dataValue) && dataValue.length === 0) {\n            return NaN;\n        }\n        const column = Expr.getColumn(this.exprContext, this.field || \"\");\n        if (Utils.isArray(dataValue) || Utils.isArray(value)) {\n            // \"in\" / \"contains\"\n            if (!Utils.isArray(dataValue)) {\n                dataValue = [dataValue];\n            }\n            if (Utils.isArray(value)) {\n                if (value.length === 0) {\n                    return NaN;\n                }\n            }\n            else {\n                value = [value + \"\"];\n            }\n            // At least one value in the value array must match a value in the dataValue array\n            for (const value1 of value) {\n                for (const dataValue1 of dataValue) {\n                    if (this.compare(value1, dataValue1, true) === 0) {\n                        return 0;\n                    }\n                }\n            }\n            return NaN;\n        }\n        if (!Utils.isArray(value)) {\n            value = ExprParser.unescape(value || \"\");\n            if (column && column.parser) {\n                value = this.exprContext.formatService.parseValue(value, column.parser);\n            }\n            if (AppServiceHelpers.isNumber(column)) {\n                if (!Utils.isNumber(dataValue)) {\n                    dataValue = 0;\n                }\n                const _value = Utils.toNumber(value);\n                return dataValue - _value;\n            }\n            if (AppServiceHelpers.isDate(column)) {\n                if (Utils.isString(dataValue)){\n                    dataValue = Utils.toDate(dataValue);\n                }\n                if (Utils.isDate(dataValue)) {\n                    const _value = this.exprContext.intlService.parseDate(value);\n                    if (_value) {\n                        return dataValue.getTime() - _value.getTime();\n                    }\n                }\n                return NaN;\n            }\n            if (AppServiceHelpers.isBoolean(column)) {\n                const _value = Utils.isTrue(value) ? 1 : 0;\n                return (dataValue ? 1 : 0) - _value;\n            }\n            dataValue = dataValue || \"\";\n            if (Utils.isString(dataValue)) {\n                dataValue = ExprParser.unescape(dataValue);\n                if (equality) {\n                    const regExp = this.getWildcardRegExp(value);\n                    if (regExp) {\n                        return regExp.test(dataValue) ? 0 : -1;\n                    }\n                }\n                return Utils.compare(dataValue, value);\n            }\n        }\n        return NaN;\n    }\n\n    /**\n     * Evaluate this expression using `data` to provide field values. Field values\n     * can contain scopes (full stop separated components) to reference sub-objects\n     * in the data\n     *\n     * @param data The field values to be used in the evaluation\n     * @param defaultScope If a field value cannot be resolved then try to retrieve a value with this scope prepended to the field name\n     * @return The boolean result of the expression evaluation\n     */\n    evaluate(data: ExprEvaluationContext, defaultScope?: string): boolean {\n        let ret: boolean;\n        if (this.isLeaf) {\n            if (!this.isStructured) {\n                ret = false;\n            }\n            else {\n                if (Utils.eqNC(this.field || \"\", \"exists\")) {\n                    const dataValue = this.getDataValue(data, this.value, defaultScope);\n                    ret = !Utils.isUndefined(dataValue);\n                }\n                else if (Utils.eqNC(this.field || \"\", \"missing\")) {\n                    const dataValue = this.getDataValue(data, this.value, defaultScope);\n                    ret = Utils.isUndefined(dataValue);\n                }\n                else {\n                    const dataValue = this.getDataValue(data, this.field, defaultScope);\n                    switch (this.operator) {\n                        case ExprOperator.none:\n                        case ExprOperator.eq:\n                            ret = this.compare(this.value, dataValue, true) === 0;\n                            break;\n                        case ExprOperator.gt:\n                            ret = this.compare(this.value, dataValue) > 0;\n                            break;\n                        case ExprOperator.gte:\n                            ret = this.compare(this.value, dataValue) >= 0;\n                            break;\n                        case ExprOperator.lt:\n                            ret = this.compare(this.value, dataValue) < 0;\n                            break;\n                        case ExprOperator.lte:\n                            ret = this.compare(this.value, dataValue) <= 0;\n                            break;\n                        case ExprOperator.neq:\n                            ret = this.compare(this.value, dataValue, true) !== 0;\n                            break;\n                        case ExprOperator.regex: {\n                            const regExp = new RegExp(this.value || \"\");\n                            ret = regExp.test(dataValue + \"\");\n                            break;\n                        }\n                        case ExprOperator.like: // not currently generated in parse\n                            ret = this.compare(this.value + \"*\", dataValue, true) === 0;\n                            break;\n                        case ExprOperator.in:\n                            ret = this.compare(this.values, dataValue, true) === 0;\n                            break;\n                        case ExprOperator.contains: // not currently generated in parse\n                            ret = this.compare(this.value, dataValue, true) === 0;\n                            break;\n                        case ExprOperator.between:\n                            ret = !!this.values &&\n                                this.compare(this.values[0], dataValue) >= 0 && this.compare(this.values[1], dataValue) <= 0;\n                            break;\n                    }\n                }\n            }\n        }\n        else {\n            ret = !!this.and;\n            for (const operand of this.operands) {\n                const ret1 = operand.evaluate(data, defaultScope);\n                if (this.and) {\n                    ret = ret && ret1;\n                    if (!ret) {\n                        break;\n                    }\n                }\n                else {\n                    ret = ret || ret1;\n                }\n            }\n        }\n        if (this.not) {\n            ret = !ret;\n        }\n        return ret;\n    }\n}\n\n/**\n * @ignore\n */\nexport const enum Token {\n    invalid=-1,\n    or=0,\n    and=1,\n    not=2,\n    near=3,\n    infixNear=4,\n    lPar=5,\n    rPar=6,\n    eof=7,\n    value=8\n}\n\n/**\n * @ignore\n */\nconst enum Act {\n    s,  // shift\n    r,  // reduce\n    a,  // accept\n    e1, // error : missing right parenthesis\n    e2, // error : missing operator\n    e3, // error : unbalanced right parenthesis\n    e4  // error : invalid function argument\n}\n\n/**\n * Parsing options\n */\nexport interface ExprParserOptions {\n    /**\n     * If `true` then a fielded search expression with no value will not generate an error. This would be used\n     * when providing feedback during text entry\n     */\n    allowEmptyValues?: boolean;\n    /**\n     * If `true`, fields can contain the scoping character (`.`). This is typically used with `Expr.evaluate`\n     */\n    allowScopedFields?: boolean;\n    /**\n     * If `true` then arbitrary field names are permitted. This is typically used with `Expr.evaluate`\n     */\n    disallowFulltext?: boolean;\n}\n\n/**\n * @ignore\n */\nexport class ExprParserOperator {\n    public static invalid: ExprParserOperator = new ExprParserOperator(Token.invalid);\n    public static or: ExprParserOperator = new ExprParserOperator(Token.or);\n    public static and: ExprParserOperator = new ExprParserOperator(Token.and);\n    public static not: ExprParserOperator = new ExprParserOperator(Token.not);\n    public static lPar: ExprParserOperator = new ExprParserOperator(Token.lPar);\n    public static rPar: ExprParserOperator = new ExprParserOperator(Token.rPar);\n    public static eof: ExprParserOperator = new ExprParserOperator(Token.eof);\n\n    public tok: Token;\n    public tokValue: string;\n    public tokValuePos: number;\n    public tokValueLen: number;\n\n    constructor(tok: Token, value: string = \"\", valuePos: number = -1, valueLen: number = -1) {\n        this.tok = tok;\n        this.tokValue = value;\n        this.tokValuePos = valuePos;\n        this.tokValueLen = valueLen;\n    }\n}\n\n/**\n * A parser for Sinequa fielded search expressions. Such expressions allow filters to be specified in fulltext and\n * can be combined with boolean operators to build complex queries.\n *\n * A single fielded search clause has this form:\n * ``<fieldname>[`display value`]:[:][<operator>]<value>``\n *\n * A field name is either a column name or alias or a partname. In the case of a partname and column name clashing then\n * the field is treated as a column. Two colons can be specified as the separator to denote that the field is a partname.\n * An optional display value can follow the fieldname enclosed in backquote characters\n *\n * Operators are: `=` (default), `>=`, `>`, `<=`, `<`, `~` (regexp)\n * In addition, a regular expression can be specified by enclosing the value in `/` characters\n *\n * An inclusive range of values can be specified using a square bracket syntax: `[value1..value2]`\n * An exclusive range of values can be specified using a curly bracket syntax: `{value1..value2}`\n * The brackets can be mixed. For example: `age:{5..13]` expresses `13 >= age > 5`.\n *\n * For multi-value csv fields an `IN` condition can be expressed using a comma-separated list of values enclosed in square brackets.\n * For example: `authors:[Proust, Orwell, Dickens]`\n *\n * If a value contains reserved characters then it can be enclosed in backquote characters to prevent the parser interpreting them\n * incorrectly. For example: ``code: `a:b:c` ``\n *\n * The parser also supports a NEAR operator to allow searching for terms close to each other. There are two forms suppported:\n * * infix - `term1 NEAR[/n] term2` where `n` is the maximum number of words between the two terms for them to match\n * * function - `NEAR[/n](term1, term2, term3, ...)` where `n` is \"window\" size within which all the terms must be present for them\n * to match. The minimum useful value for n is thus equal to the number of terms passed to the operator.\n *\n * Fielded search expresions can be combined with the boolean operators `AND`, `OR` and `NOT` and brackets used for grouping.\n * For example: `football (age:>=7 AND (name:smith OR name:jones))`\n */\nexport class ExprParser {\n\n    public static fieldPartnamePrefix = \"@\";\n    private static parsetbl: Act[][] = [\n    /* stk  ------------- input ------------*/\n    /*\t\t                                 INFIX                  */\n    /*\t\t         OR\t   AND\t NOT   NEAR  NEAR  (\t  )\t     $  */\n    /*OR */         [Act.r, Act.s, Act.s, Act.s, Act.s, Act.s, Act.r, Act.r],\n    /*AND*/         [Act.r, Act.r, Act.s, Act.s, Act.s, Act.s, Act.r, Act.r],\n    /*NOT*/         [Act.r, Act.r, Act.s, Act.s, Act.r, Act.s, Act.r, Act.r],\n    /*NEAR*/        [Act.r, Act.r, Act.s, Act.s, Act.r, Act.s, Act.r, Act.r],\n    /*INFIXNEAR*/   [Act.r, Act.r, Act.s, Act.s, Act.r, Act.s, Act.r, Act.r],\n    /*(*/           [Act.s, Act.s, Act.s, Act.s, Act.s, Act.s, Act.s, Act.e1],\n    /*)*/           [Act.r, Act.r, Act.r, Act.r, Act.r, Act.e2, Act.r, Act.r],\n    /*$*/           [Act.s, Act.s, Act.s, Act.s, Act.s, Act.s, Act.e3, Act.a]\n    ];\n\n    private exprContext: ExprContext;\n    private options: ExprParserOptions;\n    private expressions: Expr[];\n    private operators: ExprParserOperator[];\n    private fields: string[]; // pushed on '(', popped on ')'\n    private displays: string[]; // pushed on '(', popped on ')'\n    private op: ExprParserOperator;\n    private prevOp: ExprParserOperator;\n    private saveOp: ExprParserOperator; // for default conjunction operator\n    private field: string;\n    private display: string;\n    private text: string;\n    private current: number;\n    private length: number;\n\n    private constructor(exprContext: ExprContext, options?: ExprParserOptions) {\n        this.exprContext = exprContext;\n        this.options = options || {};\n        this.exprContext.disallowFulltext = this.options.disallowFulltext;\n        this.expressions = [];\n        this.operators = [];\n        this.fields = [];\n        this.displays = [];\n        this.text = \"\";\n        this.current = 0;\n        this.length = 0;\n        this.op = this.prevOp = this.saveOp = ExprParserOperator.invalid;\n    }\n\n    /**\n     * Escape a string so that the characters in it are not processed by the fielded search expression parser.\n     * Single occurrences of the backslash character are replaced by two backslashes and backquote characters\n     * are prefixed by a backslash. Finally, the string is enclosed in backquotes.\n     *\n     * For example: `` a\\`\\b `` => `` a\\\\\\`\\\\b ``\n     */\n    // \\ => \\\\\n    // ` => \\`\n    // then surround with ``\n    public static escape(value: string | undefined): string {\n        if (!value) {\n            return \"``\";\n        }\n        value = String(value); // make sure we have a string\n        if (value.search(/[\\\\`]/) === -1) {\n            return \"`\" + value + \"`\";\n        }\n        const sb: string[] = [\"`\"];\n        for (let i = 0, ic = value.length; i < ic; i++) {\n            const ch = value[i];\n            if (ch === \"\\\\\" || ch === \"`\") {\n                sb.push(\"\\\\\");\n            }\n            sb.push(ch);\n        }\n        sb.push(\"`\");\n        return sb.join(\"\");\n    }\n\n    private static isEscaped(value: string | undefined): boolean {\n        return !!value && value.length >= 2 && value[0] === \"`\" && value[value.length - 1] === \"`\";\n    }\n\n    /**\n     * Perform the reverse operation to [ExprParser.escpae]{@link ExprParser#escape}\n     */\n    // remove surrounding ``\n    // \\\\ => \\\n    // \\` => `\n    public static unescape(value: string): string {\n        if (!ExprParser.isEscaped(value)) {\n            return value;\n        }\n        const sb: string[] = [];\n        for (let i = 1, ic = value.length - 1; i < ic; i++) {\n            let ch = value[i];\n            if (ch === \"\\\\\") {\n                if (i >= ic - 1) { // we end with a \\ => drop it\n                    continue;\n                }\n                ch = value[++i];\n            }\n            sb.push(ch);\n        }\n        return sb.join(\"\");\n    }\n\n    /**\n     * @ignore\n     */\n    public static unescapeList(values: string[]): string[] {\n        if (!values) {\n            return values;\n        }\n        const values1: string[] = [];\n        for (let _i = 0, _a = values; _i < _a.length; _i++) {\n            const value = _a[_i];\n            values1.push(ExprParser.unescape(value));\n        }\n        return values1;\n    }\n\n    /**\n     * @ignore\n     */\n    public static valuesAndLocationsFromText(text: string, separator: string): ExprValueLocation[] {\n        if (Utils.isEmpty(text)) {\n            return [];\n        }\n        if (!text.includes(separator)) {\n            return [{value: text, start: 0, length: text.length}];\n        }\n        const values: ExprValueLocation[] = [];\n        const length = text.length;\n        let current = 0;\n        let currentStart = 0;\n        const sb: string[] = [];\n        let value: ExprValueLocation;\n        while (true) {\n            if (current >= length) {\n                value = Expr.getValueAndLocation(sb.join(\"\"));\n                value.start += currentStart;\n                if (!Utils.isEmpty(value.value)) {\n                    values.push(value);\n                }\n                break;\n            }\n            const ch = text[current];\n            if (ch === \"\\\\\") {\n                sb.push(ch);\n                current++;\n                if (current < length) {\n                    const ch1 = text[current];\n                    if (ch1 === \"\\\\\" || ch1 === \"`\") {\n                        sb.push(ch1);\n                        current++;\n                    }\n                }\n            }\n            else if (ch === \"`\") {\n                const last: IRef<number> = {value: 0};\n                const s = ExprParser.matchUntil(text, length, current, current + 1, \"`\", last);\n                if (!!s) {\n                    sb.push(s);\n                    current = last.value;\n                }\n                else {\n                    sb.push(ch);\n                    current++;\n                }\n            }\n            else if (ch === separator) {\n                value = Expr.getValueAndLocation(sb.join(\"\"));\n                value.start += currentStart;\n                sb.length = 0;\n                if (!Utils.isEmpty(value.value)) {\n                    values.push(value);\n                }\n                current++;\n                currentStart = current;\n            }\n            else {\n                sb.push(ch);\n                current++;\n            }\n        }\n        return values;\n    }\n\n    private matchKeyword(keyword: string, sbCurrentValue: string[], suffixCh?: string): boolean {\n        if (sbCurrentValue.length !== 0) {\n            const currentValue = sbCurrentValue.join(\"\");\n            if (!!currentValue && !\" \\r\\n\\t\".includes(currentValue[currentValue.length - 1])) {\n                return false;\n            }\n        }\n        if (Utils.isEmpty(keyword)) {\n            return false;\n        }\n        const keywordLen = keyword.length;\n        if (this.current + keywordLen > this.length) {\n            return false;\n        }\n        for (let i = 0, ic = keywordLen; i < ic; i++) {\n            const ch = this.text[this.current + i];\n            const kh = keyword[i];\n            if (ch !== kh) {\n                return false;\n            }\n        }\n        if (this.current + keywordLen < this.length) {\n            const nch = this.text[this.current + keywordLen];\n            if (nch !== suffixCh && !\" \\r\\n\\t(\".includes(nch)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    private matchUntil(first: number, start: number, endChars: string, last: IRef<number>): string | undefined {\n        return ExprParser.matchUntil(this.text, this.length, first, start, endChars, last);\n    }\n\n    private static matchUntil(text: string, length: number, first: number, start: number, endChars: string, last: IRef<number>): string | undefined {\n        last.value = start;\n        let found = false;\n        const sb: string[] = [text.substr(first, start - first)];\n        while (last.value < length) {\n            let ch = text[last.value++];\n            if (ch === \"\\\\\") {\n                sb.push(ch);\n                if (last.value < length) {\n                    ch = text[last.value++];\n                    if (ch === \"\\\\\" || ch === \"`\") {\n                        sb.push(ch);\n                        continue;\n                    }\n                }\n            }\n            sb.push(ch);\n            if (endChars.includes(ch)) {\n                found = true;\n                break;\n            }\n        }\n        if (!found) {\n            return undefined;\n        }\n        return sb.join(\"\");\n    }\n\n    private matchSimpleValue(start: number): string {\n        const first = this.current;\n        let last = start;\n        while (last < this.length) {\n            const ch = this.text[last];\n            if (\" \\r\\n\\t)\".includes(ch)) {\n                break;\n            }\n            last++;\n        }\n        if (last === start) {\n            return \"\";\n        }\n        return this.text.substr(first, last - first);\n    }\n\n    private getTerminators(ch: string, allowRanges: boolean): string {\n        if (ch === \"\\\"\") return \"\\\"\";\n        if (ch === \"[\") return allowRanges ? \"]}\" : \"]\";\n        if (ch === \"{\") return allowRanges ? \"}]\" : \"}\";\n        if (ch === \"/\") return \"/\";\n        if (ch === \"(\") return \")\";\n        if (ch === \"`\") return \"`\";\n        return \"\";\n    }\n\n    private canBeTokValue(value: string, canBeEmpty = true) {\n        return !Utils.isEmpty(value) || (canBeEmpty && this.options.allowEmptyValues && !Utils.isEmpty(this.field));\n    }\n\n    private _getTokValue(value: string, canBeEmpty = true): boolean {\n        // Current is pointing at the next non-whitepspace character after this value\n        if (value === null) return false;\n        let pos = this.current;\n        const len = value.length;\n        value = Utils.trimEnd(value);\n        pos -= len - value.length;\n        value = value.trim();\n        if (this.canBeTokValue(value, canBeEmpty)) {\n            this.op = new ExprParserOperator(Token.value, value, pos - value.length, value.length);\n            return true;\n        }\n        return false;\n    }\n\n    private getTokValue(sb: string[], canBeEmpty = true): boolean {\n        if (!sb) {\n            return false;\n        }\n        return this._getTokValue(sb.join(\"\"), canBeEmpty);\n    }\n\n    private ensureNearValue(value: string): string {\n        const defaultNearValue = this.exprContext.appService.ccquery ? this.exprContext.appService.ccquery.defaultNearValue : 0;\n        let near = Utils.toInt(value, defaultNearValue);\n        if (near < 0) {\n            near = defaultNearValue;\n        }\n        return near.toString();\n    }\n\n    private findDisplay(value: string): number {\n        if (!value || value.length < 3) {\n            return -1;\n        }\n        if (value[value.length - 1] !== \"`\") {\n            return -1;\n        }\n        let pos = value.length - 2;\n        while (pos !== -1) {\n            pos = value.lastIndexOf(\"`\", pos);\n            if (pos !== -1) {\n                let escapes = 0;\n                let pos1 = pos - 1;\n                while (pos1 >= 0) {\n                    if (value[pos1] !== \"\\\\\") {\n                        break;\n                    }\n                    escapes++;\n                    pos1--;\n                }\n                if (escapes % 2 === 0) {\n                    return pos;\n                }\n                pos--;\n            }\n        }\n        return -1;\n    }\n\n    private isValidFieldName(name: string): boolean {\n        return this.options.allowScopedFields ? Utils.isValidScopedSimpleName(name) : Utils.isValidSimpleName(name);\n    }\n\n    private isAllowedField(field: string, forcePartname: boolean, isPartname: IRef<boolean>): boolean {\n        isPartname.value = false;\n        if (Utils.eqNCN(field, \"exists\", \"missing\")) {\n            return true;\n        }\n        if (Utils.eqNCN(field, \"text\", \"concepts\", \"refine\", \"matchingpartnames\")) {\n            // NB @concepts, @refine and @matchingpartnames must be handled specially by the caller\n            isPartname.value = true;\n            return true;\n        }\n        const ccquery = this.exprContext.appService.ccquery;\n        if (ccquery) {\n            forcePartname = forcePartname && !this.exprContext.disallowFulltext;\n            let column = forcePartname ? undefined : this.exprContext.appService.getColumn(field);\n            if (!!column) {\n                if (column.eType === EngineType.varchar) { // only type not indexed\n                    column = undefined;\n                }\n                else if ((ccquery.$columnFieldsPattern && ccquery.$columnFieldsPattern.hasPatterns()) &&\n                    !ccquery.$columnFieldsPattern.isIncluded(field) &&\n                    !ccquery.$columnFieldsPattern.isIncluded(column.name)) {\n                    column = undefined;\n                }\n            }\n            if (!this.exprContext.disallowFulltext && !column) {\n                isPartname.value = true;\n                if ((ccquery.$partnameFieldsPattern && ccquery.$partnameFieldsPattern.hasPatterns()) &&\n                    !ccquery.$partnameFieldsPattern.isIncluded(field)) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n\n    private readToken(): string | undefined {\n        if (this.saveOp !== ExprParserOperator.invalid) {\n            this.prevOp = this.op;\n            this.op = this.saveOp;\n            this.saveOp = ExprParserOperator.invalid;\n            return undefined;\n        }\n        let ch;\n        this.prevOp = this.op;\n        let nextValue: string | undefined;\n        const sbCurrentValue: string[] = [];\n        let candidateFieldPos = -1;\n        let fieldSpecified = false;\n        while (true) {\n            if (this.current >= this.length) {\n                if (this.getTokValue(sbCurrentValue)) {\n                    return undefined;\n                }\n                this.op = ExprParserOperator.eof;\n                return undefined;\n            }\n            ch = this.text[this.current];\n            if (ch === \"\\\\\") { // \\ escapes \\ and `\n                sbCurrentValue.push(ch);\n                this.current++;\n                if (this.current < this.length) {\n                    const ch1 = this.text[this.current];\n                    if (ch1 === \"\\\\\" || ch1 === \"`\") {\n                        sbCurrentValue.push(ch1);\n                        this.current++;\n                    }\n                }\n            }\n            else if (ch === \"(\") {\n                if (this.getTokValue(sbCurrentValue, false)) {\n                    return undefined;\n                }\n                this.op = ExprParserOperator.lPar;\n                this.current++;\n                return undefined;\n            }\n            else if (ch === \")\") {\n                if (this.getTokValue(sbCurrentValue)) {\n                    return undefined;\n                }\n                this.op = ExprParserOperator.rPar;\n                this.current++;\n                return undefined;\n            }\n            else if (this.matchKeyword(\"AND\", sbCurrentValue)) {\n                if (this.getTokValue(sbCurrentValue)) {\n                    return undefined;\n                }\n                this.op = ExprParserOperator.and;\n                this.current += 3;\n                return undefined;\n            }\n            else if (this.matchKeyword(\"OR\", sbCurrentValue)) {\n                if (this.getTokValue(sbCurrentValue)) {\n                    return undefined;\n                }\n                this.op = ExprParserOperator.or;\n                this.current += 2;\n                return undefined;\n            }\n            else if (this.matchKeyword(\"NOT\", sbCurrentValue)) {\n                if (this.getTokValue(sbCurrentValue)) {\n                    return undefined;\n                }\n                this.op = ExprParserOperator.not;\n                this.current += 3;\n                return undefined;\n            }\n            else if (this.matchKeyword(\"NEAR\", sbCurrentValue, \"/\")) {\n                if (this.getTokValue(sbCurrentValue)) {\n                    return undefined;\n                }\n                this.current += 4;\n                nextValue = undefined;\n                if (this.current < this.length && this.text[this.current] === \"/\") {\n                    const last: IRef<number> = {value: 0};\n                    nextValue = this.matchUntil(this.current + 1, this.current + 1, \" \\r\\n\\t`\\\"([/\", last);\n                    let near = -1;\n                    if (nextValue !== undefined) {\n                        nextValue = nextValue.substr(0, nextValue.length - 1);\n                        near = Utils.toInt(nextValue, -1);\n                    }\n                    if (near < 0) {\n                        return \"bad operator\";\n                    }\n                    this.current = last.value - 1;\n                }\n                nextValue = this.ensureNearValue(nextValue || \"\");\n                const infix = this.current >= this.length || this.text[this.current] !== \"(\";\n                // For infix, near value is the number of words between the two terms so add the 2 terms to\n                // the window (near/0 = adjacent terms)\n                this.op = infix ?\n                    new ExprParserOperator(Token.infixNear, (Utils.toInt(nextValue) + 2).toString()) :\n                    new ExprParserOperator(Token.near, nextValue);\n                return undefined;\n            }\n            else if (ch === \"+\" || ch === \"-\") {\n                if (this.current + 1 < this.length) {\n                    const ch1 = this.text[this.current + 1];\n                    const last: IRef<number> = {value: 0};\n                    let length: number;\n                    if (\"(\\\"[/`\".includes(ch1)) { // ( \" [ / `\n                        nextValue = this.matchUntil(this.current, this.current + 2, this.getTerminators(ch1, false), last);\n                        length = last.value - this.current;\n                    }\n                    else {\n                        nextValue = this.matchSimpleValue(this.current + 1);\n                        length = !!nextValue ? nextValue.length : 0;\n                    }\n                    if (!!nextValue) {\n                        sbCurrentValue.push(nextValue);\n                        this.current += length;\n                        continue;\n                    }\n                }\n                return \"bad operator: \" + ch;\n            }\n            else if (\"\\\"[{/`\".includes(ch)) { // \" [ { / `\n                const last: IRef<number> = {value: 0};\n                nextValue = this.matchUntil(this.current, this.current + 1, this.getTerminators(ch, true), last);\n                if (!!nextValue) {\n                    const forceRange = (fieldSpecified && \"[{\".includes(ch) && sbCurrentValue.length === 0);\n                    sbCurrentValue.push(nextValue);\n                    this.current = last.value;\n                    if (forceRange && this.getTokValue(sbCurrentValue)) {\n                        return undefined;\n                    }\n                    continue;\n                }\n                return \"bad operator: \" + ch;\n            }\n            else {\n                if (ch === \":\") { // Field\n                    // Pick out previous value and/or field name\n                    // Field specifier can be:\n                    // field:value\n                    // field`display`:value\n                    // `display`:value\n                    const currentValue = sbCurrentValue.join(\"\");\n                    if (candidateFieldPos === -1) {\n                        // Check for display\n                        candidateFieldPos = this.findDisplay(currentValue);\n                        if (candidateFieldPos === -1) {\n                            this.op = ExprParserOperator.invalid;\n                            return \"invalid token\";\n                        }\n                    }\n                    let field = currentValue.substr(candidateFieldPos).trim();\n                    let display = \"\";\n                    // Extract display\n                    const displayStart = this.findDisplay(field);\n                    if (displayStart !== -1) {\n                        display = ExprParser.unescape(field.substr(displayStart, field.length - displayStart));\n                        field = field.substr(0, displayStart);\n                    }\n                    if (this.isValidFieldName(field) || (Utils.isEmpty(field) && !Utils.isEmpty(display))) {\n                        const value = currentValue.substr(0, candidateFieldPos);\n                        if (this.canBeTokValue(value.trim())) {\n                            this.current -= (sbCurrentValue.join(\"\").length - candidateFieldPos); // back up to field\n                            this._getTokValue(value);\n                            return undefined;\n                        }\n                        if (!Utils.isEmpty(field)) {\n                            let forcePartname = false;\n                            if (this.current + 1 < this.length && this.text[this.current + 1] === \":\") {\n                                // :: => force partname over column\n                                forcePartname = true;\n                                this.current++;\n                            }\n                            const isPartname: IRef<boolean> = { value: false };\n                            if (!this.isAllowedField(field, forcePartname, isPartname)) {\n                                candidateFieldPos = -1;\n                                sbCurrentValue.push(\":\");\n                                if (forcePartname) {\n                                    sbCurrentValue.push(\":\");\n                                }\n                                this.current++;\n                                continue;\n                            }\n                            if (isPartname.value) {\n                                field = ExprParser.fieldPartnamePrefix + field;\n                            }\n                        }\n                        if (!Utils.isEmpty(field)) {\n                            this.field = field;\n                            fieldSpecified = true;\n                        }\n                        if (!Utils.isEmpty(display)) {\n                            this.display = display;\n                        }\n                        sbCurrentValue.length = 0;\n                        this.current++;\n                        continue;\n                    }\n                }\n                if (\" \\r\\n\\t)\".includes(ch)) {\n                    candidateFieldPos = -1;\n                }\n                else if (candidateFieldPos === -1) {\n                    candidateFieldPos = sbCurrentValue.join(\"\").length;\n                }\n                sbCurrentValue.push(ch);\n                this.current++;\n            }\n        }\n    }\n\n    private clear() {\n        this.text = \"\";\n        this.current = 0;\n        this.length = 0;\n        this.operators.length = 0;\n        this.expressions.length = 0;\n        this.fields.length = 0;\n        this.displays.length = 0;\n    }\n\n    /**\n     * Parse some text using the Sinequa fielded search syntax\n     *\n     * @return The parsed `Expr` or an error string\n     */\n    public static parse(text: string, context: ExprContext, options?: ExprParserOptions): Expr | string {\n        const parser = new ExprParser(context, options);\n        const error = parser.parse(text);\n        if (error) {\n            return error;\n        }\n        return parser.parseResult();\n    }\n\n    private parseResult(): Expr | string {\n        if (this.expressions.length !== 1) {\n            return \"no expression found\";\n        }\n        return this.expressions[0];\n    }\n\n    private get contextField(): string {\n        let field = this.field;\n        if (Utils.isEmpty(field)) {\n            field = this.peekField();\n        }\n        return field;\n    }\n\n    private get contextDisplay(): string {\n        let display = this.display;\n        if (Utils.isEmpty(display)) {\n            display = this.peekDisplay();\n        }\n        return display;\n    }\n\n    private parse(text: string): string {\n        this.clear();\n        if (this.options.allowEmptyValues && !Utils.len(text.trim())) {\n            const expr = Expr.makeExpr(this.exprContext, \"\", this.contextField, this.contextDisplay, this.options.allowEmptyValues);\n            if (expr) {\n                expr.start = 0;\n                expr.length = 0;\n                this.expressions.push(expr);\n            }\n            return \"\";\n        }\n        this.text = text || \"\";\n        this.length = this.text.length;\n        this.operators.push(ExprParserOperator.eof);\n        let err = this.readToken();\n        if (err) {\n            return err;\n        }\n        while (true) {\n            if ((this.op.tok === Token.value || this.op.tok === Token.lPar || this.op.tok === Token.not || this.op.tok === Token.near) &&\n                (this.prevOp.tok === Token.value || this.prevOp.tok === Token.rPar)) {\n                // Default to AND for space separated terms\n                // NOT xxx => AND NOT xxx\n                this.saveOp = this.op;\n                this.op = ExprParserOperator.and;\n            }\n\n            let a: Act;\n            if (this.op.tok === Token.value) {\n                a = Act.s;\n            }\n            else {\n                a = ExprParser.parsetbl[this.operators[this.operators.length - 1].tok][this.op.tok];\n            }\n            switch (a) {\n                case Act.r:\n                    err = this.reduce();\n                    if (err) {\n                        return err;\n                    }\n                    break;\n                case Act.s:\n                    err = this.shift();\n                    if (err) {\n                        return err;\n                    }\n                    break;\n                case Act.a:\n                    if (this.expressions.length !== 1) {\n                        return \"syntax error\";\n                    }\n                    return \"\";\n                case Act.e1:\n                    return \"missing ')'\";\n                case Act.e2:\n                    return \"missing operator (AND,OR,NOT)\";\n                case Act.e3:\n                    return \"missing '('\";\n                case Act.e4:\n                    return \"invalid argument\";\n            }\n        }\n    }\n\n    private shift(): string | undefined {\n        if (this.op.tok === Token.value) {\n            const value = this.op.tokValue.trim();\n            if (Utils.isEmpty(value) && !this.options.allowEmptyValues) {\n                return \"empty token\";\n            }\n            const expr = Expr.makeExpr(this.exprContext, value, this.contextField, this.contextDisplay, !!this.options.allowEmptyValues);\n            if (!expr) {\n                return \"invalid expression\";\n            }\n            expr.start = this.op.tokValuePos;\n            expr.length = this.op.tokValueLen;\n            if (!!expr.operands) {\n                expr.operands.forEach(operand => {\n                    operand.start = this.op.tokValuePos;\n                    operand.length = this.op.tokValueLen;\n                });\n            }\n            this.expressions.push(expr);\n            this.field = \"\";\n            this.display = \"\";\n        }\n        else {\n            this.operators.push(this.op);\n            if (this.op.tok === Token.lPar) {\n                if (Utils.isEmpty(this.field)) {\n                    this.fields.push(this.peekField());\n                }\n                else {\n                    this.fields.push(this.field);\n                }\n                this.field = \"\";\n                if (Utils.isEmpty(this.display)) {\n                    this.displays.push(this.peekDisplay());\n                }\n                else {\n                    this.displays.push(this.display);\n                }\n                this.display = \"\";\n            }\n        }\n        return this.readToken();\n    }\n\n    private peekField(): string {\n        if (this.fields.length === 0) {\n            return \"\";\n        }\n        return this.fields[this.fields.length - 1];\n    }\n\n    private peekDisplay(): string {\n        if (this.displays.length === 0) {\n            return \"\";\n        }\n        return this.displays[this.displays.length - 1];\n    }\n\n    private canBeMergeTarget(e: Expr, and: boolean): boolean {\n        if (e.isLeaf) {\n            return false;\n        }\n        if (e.near >= 0) {\n            return false;\n        }\n        if (e.and !== and) {\n            return false;\n        }\n        if (e.not) {\n            return false;\n        }\n        return true;\n    }\n\n    private mergeExpr(e1: Expr, e2: Expr, and: boolean): Expr {\n        let source: Expr, target: Expr;\n        let prepend = false;\n        if (this.canBeMergeTarget(e1, and)) {\n            target = e1;\n            source = e2;\n        }\n        else if (this.canBeMergeTarget(e2, and)) {\n            target = e2;\n            source = e1;\n            prepend = true; // to keep the same order as in the input text\n        }\n        else {\n            return new Expr({\n                exprContext: e1.exprContext,\n                op1: e1,\n                and,\n                op2: e2,\n                field: this.peekField(),\n                display: this.peekDisplay()\n            });\n        }\n        if (source.isLeaf || source.and !== and || source.not || !Utils.eq(source.display || \"\", target.display || \"\")) {\n            target.addOperand(source, this.peekField(), prepend);\n        }\n        else {\n            if (source.operands) {\n                for (const operand of source.operands) {\n                    target.addOperand(operand, this.peekField(), prepend);\n                }\n            }\n        }\n        return target;\n    }\n\n    private reduce(): string | undefined {\n        let e: Expr | undefined;\n        let e1: Expr | undefined;\n        let e2: Expr | undefined;\n        const op: ExprParserOperator = this.operators[this.operators.length - 1];\n        switch (op.tok) {\n            case Token.not:\n                // Apply E := NOT E\n                e = this.expressions.pop();\n                if (!e) {\n                    return \"syntax error\";\n                }\n                e.not = !e.not;\n                this.expressions.push(e);\n                break;\n            case Token.and:\n                e2 = this.expressions.pop();\n                e1 = this.expressions.pop();\n                if (!e1 || !e2) {\n                    return \"syntax error\";\n                }\n                this.expressions.push(this.mergeExpr(e1, e2, true));\n                break;\n            case Token.or:\n                e2 = this.expressions.pop();\n                e1 = this.expressions.pop();\n                if (!e1 || !e2) {\n                    return \"syntax error\";\n                }\n                this.expressions.push(this.mergeExpr(e1, e2, false));\n                break;\n            case Token.near:\n                e = this.expressions.pop();\n                if (!e) {\n                    return \"syntax error\";\n                }\n                e.near = Utils.toInt(this.ensureNearValue(op.tokValue));\n                this.expressions.push(e);\n                break;\n            case Token.infixNear:\n                e2 = this.expressions.pop();\n                e1 = this.expressions.pop();\n                if (!e1 || !e2) {\n                    return \"syntax error\";\n                }\n                if (!e2.isLeaf || e2.isStructured || !e1.isLeaf || e1.isStructured || e2.not || e1.not || !Utils.eqNC(e2.field || \"\", e1.field || \"\")) {\n                    return \"syntax error\";\n                }\n                e = new Expr({\n                    exprContext: e1.exprContext,\n                    op1: e1,\n                    and: false,\n                    op2: e2,\n                    field: this.peekField(),\n                    display: this.peekDisplay()\n                });\n                e.near = Utils.toInt(this.ensureNearValue(op.tokValue));\n                this.expressions.push(e);\n                break;\n            case Token.rPar:\n                this.operators.pop();\n                if (this.fields.length === 0) {\n                    return \"missing field\";\n                }\n                if (this.expressions.length === 0) {\n                    return \"syntax error\";\n                }\n                const field = this.fields.pop();\n                const display = this.displays.pop();\n                // Set Field for single term bracketed expressions\n                e = this.expressions[this.expressions.length - 1];\n                if (e.isLeaf) {\n                    if (Utils.isEmpty(e.field)) {\n                        e.field = field;\n                    }\n                    if (Utils.isEmpty(e.display)) {\n                        e.display = display;\n                    }\n                }\n                break;\n        }\n        this.operators.pop();\n        return undefined;\n    }\n}\n","export default {\n    collapseButton: {\n        \"collapse\": \"Reduzieren\",\n        \"expand\": \"Erweitern\"\n    }\n};\n","export * from \"./public-api\";","export default {\n\n    \"userMenu\": {\n        \"user\": \"Utilisateur\",\n        \"login\": \"S'identifier\",\n        \"overrideUser\": \"Surcharger l'utilisateur\",\n        \"settings\": \"Paramètres\",\n        \"revertUserOverride\": \"Revenir à l'utilisateur normal\",\n        \"administration\": \"Administration\",\n        \"logout\": \"Se déconnecter\",\n\n        \"language\": \"Langue\",\n        \n        \"resetUserSettings\": {\n            \"menu\": \"Réinitialiser les paramètres utilisateur\",\n            \"modalTitle\": \"Réinitialiser Paramètres Utilisateur\",\n            \"modalMessage\": \"Vous êtes sur le point de réinitialiser TOUTES vos données utilisateur (requêtes récentes, collections, alertes, préférences, etc.). Voulez-vous continuer ?\",\n            \"modalConfirmButton\": \"Confirmer\",\n            \"successMessage\": \"Réinitialisation des paramètres utilisateur réussie\",\n            \"errorMessage\": \"Echec de la réinitialisation des paramètres utilisateur\"\n        }\n    },\n\n    \"editUserSettings\": {\n        \"title\": \"Paramètres\",\n        \"language\": \"Langue de l'interface\",\n        \"pageSize\": \"Nombre de résultats par page\",\n        \"email\": \"E-mail\"\n    }\n\n};\n","export default {\n    metadata: {\n        extractslocationsLabel: \"Relevanter Extrakt\",\n        extractslocationsPluralLabel: \"Relevante Extrakte\",\n        geoLabel: \"Ort\",\n        geoPluralLabel: \"Orte\",\n        personLabel: \"Person\",\n        personPluralLabel: \"Personen\",\n        companyLabel: \"Firma\",\n        companyPluralLabel: \"Firmen\",\n        treepathLabel: \"Quelle\",\n        treepathPluralLabel: \"Quellen\",\n        matchlocationsLabel: \"Suchbegriff\",\n        matchlocationsPluralLabel: \"Suchbegriffe\",\n        titleLabel: \"Titel\",\n        titlePluralLabel: \"Titel\",\n        authorsLabel: \"Autor\",\n        authorsPluralLabel: \"Autoren\",\n        filenameLabel: \"Dateiname\",\n        filenamePluralLabel: \"Dateinamen\",\n        modifiedLabel: \"Datum\",\n        modifiedPluralLabel: \"Datumsangaben\",\n        sizeLabel: \"Größe\",\n        sizePluralLabel: \"Größen\",\n        docformatLabel: \"Format\",\n        docformatPluralLabel: \"Formate\",\n        documentlanguagesLabel: \"Sprache\",\n        documentlanguagesPluralLabel: \"Sprachen\",\n        geo_label: \"Ort\",\n        geo_plural_label: \"Orte\",\n        person_label: \"Person\",\n        person_plural_label: \"Personen\",\n        company_label: \"Firma\",\n        company_plural_label: \"Firmen\",\n        treepath_label: \"Quelle\",\n        treepath_plural_label: \"Quellen\",\n        title_label: \"Titel\",\n        title_plural_label: \"Titel\",\n        authors_label: \"Autor\",\n        authors_plural_label: \"Autoren\",\n        filename_label: \"Dateiname\",\n        filename_plural_label: \"Dateinamen\",\n        modified_label: \"Datum\",\n        modified_plural_label: \"Datumsangaben\",\n        size_label: \"Größe\",\n        size_plural_label: \"Größen\",\n        docformat_label: \"Format\",\n        docformat_plural_label: \"Formate\",\n        documentlanguages_label: \"Sprache\",\n        documentlanguages_plural_label: \"Sprachen\",\n        accessLists: {\n            authorizedListTitleText: \"Liste der erlaubten Zugriffe\",\n            authorizedListHeader: \"Liste der erlaubten Zugriffe {value, number}\",\n            deniedListTitleText: \"Liste der unerlaubten Zugriffe\",\n            deniedListHeader: \"Liste der unerlaubten Zugriffe {value, number}\"\n        },\n        item: {\n            label: \"{label}:\",\n            separator: \"|\",\n            treeSeparator: \" ; \",\n            treeNodeSeparator: \"/\",\n            listSeparator: \", \",\n            empty_boolean: 'false',\n            empty_number: '0'\n        }\n    }\n};\n","import {\n    Directive,\n    ElementRef,\n    Input,\n    EventEmitter,\n    SimpleChanges,\n    Output,\n    HostListener,\n    OnInit,\n    OnChanges,\n} from \"@angular/core\";\nimport {\n    Autocomplete,\n    SuggestService,\n    AutocompleteState,\n    AutocompleteItem,\n} from \"@sinequa/components/autocomplete\";\nimport { AppService } from \"@sinequa/core/app-utils\";\nimport { UIService } from \"@sinequa/components/utils\";\nimport { LabelsWebService, Labels } from \"@sinequa/core/web-services\";\nimport { Keys } from \"@sinequa/core/base\";\nimport { LabelsService } from \"./labels.service\";\n\n@Directive({\n    selector: \"[sqAutocompleteLabels]\",\n})\nexport class LabelsAutocomplete extends Autocomplete implements OnInit, OnChanges {\n    /** Event synchronizing the list of selected labels in the parent component */\n    @Output() itemsUpdate = new EventEmitter<AutocompleteItem[]>();\n\n    /** Whether the labels are public or not */\n    @Input() public: boolean;\n\n    /** Enable adding new labels in labelsItems or not */\n    @Input() allowNewLabels: boolean = false;\n\n    /** Define the right of adding new labels in labelsItems or not */\n    @Input() allowManagePublicLabels: boolean = false;\n\n    /** Stores the selected labels items selected via Tab */\n    @Input() labelsItems: AutocompleteItem[] = [];\n\n    /** Stores the suggestions retrieved by th server in order to perform checks on key.enter events */\n    private _suggestions: string[] = [];\n\n    constructor(\n        elementRef: ElementRef,\n        suggestService: SuggestService,\n        appService: AppService,\n        uiService: UIService,\n        private labelsWebService: LabelsWebService,\n        private labelsService: LabelsService\n    ) {\n        super(elementRef, suggestService, appService, uiService);\n    }\n\n    /**\n     * The ngOnInit() method from the original directive is overriden\n     * On initialization, we listen to the autocomplete component for\n     * selection events\n     */\n    ngOnInit() {\n        this._dropdownSubscription = this.dropdown.clicked.subscribe((item) => {\n            this.select(item, true); // An item was selected from the autocomplete => take the value\n        });\n        this.start();\n    }\n\n    /**\n     * If the inputs changes state, react accordingly\n     * @param changes\n     */\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes[\"labelsItems\"]) {\n            this.updatePlaceholder();\n        }\n\n        // Override start() by using init() instead, so that no double queries are generated and autocomplete dropdown is shown only on focus\n        if (changes[\"off\"] && !this.off) {\n            this.init();\n        }\n\n        // If labels category changes, we must remove the selected labels items and reinitialize the autocomplete\n        if (changes[\"public\"] && !changes[\"public\"].firstChange) {\n            const newInitLabels = [...changes[\"labelsItems\"].currentValue];\n            this.inputElement.blur();\n            /** Reset the input Value*/\n            this.setInputValue(\"\");\n            /** initialize the input needed specially for labels edit cases */\n            this.updatePlaceholder();\n            this.itemsUpdate.next(newInitLabels);\n        }\n    }\n\n    /**\n     * The getSuggests() method from the original directive is overriden to\n     * use the labelsService rather than suggest service.\n     */\n    protected getSuggests() {\n        const value = this.getInputValue();\n\n        if (value) {\n            // parse\n            const labels = value.split(\";\");\n\n            // find label at caret location\n            const position = this.getInputPosition();\n            let length = 0;\n            let val:\n                | { value: string, start: number, length: number }\n                | undefined;\n            for (const label of labels) {\n                if (position >= length && position <= length + label.length) {\n                    val = {\n                        value: label,\n                        start: length,\n                        length: label.length,\n                    };\n                    break;\n                }\n                length += label.length + 1;\n            }\n\n            // Get suggestions from web service\n            if (val) {\n                this._getLabelsSuggestions(val.value);\n            }\n        } else {\n            if (!!this.labelsService.labelsAutoSuggestWildcard) {\n                this._getLabelsSuggestions(\n                    this.labelsService.labelsAutoSuggestWildcard\n                );\n            } else {\n                this.start();\n            }\n        }\n    }\n\n    private _getLabelsSuggestions(val: string) {\n        this.labelsWebService.list(val, this.public).subscribe(\n            (labels: Labels) => {\n                if (\n                    this.getState() === AutocompleteState.ACTIVE ||\n                    this.getState() === AutocompleteState.OPENED\n                ) {\n                    /** Eliminate suggestions that are already selected */\n                    labels.labels = labels.labels.filter(\n                        (label) =>\n                            !this.labelsItems.find(\n                                (item) => item.display === label\n                            )\n                    );\n\n                    /** update the local list of suggestions */\n                    this._suggestions = labels.labels;\n\n                    /** limit the suggestions to be displayed to 10  */\n                    labels.labels = labels.labels.slice(0, 10);\n\n                    this.dropdown.update(\n                        true,\n                        labels.labels.map((label) => {\n                            return {\n                                display: label,\n                                category: \"\",\n                            };\n                        })\n                    );\n                }\n            },\n            () => {\n                this.dropdown.update(false);\n            },\n            () => {\n                if (\n                    this.dropdown.hasItems &&\n                    this.getState() === AutocompleteState.ACTIVE\n                ) {\n                    this.open(); // Switch from ACTIVE to OPENED (if not already)\n                } else if (\n                    !this.dropdown.hasItems &&\n                    this.getState() === AutocompleteState.OPENED\n                ) {\n                    // No data\n                    this.active(); // Switch from OPENED to ACTIVE (if not already)\n                }\n            }\n        );\n    }\n\n    /**\n     * The setAutocompleteItem() method from the original directive is overriden to\n     * Sets the content of the <input> based on the given\n     * Autocomplete Item.\n     * @returns false since labels items don't need to be searched\n     */\n    protected setAutocompleteItem(item: AutocompleteItem): boolean {\n        if (item) {\n            // Store the autocomplete items that will be used to create a selection\n            this.labelsItems.push(item);\n            this.updatePlaceholder();\n            this.itemsUpdate.next(this.labelsItems);\n            this.setInputValue(\"\");\n        }\n        return false;\n    }\n\n    /**\n     * The startOrActive() method from the original directive is overriden to\n     * immediately switch to ACTIVE if it is not the case\n     */\n    protected startOrActive(): void {\n        if (\n            this.getState() !== AutocompleteState.ACTIVE &&\n            this.getState() !== AutocompleteState.OPENED\n        ) {\n            // Avoid flickering\n            this.start();\n            this.active();\n        }\n    }\n\n    /**\n     * Listen to user's keyboard actions in the <input>, in order to navigate\n     * and select the autocomplete suggestions.\n     * Overrides the parent keydown method, adds the management of the backspace key\n     * to remove labels items, enhance the enter key to support adding new labels.\n     * @param event the keyboard\n     */\n    keydown(event: KeyboardEvent) {\n        const keydown = super.keydown(event);\n\n        if (keydown === undefined) {\n            //We can remove selections by typing <backspace> when the input is empty\n            if (event.keyCode === Keys.backspace) {\n                if (this.getInputValue() === \"\") {\n                    this.labelsItems.pop();\n                    this.updatePlaceholder();\n                    this.itemsUpdate.next(this.labelsItems);\n                }\n            }\n            /** Allow the selection one of new labels that not exists in the list */\n            if (event.keyCode === Keys.enter) {\n                this._manageSetAutocompleteItem();\n            }\n        }\n        return keydown;\n    }\n\n    /**\n     * Listens to focus events on the <input> host and overrides the parent focus events in order to launch the autocomplete\n     * If empty input :\n     * - display top relevent labels if the auto-suggest wildcard is configured\n     * - restart the autocomplete if no auto-suggest wildcard is found\n     * If not empty input :\n     * retrieve suggestions based on this input text\n     */\n    @HostListener(\"focus\") focus() {\n        this.start();\n        this.active();\n    }\n\n    /**\n     * Listens to blur events (out of focus) on the <input> host and overrides the parent blur events\n     */\n    @HostListener(\"blur\", [\"$event\"]) blur(event: FocusEvent) {\n        this._manageSetAutocompleteItem();\n        this.init();\n    }\n\n    /**\n     * Overrides the parent inputChanged method, so that it is possible to reinitialize the autocomplete\n     * @param event\n     */\n    @HostListener(\"input\", [\"$event\"]) inputChanged(event: Event) {\n        switch (this.getState()) {\n            case AutocompleteState.OPENED:\n                this.suggest(); // Just request more data, but no state change\n                break;\n            case AutocompleteState.START:\n            case AutocompleteState.ACTIVE:\n                this.active(); // get more data, and change state if not already ACTIVE\n                break;\n            case AutocompleteState.SELECTED:\n                this.start(); // The model changed because we selected a value ==> we restart in case the user keeps typing\n                this.active();\n                break;\n            case AutocompleteState.INIT:\n                break;\n        }\n    }\n\n    /**\n     * Updates the <input>'s placeholder to avoid displaying something\n     * when there are labelsItems displayed to the left.\n     */\n    updatePlaceholder() {\n        this._placeholder = this.labelsItems.length > 0 ? \"\" : this.placeholder;\n    }\n\n    private _manageSetAutocompleteItem(): void {\n        /** Always consider if there is text in the <input> and that it is not yet added in the labelsItems  */\n        if (!!this.getInputValue() && this.getInputValue() !== \"\") {\n            if (this.allowNewLabels) {\n                /** When it is an add Labels action ==> check the privilege to create new label */\n                if (\n                    !this.public ||\n                    (this.public && this.allowManagePublicLabels)\n                ) {\n                    this.setAutocompleteItem({\n                        display: this.getInputValue(),\n                        category: \"\",\n                    });\n                }\n            } else {\n                /** For all other actions on the labels, check if the typed text equals an existing label in the _suggestions  */\n                if (this._suggestions.indexOf(this.getInputValue()) > -1) {\n                    this.setAutocompleteItem({\n                        display: this.getInputValue(),\n                        category: \"\",\n                    });\n                }\n            }\n        }\n    }\n}\n","import {HttpClientModule} from \"@angular/common/http\";\n\nimport {NgModule, ModuleWithProviders, APP_INITIALIZER} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\n\n// Intl is required by various web services\nimport {BaseModule} from \"@sinequa/core/base\";\nimport {IntlModule} from \"@sinequa/core/intl\";\n// StartConfig\nimport {StartConfigWebService, START_CONFIG, StartConfig} from \"./start-config.web.service\";\n\nimport {WEB_SERVICES_MODULE_PROVIDERS} from \"./module.providers\";\n\n// Used to ensure that the StartConfigWebService is instantiated\nexport function StartConfigInitializer(startConfigWebService: StartConfigWebService): () => Promise<void> {\n    const init = () => Promise.resolve();\n    return init;\n}\n\n/**\n * This module implements client services for the Sinequa web service APIs\n */\n// @dynamic\n@NgModule({\n    imports: [\n        CommonModule,\n        HttpClientModule,\n        BaseModule,\n        IntlModule\n    ],\n    declarations: [\n    ],\n    exports: [\n    ],\n    providers: [\n        // Ensure that the StartConfigWebService is instantiated so StartConfig is initialized\n        {provide: APP_INITIALIZER, useFactory: StartConfigInitializer, deps: [StartConfigWebService], multi: true},\n        ...WEB_SERVICES_MODULE_PROVIDERS\n    ]\n})\nexport class WebServicesModule {\n    /**\n     * Configures the module with a start configuration\n     *\n     * @param startConfig The start configuration object\n     *\n     * @returns The configured module\n     */\n    static forRoot(startConfig: StartConfig) : ModuleWithProviders<WebServicesModule> {\n        return {\n            ngModule: WebServicesModule,\n            providers: [\n                // Provide START_CONFIG\n                {provide: START_CONFIG, useValue: startConfig},\n            ]\n        };\n    }\n}","export * from \"./public-api\";","import {Injectable, InjectionToken, Optional, Inject} from \"@angular/core\";\nimport {Observable} from \"rxjs\";\nimport atomic from \"atomicjs\";\nimport {IProviders} from \"ng2-ui-auth\";\nimport {Utils} from \"@sinequa/core/base\";\n\n/**\n * An {@link InjectionToken} to access the app's {@link StartConfig} instance\n */\nexport const START_CONFIG = new InjectionToken<StartConfig>(\"START_CONFIG\");\n\n/**\n * Defines members whose values are automatically deduced from direct {@link StartConfig} members\n */\nexport interface DeducedStartConfig {\n    /**\n     * The origin of the url used to make Sinequa API calls\n     */\n    origin?: string;\n    /**\n     * The application path of the url used to make Sinequa API calls\n     */\n    applicationPath?: string;\n    /**\n     * The url in the browser (origin + pathname)\n     */\n    browserUrl?: string;\n    /**\n     * The path used to make Sinequa API calls, including any virtual directories.\n     * If CORS is active then it will be prefixed by the Sinequa server origin\n     */\n    apiPath?: string;\n    /**\n     * A flag indicating whether the app is running in a CORS context.\n     */\n    corsActive?: boolean;\n}\n\n/**\n * Defines members whose values are retrieved from the Sinequa app configuration and that are available prior to user login\n */\nexport interface PreloginAppConfig {\n    /**\n     * Specifies which storage should be used to hold the CSRF token used to protect Sinequa API calls against\n     * CSRF attacks\n     */\n    authenticationStorage?: 'session' | 'local';\n    /**\n     * Contains the available login providers (only used for popup-based login)\n     */\n    providers?: IProviders;\n    /**\n     * Contains the OAuth auto login provider\n     */\n    autoOAuthProvider?: string;\n    /**\n     * Contains the OAuth auto login provider\n     */\n    autoSAMLProvider?: string;\n    /**\n     * A boolean value indicating whether popup-based login should be used\n     */\n    usePopupForLogin?: boolean;\n    /**\n     * The URL to be used to display online help\n     */\n    helpUrl?: string;\n    /**\n     * A boolean value indicating whether auditing is enabled\n     */\n    auditEnabled?: boolean;\n    /**\n     * A boolean value indicating whether ML auditing is enabled\n     */\n    mlAuditEnabled?: boolean;\n    /**\n     * The version of Sinequa running on the server\n     */\n    version?: string;\n    /**\n     * The date of the version of Sinequa running on the server\n     */\n    versionDate?: Date;\n}\n\n/**\n * Contains start-up configuration for the application. An instance of this object\n * must be provided when registering the {@link WebServicesModule} either by providing the START_CONFIG\n * injection token or by using the [forRoot]{@link WebServicesModule#forRoot} static method.\n *\n * Typically only the members declared directly (url, app, production) should be specified.\n * The other values are either deduced from these members or are retrieved from the Sinequa configuration\n */\nexport interface StartConfig extends DeducedStartConfig, PreloginAppConfig {\n    /**\n     * The url of the sinequa server including any virtual directories - defaults to the browser url\n     */\n    url?: string;\n    /**\n     * The app name (can be deduced from the browser url when the app is served by Sinequa)\n     */\n    app?: string;\n    /**\n     * A flag indicating whether the app is running in production mode or not\n     * (can be deduced from the browser url when the app is served by Sinequa)\n     */\n    production?: boolean;\n}\n\n/**\n * Defines Sinequa server configuration that can be held on a web server and retrieved using\n * [StartConfigWebService.fetchServerConfig]{@link StartConfigWebService#fetchServerConfig}\n */\nexport interface ServerConfig {\n    /**\n     * The URL of the Sinequa server including any virtual directories\n     */\n    url?: string;\n    /**\n     * The name of the application\n     */\n    app?: string;\n}\n\n/**\n * A service to manage the initialization of the app's {@link StartConfig} instance. The service\n * is automatically instantiated by an {@link APP_INITIALIZER} in {@link WebServicesModule} and the\n * initialization is performed in the constructor.\n */\n@Injectable({\n    providedIn: \"root\"\n})\nexport class StartConfigWebService {\n    private static API_PATH = \"/api/v1\";\n\n    /**\n     * Initializes the injected {@link StartConfig} instance. Outputs an error to the\n     * console if no instance is injected.\n     *\n     * @param startConfig The start configuration instance\n     */\n    constructor(@Optional() @Inject(START_CONFIG) private startConfig: StartConfig) {\n        if (!startConfig) {\n            console.error(\"START_CONFIG must be provided in your app module\");\n            return;\n        }\n        this.initStartConfig();\n    }\n\n    private getDefaultStartConfig(): StartConfig {\n        const startConfig: StartConfig = {};\n        const browserUrl = Utils.makeURL(window.location.href);\n        let parts = Utils.split(browserUrl.pathname, \"/\");\n        const appSpecifierIndex = parts.findIndex(value => Utils.eqNCN(value, \"app\", \"app-debug\"));\n        if (appSpecifierIndex !== -1 && appSpecifierIndex < parts.length - 1) {\n            const appSpecifier = parts[appSpecifierIndex];\n            startConfig.app = parts[appSpecifierIndex + 1];\n            startConfig.production = appSpecifier === \"app\" ? true : false;\n            parts = parts.slice(0, appSpecifierIndex);\n        }\n        startConfig.url = Utils.addUrl(browserUrl.origin, ...parts);\n        return startConfig;\n    }\n\n    private initStartConfig() {\n        const defaultStartConfig = this.getDefaultStartConfig();\n        const initialStartConfig = Utils.copy(this.startConfig);\n        Utils.extend(this.startConfig, defaultStartConfig, initialStartConfig);\n        const browserUrl = Utils.makeURL(window.location.href);\n        const url = Utils.makeURL(this.startConfig.url!);\n        let apiPath = Utils.addUrl(url.pathname, StartConfigWebService.API_PATH);\n        let applicationPath = url.pathname;\n        const corsActive = url.origin !== browserUrl.origin;\n        if (corsActive) {\n            apiPath = Utils.addUrl(url.origin, apiPath);\n            applicationPath = Utils.addUrl(url.origin, applicationPath);\n        }\n        this.startConfig.origin = url.origin;\n        this.startConfig.applicationPath = applicationPath;\n        this.startConfig.apiPath = apiPath;\n        this.startConfig.corsActive = corsActive;\n        this.startConfig.browserUrl = Utils.addUrl(browserUrl.origin, browserUrl.pathname);\n    }\n\n    /**\n     * Fetches pre-login app configuration from the Sinequa server and merges it\n     * into the start config instance\n     *\n     * @returns An observable of the start config after being merged with the pre-login app configuration\n     */\n    fetchPreLoginAppConfig(): Observable<StartConfig> {\n        return Observable.create(observer => {\n            let _url = Utils.addUrl(this.startConfig.apiPath!, \"app\");\n            _url = Utils.addSearchParams(_url, {\n                app: this.startConfig.app,\n                preLogin: true\n            });\n            atomic(_url, {\n                headers: {\n                    \"sinequa-force-camel-case\": true\n                }\n            })\n                .then(response => {\n                    const initialStartConfig = Utils.copy(this.startConfig);\n                    Utils.extend(this.startConfig, response.data, initialStartConfig);\n                    const versionDate = this.startConfig.versionDate;\n                    if (Utils.isString(versionDate)) { // it will be\n                        this.startConfig.versionDate = Utils.fromSysDateStr(versionDate);\n                    }\n                    observer.next(this.startConfig);\n                    observer.complete();\n                })\n                .catch(error => {\n                    console.error(\"Error retrieving app config\");\n                    observer.error(error);\n                });\n        });\n    }\n\n    /**\n     * Retrieves Sinequa server configuration from a web server hosting the app\n     *\n     * @param url A URL to a JSON file containing the Sinequa server configuration\n     *\n     * @returns An observable of the Sinequa server configuration\n     */\n    fetchServerConfig(url?: string): Observable<ServerConfig> {\n        return Observable.create(observer => {\n            if (!url) {\n                const _url = Utils.makeURL(window.location.href);\n                url = Utils.addUrl(_url.pathname, \"sinequa-config.json\");\n            }\n            atomic(url)\n                .then(response => {\n                    // If the config file is empty or not valid json we'll most likely get a string for data\n                    let serverConfig = response.data;\n                    if (!Utils.isObject(serverConfig)) {\n                        console.warn(\"invalid sinequa-config.json file\");\n                        serverConfig = {};\n                    }\n                    observer.next(serverConfig);\n                    observer.complete();\n                })\n                .catch(error => {\n                    console.log(\"sinequa-config.json not found\");\n                    observer.next({});\n                    observer.complete();\n                });\n        });\n    }\n}\n","import {NgModule} from \"@angular/core\";\nimport \"./polyfills\";\n\n/**\n * This module contains a variety of base types and utility classes including the {@link Utils} utilility class\n */\n@NgModule({\n    imports: [\n    ],\n    declarations: [\n    ],\n    exports: [\n    ]\n})\nexport class BaseModule {\n}","export * from \"./public-api\";","export * from \"./public-api\";","import {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {DragDropModule} from \"@angular/cdk/drag-drop\";\n\nimport {IntlModule} from \"@sinequa/core/intl\";\nimport {ValidationModule} from \"@sinequa/core/validation\";\n\nimport {UtilsModule} from \"@sinequa/components/utils\";\nimport {BsSelectionModule} from \"@sinequa/components/selection\";\nimport {BsModalModule} from \"@sinequa/components/modal\";\nimport {BsActionModule} from \"@sinequa/components/action\";\n\nimport {BASKET_COMPONENTS} from \"../baskets.service\";\nimport {BsEditBasket} from \"./edit-basket/edit-basket\";\nimport {BsManageBaskets} from \"./manage-baskets/manage-baskets\";\nimport {BsSelectBasket} from \"./select-basket/select-basket\";\nimport {BsResultBaskets} from \"./result-baskets/result-baskets\";\nimport {BsBasketsMenuComponent} from \"./baskets-menu/baskets-menu.component\";\nimport {BsFacetBasketsComponent} from './facet-baskets/facet-baskets.component';\nimport {RouterModule} from '@angular/router';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule, ReactiveFormsModule,\n        DragDropModule,\n        RouterModule,\n\n        BsModalModule,\n        IntlModule,\n        ValidationModule,\n\n        UtilsModule,\n        BsSelectionModule,\n        BsActionModule\n    ],\n    declarations: [\n        BsEditBasket, BsManageBaskets, BsSelectBasket,\n        BsResultBaskets, BsBasketsMenuComponent,\n        BsFacetBasketsComponent\n    ],\n    exports: [\n        BsEditBasket, BsManageBaskets, BsSelectBasket,\n        BsResultBaskets, BsBasketsMenuComponent,\n        BsFacetBasketsComponent\n    ],\n    providers: [\n        {\n            provide: BASKET_COMPONENTS,\n            useValue: {\n                selectBasketModal: BsSelectBasket,\n                editBasketModal: BsEditBasket,\n                manageBasketsModal: BsManageBaskets\n            }\n        }\n    ]\n})\nexport class BsBasketsModule {\n}\n","export default {\n    \"resultSelector\": {\n        \"selectDocument\": \"Dokument auswählen\",\n        \"unselectDocument\": \"Dokumentauswahl aufheben\"\n    },\n    \"resultsSelector\": {\n        \"selectDocuments\": \"{count, selectordinal, =0 {} other {(#)}}\",\n        \"selectDocumentsTitle\": \"Dokumente auswählen\",\n        \"unselectDocumentsTitle\": \"Dokumentauswahl aufheben\",\n    },\n    \"selection\": {\n        \"selectedDocuments\": \"{count, plural, =0 {} one {# ausgewähltes Dokument} other {# ausgewählte Dokumente}}\"\n    }\n};\n","import {Component, Input, OnInit, AfterViewInit, OnDestroy, ViewChild, forwardRef} from \"@angular/core\";\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from \"@angular/forms\";\nimport {Subscription} from \"rxjs\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {IntlService} from \"@sinequa/core/intl\";\nimport {BsDaterangepickerDirective, BsDaterangepickerConfig, BsDatepickerDirective, BsDatepickerConfig} from \"ngx-bootstrap/datepicker\";\nimport moment from \"moment\";\nimport { DatePickerOptions } from '../date-picker/date-picker';\n\nexport const DATE_RANGE_PICKER_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => BsDateRangePicker),\n    multi: true\n};\n\nexport interface DateRangePickerOptions extends DatePickerOptions {\n    closedRange?: boolean;\n}\n\n@Component({\n    selector: \"sq-date-range-picker\",\n    template: `\n        <div *ngIf=\"options.closedRange\" class=\"sq-date-range-picker form-row\">\n            <div class=\"col\">\n                <input type=\"text\" autocomplete=\"off\" class=\"form-control\" bsDaterangepicker triggers=\"click\" #fromTo=\"bsDaterangepicker\" [bsConfig]=\"bsFromToConfig()\" [ngModel]=\"value\" (ngModelChange)=\"updateFromTo($event)\" [placeholder]=\"dateFormat\"/>\n            </div>\n        </div>\n        <div *ngIf=\"!options.closedRange\" class=\"sq-date-range-picker form-row\">\n            <div class=\"col-auto\">\n                <input type=\"text\" autocomplete=\"off\" [id]=\"fromName\" class=\"form-control sq-range-from\" bsDatepicker triggers=\"click\" #from=\"bsDatepicker\" [bsConfig]=\"bsFromConfig()\" [ngModel]=\"value[0]\" (ngModelChange)=\"updateFrom($event)\" [placeholder]=\"dateFormat\"/>\n            </div>\n            <div class=\"col-auto sq-separator\">{{'msg#advanced.dateRangePicker.separator' | sqMessage}}</div>\n            <div class=\"col-auto\">\n                <input type=\"text\" autocomplete=\"off\" [id]=\"toName\" class=\"form-control sq-range-to\" bsDatepicker triggers=\"click\" #to=\"bsDatepicker\" [bsConfig]=\"bsToConfig()\" [ngModel]=\"value[1]\" (ngModelChange)=\"updateTo($event)\" [placeholder]=\"dateFormat\"/>\n            </div>\n        </div>\n    `,\n    providers: [DATE_RANGE_PICKER_VALUE_ACCESSOR]\n})\nexport class BsDateRangePicker implements OnInit, AfterViewInit, OnDestroy, ControlValueAccessor {\n\n    private readonly SystemFormat: string = 'YYYY-MM-DD';\n\n    @Input() options: DateRangePickerOptions;\n    value: (Date | undefined)[];\n    private onChangeCallback: (_: any) => void = () => {};\n    private localeChange: Subscription;\n    @ViewChild(\"fromTo\", {static: false}) fromToPicker: BsDaterangepickerDirective;\n    @ViewChild(\"from\", {static: false}) fromPicker: BsDatepickerDirective;\n    @ViewChild(\"to\", {static: false}) toPicker: BsDatepickerDirective;\n    fromName: string;\n    toName: string;\n\n    constructor(\n        public intlService: IntlService) {\n    }\n\n    ngOnInit() {\n        if (!this.options) {\n            this.options = {};\n        }\n        this.fromName = \"from_\" + this.options.name;\n        this.toName = \"to_\" + this.options.name;\n\n        if (!this.value) {\n            this.value = [undefined, undefined];\n        }\n    }\n\n    public get dateFormat(): string {\n        return this.options.system ? this.SystemFormat : moment.localeData().longDateFormat('L');\n    }\n\n    setLocale() {\n        if (!!this.fromToPicker && this.fromToPicker.isOpen) {\n            this.fromToPicker.hide();\n            this.fromToPicker.show();\n        }\n        if (!!this.fromPicker && this.fromPicker.isOpen) {\n            this.fromPicker.hide();\n            this.fromPicker.show();\n        }\n        if (!!this.toPicker && this.toPicker.isOpen) {\n            this.toPicker.hide();\n            this.toPicker.show();\n        }\n    }\n\n    ngAfterViewInit() {\n        this.setLocale();\n        this.localeChange = Utils.subscribe(this.intlService.events,\n            (value) => {\n                this.setLocale();\n            });\n    }\n\n    ngOnDestroy() {\n        if (this.localeChange) {\n            this.localeChange.unsubscribe();\n        }\n    }\n\n    //#region closedRange\n    bsFromToConfig(): BsDaterangepickerConfig {\n        return <any>{\n            minDate: this.options.minDate,\n            maxDate: this.options.maxDate,\n            containerClass:'theme-default',\n            showWeekNumbers: false,\n            rangeInputFormat: this.options.system ? this.SystemFormat : moment.localeData().longDateFormat('L')\n        };\n    }\n\n    updateFromTo(fromTo: Date[]) {\n        this.setValue([!!fromTo ? fromTo[0] : undefined, !!fromTo ? fromTo[1] : undefined]);\n        this.onChangeCallback(this.value);\n    }\n    //#endregion closedRange\n\n    //#region !closedRange\n    maxDate: Date | undefined;\n    minDate: Date | undefined;\n    bsFromConfig(): BsDatepickerConfig {\n        return <any>{\n            minDate: this.options.minDate,\n            maxDate: this.maxDate,\n            containerClass:'theme-default',\n            showWeekNumbers: false,\n            dateInputFormat: this.options.system ? this.SystemFormat : moment.localeData().longDateFormat('L'),\n        };\n    }\n\n    bsToConfig(): BsDatepickerConfig {\n        return <any>{\n            minDate: this.minDate,\n            maxDate: this.options.maxDate,\n            containerClass:'theme-default',\n            showWeekNumbers: false,\n            dateInputFormat: this.options.system ? this.SystemFormat : moment.localeData().longDateFormat('L'),\n        };\n    }\n\n    setMinMaxDate() {\n        this.maxDate = this.value[1] || this.options.maxDate;\n        this.minDate = this.value[0] || this.options.minDate;\n    }\n\n    resetMinMaxDate() {\n        this.maxDate = this.options.maxDate;\n        this.minDate = this.options.minDate;\n    }\n\n    updateFrom(from: Date) {\n        this.setValue([from, this.value[1]]);\n        this.onChangeCallback(this.value);\n    }\n\n    updateTo(to: Date) {\n        this.setValue([this.value[0], to]);\n        this.onChangeCallback(this.value);\n    }\n    //#endregion !closedRange\n\n    zeroTimes() {\n        if (this.value) {\n            if (Utils.isDate(this.value[0])) {\n                const date = this.value[0];\n                date.setHours(0);\n                date.setMinutes(0);\n                date.setSeconds(0);\n                date.setMilliseconds(0);\n            }\n            if (Utils.isDate(this.value[1])) {\n                const date = this.value[1];\n                date.setHours(0);\n                date.setMinutes(0);\n                date.setSeconds(0);\n                date.setMilliseconds(0);\n            }\n        }\n    }\n\n    setValue(value: (Date | undefined)[] | undefined) {\n        if (!this.value || !value || !Utils.equals(this.value[0], value[0]) || !Utils.equals(this.value[1], value[1])) {\n            if (!value) {\n                value = [undefined, undefined];\n            } else {\n                value[0] = !!value[0] ? new Date(value[0]) : value[0];\n                value[1] = !!value[1] ? new Date(value[1]) : value[1];\n            }\n            if (this.options.closedRange) {\n                this.value = value;\n                this.zeroTimes();\n            } else {\n                this.resetMinMaxDate();\n                this.value = value;\n                this.zeroTimes();\n                this.setMinMaxDate();\n            }\n        }\n    }\n\n    //#region ControlValueAccessor\n    writeValue(value: Date[]): void {\n        this.setValue(value);\n    }\n\n    registerOnChange(fn: any): void {\n        this.onChangeCallback = fn;\n    }\n\n    registerOnTouched(fn: any): void {\n    }\n    //#endregion\n}\n","export * from \"./public-api\";","import {Injectable, Inject} from \"@angular/core\";\nimport {Observable, of} from \"rxjs\";\nimport {SqHttpClient} from \"./http-client\";\nimport {HttpService} from \"./http.service\";\nimport {START_CONFIG, StartConfig} from \"./start-config.web.service\";\nimport {Utils, MapOf, JsonObject} from \"@sinequa/core/base\";\nimport {Results, Record} from \"./query.web.service\";\nimport {LinkResult} from \"./sponsored-links.web.service\";\n\n/**\n * Describes a single audit event\n */\nexport interface AuditEvent {\n    type: AuditEventType | string; // allow custom event types\n    detail?: JsonObject;\n    rfmDetail?: JsonObject;\n}\n\n/**\n * Contains an array of {@link AuditEvent} objects and an array of ML audit event records\n */\nexport interface AuditRecord {\n    auditEvents?: AuditEvent[];\n    mlAuditEvents?: any[];\n}\n\n/**\n * A composite type describing a set of AuditEvents\n */\nexport type AuditEvents = AuditEvent | AuditEvent[] | AuditRecord;\n\n/**\n * The standard audit event types\n */\nexport const enum AuditEventType {\n    // Should be in par with AuditEventType enum from AuditManager.cs\n    None = \"None\",\n\n    // WebApp event types\n    Search_FirstPage = \"Search_FirstPage\",\n    Search_Text = \"Search_Text\",\n    Search_Refine = \"Search_Refine\",\n    Search_Select_Item = \"Search_Select_Item\",\n    Search_Select_Custom = \"Search_Select_Custom\",\n    Search_Select_Concept = \"Search_Select_Concept\",\n    Search_Select_Correction = \"Search_Select_Correction\",\n    Search_GotoPage = \"Search_GotoPage\",\n    Search_GotoTab = \"Search_GotoTab\",\n    Search_DisplayResult = \"Search_DisplayResult\",\n    Search_RemoveResult = \"Search_RemoveResult\",\n    Search_RemoveAdvanced = \"Search_RemoveAdvanced\",\n    Search_SavedQuery = \"Search_SavedQuery\",\n    Search_WebService = \"Search_WebService\",\n    Search_DidYouMean_Original = \"Search_DidYouMean_Original\",\n    Search_DidYouMean_Correction = \"Search_DidYouMean_Correction\",\n    Search_ExportCSV = \"Search_ExportCSV\",\n    Search_SavedQuery_ExportCSV = \"Search_SavedQuery_ExportCSV\",\n    Search_Selection_ExportCSV = \"Search_Selection_ExportCSV\",\n    Search_AlertQuery = \"Search_AlertQuery\",\n    Search_Select_AnalyticsItem = \"Search_Select_AnalyticsItem\",\n    Search_Sort = \"Search_Sort\",\n    Search_Exit_Logout = \"Search_Exit_Logout\",\n    Search_Timeline_Usage = \"Search_Timeline_Usage\",\n    Search_AutoComplete = \"Search_Autocomplete\",\n\n    SavedQuery_Add = \"SavedQuery_Add\",\n    SavedQuery_Delete = \"SavedQuery_Delete\",\n    SavedQuery_DeleteAll = \"SavedQuery_DeleteAll\",\n    SavedQuery_Rename = \"SavedQuery_Rename\",\n\n    Alert_Edit = \"Alert_Edit\",\n    Alert_Delete = \"Alert_Delete\",\n    Alert_DeleteAll = \"Alert_DeleteAll\",\n\n    Link_Display = \"Link_Display\",\n    Link_Click = \"Link_Click\",\n\n    Basket_Add = \"Basket_Add\",\n    Basket_Delete = \"Basket_Delete\",\n    Basket_DeleteAll = \"Basket_DeleteAll\",\n    Basket_Rename = \"Basket_Rename\",\n    Basket_AddDoc = \"Basket_AddDoc\",\n    Basket_RemoveDoc = \"Basket_RemoveDoc\",\n    Basket_Open = \"Basket_Open\",\n    Basket_ExportCSV = \"Basket_ExportCSV\",\n\n    Label_Add = \"Label_Add\",\n    Label_Delete = \"Label_Delete\",\n    Label_Rename = \"Label_Rename\",\n    Label_Open = \"Label_Open\",\n    Label_AddDoc = \"Label_AddDoc\",\n    Label_RemoveDoc = \"Label_RemoveDoc\",\n    Label_ExportCSV = \"Label_ExportCSV\",\n    Label_Menu_ExportCSV = \"Label_Menu_ExportCSV\",\n\n    Rating_Set = \"Rating_Set\",\n    Rating_Delete = \"Rating_Delete\",\n\n    Doc_Preview = \"Doc_Preview\",\n    Doc_CacheHtml = \"Doc_CacheHtml\",\n    Doc_CachePdf = \"Doc_CachePdf\",\n    Doc_CacheOriginal = \"Doc_CacheOriginal\",\n    Doc_Url1 = \"Doc_Url1\",\n    Doc_Url2 = \"Doc_Url2\",\n\n    Click_ResultLink = \"Click_ResultLink\",\n    Click_ResultLink1 = \"Click_ResultLink1\",\n    Click_ResultLink2 = \"Click_ResultLink2\",\n    Click_ResultLink3 = \"Click_ResultLink3\",\n    Click_ResultLink4 = \"Click_ResultLink4\",\n    Click_ResultLink5 = \"Click_ResultLink5\",\n    Click_ResultLink6 = \"Click_ResultLink6\",\n    Click_ResultLink7 = \"Click_ResultLink7\",\n    Click_ResultLink8 = \"Click_ResultLink8\",\n    Click_ResultLink9 = \"Click_ResultLink9\",\n    Click_ResultLink10 = \"Click_ResultLink10\",\n    Click_PreviewLink1 = \"Click_PreviewLink1\",\n    Click_PreviewLink2 = \"Click_PreviewLink2\",\n    Click_PreviewLink3 = \"Click_PreviewLink3\",\n    Click_PreviewLink4 = \"Click_PreviewLink4\",\n    Click_PreviewLink5 = \"Click_PreviewLink5\",\n    Click_PreviewLink6 = \"Click_PreviewLink6\",\n    Click_PreviewLink7 = \"Click_PreviewLink7\",\n    Click_PreviewLink8 = \"Click_PreviewLink8\",\n    Click_PreviewLink9 = \"Click_PreviewLink9\",\n    Click_PreviewLink10 = \"Click_PreviewLink10\",\n\n    RFM_ClickSet = \"RFM_ClickSet\",\n    RFM_ClickReset = \"RFM_ClickReset\",\n    RFM_Like = \"RFM_Like\",\n    RFM_LikeReset = \"RFM_LikeReset\",\n    RFM_Dislike = \"RFM_Dislike\",\n    RFM_Important = \"RFM_Important\",\n    RFM_ImportantReset = \"RFM_ImportantReset\",\n    RFM_Ban = \"RFM_Ban\"\n}\n\n/**\n * A service to notify the audit manager on the Sinequa server of client-side events\n */\n@Injectable({\n    providedIn: \"root\"\n})\nexport class AuditWebService extends HttpService {\n    private static readonly endpoint = \"audit.notify\";\n\n    constructor(\n        @Inject(START_CONFIG) startConfig: StartConfig,\n        protected httpClient: SqHttpClient) {\n        super(startConfig);\n    }\n\n    /**\n     * Notify the Sinequa server of a sponsored link event\n     *\n     * @param evt The audit event type\n     * @param sl The sponsored link\n     * @param resultId The id of the results that showed the sponsored link\n     * @param parameters Additional information\n     */\n    notifySponsoredLink(\n        evt: AuditEventType, sl: LinkResult, resultId: string,\n        parameters?: MapOf<string | number | boolean | undefined>): Observable<void>  {\n        const detail: JsonObject = {\n            \"link-id\": sl.id,\n            rank: sl.rank || 0,\n            title: sl.title,\n            url: sl.url,\n            \"result-id\": resultId\n        };\n        if (parameters) {\n            Object.keys(parameters).forEach(key => detail[key] = parameters[key]);\n        }\n        const data: AuditEvent = {\n            type: evt,\n            detail\n        };\n        return this.notify(data);\n    }\n\n    /**\n     * Notify the Sinequa server of a document event\n     *\n     * @param evt The audit event type\n     * @param doc The document (record) in question\n     * @param resultsOrId The results or resultid that contain the document\n     * @param parameters Additional parameters\n     * @param rfmParameters Additional RFM parameters\n     */\n    notifyDocument(\n        evt: AuditEventType, doc: Record, resultsOrId: Results | string,\n        parameters?: MapOf<string | number | boolean | undefined>,\n        rfmParameters?: MapOf<string | number | boolean | undefined>): Observable<void>  {\n        let resultId: string | null;\n        let results: Results | undefined;\n        if (Utils.isString(resultsOrId)) {\n            resultId = resultsOrId;\n        }\n        else {\n            results = resultsOrId;\n            resultId = results ? results.id : null;\n        }\n        const detail: JsonObject = {\n            app: this.appName,\n            \"doc-id\": doc.id,\n            rank: doc.rank,\n            title: doc.title,\n            source: Utils.treeFirstNode(doc.collection[0]),\n            collection: doc.collection[0],\n            \"result-id\": resultId,\n            filename: doc.filename,\n            fileext: doc.fileext,\n            index: doc.databasealias\n        };\n        if (results) {\n            detail[\"result-count\"] = results.totalRowCount;\n        }\n        if (parameters) {\n            Object.keys(parameters).forEach(key => detail[key] = parameters[key]);\n        }\n        const data: AuditEvent = {\n            type: evt,\n            detail\n        };\n        if (rfmParameters) {\n            const rfmDetail: JsonObject = {};\n            Object.keys(rfmParameters).forEach(key => rfmDetail[key] = rfmParameters[key]);\n            data.rfmDetail = rfmDetail;\n        }\n        return this.notify(data);\n    }\n\n    /**\n     * Notify the Sinequa server of a document event\n     *\n     * @param evt The audit event type\n     * @param id The id of the document (record) in question\n     * @param parameters Additional parameters\n     * @param rfmParameters Additional RFM parameters\n     */\n    notifyDocumentById(\n        evt: AuditEventType, id: string,\n        parameters?: MapOf<string | number | boolean | undefined>,\n        rfmParameters?: MapOf<string | number | boolean | undefined>): Observable<void>  {\n        const collection = id.substr(0, id.indexOf(\"|\"));\n        const detail: JsonObject = {\n            app: this.appName,\n            \"doc-id\": id,\n            rank: -1,\n            source: Utils.treeFirstNode(collection),\n            collection\n        };\n        if (parameters) {\n            Object.keys(parameters).forEach(key => detail[key] = parameters[key]);\n        }\n        const data: AuditEvent = {\n            type: evt,\n            detail\n        };\n        if (rfmParameters) {\n            const rfmDetail: JsonObject = {};\n            Object.keys(rfmParameters).forEach(key => rfmDetail[key] = rfmParameters[key]);\n            data.rfmDetail = rfmDetail;\n        }\n        return this.notify(data);\n    }\n\n    /**\n     * Notify logout\n     */\n    notifyLogout() : Observable<void> {\n        const detail: JsonObject = {\n            app: this.appName,\n        };\n\n        const data: AuditEvent = {\n            type: AuditEventType.Search_Exit_Logout,\n            detail\n        };\n\n        return this.notify(data);\n    }\n\n    /**\n     * Notify the Sinequa server of a set of audit events\n     *\n     * @param auditEvents The audit events\n     */\n    notify(auditEvents: AuditEvents): Observable<void> {\n        if (!this.startConfig.auditEnabled) {\n            return of(undefined);\n        }\n        const observable = this.httpClient.post<void>(this.makeUrl(AuditWebService.endpoint), {\n            event: AuditEventType.None,\n            app: this.appName,\n            $auditRecord: auditEvents\n        });\n        Utils.subscribe(observable,\n            (response) => {\n                return response;\n            },\n            (error) => {\n                console.log(\"auditService.notify failure - error: \", error);\n            });\n        return observable;\n    }\n}","import {NgModule, ModuleWithProviders} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\n\nimport {WebServicesModule} from \"@sinequa/core/web-services\";\nimport {IntlModule} from \"@sinequa/core/intl\";\nimport {LoginModule} from \"@sinequa/core/login\";\nimport {UtilsModule} from \"@sinequa/components/utils\";\nimport {BsActionModule} from \"@sinequa/components/action\";\nimport {SearchOptions, SEARCH_OPTIONS} from \"../search.service\";\n\nimport {BsDidYouMean} from \"./did-you-mean/did-you-mean\";\nimport {BsBreadcrumbs} from \"./breadcrumbs/breadcrumbs\";\nimport {BsPager} from \"./pager/pager\";\nimport {BsPageSizeSelector} from \"./page-size-selector/page-size-selector\";\nimport {BsSortSelector} from \"./sort-selector/sort-selector\";\nimport {BsTabs} from \"./tabs/tabs\";\nimport {BsLoadingBar} from \"./loading-bar/loading-bar\";\nimport {BsScroller} from \"./scroller/scroller\"\nimport {BsLoadMore} from './load-more/load-more';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule, ReactiveFormsModule,\n\n        WebServicesModule,\n        IntlModule,\n        LoginModule,\n\n        UtilsModule,\n        BsActionModule\n    ],\n    declarations: [\n        BsDidYouMean,\n        BsBreadcrumbs, BsPager, BsPageSizeSelector, BsSortSelector,\n        BsTabs, BsLoadingBar,\n        BsScroller, BsLoadMore\n    ],\n    exports: [\n        BsDidYouMean,\n        BsBreadcrumbs, BsPager, BsPageSizeSelector, BsSortSelector,\n        BsTabs, BsLoadingBar,\n        BsScroller, BsLoadMore\n    ],\n})\nexport class BsSearchModule {\n    static forRoot(searchOptions: SearchOptions) : ModuleWithProviders<BsSearchModule> {\n        return {\n            ngModule: BsSearchModule,\n            providers: [\n                // Provide SEARCH_OPTIONS\n                {provide: SEARCH_OPTIONS, useValue: searchOptions},\n            ]\n        };\n    }\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject, Input, OnChanges, OnDestroy, SimpleChanges, ViewChild } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport {DOCUMENT} from '@angular/common';\nimport {CdkVirtualScrollViewport} from '@angular/cdk/scrolling';\nimport {Subscription} from 'rxjs';\n\nimport { HighlightValue, PreviewData } from '@sinequa/core/web-services';\nimport {Action} from \"@sinequa/components/action\";\n\nimport { PreviewDocument } from '../../preview-document';\nimport {PreviewService} from '../../preview.service';\n\nexport class Extract {\n  text: SafeHtml; // Sanitized HTML text\n  startIndex : number; // this is the start index of the extracts within the Document Text  \n  relevanceIndex : number; // 0 the most relevant to N the less relevant\n  textIndex : number; // index of the extract in the text. e.g 0 is the first extract displayed in the document\n}\n\n@Component({\n  selector: 'sq-preview-extracts-panel',\n  templateUrl: './preview-extracts-panel.component.html',\n  styleUrls: ['./preview-extracts-panel.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BsPreviewExtractsPanelComponent implements OnChanges, OnDestroy {\n  @Input() previewData: PreviewData;\n  @Input() previewDocument: PreviewDocument;\n  @Input() downloadUrl: string;\n  @Input() style: \"light\"|\"dark\" = \"light\";\n  @ViewChild(\"scrollViewport\") cdkScrollViewport: CdkVirtualScrollViewport;\n\n  sortAction : Action;\n  extracts: Extract[] = [];\n  currentIndex = -1;\n  loading = false;\n  loadCompleteSubscription: Subscription;\n\n  constructor(\n    @Inject(DOCUMENT) document: Document,\n    private previewService: PreviewService,\n    private cdr: ChangeDetectorRef,\n    private domSanitizer: DomSanitizer) { }\n\n  ngOnDestroy() {\n    if(this.loadCompleteSubscription) {\n      this.loadCompleteSubscription.unsubscribe();\n    }\n  }\n    \n  /**\n   * Extracts the list of extracts from the preview document\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    this.extracts = [];\n    if (this.previewData && this.previewDocument) {\n      const extracts = this.previewData.highlightsPerCategory[\"extractslocations\"]?.values; //Extract locations Array ordered by \"relevance\"\n      if (!!extracts && extracts.length > 0) {\n        this.extractAll(extracts, this.previewDocument);\n        return;\n      }\n    }\n    \n    if(this.previewData && this.downloadUrl){\n      const extracts = this.previewData.highlightsPerCategory[\"extractslocations\"]?.values; //Extract locations Array ordered by \"relevance\"\n      if(!!extracts && extracts.length > 0){\n        this.loading = true;\n\n        if (this.previewDocument) {\n          this.extractAll(extracts, this.previewDocument)\n        } else {\n          this.previewService.getHtmlPreview(this.downloadUrl)\n            .subscribe((value) => {\n              const previewDocument = this.createDocument(value);\n              this.extractAll(extracts, previewDocument);\n            });\n        }\n      }\n    }\n  }\n  \n  private createDocument(value: string): PreviewDocument {\n    const doc = document.implementation.createHTMLDocument(\"\");\n    doc.write(value);\n    doc.close();\n    let previewDocument = new PreviewDocument(doc);\n\n    const count = previewDocument.document.querySelectorAll(\"[id^='extractslocations']\").length;\n    if (count === 0 && this.previewDocument) {\n      // use previous document to retrieve extracts\n      previewDocument = this.previewDocument;\n    }\n    \n    return previewDocument;\n  }\n\n  private extractAll(extracts:HighlightValue[], previewDocument: PreviewDocument) {\n    // Init the extracts Array and storing the relevancy index = i because extractsLocations is already ordered by relevance\n    // but extract's text is sort by \"start\", that why text is set to empty here\n    this.extracts = extracts[0].locations.map((el, i) => ({\n      text: \"\",\n      startIndex: el.start,\n      relevanceIndex: i,  // used to sort by relevance index\n      textIndex: 0\n    }));\n\n    // next sort the array by startIndex to extract the correct extract's text\n    // and set the textIndex\n    this.extracts.sort((a, b) => a.startIndex - b.startIndex) // Sorting by start index (text index)\n    .forEach((el, i) => {\n      el.text = this.sanitize(previewDocument.getHighlightText(\"extractslocations\", i)); // get the text\n      el.textIndex = i // Storing the TextIndex to be able to select extracts\n    });\n\n    // do not take item without text\n    this.extracts = this.extracts.filter(el => el.text !== '');\n    \n    // finally sort extracts by relevance\n    this.extracts.sort((a,b) => a.relevanceIndex - b.relevanceIndex);\n    \n    this.buildSortAction();\n          \n    this.loading = false;\n    this.currentIndex = -1;\n    this.cdr.detectChanges();\n  }\n\n  /**\n   * Build Sort Action for Extracts\n   * @param i \n   */\n  buildSortAction(){\n    this.sortAction = new Action({\n      title: \"msg#sortSelector.sortByTitle\",\n      text:  \"msg#preview.relevanceSortHighlightButtonText\",\n      children: [\n        new Action({\n          icon: 'fas fa-sort-amount-down',\n          text: \"msg#preview.relevanceSortHighlightButtonText\",\n          action: (item: Action, event: Event) => {\n            // return a new map to re-render the collection\n            this.extracts = this.extracts.map(el => el).sort((a, b) => a.relevanceIndex - b.relevanceIndex);\n            this.sortAction.text = item.text;\n            this.currentIndex = -1;\n            }\n        }),\n        new Action({\n          icon: 'fas fa-sort-amount-down',\n          text: \"msg#preview.textOrderSortHighlightButtonText\",\n          action: (item: Action, event: Event) => {\n            // return a new map to re-render the collection\n            this.extracts = this.extracts.map(el => el).sort((a,b) => a.textIndex-b.textIndex);\n            this.sortAction.text = item.text;\n            this.currentIndex = -1;\n          }\n        })\n      ]\n    });\n\n  }\n\n  /**\n   * Scroll to a specific extract\n   * @param i\n   */\n  scrollExtract(extract: Extract, index?: number) {\n    if (index !== undefined) {\n      this.currentIndex = index;\n    }\n\n    if (this.previewDocument) {\n      // extracts are always at textIndex position whatever the sort\n      this.previewDocument.selectHighlight(\"extractslocations\", extract.textIndex);\n    }\n    return false;\n  }\n\n  /**\n   * Sanitize the text of a HTML formatted extract\n   * @param text\n   */\n  sanitize(text: string): SafeHtml | string {\n    return text !== \"\" ? this.domSanitizer.bypassSecurityTrustHtml(text.replace(/sq\\-current/, \"\")) : \"\";\n  }\n\n  /**\n   * Select the previous extract in the list\n   */\n  previousExtract(){\n    this.currentIndex--;\n    this.scrollTo();\n  }\n\n  /**\n   * Select the next extract in the list\n   */\n  nextExtract(){\n    this.currentIndex++;\n    this.scrollTo();\n  }\n  \n  private scrollTo() {\n    this.cdkScrollViewport.scrollToIndex(this.currentIndex);\n    const extract = this.extracts[this.currentIndex];\n    this.scrollExtract(extract);\n  }\n}\n","<ng-container *ngIf=\"previewData\">\n    <div class=\"d-flex justify-content-between p-2\" *ngIf=\"extracts?.length > 0\">\n        <button class=\"btn btn-light\" (click)=\"previousExtract()\" [disabled]=\"currentIndex < 1\">\n            <i class=\"fas fa-arrow-left\"></i>&nbsp;{{ 'msg#preview.previousDocument' | sqMessage}}\n        </button>\n        <div class=\"btn-group\" [sq-action-buttons]=\"{items: [sortAction], autoAdjust: true}\" ></div>\n        <button class=\"btn btn-light float-right\" (click)=\"nextExtract()\" [disabled]=\"currentIndex >= extracts.length-1\">\n            {{ 'msg#preview.nextDocument' | sqMessage}}&nbsp;<i class=\"fas fa-arrow-right\"></i>\n        </button>\n    </div>\n\n    <div *ngIf=\"loading\" class=\"d-flex justify-content-center align-items-center h-100\">\n        <div class=\"spinner-grow\" role=\"status\"></div>\n    </div>\n    <div class=\"text-center text-muted\" *ngIf=\"!loading && extracts?.length === 0; else extractsTpl\">\n        <span>{{ 'msg#preview.noextract' | sqMessage}}</span>\n    </div>\n    \n    <ng-template #extractsTpl>\n        <cdk-virtual-scroll-viewport #scrollViewport [itemSize]=\"64\" style=\"height: 100%;\">\n            <div *cdkVirtualFor=\"let extract of extracts; let i = index\" class=\"pl-2 pr-2\">\n                <a  href=\"#\" \n                    class=\"card my-1 list-group-item-action\"\n                    [ngClass]=\"{'active': i === currentIndex}\"\n                    (click)=\"scrollExtract(extract, i)\">\n                    <p class=\"card-body m-0\" [innerHTML]=\"extract.text\"></p>\n                </a>\n            </div>\n        </cdk-virtual-scroll-viewport>\n    </ng-template>\n</ng-container>\n\n<div class=\"text-center\" *ngIf=\"!previewData\">\n    {{ 'msg#preview.loading' | sqMessage}}\n</div>","import {Injectable, Inject} from \"@angular/core\";\nimport {HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpParams} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {START_CONFIG, StartConfig, AuditRecord, AuditEvent, AuditEvents} from \"@sinequa/core/web-services\";\nimport {Utils} from \"@sinequa/core/base\";\n\n/**\n * An `HttpInterceptor` to process audi events attached to the request body\n * in the `$auditRecord` member.\n */\n@Injectable({\n    providedIn: \"root\"\n})\nexport class AuditInterceptor implements HttpInterceptor {\n    \n    // Store the session id and its datetime of creation/refresh\n    sessionid: string;\n    sessionstart: Date;\n\n    constructor(\n        @Inject(START_CONFIG) private startConfig: StartConfig\n    ) {\n    }\n\n    private shouldIntercept(url: string): boolean {\n        return Utils.startsWith(url, this.startConfig.apiPath!);\n    }\n\n    private isJsonable(obj): boolean {\n        return (Utils.isObject(obj) || Utils.isArray(obj)) && !Utils.isArrayBuffer(obj) && !Utils.isBlob(obj) &&\n            !Utils.isString(obj) && !(obj instanceof HttpParams);\n    }\n\n    // Handle legacy calls where auditEvents is either an AuditEvent or AuditEvent[]\n    private ensureAuditRecord(auditEvents: AuditEvents): AuditRecord | undefined{\n        if (!auditEvents) {\n            return undefined;\n        }\n        let auditEvents1: AuditEvent[] | undefined;\n        if (Utils.isArray(auditEvents)) {\n            auditEvents1 = auditEvents;\n        }\n        else if (Utils.isObject(auditEvents)) {\n            const auditRecord = auditEvents as AuditRecord;\n            if (auditRecord.auditEvents || auditRecord.mlAuditEvents) {\n                return auditRecord;\n            }\n            auditEvents1 = [auditEvents as AuditEvent];\n        }\n        return {\n            auditEvents: auditEvents1\n        };\n    }\n\n    /**\n     * Add a sessionid to all the audit events\n     * @param auditRecord \n     */\n    private addSessionId(auditRecord?: AuditRecord) {\n        const sessionid = this.getSessionId();\n        auditRecord?.auditEvents?.forEach(event => {\n            if(!event.detail) {\n                event.detail = {};\n            }\n            event.detail['session-id'] = sessionid;\n        });\n    }\n\n    /**\n     * Get a Session Id initialized upon login. The session is maintained for 10 minutes\n     * after the last call to this method.\n     */\n    private getSessionId(): string {\n        if(!this.sessionid || this.isSessionStale()) {\n            this.sessionid = Utils.guid();\n        }\n        this.sessionstart = new Date();\n        return this.sessionid;\n    }\n\n    /**\n     * Test whether the current session id valid or stale (need to be refreshed)\n     */\n    private isSessionStale(): boolean {\n        const lastSession = new Date().getTime() - this.sessionstart.getTime();\n        // Consider the session stale after 10 minutes\n        return lastSession > 10 * 60 * 1000;\n    }\n\n    /**\n     * Called once the `$auditRecord` member has been standardized, this method\n     * can be overidden to update fields in the audit events associated with a\n     * web service call.\n     */\n    protected updateAuditRecord(auditRecord?: AuditRecord) {\n    }\n\n    /**\n     * Intercept requests with a JSON body and standardize the format of the\n     * `$auditRecord` member.\n     */\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        if (this.shouldIntercept(request.url) && this.isJsonable(request.body)) {\n            request.body.$auditRecord = this.ensureAuditRecord(request.body.$auditRecord);\n            this.addSessionId(request.body.$auditRecord);\n            this.updateAuditRecord(request.body.$auditRecord);\n        }\n        return next.handle(request);\n    }\n}\n","import {Directive, Input, OnChanges, ElementRef} from \"@angular/core\";\n\nexport interface ScrollIntoViewOptions {\n    active: boolean;\n    first: boolean;\n}\n\n@Directive({\n    selector: \"[sqScrollIntoView]\"\n})\nexport class ScrollIntoView implements OnChanges {\n    @Input(\"sqScrollIntoView\") options: ScrollIntoViewOptions;\n\n    constructor(\n        private elementRef: ElementRef) {\n    }\n\n    ngOnChanges() {\n        if (this.options.active) {\n            if (this.options.first) {\n                this.elementRef.nativeElement.scrollIntoView(false);\n            }\n            else {\n                this.elementRef.nativeElement.scrollIntoViewIfNeeded(false);\n            }\n        }\n    }\n}\n","import {Injectable, OnDestroy, InjectionToken, Inject} from \"@angular/core\";\nimport {Subject} from \"rxjs\";\nimport {Record} from \"@sinequa/core/web-services\";\nimport {Action} from \"@sinequa/components/action\";\nimport {SearchService} from \"@sinequa/components/search\";\n\nexport enum SelectionEventType {\n    SELECT,\n    UNSELECT,\n    MOVE\n}\n\nexport interface SelectionEvent {\n    type: SelectionEventType;\n    records: Record[];\n    source?: string;\n}\n\nexport interface SelectionItem {\n    id: string;\n}\n\n/**\n * The storage mode allows to customize how the service stores records, \n * which enables different features:\n * - id: only store the id of a selected record (default)\n * - record: store the entire record\n * - a function that customize what is stored (at least the record id is required)\n */\nexport interface SelectionOptions {\n    resetOnNewResults: boolean;\n    resetOnNewQuery: boolean;\n    storage: \"id\" | \"record\" | ((record: Record) => SelectionItem);\n}\n\nexport const defaultSelectionOptions: SelectionOptions = {\n    resetOnNewResults: false,\n    resetOnNewQuery: true,\n    storage: \"id\"\n}\n\nexport const SELECTION_OPTIONS = new InjectionToken<SelectionOptions>(\"SELECTION_OPTIONS\");\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SelectionService implements OnDestroy {\n\n    protected readonly selectedRecords: SelectionItem[] = []; // currently selected items\n    public readonly selectionActions: Action[] = []; // Actions that other services can register onto this service\n\n    private _events = new Subject<SelectionEvent>();\n\n    public readonly selectedRecordsAction: Action;\n\n    constructor(\n        public searchService : SearchService,\n        @Inject(SELECTION_OPTIONS) public selectionOptions: SelectionOptions \n    ){\n\n        this.searchService.events.subscribe(event => {\n\n            if(!this.selectionOptions.resetOnNewResults && event.type === \"new-results\" && this.searchService.haveRecords){\n\n                const newSelectedRecords: Record[] = [];\n                if (this.searchService.results?.records) {\n                    for (const record of this.searchService.results.records) {\n                        const index = this.selectedRecords.findIndex(item => item.id === record.id);\n                        if (index !== -1 && !record.$selected) {\n                            record.$selected = true;    // Select previously selected records\n                            this.selectedRecords.splice(index, 1, record);\n                            newSelectedRecords.push(record);\n                        }\n                    }\n                }\n                if(newSelectedRecords.length > 0)   // Menus might need to be refreshed\n                    this._events.next({type: SelectionEventType.SELECT, records: newSelectedRecords, source: event.type});\n\n            }\n\n            if(this.selectionOptions.resetOnNewResults && event.type === \"new-results\") {\n                this.clearSelectedRecords(event.type);\n            }\n            \n            if(this.selectionOptions.resetOnNewQuery && event.type === \"new-query\") {\n                this.clearSelectedRecords(event.type);\n            }\n\n        });\n\n        this.selectedRecordsAction = this.buildSelectRecordsAction();\n        this.selectionActions.push(this.selectedRecordsAction);\n\n        this.events.subscribe({next: () => {\n            this.selectionActions.forEach(action => action.update());\n        }});\n\n    }\n\n    /**\n     * Emits an event on any (bulk or single) selection and unselection events\n     */\n    public get events() : Subject<SelectionEvent> {\n        return this._events;\n    }\n\n    ngOnDestroy(){\n        this._events.complete();\n    }\n\n    private getItem(record: Record): SelectionItem {\n        if(this.selectionOptions.storage === \"id\") {\n            return {id: record.id};\n        }\n        else if(this.selectionOptions.storage === \"record\") {\n            return record;\n        }\n        else {\n            return this.selectionOptions.storage(record);\n        }\n    }\n\n    /**\n     * Returns a copy of the list of selected records\n     */\n    public getSelectedItems(): SelectionItem[] {\n        return this.selectedRecords.slice(0);\n    }\n\n    /**\n     * Return the list of selected record ids\n     */\n    public getSelectedIds(): string[] {\n        return this.selectedRecords.map(r => r.id);\n    }\n\n    /**\n     * @returns true if at least one record is selected\n     */\n    public get haveSelectedRecords(): boolean {\n        return this.selectedRecords.length > 0;\n    }\n\n    public getSelectedCount(): number {\n        return this.selectedRecords.length;\n    }\n\n    /**\n     * @returns true if all records in the search results are selected\n     */\n    public get allRecordsSelected(): boolean {\n        if (!this.searchService.results || !this.searchService.results.records) {\n            return false;\n        }\n        for (const record of this.searchService.results.records) {\n            if (!record.$selected) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    private selectCurrentRecords(source?: string) {\n        const newSelectedRecords: Record[] = [];\n        if (this.searchService.results && this.searchService.results.records) {\n            for (const record of this.searchService.results.records) {\n                if (!record.$selected) {\n                    this.selectedRecords.push(this.getItem(record));\n                    newSelectedRecords.push(record);\n                    record.$selected = true;\n                }\n            }\n        }\n        if(newSelectedRecords.length > 0)\n            this._events.next({type: SelectionEventType.SELECT, records: newSelectedRecords, source});\n    }\n\n\n    /**\n     * Toggles the selection of one record or all those in the results.\n     * Emits a SelectionEvent if a record is selected or unselected.\n     * @param record if provided, will toggle the selection of this record; if not will toggle all records in results\n     */\n    public toggleSelectedRecords(record?: Record, source?: string) {\n        if (!!record) {\n            const index = this.selectedRecords.findIndex(item => item.id === record.id);\n            if (index > -1) {\n                this.selectedRecords.splice(index, 1);\n                record.$selected = false;\n            }\n            else {\n                this.selectedRecords.push(this.getItem(record));\n                record.$selected = true;\n            }\n            // record might not be the one in the search service results (if passing a SelectionItem)\n            const ssRecord = this.searchService.getRecordFromId(record.id);\n            if(ssRecord) {\n                ssRecord.$selected = record.$selected;\n            }\n            this._events.next({type: record.$selected? SelectionEventType.UNSELECT : SelectionEventType.SELECT, records: [record], source});\n        }\n        else {\n            if (this.allRecordsSelected) {\n                this.clearSelectedRecords(source);\n            }\n            else {\n                this.selectCurrentRecords(source);\n            }\n        }\n    }\n\n    /**\n     * Moves a selected record to a different index;\n     * @param record \n     * @param newIndex \n     */\n    public moveSelectedRecord(record: Record, newIndex: number, source?: string) {\n        const i = this.selectedRecords.findIndex(r => r.id === record.id);\n        if(i === -1) {\n            throw new Error(`Record ${record.id} is not in the selected records`);\n        }\n        this.selectedRecords.splice(i, 1);\n        this.selectedRecords.splice(newIndex, 0, this.getItem(record));\n        this.events.next({type: SelectionEventType.MOVE, records: [record], source});\n    }\n\n    /**\n     * Unselect all selected records\n     * Emits a SelectionEvent\n     */\n    public clearSelectedRecords(source?: string) {\n        this.selectedRecords.splice(0);\n        const newUnselectedRecords: Record[] = [];\n        if (this.searchService.results && this.searchService.results.records) {\n            for (const record of this.searchService.results.records) {\n                if(record.$selected){\n                    record.$selected = false;\n                    newUnselectedRecords.push(record);\n                }\n            }\n        }\n        if(newUnselectedRecords.length > 0)\n            this._events.next({type: SelectionEventType.UNSELECT, records: newUnselectedRecords, source});\n    }\n\n    private buildSelectRecordsAction(): Action {\n        return new Action({\n            icon: \"far fa-square\",\n            text: \"msg#resultsSelector.selectDocuments\",\n            title: this.allRecordsSelected ? \"msg#resultsSelector.unselectDocumentsTitle\" : \"msg#resultsSelector.selectDocumentsTitle\",\n            messageParams: {values: {count: this.selectedRecords.length}},\n            action: (item, $event) => {\n                this.toggleSelectedRecords(undefined, \"multiple-selector\");\n            },\n            updater: (item) => {\n                item.icon = this.haveSelectedRecords ? \"far fa-check-square\" : \"far fa-square\";\n                item.title = this.allRecordsSelected ? \"msg#resultsSelector.unselectDocumentsTitle\" : \"msg#resultsSelector.selectDocumentsTitle\";\n                item.messageParams = {values: {count: this.selectedRecords.length}};\n            }\n        });\n    }\n}","import {Utils} from \"@sinequa/core/base\";\nimport {enSearch, frSearch, deSearch} from \"@sinequa/components/search\";\nimport {enModal, frModal, deModal} from \"@sinequa/components/modal\";\nimport _enAlerts from \"./en\";\nimport _frAlerts from \"./fr\";\nimport _deAlerts from \"./de\";\n\nconst enAlerts = Utils.merge({}, _enAlerts, enSearch, enModal);\nconst frAlerts = Utils.merge({}, _frAlerts, frSearch, frModal);\nconst deAlerts = Utils.merge({}, _deAlerts, deSearch, deModal);\n\nexport { enAlerts, frAlerts, deAlerts };\n","import {Pipe, ChangeDetectorRef} from \"@angular/core\";\nimport {ValidationErrors} from \"@angular/forms\";\nimport {AbstractIntlPipe, IntlService} from \"@sinequa/core/intl\";\nimport {ValidationService} from \"./validation.service\";\n\n/**\n * A pipe to display the first error in a `ValidationErrors` map.\n */\n@Pipe({name: \"sqValidationError\", pure: false})\nexport class ValidationErrorPipe extends AbstractIntlPipe {\n    constructor(\n        intlService: IntlService,\n        changeDetectorRef: ChangeDetectorRef,\n        protected validationService: ValidationService) {\n        super(intlService, changeDetectorRef);\n    }\n\n    updateValue(key: ValidationErrors, params: any): void {\n        super.updateValue(key, params);\n        const text = this.validationService.getFirstErrorText(key);\n        const info = this.validationService.getFirstErrorInfo(key);\n        this.value = text ? this.intlService.formatMessage(text, {values: info}) : undefined;\n    }\n}\n","import { Component, ChangeDetectorRef } from \"@angular/core\";\nimport { NavigationEnd, Router } from \"@angular/router\";\nimport { ComponentWithLogin, LoginService } from \"@sinequa/core/login\";\nimport { BasketsService } from '@sinequa/components/baskets';\nimport { SavedQueriesService, RecentQueriesService, RecentDocumentsService } from '@sinequa/components/saved-queries';\nimport { AlertsService } from '@sinequa/components/alerts';\nimport { LabelsService } from '@sinequa/components/labels';\nimport { UserPreferences } from '@sinequa/components/user-settings';\nimport { SelectionService } from '@sinequa/components/selection';\nimport { AppService } from '@sinequa/core/app-utils';\nimport { FEATURES } from '../config';\nimport { AuditWebService } from \"@sinequa/core/web-services\";\n\n@Component({\n    selector: \"app\",\n    templateUrl: \"./app.component.html\"\n})\nexport class AppComponent extends ComponentWithLogin {\n\n\n    constructor(\n        // These 2 services are required by the constructor of ComponentWithLogin\n        loginService: LoginService,\n        cdRef: ChangeDetectorRef,\n\n        // Services are instantiated by the app component,\n        // to guarantee they are instantiated in a consistent order,\n        // regardless of the entry route.\n        // The order below impacts the order of the actions in the selection menu.\n        prefs: UserPreferences,\n        public savedQueriesService: SavedQueriesService,\n        public basketsService: BasketsService,\n        public alertsService: AlertsService,\n        public labelsService: LabelsService,\n        recentQueriesService: RecentQueriesService,\n        RecentDocumentsService: RecentDocumentsService,\n        public selectionService: SelectionService,\n        public appService: AppService,\n\n        public router: Router,\n        public auditWebService: AuditWebService\n        ){\n        super(loginService, cdRef);\n\n    }\n\n    initDone: boolean = false;\n    /**\n     * Initialize the list of actions in the selection service.\n     * This method may be called multiple times, before the login is actually complete,\n     * hence the initDone and this.appService.app test\n     */\n    onLoginComplete(){\n\n        if(!this.initDone && this.appService.app){\n\n            this.initDone = true;\n\n            let features = FEATURES;\n            // The local config (config.ts) can be overriden by server-side config\n            if(this.appService.app && this.appService.app.data && this.appService.app.data.features){\n                features = <string[]> this.appService.app.data.features;\n            }\n\n            features.forEach(feature => {\n                switch(feature) {\n                    case 'saved-queries': {\n                        this.selectionService.selectionActions.push(this.savedQueriesService.selectedRecordsAction);\n                        break;\n                    }\n                    case 'baskets': {\n                        this.basketsService.selectedRecordsAction.icon = \"fas fa-inbox\"; // Overriding the baskets icon (hard coded in the service)\n                        this.selectionService.selectionActions.push(this.basketsService.selectedRecordsAction);\n                        break;\n                    }\n                    case 'labels': {\n                        const action = this.labelsService.buildSelectionAction();\n                        if(action){\n                            this.selectionService.selectionActions.push(action);\n                        }\n                        break;\n                    }\n                }\n            });\n\n            this.auditRouteChange();\n\n            this.router.events.subscribe(event => {\n                if(event instanceof NavigationEnd && this.loginService.complete) { // Check login complete in case of logout\n                    this.auditRouteChange();\n                }\n            });\n\n            document.addEventListener('visibilitychange', () => {\n                if (document.visibilityState === 'hidden') {\n                    this.auditWebService.notify({\n                        type: `Navigation.exit`\n                    });\n                }\n                if (document.visibilityState === 'visible') {\n                    this.auditWebService.notify({\n                        type: `Navigation.return`\n                    });\n                }\n            });\n\n        }\n    }\n\n    previousRoute: string | undefined;\n\n    auditRouteChange() {\n        const route = this.router.url.substr(1).split('?')[0]; // Extract route name\n        if(route && route !== this.previousRoute) {\n            this.auditWebService.notify({\n                type: `Navigation.${route}`\n            });\n        }\n        this.previousRoute = route;\n    }\n\n}","<router-outlet></router-outlet>\n<sq-notifications></sq-notifications>","import { Component, forwardRef, Input, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Utils, Keys } from \"@sinequa/core/base\";\nimport { ValueItem } from '@sinequa/core/app-utils';\n\n@Component({\n    selector: \"sq-select\",\n    templateUrl: \"./select.html\",\n    providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        multi: true,\n        useExisting: forwardRef(() => BsSelectComponent),\n        }]\n})\nexport class BsSelectComponent implements ControlValueAccessor, OnInit {\n    @Input() items: ValueItem[];\n    @Input() disabled: boolean;\n    @Input() multiple: boolean;\n    @ViewChild(\"button\", {static: false}) buttonElement: ElementRef;\n    opened: boolean = false;\n    isOpen: boolean = false;\n    activeItem: number = -1;\n    private cancelBlur: boolean = false; // For IE which takes focus when clicking on dropdown scrollbar despite the mousedown handling\n    public names: string[];\n    private selectedItems: number[]; //stores indices of selected items\n    private onChangeCallback: (_: any) => void = () => {};\n\n    ngOnInit() {\n        this.clearSelected();\n        if (this.items.length === 0) {\n          this.disabled = false;\n        }\n        this.names = [];\n        this.items.forEach(item => this.names.push(item.display!));\n    }\n\n    setOpen(value: boolean): void {\n        if (!this.opened) {\n            if (this.disabled || !value) {\n                return;\n            }\n            this.opened = true;\n        }\n        this.isOpen = value;\n        if (!value) {\n            this.activeItem = -1;\n        }\n    }\n\n    mousedown(event: Event): void {\n        event.preventDefault();\n        this.cancelBlur = true;\n        Utils.delay().then(() => this.cancelBlur = false);\n    }\n\n    blur(event: FocusEvent): void {\n        if (this.cancelBlur) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n            Utils.delay().then(() => {\n                this.buttonElement.nativeElement.focus();\n            });\n            return;\n        }\n        this.setOpen(false);\n    }\n\n    toggleOpen(): void {\n        if (this.disabled) {\n            return;\n        }\n        this.setOpen(!this.isOpen);\n    }\n\n    keydown($event: KeyboardEvent): void {\n        if (this.disabled) {\n            return;\n        }\n        // arrow down\n        if ($event.keyCode === Keys.down) {\n            if (!this.isOpen) {\n                this.setOpen(true);\n            }\n            this.activeItem++;\n            if (this.activeItem >= this.items.length) {\n                this.activeItem = 0;\n            }\n            $event.preventDefault();\n            $event.stopPropagation();\n        }\n        // arrow up\n        else if ($event.keyCode === Keys.up) {\n            if (!this.isOpen) {\n                this.setOpen(true);\n            }\n            this.activeItem--;\n            if (this.activeItem < 0) {\n                this.activeItem = this.items.length - 1;\n            }\n            $event.preventDefault();\n            $event.stopPropagation();\n        }\n        // enter or space\n        else if (($event.keyCode === Keys.enter || $event.keyCode === Keys.space) &&\n            this.activeItem >= 0 && this.activeItem < this.items.length) {\n            this.toggleItemSelected(this.activeItem);\n            $event.preventDefault();\n            $event.stopPropagation();\n        }\n        // escape\n        else if ($event.keyCode === Keys.esc && this.isOpen) {\n            this.setOpen(false);\n            $event.preventDefault();\n            $event.stopPropagation();\n        }\n    }\n\n    private clearSelected() {\n        this.selectedItems = [];\n    }\n\n    private countSelected(): number {\n        return this.selectedItems.length;\n    }\n\n    isItemSelected(itemIndex: number) : boolean {\n        return this.selectedItems.includes(itemIndex);\n    }\n\n    toggleItemSelected(itemIndex: number): void {\n        const idx: number = this.selectedItems.indexOf(itemIndex);\n        // Remove item if it was already selected\n        if (idx > -1) {\n            this.selectedItems.splice(idx, 1);\n        }\n        // regular case: just add the index, and update the active item if it exists\n        else if (this.multiple) {\n            this.selectedItems.push(itemIndex);\n            if (this.activeItem >= 0)\n                this.activeItem = itemIndex;\n        }\n        // single-item case: ensure there is only one selected item, and close the menu\n        else {\n            this.selectedItems = [itemIndex];\n            this.setOpen(false);\n        }\n        this.triggerOnChange();\n    }\n\n    /* Template properties */\n    get buttonTitleMessageParams(): any {\n        return {\n            values: {\n                count: this.countSelected()\n            }\n        };\n    }\n\n    get buttonTitle(): string {\n        const selectCount = this.countSelected();\n\n        if (selectCount === 0) {\n            return \"msg#advanced.select.noItems\";\n        }\n        if (!this.multiple) {\n            return this.items[this.selectedItems[0]].display!;\n        }\n        if (selectCount === this.items.length) {\n            return \"msg#advanced.select.allItems\";\n        }\n\n        //Get list of items names corresponding to selected indices\n        return this.selectedItems\n            .map(index => this.items[index].display!)\n            .sort()\n            .join(\", \");\n    }\n\n    get itemListHeight(): string {\n        // use 10 as default\n        return (10 * 4) + \"ex\";\n    }\n    /* End Template properties */\n\n    /* Change event */\n    private triggerOnChange() {\n        // Gather selected item values\n        let values: ValueItem | ValueItem[] | undefined;\n        // We can not pass an empty array, when empty use undefined instead\n        if (this.selectedItems.length === 0) {\n            values = undefined;\n        }\n        // return an array if multiple\n        else if (this.multiple) {\n            values = this.selectedItems.map(index => this.items[index]);\n        }\n        // directly pass the value if not multiple\n        else {\n            values = this.items[this.selectedItems[0]];\n        }\n\n        this.onChangeCallback(values);\n    }\n    /* End Change event */\n\n    /* ControlValueAccessor methods */\n    writeValue(value: ValueItem | ValueItem[]): void {\n        this.clearSelected();\n        if (value) {\n            // the value may not be an array if this select is not multiple\n            const asArray = Array.isArray(value) ? value : [value];\n            //Mark items as selected based on input values\n            this.items.forEach((item, index) => {\n                if (asArray.find((el) => el.value === item.value) && index !== undefined) {\n                    this.selectedItems.push(index);\n                }\n            });\n        }\n    }\n\n    registerOnChange(fn: any): void {\n        this.onChangeCallback = fn;\n    }\n\n    registerOnTouched(fn: any): void {\n    }\n    /* End ControlValueAccessor methods */\n}\n","<div class=\"dropdown\">\n    <!-- item-list toggle -->\n    <button #button class=\"btn btn-light {{disabled ? ' disabled' : ''}} dropdown-toggle form-control\" data-toggle=\"dropdown\" type=\"button\" role=\"button\" (click)=\"toggleOpen()\" (blur)=\"blur($event)\" (keydown)=\"keydown($event)\" tabindex=\"0\"><span class=\"sq-button-text\">{{buttonTitle | sqMessage:buttonTitleMessageParams}}</span></button>\n    <!-- item-list view -->\n    <div *ngIf=\"opened\" [hidden]=\"!isOpen\" class=\"dropdown-menu dropdown-menu-left show\" [style.max-height]=\"itemListHeight\" role=\"combobox\" (mousedown)=\"mousedown($event)\">\n        <!-- items -->\n        <a *ngFor=\"let itemName of names; let i = index\" class=\"dropdown-item{{activeItem === i ? ' active' : ''}}\"\n            (click)=\"toggleItemSelected(i)\" (keydown)=\"keydown($event)\" tabindex=\"-1\"\n            [sqScrollIntoView]=\"{active: i === activeItem, first: i === 0}\">\n            <span class=\"fas fa-check {{isItemSelected(i) ? '' : ' invisible'}} left\"></span>\n            <span>{{itemName}}</span>\n        </a>\n    </div>\n</div>\n","import {Component, Input, OnInit, AfterViewInit, ElementRef, ChangeDetectionStrategy, ChangeDetectorRef} from \"@angular/core\";\nimport {Action} from \"../../action\";\nimport {UIService} from \"@sinequa/components/utils\";\nimport {DropdownMenuOptions} from \"../dropdown-menu/dropdown-menu\";\n\n\nexport interface ActionItemOptions {\n    item: Action;\n    size?: string;\n    style?: string;\n    autoAdjust?: boolean;\n    autoAdjustBreakpoint?: string;\n    inMenu: boolean;\n    rightAligned?: boolean;\n}\n\n@Component({\n    selector: \"[sq-action-item]\",\n    templateUrl: \"./action-item.html\",\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BsActionItem implements OnInit, AfterViewInit {\n    @Input(\"sq-action-item\") options: ActionItemOptions;\n    @Input() collapseBreakpoint: string = \"md\";\n    inListItem: boolean;\n    dropdownButton: Element;\n    dropdownListItem: Element;\n    autoAdjustBreakpoint?: string;\n    showDropdown: boolean;\n\n    constructor(\n        private uiService: UIService,\n        private elementRef: ElementRef,\n        private cdRef: ChangeDetectorRef) {\n    }\n\n    get haveItem(): boolean {\n        return !!this.options.item;\n    }\n\n    get isVisible(): boolean {\n        return this.haveItem && !this.options.item.hidden;\n    }\n\n    get hasAction(): boolean {\n        return this.haveItem && !!this.options.item.action;\n    }\n\n    get isDropdownButton(): boolean {\n        return this.isVisible && !this.inListItem && this.options.item.hasChildren;\n    }\n\n    get isButton(): boolean {\n        return this.isVisible && !this.inListItem && !this.options.item.hasChildren && this.hasAction;\n    }\n\n    get isDropdownListItem(): boolean {\n        return this.isVisible && this.inListItem && this.options.item.hasChildren;\n    }\n\n    get isListItem(): boolean {\n        return this.isVisible && this.inListItem && !this.options.item.hasChildren && this.hasAction;\n    }\n\n    get haveSpace(): boolean {\n        if (this.uiService.screenSizeIsGreaterOrEqual(this.autoAdjustBreakpoint)) {\n            return true;\n        }\n        if (this.inListItem && this.uiService.screenSizeIsLess(this.collapseBreakpoint)) {\n            return true;\n        }\n        return false;\n    }\n\n    get haveIcon(): boolean {\n        return !!this.options.item.icon || !!this.options.item.iconAfter;\n    }\n\n    get itemText(): string {\n        if (!this.haveItem) {\n            return \"\";\n        }\n        const text = this.options.item.text || \"\";\n        if (this.options.autoAdjust && this.haveIcon) {\n            return this.haveSpace ? text : \"\";\n        }\n        else {\n            return text;\n        }\n    }\n\n    get itemTitle(): string {\n        if (!this.haveItem) {\n            return \"\";\n        }\n        const text = this.options.item.text || \"\";\n        const title = this.options.item.title || \"\";\n        if (this.options.autoAdjust && this.haveIcon) {\n            return this.haveSpace ? (title !== text ? title : \"\") : title || text;\n        }\n        else {\n            return title;\n        }\n    }\n\n    get itemMessageParams(): any {\n        if (!this.haveItem) {\n            return null;\n        }\n        return this.options.item.messageParams;\n    }\n\n    get sizeClass(): string {\n        return this.options.size ? `btn-${this.options.size}` : \"\";\n    }\n\n    get styleClass(): string {\n        return this.options.style ? `btn-${this.options.style}` : \"btn-light\";\n    }\n    \n    get dropdownMenuOptions(): DropdownMenuOptions {\n        return ({...this.options, showMenuClass: 'show'});\n    }\n\n    ngAfterViewInit() {\n        this.dropdownButton = this.elementRef.nativeElement.querySelector(\"div.dropdown\");\n        this.dropdownListItem = this.elementRef.nativeElement.querySelector(\"li.dropdown-toggle\");\n    }\n\n    ngOnInit() {\n        this.inListItem = (this.elementRef.nativeElement.nodeName === \"LI\");\n        if (this.options.item.init) {\n            this.options.item.init(this.options.item);\n        }\n        this.autoAdjustBreakpoint = this.options.autoAdjustBreakpoint;\n        this.uiService.resizeEvent.subscribe(e => this.cdRef.detectChanges());\n    }\n\n    ngOnDestroy() {\n        if (this.options.item.destroy) {\n            this.options.item.destroy(this.options.item);\n        }\n    }\n\n    click(event: UIEvent) {\n        if (!this.options.item.disabled) {\n            if (this.options.item.action) {\n                this.options.item.action(this.options.item, event);\n            }\n            if (this.options.item.toggle && (this.isDropdownButton || this.isDropdownListItem)) {\n                const openElement = this.dropdownButton || (this.dropdownListItem ? this.dropdownListItem.parentElement : null);\n                if (openElement) {\n                    this.options.item.toggle(this.options.item, !openElement.classList.contains(\"open\"));\n                }\n            }\n        }\n    }\n\n    touchstart() {\n        this.showDropdown = true;\n    }\n\n    mousedown() {\n        this.showDropdown = true;\n    }\n\n    focusin() {\n        this.showDropdown = true;\n    }\n}","<!-- dropdown button -->\n<ng-container *ngIf=\"isDropdownButton\">\n    <button *ngIf=\"hasAction\" class=\"btn {{styleClass}} {{sizeClass}} {{options.item.disabled ? 'disabled' : ''}}\" type=\"button\" (click)=\"click($event)\" sqTooltip=\"{{itemTitle | sqMessage:itemMessageParams}}\" [attr.aria-label]=\"itemTitle | sqMessage:itemMessageParams\">\n        <sq-action-item-content [item]=\"options.item\" [text]=\"itemText\"></sq-action-item-content>\n    </button>\n    <ng-container *ngIf=\"options.item.flattenable && options.item.children?.length === 1; then flattened else unflattened\"></ng-container>\n    <ng-template #flattened>\n        <div *ngIf=\"!hasAction\" class=\"btn-text {{sizeClass}}\">\n            <sq-action-item-content *ngIf=\"!hasAction\" [item]=\"options.item\" [text]=\"itemText\"></sq-action-item-content>\n        </div>\n    </ng-template>\n    <ng-template #unflattened>\n        <button class=\"btn {{styleClass}} dropdown-toggle {{sizeClass}}\" type=\"button\" data-toggle=\"dropdown\" sqTooltip=\"{{itemTitle | sqMessage:itemMessageParams}}\" [attr.aria-label]=\"itemTitle | sqMessage:itemMessageParams\" (touchstart)=\"touchstart()\" (mousedown)=\"mousedown()\" (focusin)=\"focusin()\">\n            <sq-action-item-content *ngIf=\"!hasAction\" [item]=\"options.item\" [text]=\"itemText\"></sq-action-item-content>\n        </button>\n        <ul *ngIf=\"showDropdown\" [sq-dropdown-menu]=\"dropdownMenuOptions\"></ul>\n    </ng-template>\n</ng-container>\n<!-- button -->\n<sq-action-item-content *ngIf=\"isButton\" [item]=\"options.item\" [text]=\"itemText\"></sq-action-item-content>\n<!-- dropdown list item -->\n<ng-container *ngIf=\"isDropdownListItem\">\n    <a href=\"javascript:void(0)\" (click)=\"click($event)\" class=\"{{options.inMenu ? 'nav-link' : 'dropdown-item'}} dropdown-toggle {{options.item.disabled ? 'disabled' : ''}}\" data-toggle=\"dropdown\" role=\"button\" title=\"{{itemTitle | sqMessage:itemMessageParams}}\" aria-haspopup=\"true\" aria-expanded=\"false\" [attr.aria-label]=\"itemTitle | sqMessage:itemMessageParams\">\n        <sq-action-item-content [item]=\"options.item\" [text]=\"itemText\"></sq-action-item-content>\n    </a>\n    <ul [sq-dropdown-menu]=\"dropdownMenuOptions\"></ul>   \n</ng-container>\n\n<!-- list item -->\n<a *ngIf=\"isListItem\" href=\"javascript:void(0)\" class=\"{{options.inMenu ? 'nav-link' : 'dropdown-item'}} {{options.item.disabled ? 'disabled' : ''}}\" role=\"button\" (click)=\"click($event)\" title=\"{{itemTitle | sqMessage:itemMessageParams}}\" [attr.aria-label]=\"itemTitle | sqMessage:itemMessageParams\">\n    <sq-action-item-content [item]=\"options.item\" [text]=\"itemText\"></sq-action-item-content>\n</a>\n","import {Injectable, InjectionToken, Inject, Optional, OnDestroy} from \"@angular/core\";\nimport {Router, NavigationStart, NavigationEnd, Params} from \"@angular/router\";\nimport {Subject, BehaviorSubject, Observable, Subscription, of, throwError} from \"rxjs\";\nimport {map, catchError  } from \"rxjs/operators\";\nimport {QueryWebService, AuditWebService, CCQuery, QueryIntentData, Results, Record, Tab, DidYouMeanKind,\n    QueryIntentAction, QueryIntent, QueryAnalysis, IMulti, CCTab,\n    AuditEvents, AuditEventType, AuditEvent} from \"@sinequa/core/web-services\";\nimport {AppService, FormatService, ValueItem, Query, ExprParser, Expr, ExprBuilder} from \"@sinequa/core/app-utils\";\nimport {NotificationsService} from \"@sinequa/core/notification\";\nimport {LoginService} from \"@sinequa/core/login\";\nimport {IntlService} from \"@sinequa/core/intl\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {Breadcrumbs, BreadcrumbsItem} from './breadcrumbs';\n\nexport interface SearchOptions {\n    routes?: string[];\n    skipSearchRoutes?: string[];\n    homeRoute?: string;\n    deactivateRouting?: boolean;\n    preventQueryNameChanges?: boolean;\n}\n\nexport const SEARCH_OPTIONS = new InjectionToken<SearchOptions>(\"SEARCH_OPTIONS\");\n\n@Injectable({\n    providedIn: \"root\"\n})\nexport class SearchService implements OnDestroy {\n    protected _query: Query | undefined;\n    queryStringParams: Params = {};\n    results: Results | undefined;\n    breadcrumbs: Breadcrumbs | undefined;\n    searchActive: boolean;\n\n    protected loginSubscription: Subscription;\n    protected routerSubscription: Subscription;\n    protected appSubscription: Subscription;\n    protected fetchingLoadMore = false;\n    protected _events = new Subject<SearchService.Events>();\n    protected _queryStream = new BehaviorSubject<Query | undefined>(undefined);\n    protected _resultsStream = new BehaviorSubject<Results | undefined>(undefined);\n\n    constructor(\n        @Optional() @Inject(SEARCH_OPTIONS) protected options: SearchOptions,\n        protected router: Router,\n        protected appService: AppService,\n        protected queryService: QueryWebService,\n        protected loginService: LoginService,\n        protected intlService: IntlService,\n        protected formatService: FormatService,\n        protected auditService: AuditWebService,\n        protected notificationsService: NotificationsService,\n        protected exprBuilder: ExprBuilder) {\n\n        if (!this.options) {\n            this.options = {\n                routes: [\"search\"]\n            };\n        }\n\n        this.results = undefined;\n        this.breadcrumbs = undefined;\n\n        this.loginSubscription = this.loginService.events.subscribe(\n            (value) => {\n                if (value.type === \"session-changed\") {\n                    this.handleLogin();\n                }\n            });\n        this.routerSubscription = this.router.events.subscribe(\n            (event) => {\n                if (event instanceof NavigationStart) {\n                    // Restore state on back/forward until this issue is fixed: https://github.com/angular/angular/issues/28108\n                    const currentNavigation = this.router.getCurrentNavigation();\n                    if (currentNavigation && event.navigationTrigger === \"popstate\" &&\n                        !currentNavigation.extras.state && event.restoredState) {\n                        currentNavigation.extras.state = event.restoredState;\n                    }\n                }\n                else if (event instanceof NavigationEnd) {\n                    this.handleNavigation();\n                }\n            });\n        this.appSubscription = this.appService.events.subscribe(\n            (event) => {\n                if (event.type === \"query-changed\") {\n                    if (this._query && (!this.appService.ccquery || (this._query.name !== this.appService.ccquery.name))) {\n                        this.clearQuery();\n                    }\n                }\n            });\n    }\n\n    ngOnDestroy() {\n        this.loginSubscription.unsubscribe();\n        this.routerSubscription.unsubscribe();\n        this.appSubscription.unsubscribe();\n        this._events.complete();\n        this._queryStream.complete();\n        this._resultsStream.complete();\n    }\n\n    get events(): Observable<SearchService.Events> {\n        return this._events;\n    }\n\n    get queryStream(): Observable<Query | undefined> {\n        return this._queryStream;\n    }\n\n    get resultsStream(): Observable<Results | undefined> {\n        return this._resultsStream.asObservable();\n    }\n\n    getTabConfig(name: string): CCTab | undefined {\n        if (this.appService.ccquery && this.appService.ccquery.tabSearch && this.appService.ccquery.tabSearch.tabs) {\n            return this.appService.ccquery.tabSearch.tabs.find(t => Utils.eqNC(t.name, name));\n        }\n        return undefined;\n    }\n\n    get query(): Query {\n        if (!this._query) {\n            this._query = this.makeQuery();\n            this._events.next({type: \"new-query\", query: this._query});\n        }\n        return this._query;\n    }\n\n    public setQuery(query: Query | undefined, newQuery = true) {\n        if (query === this._query) {\n            return;\n        }\n        this._query = query;\n        if (this._query) {\n            let ccquery: CCQuery | undefined;\n            if (this.options.preventQueryNameChanges) {\n                ccquery = this.appService.ccquery || this.appService.defaultCCQuery;\n            }\n            else {\n                ccquery = this.appService.getCCQuery(this._query.name);\n                if (!ccquery) {\n                    console.warn(`Query '${this._query.name}' not found`);\n                    ccquery = this.appService.defaultCCQuery;\n                }\n            }\n            if (ccquery) {\n                this._query.name = ccquery.name;\n                if (this.appService.ccquery !== ccquery) {\n                    this.appService.ccquery = ccquery;\n                }\n            }\n        }\n        if (newQuery) {\n            this._events.next({type: \"new-query\", query: this._query});\n        }\n    }\n\n    public clearQuery() {\n        this.setQuery(undefined);\n    }\n\n    public updateBreadcrumbs(results: Results | undefined, options: SearchService.SetResultsOptions) {\n        if (!results) {\n            this.breadcrumbs = undefined;\n            return;\n        }\n        if (!this.breadcrumbs || (!options.resuseBreadcrumbs && !options.advanced)) {\n            this.breadcrumbs = Breadcrumbs.create(this.appService, this, this.query);\n        }\n        else if (options.advanced) {\n            this.breadcrumbs.update(this.query);\n        }\n    }\n\n    private _setResults(results: Results | undefined, options: SearchService.SetResultsOptions = {}) {\n        if (results === this.results) {\n            return;\n        }\n        this._events.next({type: \"before-new-results\", results});\n        this.results = results;\n        this.treatQueryIntents(results);\n        this.updateBreadcrumbs(results, options);\n        if (this.results) {\n            if (this.results.tab) {\n                this.query.tab = this.results.tab;\n            }\n            if (this.results.attributes && this.results.attributes.queryid) {\n                this.query.queryId = this.results.attributes.queryid;\n            }\n        }\n        this._events.next({type: \"new-results\", results: this.results});\n        this._resultsStream.next(this.results);\n    }\n\n    public setResults(results: Results) {\n        return this._setResults(results);\n    }\n\n    // TODO: queryintents in their own service ?\n\n    private treatQueryIntents (results: Results | undefined) {\n        if (results && results.queryAnalysis && results.queryIntents) {\n            const queryIntents = results.queryIntents;\n            for (const intent of queryIntents) {\n                if (intent.actions) {\n                    for (const action of intent.actions) {\n                        const event: SearchService.ProcessQueryIntentActionEvent = {type: \"process-query-intent-action\", action: action, intent: intent, analysis: results.queryAnalysis};\n                        this._events.next(event);\n                        if (!event.actionProcessed) {\n                            if (!!action.data) {\n                                switch (action.type) {\n                                    case \"tab\":\n                                        if (results.queryAnalysis.initial && this.query &&\n                                            !Utils.eqNC(this.query.tab || \"\", action.data)) {\n                                            this.selectTab(action.data, {skipLocationChange: true});\n                                        }\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    get haveRecords(): boolean {\n        return !!this.results && !!this.results.records && this.results.records.length > 0;\n    }\n\n    get rowCount(): number {\n        return (!!this.results && this.results.rowCount) ? this.results.rowCount : 0;\n    }\n\n    get totalRowCount(): number {\n        return (!!this.results && this.results.totalRowCount) ? this.results.totalRowCount : 0;\n    }\n\n    get pageSize(): number {\n        if (this.query && this.query.pageSize) {\n            return this.query.pageSize;\n        }\n        if (this.appService.ccquery && this.appService.ccquery.pageSize) {\n            return this.appService.ccquery.pageSize;\n        }\n        return SearchService.DefaultPageSize;\n    }\n\n    get page(): number {\n        if (!this.results) {\n            return 1;\n        }\n        return this.results.page;\n    }\n\n    get pageCount(): number {\n        if (!this.results || !this.results.rowCount) {\n            return 0;\n        }\n        return Math.ceil(this.results.rowCount / this.results.pageSize);\n    }\n\n    makeQuery(recentQuery?: Query): Query {\n        const ccquery = this.appService.ccquery;\n        const query = new Query(ccquery ? ccquery.name : \"_unknown\");\n        if(recentQuery){\n            Object.assign(query, recentQuery);\n        }\n        this._events.next({type: \"make-query\", query: query});\n        return query;\n    }\n\n    protected makeAuditEvent(event: AuditEvent): AuditEvent {\n        this._events.next({type: \"make-audit-event\", event: event});\n        return event;\n    }\n\n    selectBreadcrumbsItem(item: BreadcrumbsItem) {\n        if (this.breadcrumbs) {\n            const query = this.breadcrumbs.selectItem(item);\n            if (query) {\n                this.setQuery(query, false);\n                this.search({reuseBreadcrumbs: true}); // audit?\n            }\n        }\n    }\n\n    removeBreadcrumbsItem(item: BreadcrumbsItem) {\n        if (this.breadcrumbs) {\n            const next = this.breadcrumbs.removeItem(item);\n            if (this.isEmptySearch(this.breadcrumbs.query)) {\n                this.clear();\n                return;\n            }\n            if (next) {\n                this.selectBreadcrumbsItem(next);\n            }\n        }\n    }\n\n    removeSelect(index: number) {\n        if (this.breadcrumbs) {\n            const item = this.breadcrumbs.items[index + 1];\n            this.removeBreadcrumbsItem(item);\n        }\n    }\n\n    removeText() {\n        if (this.breadcrumbs) {\n            const item = this.breadcrumbs.items[0];\n            this.removeBreadcrumbsItem(item);\n        }\n    }\n\n    clear(navigate = true, path?: string) {\n        this.clearQuery();\n        path = path || this.options.homeRoute;\n        this._setResults(undefined);\n        this._events.next({type: \"clear\", path});\n        if (navigate) {\n            this.navigate({path: path || this.options.homeRoute});\n        }\n    }\n\n    home(path = this.options.homeRoute) {\n        this.clear(true, path);\n    }\n\n    protected makeQueryIntentData(queryIntentData: QueryIntentData): QueryIntentData {\n        this._events.next({type: \"make-query-intent-data\", intentData: queryIntentData});\n        return queryIntentData;\n    }\n\n    isEmptySearchIgnoreSelects(query: Query | undefined): boolean {\n        if (!query) {\n            return true;\n        }\n        if (!query.action || query.action === \"search\") {\n            // Test isFirstPage\n            if (query.isFirstPage) {\n                return false;\n            }\n            // Test empty text\n            if (query.text && Utils.trim(query.text)) {\n                return false;\n            }\n            // Test basket\n            if (query.basket) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }\n\n    isEmptySearch(query: Query | undefined): boolean {\n        if (!query) {\n            return true;\n        }\n        if (!query.action || query.action === \"search\") {\n            if (!this.isEmptySearchIgnoreSelects(query)) {\n                return false;\n            }\n            // Test no facet selection\n            if (query.select && query.select.length > 0) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }\n\n    checkEmptySearch(queries: Query | Query[]): boolean {\n        if (this.appService.ccquery && !this.appService.ccquery.allowEmptySearch) {\n            if (!Utils.isArray(queries)) {\n                queries = [queries];\n            }\n            for (const query of queries) {\n                if (this.isEmptySearch(query)) {\n                    this.notificationsService.info(\"msg#search.emptySearchNotification\");\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n\n    getResults(\n        query: Query, auditEvents?: AuditEvents,\n        options: SearchService.GetResultsOptions = {}): Observable<Results> {\n        if (!this.checkEmptySearch(query)) {\n            return throwError(\"empty search\");\n        }\n        if (!options.searchInactive) {\n            this.searchActive = true;\n        }\n        const tab = this.getCurrentTab();\n        return this.queryService.getResults(query, auditEvents,\n            this.makeQueryIntentData({\n                tab: !!tab ? tab.name : undefined,\n                queryIntents: options.queryIntents,\n                queryAnalysis: options.queryAnalysis\n            })\n        ).pipe(\n            map((results) => {\n                this.searchActive = false;\n                return results;\n            })\n        );\n    }\n\n    getMultipleResults(queries: Query[], auditEvents?: AuditEvents): Observable<IMulti<Results>> {\n        if (!this.checkEmptySearch(queries)) {\n            return of({results: []});\n        }\n        return this.queryService.getMultipleResults(queries, auditEvents);\n    }\n\n    navigate(options?: SearchService.NavigationOptions, audit?: AuditEvents): Promise<boolean> {\n        if (!options) {\n            options = {};\n        }\n        if (!options.analyzeQueryText && this.results) {\n            options.queryIntents = this.results.queryIntents;\n            options.queryAnalysis = this.results.queryAnalysis;\n        }\n        if (!this.routingActive) {\n            this.handleNavigation(options, audit);\n            return Promise.resolve(true);\n        }\n        else {\n            // Save currentPath and currentSearch\n            let url = Utils.makeURL(this.router.url);\n            const currentPath = url.pathname;\n            url.searchParams.delete(\"$refresh\");\n            const currentSearch = decodeURIComponent(url.search);\n            // Set up queryParams and add current query\n            const queryParams = Utils.copy(this.queryStringParams);\n            if (this._query) {\n                queryParams.query = this._query.toJsonForQueryString();\n            }\n            // Set up history state\n            const state: SearchService.HistoryState = {\n                audit,\n                navigationOptions: options\n            };\n            const extras = {\n                queryParams,\n                state,\n                skipLocationChange: options.skipLocationChange\n            };\n            // Calculate new search\n            let path = options.path;\n            if (!path) {\n                path = currentPath;\n            }\n            url = Utils.makeURL(path);\n            path = url.pathname; // normalized\n            for (const key of Object.keys(queryParams)) {\n                url.searchParams.set(key, queryParams[key]);\n            }\n            const search = decodeURIComponent(url.search);\n            // If path and search are both the same as current then force navigation (without adding to history)\n            if (Utils.eq(currentPath, path) && Utils.eq(currentSearch, search)) {\n                // We want to force the navigation so that the query will be processed\n                extras.queryParams.$refresh = Utils.now.getTime();\n                // But don't update the browser url\n                extras.skipLocationChange = true;\n            }\n            return this.router.navigate([path], extras);\n        }\n    }\n\n    protected getHistoryState(): SearchService.HistoryState {\n        const navigation = this.router.getCurrentNavigation();\n        if (navigation) {\n            return navigation.extras && navigation.extras.state || {};\n        }\n        return window.history.state || {};\n    }\n\n    public isSearchRouteActive(): boolean {\n        const url = Utils.makeURL(this.router.url);\n        return this.isSearchRoute(url.pathname);\n    }\n\n    protected isSearchRoute(pathname: string): boolean {\n        return this.checkSearchRoute(pathname, this.options.routes);\n    }\n\n    protected isSkipSearchRoute(pathname: string): boolean {\n        return this.checkSearchRoute(pathname, this.options.skipSearchRoutes);\n    }\n\n    private checkSearchRoute(pathname: string, routes: string[] | undefined): boolean {\n        if (routes) {\n            for (const route of routes) {\n                if (Utils.endsWith(pathname, Utils.addUrl(\"/\", route))) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    public getQueryFromUrl(): Query | undefined {\n        let query: Query | undefined;\n        const url = Utils.makeURL(this.router.url);\n        if (this.isSearchRoute(url.pathname)) {\n            const jquery = url.searchParams.get(\"query\");\n            if (jquery) {\n                try {\n                    query = this.makeQuery().fromJson(jquery);\n                }\n                catch {}\n            }\n        }\n        return query;\n    }\n\n    protected ensureQueryFromUrl(): Query | undefined {\n        const query = this.getQueryFromUrl();\n        if (!query) {\n            this.clear(false);\n            return undefined;\n        }\n        else {\n            // The url query should be the same as the current query on SearchService unless\n            // it's the initial navigation or if the url is changed manually.\n            // In any case, we always set the query from the url. We only send a new-query\n            // event if the current query is empty so that we don't systematically create a\n            // new query \"session\" (ml-audit)\n            this.setQuery(query, !this._query);\n            return query;\n        }\n    }\n\n    protected handleLogin(): Promise<boolean> {\n        if (!this.loginService.complete) {\n            return Promise.resolve(false);\n        }\n        if (!!this.ensureQueryFromUrl()) {\n            return this.navigate();\n        }\n        else {\n            return Promise.resolve(true);\n        }\n    }\n\n    get routingActive(): boolean {\n        return !this.options.deactivateRouting;\n    }\n\n    set routingActive(value: boolean) {\n        this.options.deactivateRouting = !value;\n    }\n\n    protected makeAuditEventFromCurrentQuery(): AuditEvent | undefined {\n        const lastSelect = this.query.lastSelect();\n        if (lastSelect) {\n            const lastExpr = this.appService.parseExpr(lastSelect.expression);\n            if (lastExpr instanceof Expr) {\n                if (lastExpr.field === \"refine\") {\n                    return this.makeAuditEvent({\n                        type: AuditEventType.Search_Refine,\n                        detail: {\n                            text: lastExpr.value,\n                            itembox: lastSelect.facet,\n                            \"from-result-id\": !!this.results ? this.results.id : null\n                        }\n                    });\n                }\n                else {\n                    return this.makeAuditEvent({\n                        type: AuditEventType.Search_Select_Item,\n                        detail: {\n                            item: lastSelect as any,\n                            itembox: lastSelect.facet,\n                            itemcolumn: lastExpr.field,\n                            isitemexclude: lastExpr.not,\n                            \"from-result-id\": !!this.results ? this.results.id : null\n                        }\n                    });\n                }\n            }\n        }\n        else {\n            if (this.query.basket) {\n                return this.makeAuditEvent({\n                    type: AuditEventType.Basket_Open,\n                    detail: {\n                        basket: this.query.basket\n                    }\n                });\n            }\n            else {\n                return this.makeAuditEvent({\n                    type: AuditEventType.Search_Text,\n                    detail: {\n                        text: this.query.text,\n                        scope: this.query.scope\n                    }\n                });\n            }\n        }\n        return undefined;\n    }\n\n    protected handleNavigation(navigationOptions?: SearchService.NavigationOptions, audit?: AuditEvents): Promise<boolean> {\n        if (!this.loginService.complete) {\n            return Promise.resolve(false);\n        }\n        if (!this.appService.ccquery) {\n            return Promise.resolve(false);\n        }\n        let query = this._query;\n        if (this.routingActive) {\n            query = this.ensureQueryFromUrl();\n        }\n        this._events.next({type: \"update-query\", query});\n        this._queryStream.next(query);\n        if (!query) {\n            return Promise.resolve(true);\n        }\n        if (this.routingActive) {\n            const state = this.getHistoryState();\n            // console.log(\"history.state:\", state);\n            audit = state.audit;\n            navigationOptions = state.navigationOptions;\n        }\n        navigationOptions = navigationOptions || {};\n        const pathName = navigationOptions.path ? navigationOptions.path : Utils.makeURL(this.router.url).pathname;\n        if(navigationOptions.skipSearch || this.isSkipSearchRoute(pathName)) {\n            return Promise.resolve(true);\n        }\n        if (!audit) {\n            audit = this.makeAuditEventFromCurrentQuery();\n            if (audit && audit.type === AuditEventType.Search_Text) {\n                delete navigationOptions.queryIntents;\n                delete navigationOptions.queryAnalysis;\n            }\n        }\n        let observable = this.getResults(this.query, audit,\n            {\n                queryIntents: navigationOptions.queryIntents,\n                queryAnalysis: navigationOptions.queryAnalysis\n            });\n        Utils.subscribe(observable,\n            (results) => {\n                navigationOptions = navigationOptions || {};\n                this._setResults(results, {\n                    resuseBreadcrumbs: navigationOptions.reuseBreadcrumbs,\n                });\n                return results;\n            });\n        if (navigationOptions.selectTab) {\n            const afterSelectTabEvent: SearchService.AfterSelectTabEvent = {\n                type: \"after-select-tab\",\n                observable\n            };\n            this._events.next(afterSelectTabEvent);\n            observable = afterSelectTabEvent.observable;\n        }\n        return observable.pipe(\n            map(() => true),\n            catchError(() => of(false))).toPromise();\n    }\n\n    search(navigationOptions?: SearchService.NavigationOptions, audit?: AuditEvents): Promise<boolean> {\n        delete this.query.page;\n        delete this.query.spellingCorrectionMode;\n        return this.navigate(navigationOptions, audit);\n    }\n\n    searchText(path?: string): Promise<boolean> {\n        // Check for empty search preemptively to avoid clearing the current results in the most\n        // common case of the user entering empty search text in the search box\n        // The lower level check in getResults will handle less obvious cases (url editing etc)\n        if (!this.checkEmptySearch(this.query)) {\n            return Promise.resolve(false);\n        }\n        return this.search(\n            {\n                path,\n                analyzeQueryText: true\n            },\n            this.makeAuditEvent({\n                type: AuditEventType.Search_Text,\n                detail: {\n                    text: this.query.text,\n                    scope: this.query.scope,\n                    language: this.intlService.currentLocale.name\n                }\n            }));\n    }\n\n    searchRefine(text: string): Promise<boolean> {\n        // add \"refine\" name to facet value is mandatory as it's used in preview's query\n        this.query.addSelect(this.exprBuilder.makeRefineExpr(text), \"refine\");\n        return this.search(undefined,\n            this.makeAuditEvent({\n                type: AuditEventType.Search_Refine,\n                detail: {\n                    text: text,\n                    itembox: \"refine\",\n                    \"from-result-id\": !!this.results ? this.results.id : null\n                }\n            }));\n    }\n\n    gotoPage(page: number): Promise<boolean> {\n        this.query.page = page;\n        return this.navigate(undefined, this.makeAuditEvent({\n            type: AuditEventType.Search_GotoPage,\n            detail: {\n                page: page,\n                \"from-result-id\": !!this.results ? this.results.id : null\n            }\n        }));\n    }\n\n    /**\n     * Load more results and append them to previous results\n     */\n    loadMore() {\n        if(!this.fetchingLoadMore) {\n            let page = this.query.page || this.page;\n            page += (page <= this.pageCount) ? 1 : 0;\n            if (page <= this.pageCount) {\n                this.fetchingLoadMore = true;\n                this.query.page = page;\n\n                const auditEvents = this.makeAuditEvent({\n                    type: AuditEventType.Search_GotoPage,\n                    detail: {\n                        page: page,\n                        \"from-result-id\": !!this.results ? this.results.id : null\n                    }\n                })\n\n                this.getResults(this.query, auditEvents)\n                .subscribe(results => {\n                    if(this.results && results) {\n                        this.results.records = [...this.results?.records || [], ...results.records] || [];\n                        this._resultsStream.next(this.results);\n                    }\n                    this.fetchingLoadMore = false;\n                });\n            }\n        }\n    }\n\n    /**\n     * @returns true if more are available otherwise false\n     */\n    hasMore(): boolean {\n        const page = this.query.page || this.page;\n        return (page < this.pageCount);\n    }\n\n    didYouMean(text: string, context: \"search\" | \"refine\", kind: DidYouMeanKind): Promise<boolean> {\n        if (context === \"search\") {\n            this.query.text = text;\n        }\n        else {\n            const refineSelect = this.query.findSelect(\"refine\");\n            if (refineSelect) {\n                refineSelect.expression = \"refine:\" + ExprParser.escape(text);\n            }\n        }\n        this.query.spellingCorrectionMode = \"dymonly\";\n        return this.navigate(undefined, this.makeAuditEvent({\n            type: kind === DidYouMeanKind.Original ? AuditEventType.Search_DidYouMean_Original : AuditEventType.Search_DidYouMean_Correction,\n            detail: {\n                text: text\n            }\n        }));\n    }\n\n    getCurrentRecordIds(): string[]{\n        if (this.results && this.results.records) {\n            return this.results.records.map(record => record.id);\n        }\n        return [];\n    }\n\n    getRecordFromId(id: string): Record | undefined {\n        if (this.results && this.results.records) {\n            return this.results.records.find(record => Utils.eq(record.id, id));\n        }\n        return undefined;\n    }\n\n    addFieldSelect(field: string, items: ValueItem | ValueItem[], options?: SearchService.AddSelectOptions): boolean {\n        if (items && (!Utils.isArray(items) || items.length > 0)) {\n            let expr = this.exprBuilder.makeFieldExpr(field, items, options?.and);\n            if (options?.not) {\n                expr = this.exprBuilder.makeNotExpr(expr);\n            }\n            this.query.addSelect(expr, options?.facetName);\n            return true;\n        }\n        return false;\n    }\n\n\n    get lastRefineText(): string {\n        if (this.breadcrumbs) {\n            const refineExpr = this.breadcrumbs.findSelect(\"refine\");\n            if (refineExpr) {\n                return ExprParser.unescape(refineExpr.toString(false));\n            }\n        }\n        return \"\";\n    }\n\n    get hasRelevance(): boolean {\n        if (!this.breadcrumbs) {\n            return false;\n        }\n        if (this.breadcrumbs.textExpr?.hasRelevance) {\n            return true;\n        }\n        const refineExpr = this.breadcrumbs.findSelect(\"refine\");\n        return refineExpr?.hasRelevance || false;\n    }\n\n    selectTab(arg: string | Tab, options: SearchService.NavigationOptions = {}): Promise<boolean> {\n        options.selectTab = true;\n        const tabName = typeof arg === 'string' ? arg : arg.name;\n        this.query.tab = tabName;\n        delete this.query.queryId; // SBA-154\n        this._events.next({type: \"before-select-tab\", query: this.query});\n        return this.search(options,\n            this.makeAuditEvent({\n                type: AuditEventType.Search_GotoTab,\n                detail: {\n                    tab: tabName,\n                    \"from-result-id\": !!this.results ? this.results.id : null\n                }\n            }));\n    }\n\n    selectScope(scope: string) {\n        this.query.scope = scope;\n    }\n\n    getTab(tabName: string): Tab | undefined {\n        if (this.results && this.results.tabs) {\n            for (const tab of this.results.tabs) {\n                if (Utils.equals(tab.name, tabName)) {\n                    return tab;\n                }\n            }\n        }\n        return undefined;\n    }\n\n    getCurrentTab(): Tab | undefined {\n        if (this.results && this.results.tab) {\n            return this.getTab(this.results.tab);\n        }\n        return undefined;\n    }\n\n    notifyOpenOriginalDocument(record: Record, resultId?: string): void {\n        const results = this.results && this.results.records && this.results.records.includes(record) ? this.results : undefined;\n        this._events.next({ type: \"open-original-document\", record });\n        const querylang = this.results?.queryAnalysis?.queryLanguage\n            || this.query?.questionLanguage\n            || this.appService?.ccquery?.questionLanguage;\n        this.auditService.notifyDocument(\n            AuditEventType.Click_ResultLink,\n            record,\n            results || resultId || \"\",\n            {\n                text: this.query.text,\n                querylang,\n            },\n            {\n                queryhash: results ? results.rfmQueryHash : undefined,\n                querytext: this.query.text,\n                querylang: querylang\n            }\n        );\n    }\n\n    checkBeforeSearch(cancelReasons?: string[]): boolean {\n        const beforeSearch: SearchService.BeforeSearchEvent = {type: \"before-search\"};\n        this._events.next(beforeSearch);\n        if (cancelReasons && beforeSearch.cancelReasons) {\n            cancelReasons.splice(0, 0, ...beforeSearch.cancelReasons);\n        }\n        return !beforeSearch.cancel;\n    }\n}\n\nexport module SearchService {\n    export interface GetResultsOptions {\n        queryIntents?: QueryIntent[];\n        queryAnalysis?: QueryAnalysis;\n        searchInactive?: boolean;   // default \"false\"\n    }\n\n    export interface SetResultsOptions {\n        resuseBreadcrumbs?: boolean;\n        advanced?: boolean;\n    }\n\n    export interface AddSelectOptions {\n        not?: boolean;      // default \"false\"\n        and?: boolean;      // default \"false\"\n        facetName?: string; // default: undefined\n    }\n\n    export interface NavigationOptions {\n        path?: string; // absolute path, current path used if not specified\n        reuseBreadcrumbs?: boolean;\n        selectTab?: boolean;\n        analyzeQueryText?: boolean;\n        queryIntents?: QueryIntent[];\n        queryAnalysis?: QueryAnalysis;\n        skipLocationChange?: boolean;\n        skipSearch?: boolean;\n    }\n\n    export interface HistoryState {\n        audit?: AuditEvents;\n        navigationOptions?: NavigationOptions;\n    }\n\n    export interface Event {\n        type: \"new-query\" | \"update-query\" | \"make-query\" | \"before-new-results\" | \"new-results\" | \"make-query-intent-data\" |\n            \"process-query-intent-action\" | \"make-audit-event\" |\n            \"before-select-tab\" | \"after-select-tab\" | \"clear\" | \"open-original-document\" | \"before-search\";\n    }\n\n    export interface NewQueryEvent extends Event {\n        type: \"new-query\";\n        query: Query | undefined;\n    }\n\n    export interface UpdateQueryEvent extends Event {\n        type: \"update-query\";\n        query: Query | undefined;\n    }\n\n    export interface MakeQueryEvent extends Event {\n        type: \"make-query\";\n        query: Query;\n    }\n\n    export interface BeforeNewResultsEvent extends Event {\n        type: \"before-new-results\";\n        results: Results | undefined;\n    }\n\n    export interface NewResultsEvent extends Event {\n        type: \"new-results\";\n        results: Results | undefined;\n    }\n\n    export interface MakeQueryIntentDataEvent extends Event {\n        type: \"make-query-intent-data\";\n        intentData: QueryIntentData;\n    }\n\n    export interface ProcessQueryIntentActionEvent extends Event {\n        type: \"process-query-intent-action\";\n        action: QueryIntentAction;\n        intent: QueryIntent;\n        analysis: QueryAnalysis;\n        actionProcessed?: boolean;\n    }\n\n    export interface MakeAuditEventEvent extends Event {\n        type: \"make-audit-event\";\n        event: AuditEvent;\n    }\n\n    export interface BeforeSelectTabEvent extends Event {\n        type: \"before-select-tab\";\n        query: Query;\n    }\n\n    export interface AfterSelectTabEvent extends Event {\n        type: \"after-select-tab\";\n        observable: Observable<Results>;\n    }\n\n    export interface ClearEvent extends Event {\n        type: \"clear\";\n        path?: string;\n    }\n\n    export interface OpenOriginalDocument extends Event {\n        type: \"open-original-document\";\n        record: Record;\n    }\n\n    export interface BeforeSearchEvent extends Event {\n        type: \"before-search\";\n        cancel?: boolean;\n        cancelReasons?: string[];\n    }\n\n    export type Events =\n        NewQueryEvent |\n        UpdateQueryEvent |\n        MakeQueryEvent |\n        BeforeNewResultsEvent |\n        NewResultsEvent |\n        MakeQueryIntentDataEvent |\n        ProcessQueryIntentActionEvent |\n        MakeAuditEventEvent |\n        BeforeSelectTabEvent |\n        AfterSelectTabEvent |\n        ClearEvent |\n        OpenOriginalDocument |\n        BeforeSearchEvent;\n\n    export const DefaultPageSize = 20;\n}\n","import {NgModule, ModuleWithProviders, Type} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {IntlModule} from \"@sinequa/core/intl\";\nimport {WebServicesModule} from \"@sinequa/core/web-services\";\nimport {UtilsModule} from \"@sinequa/components/utils\";\nimport {PreviewDocumentIframe} from \"./preview-document-iframe.component\";\nimport {PreviewTooltip} from \"./preview-tooltip.component\";\nimport {PREVIEW_MODAL} from \"./preview.service\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        IntlModule,\n        WebServicesModule,\n        UtilsModule\n    ],\n    declarations: [\n        PreviewDocumentIframe, PreviewTooltip\n    ],\n    exports: [\n        PreviewDocumentIframe, PreviewTooltip\n    ],\n})\nexport class PreviewModule {\n    static forRoot(previewModal: Type<any>) : ModuleWithProviders<PreviewModule> {\n        return {\n            ngModule: PreviewModule,\n            providers: [\n                {provide: PREVIEW_MODAL, useValue: previewModal},\n            ]\n        };\n    }\n}","export default {\r\n    \"clipboard\": {\r\n        \"success\": \"{data} copied to the clipboard\",\r\n        \"error\": \"Clipboard error\"\r\n    }\r\n};\r\n","import { Directive, Input, OnInit } from \"@angular/core\";\nimport { FormGroup } from \"@angular/forms\";\nimport { ValidationDirective } from \"@sinequa/core/validation\";\n\n@Directive({\n    selector: \"[sqAdvancedFormValidation]\",\n})\nexport class BsAdvancedFormValidation extends ValidationDirective implements OnInit {\n    @Input() field: string;\n    @Input() validationForm: FormGroup;\n    \n    ngOnInit() {\n        this.options = {\n            form: this.validationForm,\n            controlName: this.field,\n        };\n        super.ngOnInit();\n    }\n}\n","import {Component, Input} from '@angular/core';\nimport {SearchService} from \"../../search.service\";\n\n// From https://stackoverflow.com/questions/34773266/how-to-write-css-keyframes-to-indeterminate-material-design-progress-bar\n\n@Component({\n    selector: 'sq-loading-bar',\n    template: `\n<div class=\"slider\" *ngIf=\"isActive()\">\n\t<div class=\"line\"></div>\n  <div class=\"subline inc\"></div>\n  <div class=\"subline dec\"></div>\n</div>\n    `,\n    styles: [`\n\n.slider{\n  position:absolute;\n  width:100%;\n  height:3px;\n  overflow: hidden;\n  z-index: 3;\n}\n\n.line{\n  position:absolute;\n  opacity: 0.4;\n  background:#4a8df8;\n  width:150%;\n  height:5px;\n}\n\n.subline{\n  position:absolute;\n  background:#4a8df8;\n  height:5px;\n}\n.inc{\nanimation: increase 1s infinite;\n}\n.dec{\nanimation: decrease 1s 0.25s infinite;\n}\n\n@keyframes increase {\n from { left: -5%; width: 5%; }\n to { left: 130%; width: 100%;}\n}\n@keyframes decrease {\n from { left: -80%; width: 80%; }\n to { left: 110%; width: 10%;}\n}\n    `]\n})\nexport class BsLoadingBar {\n  /**\n   * active can provided as a boolean to activate the loading bar.\n   * If it is not provided, the SearchService searchActive property is used.\n   */\n  @Input() active?: boolean;\n\n  constructor(\n    public searchService: SearchService\n  ) { }\n\n  isActive() {\n    return this.active === undefined ? this.searchService.searchActive : this.active;\n  }\n}\n","export default {\n    \"labels\": {\n        \"labels\": \"Etiketten\",\n        \"publicLabels\": \"Öffentliche Etiketten\",\n        \"privateLabels\": \"Private Etiketten\",\n        \"public\": \"Öffentliche\",\n        \"private\": \"Private\",\n        \"selectLabel\": \"Etikett(en) auswählen\",\n        \"deleteLabelAreYouSure\": \"Möchten Sie dieses Etikett wirklich löschen: {name}?\",\n        \"bulkAddLabelAreYouSure\": \"Möchten Sie wirklich das Etikett {name} zu allen Ergebnissen der aktuellen Suche hinzufügen?\",\n        \"bulkRemoveLabelAreYouSure\": \"Möchten Sie wirklich das Etikett {name} von allen Ergebnissen der aktuellen Suche entfernen?\",\n        \"addPublicLabelText\": \"+\",\n        \"removePublicLabelText\": \"×\",\n        \"addPublicLabelTitle\": \"Öffentliches Etikett hinzufügen\",\n        \"selectPublicLabelTitle\": \"Öffentliches Etikett auswählen\",\n        \"removePublicLabelTitle\": \"Öffentliches Etikett entfernen\",\n        \"addPrivateLabelText\": \"+\",\n        \"removePrivateLabelText\": \"×\",\n        \"addPrivateLabelTitle\": \"Privates Etikett hinzufügen\",\n        \"selectPrivateLabelTitle\": \"Privates Etikett auswählen\",\n        \"removePrivateLabelTitle\": \"Privates Etikett entfernen\"\n    },\n\n    \"renameLabel\": {\n        \"title\": \"Etikett(en) unbenennen\",\n        \"btnRename\": \"Umbennen\",\n        \"newLabel\": \"Neuen Etikett\",\n        \"oldLabels\": \"Altes Etikett(en)\",\n        \"alertText\": \"Diese Aktion benennt das (die) ausgewählte(n) Etikett(en) im Index um und ist unwiderruflich\",\n        \"successFeedback\": \"Etikett(en), das (die) im Index umbenannt wurde(n)\",\n        \"errorFeedback\": \"Ein Fehler ist aufgetreten. Die Suchanfrage war erfolglos\"\n    },\n\n    \"deleteLabel\": {\n        \"title\": \"Etikett(en) global entfernen\",\n        \"btnDelete\": \"Löschen\",\n        \"alertText\": \"Diese Aktion löscht das (die) ausgewählte(n) Etikett(en) aus dem Index und ist unwiderruflich\",\n        \"successFeedback\": \"Etikett(en), das (die) aus dem Index gelöscht wurde(n)\",\n        \"errorFeedback\": \"Ein Fehler ist aufgetreten. Die Suchanfrage war erfolglos\"\n    },\n\n    \"bulkRemoveLabel\": {\n        \"title\": \"Etikett(en) von aktuellen Ergebnissen entfernen\",\n        \"btnBulkRemove\": \"Entfernen\",\n        \"alertText\": \"Diese Aktion löscht das (die) ausgewählte(n) Etikett(en) aus allen gefundenen Ergebnisse (nicht nur die der ersten Seite)\",\n        \"successFeedback\": \"Etikett(en), das (die) aus allen gefundenen Ergebnissen gelöscht wurde(n)\",\n        \"errorFeedback\": \"Ein Fehler ist aufgetreten. Die Suchanfrage war erfolglos\"\n    },\n\n    \"bulkAddLabel\": {\n        \"title\": \"Etikett(en) zu aktuellen Ergebnissen hinzufügen\",\n        \"btnBulkAdd\": \"Hinzufügen\",\n        \"alertText\": \"Diese Aktion fügt das (die) ausgewählte(n) Etikett(en) zu allen gefundenen Ergebnissen (nicht nur denen der ersten Seite) hinzu\",\n        \"infoText\": \"klicken Sie auf 'Enter', um ein neues Etikett, das nicht in den Vorschlägen existiert, hinzuzufügen\",\n        \"successFeedback\": \"Etikett(en), das (die) allen gefundenen Ergebnissen hinzugefügt wurde(n)\",\n        \"errorFeedback\": \"Ein Fehler ist aufgetreten. Die Suchanfrage war erfolglos\"\n    },\n\n    \"editLabel\": {\n        \"title\": \"Bearbeiten des (der) Etikett(en) aus dem (den) ausgewählten Ergebnis(sen)\",\n        \"btnEdit\": \"speichern\",\n        \"alertText\": \"Diese Aktion bearbeitet das (die) Etikett(en) des (der) ausgewählten Ergebnisse(s)\",\n        \"infoText\": \"klicken Sie auf 'Enter', um ein neues Etikett, das nicht in den Vorschlägen existiert, hinzuzufügen\",\n        \"labelsToBeRemoved\": \"Zu löschende(s) Etikett(en)\",\n        \"labelsToBeAdded\": \"Hinzuzufügende(s) Etikett(en)\",\n        \"successFeedback\": \"Etikett(en), das (die) zu dem (den) ausgewählten Ergebnis(sen) bearbeit(en)\",\n        \"errorFeedback\": \"Ein Fehler ist aufgetreten. Die Suchanfrage war erfolglos\"\n    }\n};\n","import {Component, Input} from \"@angular/core\";\nimport {Action} from \"../../action\";\n\n@Component({\n    selector: \"sq-action-item-content\",\n    templateUrl: \"./action-item-content.html\",\n    styles: [`\n.sq-action-item-content-container > div:not(:last-child) {\n    margin-right: 0.25rem;\n}\n    `]\n})\nexport class BsActionItemContent {\n    @Input() item: Action;\n    @Input() text: string;\n    @Input(\"in-dropdown-menu\") inDropdownMenu: boolean;\n\n    componentClick(event: UIEvent) {\n        if (this.item.action && !this.item.disabled) {\n            this.item.action(this.item, event);\n        }\n        event.stopPropagation();\n        return false;\n    }\n}","<ng-container *ngIf=\"inDropdownMenu; then in_dropdown_menu else not_in_dropdown_menu\"></ng-container>\n\n<ng-template #in_dropdown_menu>\n    <ng-container *ngIf=\"!!item.component\" (click)=\"componentClick($event)\"[sqLoadComponent]=\"{component: item.component, inputs: item.componentInputs }\"></ng-container>\n    <div *ngIf=\"!!!item.component\" class=\"d-flex flex-row sq-action-item-content-container\">\n        <div *ngIf=\"item.showSelected\"><span class=\"fas fa-check {{item.selected ? '' : 'invisible'}}\" aria-hidden=\"true\"></span></div>\n        <div *ngIf=\"!!item.icon\"><span class=\"{{item.icon}}\" aria-hidden=\"true\"></span></div>\n        <div>{{text | sqMessage:item.messageParams}}</div>\n        <div *ngIf=\"!!item.iconAfter\" class=\"ml-auto\"><span class=\"{{item.iconAfter}}\" aria-hidden=\"true\"></span></div>\n    </div>\n</ng-template>\n\n<ng-template #not_in_dropdown_menu>\n    <span [ngClass]=\"item.styles || ''\">\n        <span *ngIf=\"!!item.icon\" class=\"{{item.icon}}\" aria-hidden=\"true\"></span>\n        {{text | sqMessage:item.messageParams}}\n        <span *ngIf=\"!!item.iconAfter\" class=\"{{item.iconAfter}}\" aria-hidden=\"true\"></span>\n    </span>\n</ng-template>","import {Component, Input, HostBinding, Injector} from \"@angular/core\";\nimport {ModalService, ModalResult, ModalRef} from \"@sinequa/core/modal\";\n\n@Component({\n    selector: \"sq-modal-header\",\n    templateUrl: \"./modal-header.component.html\"\n})\nexport class BsModalHeader {\n    @Input() title: string;\n    @HostBinding(\"class.sq-modal-header\") true;\n\n    constructor(\n        protected modalRef: ModalRef,\n        protected injector: Injector) {\n    }\n\n    // Avoid circular reference (via Confirm)\n    get modalService(): ModalService {\n        return this.injector.get(ModalService);\n    }\n\n    cancel() {\n        this.modalRef.close(ModalResult.Cancel);\n    }\n}","<div class=\"modal-header\">\n    <h5 *ngIf=\"title\" class=\"modal-title\">{{title | sqMessage}}</h5>\n    <ng-content></ng-content>\n    <button type=\"button\" class=\"close\" (click)=\"cancel()\" data-dismiss=\"modal\" aria-hidden=\"true\">&times;</button>\n</div>\n","export * from \"./public-api\";","export default {\n    \"resultSelector\": {\n        \"selectDocument\": \"Select document\",\n        \"unselectDocument\": \"Unselect document\"\n    },\n    \"resultsSelector\": {\n        \"selectDocuments\": \"{count, selectordinal, =0 {} other {(#)}}\",\n        \"selectDocumentsTitle\": \"Select documents\",\n        \"unselectDocumentsTitle\": \"Unselect documents\"\n    },\n    \"selection\": {\n        \"selectedDocuments\": \"{count, plural, =0 {} one {# selected document} other {# selected documents}}\"\n    }\n};\n","export default {\n    \"preview\": {\n        \"noDocumentDataErrorPopupTitle\": \"Fehler beim Laden der Dokumentdaten\",\n        \"highlightsTitle\": \"Markierungen\",\n        \"noEntityToHighlight\": \"Keine Markierungen im Dokument verfügbar\",\n        \"termXLabel\": \"Suchbegriff\",\n        \"otherTerms\": \"Andere Begriffe\",\n        \"previousDocument\": \"Vorheriges Dokument\",\n        \"nextDocument\": \"Nächstes Dokument\",\n        \"originalDocument\": \"Originales Dokument\",\n        \"selectedHighlight\": \"Ausgewählte Markierung\",\n        \"noSelectedHighlight\": \"Keine Markierung ausgewählt\",\n        \"firstHighlightButtonAltText\": \"Erste Markierung\",\n        \"previousHighlightButtonAltText\": \"Vorherige Markierung\",\n        \"nextHighlightButtonAltText\": \"Nächste Markierung\",\n        \"lastHighlightButtonAltText\": \"Letzte Markierung\",\n        \"highlightFilters\": {\n            \"title\": \"Filter\",\n            \"keepAll\": \"Alle\",\n            \"keepNone\": \"Keine\",\n            \"keepAllInCategory\": \"Alle\",\n            \"keepNoneInCategory\": \"Keine\"\n        },\n        \"documentPropertiesTitle\": \"Dokumenteigenschaften\",\n        \"similarDocumentsTitle\": \"Ähnliche Dokumente\",\n        \"showAll\": \"Zeige alle Werte\",\n        \"sortAlphabetically\": \"Alphabetische Sortierung\",\n        \"sortFrequency\": \"Sortierung nach Häufigkeit\",\n        \"loading\": \"Laden...\",\n        \"noextract\": \"kein Auszug\",\n        \"search\": \"Suche\",\n        \"gotopage\": \"Zur Seite gehen\",\n        \"page\": \"Seite {page}\",\n        \"current\": \"aktuell\"\n    },\n    \"facet\": {\n        \"preview\": {\n            \"closeTitle\": \"Schließen\",\n            \"expandTitle\": \"Maximieren\",\n            \"minimize\": \"Rauszoomen\",\n            \"maximize\": \"hineinzoomen\",\n            \"toggleExtracts\": \"Schalten Sie die Hervorhebung relevanter Auszüge um\",\n            \"toggleEntities\": \"Schalten Sie die Hervorhebung von Objekten\"\n        }\n    }\n};\n","export * from \"./public-api\";","const WEB_SERVICES_MODULE_PROVIDERS = [];\n\nexport {WEB_SERVICES_MODULE_PROVIDERS};\n","export default {\n    metadata: {\n        extractslocationsLabel: \"Extrait pertinent\",\n        extractslocationsPluralLabel: \"Extraits pertinents\",\n        geoLabel: \"Lieu\",\n        geoPluralLabel: \"Lieux\",\n        personLabel: \"Personne\",\n        personPluralLabel: \"Personnes\",\n        companyLabel: \"Société\",\n        companyPluralLabel: \"Sociétés\",\n        treepathLabel: \"Source\",\n        treepathPluralLabel: \"Sources\",\n        matchlocationsLabel: \"Terme recherché\",\n        matchlocationsPluralLabel: \"Termes recherchés\",\n        titleLabel: \"Titre\",\n        titlePluralLabel: \"Titres\",\n        authorsLabel: \"Auteur\",\n        authorsPluralLabel: \"Auteurs\",\n        filenameLabel: \"Nom de fichier\",\n        filenamePluralLabel: \"Noms de fichiers\",\n        modifiedLabel: \"Date\",\n        modifiedPluralLabel: \"Dates\",\n        sizeLabel: \"Taille\",\n        sizePluralLabel: \"Tailles\",\n        docformatLabel: \"Format\",\n        docformatPluralLabel: \"Formats\",\n        documentlanguagesLabel: \"Langue\",\n        documentlanguagesPluralLabel: \"Langues\",\n        geo_label: \"Lieu\",\n        geo_plural_label: \"Lieux\",\n        person_label: \"Personne\",\n        person_plural_label: \"Personnes\",\n        company_label: \"Société\",\n        company_plural_label: \"Sociétés\",\n        treepath_label: \"Source\",\n        treepath_plural_label: \"Sources\",\n        title_label: \"Titre\",\n        title_plural_label: \"Titres\",\n        authors_label: \"Auteur\",\n        authors_plural_label: \"Auteurs\",\n        filename_label: \"Nom de fichier\",\n        filename_plural_label: \"Noms de fichiers\",\n        modified_label: \"Date\",\n        modified_plural_label: \"Dates\",\n        size_label: \"Taille\",\n        size_plural_label: \"Tailles\",\n        docformat_label: \"Format\",\n        docformat_plural_label: \"Formats\",\n        documentlanguages_label: \"Langue\",\n        documentlanguages_plural_label: \"Langues\",\n        accessLists: {\n            authorizedListTitleText: \"Accès autorisés\",\n            authorizedListHeader: \"Liste d'accès autorisés {value, number}\",\n            deniedListTitleText: \"Accès refusés\",\n            deniedListHeader: \"Liste d'accès refusés {value, number}\"\n        },\n        item: {\n            label: \"{label}:\",\n            separator: \"|\",\n            treeSeparator: \" ; \",\n            treeNodeSeparator: \"/\",\n            listSeparator: \", \",\n            empty_boolean: 'false',\n            empty_number: '0'\n        }\n    },\n};\n","import {Directive, Input, Output, ElementRef, OnInit, OnDestroy, EventEmitter} from \"@angular/core\";\nimport {Utils} from \"@sinequa/core/base\";\n\nexport interface ClickOutsideOptions {\n    exclude?: string[];\n}\n\n@Directive({\n    selector: \"[sqClickOutside]\"\n})\nexport class ClickOutside implements OnInit, OnDestroy {\n    @Input(\"sqClickOutside\") options: ClickOutsideOptions;\n    @Output(\"sqClickOutside\") clickOutside = new EventEmitter<{click: UIEvent}>();\n    element: HTMLElement;\n\n    constructor(elementRef: ElementRef) {\n        this.element = <HTMLElement>elementRef.nativeElement;\n    }\n\n    ngOnInit() {\n        document.addEventListener(\"click\", this.clickHandler);\n        if (!this.options) {\n            this.options = { exclude: ['.bs-datepicker'] }; // By default exclude bootstrap date picker\n        }\n    }\n\n    ngOnDestroy() {\n        document.removeEventListener(\"click\", this.clickHandler);\n    }\n\n    private isActive(element: Element): boolean {\n        let active = document[\"activeElement\"];\n        while (active) {\n            if (element === active) {\n                return true;\n            }\n            active = active.parentElement;\n        }\n        return false;\n    }\n\n    clickHandler = (event: MouseEvent) => {\n        if (!event || !event.target) {\n            return;\n        }\n        if (this.element.offsetWidth === 0) {\n            return;\n        }\n        if (event.target === document.body && document.elementFromPoint(event.pageX, event.pageY) !== event.target) {\n            return;\n        }\n        if (this.element.contains(<HTMLElement>event.target)) {\n            return;\n        }\n        if (this.options.exclude) {\n            let targetRoot = <HTMLElement>event.target;\n            while (!!targetRoot.parentElement) {\n                targetRoot = targetRoot.parentElement;\n            }\n            for (const selector of this.options.exclude) {\n                const elts = Array.from(targetRoot.querySelectorAll(selector));\n                for (const elt of elts) {\n                    if (elt && elt.contains(<Node>event.target)) {\n                        return;\n                    }\n                }\n            }\n        }\n        // Call via timeout so we can check whether the click was leading to us taking focus\n        // If we have the focus then we don't call clickOutside\n        Utils.delay()\n            .then(() => {\n                if (!this.isActive(this.element)) {\n                    this.clickOutside.emit({click: event});\n                }\n            });\n    }\n}","export * from \"./public-api\";","import { Component, Input, OnChanges, ElementRef, OnDestroy } from \"@angular/core\";\nimport { FormGroup, AbstractControl } from \"@angular/forms\";\nimport { Keys, Utils } from \"@sinequa/core/base\";\nimport { AutocompleteItem } from \"@sinequa/components/autocomplete\";\nimport { Subscription } from \"rxjs\";\nimport { AppService, ValueItem } from '@sinequa/core/app-utils';\n\n/**\n * Component representing a text input that accepts multiple entries.\n * This component also performs value validation on each entry.\n *\n */\n@Component({\n    selector: \"sq-advanced-form-multi-input\",\n    templateUrl: \"./advanced-form-multi-input.html\",\n    styleUrls: [\"./advanced-form-multi-input.scss\"],\n})\nexport class BsAdvancedFormMultiInput implements OnChanges, OnDestroy {\n    @Input() form: FormGroup;\n    @Input() field: string;\n    @Input() suggestQuery: string;\n    @Input() label: string;\n\n    items: AutocompleteItem[] = []; /** List of items already existing in the advanced search */\n    private _valueChangesSubscription: Subscription;\n\n    control: AbstractControl | null;\n\n    constructor(\n        private elementRef: ElementRef,\n        public appService: AppService) {}\n\n    ngOnChanges(): void {\n        if(this.label === undefined) {\n            this.label = this.appService.getPluralLabel(this.field);\n        }\n        this.control = this.form.get(this.field);\n        if (this.control) {\n            this.items = this.control.value\n                ? (Utils.isArray(this.control.value)\n                        ? this.control.value\n                        : [this.control.value]\n                    ).map((item: ValueItem) => {\n                        return {\n                            display: item.display ? item.display : item.value.toString(),\n                            normalized: item.value.toString(),\n                            category: \"\",\n                        };\n                    })\n                : [];\n\n            this._valueChangesSubscription = Utils.subscribe(\n                this.control.valueChanges,\n                (value) => {\n                    if(value && !Utils.isArray(value)) {\n                        value = [value];\n                    }\n                    this.items = value\n                        ? value.map((item: ValueItem) => {\n                                return {\n                                    display: item.display ? item.display : item.value.toString(),\n                                    normalized: item.value.toString(),\n                                    category: \"\",\n                                };\n                            })\n                        : [];\n                }\n            );\n        }\n        else {\n            throw new Error(\"No form control named \"+this.field);\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._valueChangesSubscription) {\n            this._valueChangesSubscription.unsubscribe();\n        }\n    }\n\n    removeItem(item: AutocompleteItem) {\n        this.items.splice(this.items.indexOf(item), 1);\n        this._updateControl();\n    }\n\n    onItemsChanged(items: AutocompleteItem[]) {\n        this.items = items;\n        this._updateControl();\n    }\n\n    keydown(event: KeyboardEvent) {\n        // Intercept tab and set focus to surrounding dropdown-item\n        if (event.keyCode === Keys.tab) {\n            const dropdownItem = this._getDropdownItem();\n            if (dropdownItem) {\n                dropdownItem.focus();\n                event.preventDefault();\n                return false;\n            }\n        }\n        return undefined;\n    }\n\n    keypress(event: KeyboardEvent) {\n        if (event.keyCode === Keys.enter) {\n            // Stop click event firing on surrounding anchor (Firefox)\n            event.preventDefault();\n            return false;\n        }\n        return undefined;\n    }\n\n    private _updateControl(): void {\n        const value = this.items.length > 0\n            ? this.items.map((item) => (\n                {\n                    value: item.normalized!,\n                    display: item.display\n                }\n            ))\n            : undefined\n        this.control?.markAsDirty();\n        this.control?.setValue(value, {emitEvent: false});\n    }\n\n    private _getDropdownItem(): HTMLElement | null {\n        if (this.elementRef) {\n            let current: HTMLElement | null = this.elementRef\n                .nativeElement as HTMLElement;\n            while (current && !current.classList.contains(\"dropdown-item\")) {\n                current = current.parentElement;\n            }\n            return current;\n        }\n        return null;\n    }\n}\n","<div class=\"d-inline\">\n    <label>{{label | sqMessage}}</label>\n    <section class=\"sq-dropdown-form\">\n        <div class=\"form-control multi-entry\"\n            sqAdvancedFormValidation\n            [field]=\"field\"\n            [validationForm]=\"form\">\n            <span\n                *ngFor=\"let item of items\"\n                class=\"badge badge-pill badge-secondary align-self-center mr-1\">\n                {{ item.display }}\n                <span class=\"fas fa-times-circle clickable\" (click)=\"removeItem(item)\"></span>\n            </span>\n            <input\n                class=\"input-autocomplete flex-grow-1\"\n                type=\"text\"\n                autocomplete=\"off\"\n                spellcheck=\"off\"\n                sqAdvancedFormAutocompleteMultiInput\n                [field]=\"field\"\n                [off]=\"!suggestQuery\"\n                [suggestQuery]=\"suggestQuery\"\n                (itemsUpdate)=\"onItemsChanged($event)\"\n                [items]=\"items\"\n                [dropdown]=\"dropdown\"\n                (keydown)=\"keydown($event)\"\n                (keypress)=\"keypress($event)\">\n        </div>\n        <sq-autocomplete-list #dropdown>\n            <ng-template #itemTpl let-item>\n                <div class=\"autocomplete-item p-2\">{{item.display}}\n                </div>\n            </ng-template>\n        </sq-autocomplete-list>\n    </section>\n</div>\n","import {Pipe, ChangeDetectorRef} from \"@angular/core\";\nimport {AbstractIntlPipe, IntlService} from \"@sinequa/core/intl\";\nimport moment from \"moment\";\n\nexport interface MomentParams {\n    format?: string;\n    type?: \"fromNow\" | \"from\" | \"toNow\" | \"to\" | \"calendar\" | \"diff\" | \"valueOf\" | \"unix\" | \"daysInMonth\" | \"iso\";\n    suffix?: boolean; // from | fromNow | to| toNow (default: true)\n    reference?: moment.MomentInput; // from| to | calendar | diff\n    unit?: moment.unitOfTime.Diff; // diff\n    precise?: boolean; // diff\n}\n\n@Pipe({name: \"sqMoment\", pure: false})\nexport class MomentPipe extends AbstractIntlPipe {\n    constructor(\n        intlService: IntlService,\n        changeDetectorRef: ChangeDetectorRef) {\n        super(intlService, changeDetectorRef);\n    }\n\n    updateValue(key:moment.MomentInput, params: MomentParams = {}): void {\n        super.updateValue(key, params);\n        const m = moment(key);\n        if (params.format) {\n            this.value = m.format(params.format);\n        }\n        else {\n            switch (params.type) {\n                case \"fromNow\":\n                    this.value = m.fromNow(params.suffix);\n                    break;\n                case \"from\":\n                    this.value = m.from(params.reference, params.suffix);\n                    break;\n                case \"toNow\":\n                    this.value = m.toNow(params.suffix);\n                    break;\n                case \"to\":\n                    this.value = m.to(params.reference, params.suffix);\n                    break;\n                case \"calendar\":\n                    this.value = m.calendar(params.reference);\n                    break;\n                case \"diff\":\n                    this.value = \"\" + m.diff(params.reference, params.unit, params.precise);\n                    break;\n                case \"valueOf\":\n                    this.value = \"\" + m.valueOf();\n                    break;\n                case \"unix\":\n                    this.value = \"\" + m.unix();\n                    break;\n                case \"daysInMonth\":\n                    this.value = \"\" + m.daysInMonth();\n                    break;\n                case \"iso\":\n                    this.value = m.toISOString();\n                    break;\n            }\n        }\n    }\n}","export * from \"./public-api\";","import {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\n\nimport {IntlModule} from \"@sinequa/core/intl\";\n\nimport {UtilsModule} from \"@sinequa/components/utils\";\nimport {CollapseModule} from \"@sinequa/components/collapse\";\nimport {MetadataModule} from \"@sinequa/components/metadata\";\n\nimport {ResultTitle} from \"./result-title/result-title\";\nimport {ResultSource} from \"./result-source/result-source\";\nimport {ResultExtracts} from \"./result-extracts/result-extracts\";\nimport {ResultMissingTerms} from \"./result-missing-terms/result-missing-terms\";\nimport {ResultThumbnail} from \"./result-thumbnail/result-thumbnail\";\nimport {UserRating} from \"./user-rating/user-rating\";\nimport {SponsoredResults} from './sponsored-results/sponsored-results';\nimport {ResultsCounter} from \"./results-counter/results-counter\";\nimport {ResultIcon} from \"./result-icon/result-icon\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule, ReactiveFormsModule,\n\n        IntlModule,\n\n        UtilsModule,\n        CollapseModule,\n        MetadataModule\n    ],\n    declarations: [\n        ResultTitle, ResultExtracts,\n        ResultMissingTerms,\n        ResultThumbnail, UserRating,\n        SponsoredResults, ResultsCounter,\n        ResultIcon, ResultSource\n    ],\n    exports: [\n        ResultTitle, ResultExtracts,\n        ResultMissingTerms,\n        ResultThumbnail, UserRating,\n        SponsoredResults, ResultsCounter,\n        ResultIcon, ResultSource\n    ]\n})\nexport class ResultModule {\n}\n","import {Component, OnInit, OnDestroy, ChangeDetectorRef} from \"@angular/core\";\nimport {Subscription} from \"rxjs\";\nimport {NotificationsService} from \"@sinequa/core/notification\";\n\n@Component({\n    selector: \"sq-network-activity\",\n    templateUrl: \"./network-activity.html\",\n    styleUrls: [\"./network-activity.scss\"]\n})\nexport class BsNetworkActivity implements OnInit, OnDestroy {\n    subscription: Subscription | undefined;\n    active: boolean;\n    hidden: boolean;\n\n    constructor(\n        private notificationsService: NotificationsService,\n        private changeDetectorRef: ChangeDetectorRef) {\n    }\n\n    ngOnInit() {\n        this.unbind();\n        this.bind();\n    }\n\n    ngOnDestroy() {\n        this.unbind();\n    }\n\n    bind() {\n        this.subscription = this.notificationsService.events.subscribe(\n            (value) => {\n                this.active = this.notificationsService.get(\"network\") > 0;\n                setTimeout(() => this.changeDetectorRef.markForCheck(), 0); // Value can switch synchronously => this can cause \"Expression has changed\" error\n            });\n    }\n\n    unbind() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n            this.subscription = undefined;\n        }\n    }\n\n}","<div class=\"btn-toolbar\">\n    <div class=\"btn-group\">\n        <div class=\"btn-text\" title=\"{{'msg#statusbar.networkActivity' | sqMessage}}\">\n            <span class=\"fas fa-bolt\" [ngClass]=\"{'blink': active}\"></span>\n        </div>\n    </div>\n</div>","import {Component, Input, OnChanges, SimpleChanges} from \"@angular/core\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {Results} from \"@sinequa/core/web-services\";\nimport {SearchService} from \"../../search.service\";\n\n@Component({\n    selector: \"sq-pager\",\n    templateUrl: \"./pager.html\",\n})\nexport class BsPager implements OnChanges {\n    @Input() results: Results;\n    @Input() showNavigation: boolean = true;\n    @Input() showFirstLast: boolean = true;\n    @Input() showPages: boolean = true;\n    @Input() endPages: number = 1;\n    @Input() pages: number = 5;\n\n    items: BsPager.Item[] | undefined;\n\n    private currentPage: number;\n    pageCount: number = 0;\n\n    static FIRST_PAGE = \"«\";\n    static PREVIOUS_PAGE = \"‹\";\n    static NEXT_PAGE = \"›\";\n    static LAST_PAGE = \"»\";\n    static ELLIPSIS = \"…\";\n\n    constructor(\n        private searchService: SearchService) {\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes[\"results\"]) {\n            this.makeItems();\n        }\n    }\n\n    makeItems() {\n        this.pageCount = this.searchService.pageCount;\n        this.currentPage = this.searchService.page;\n        if (this.pageCount === 0) {\n            this.items = undefined;\n            return;\n        }\n        let endPages = this.endPages;\n        if (!endPages || endPages <= 0) {\n            endPages = 1;\n        }\n\n        const endWidth = endPages + 1; // +1 for the …\n\n        let pages = this.pages;\n        if (!pages) {\n            pages = 3 + endWidth * 2;\n        }\n        if (pages < 3 + endWidth * 2) {\n            pages = 3 + endWidth * 2; // 3 is the minimum number of pages to show between the … separators\n        }\n        let split1 = -1, split2 = -1;\n        if (this.pageCount <= pages) {\n            pages = this.pageCount;\n        }\n        else {\n            // pages must be an odd number to accommodate:  (First page) … (Current page - 1) (Current page) (Current page + 1) … (Last page)\n            pages = Math.floor(pages / 2) * 2 + 1;\n            const mid = pages - endWidth * 2;\n            const delta = Math.floor(mid / 2);\n            if ((this.currentPage - delta) > endPages + 1 + 1) {\n                split1 = this.currentPage - delta;\n            }\n            if ((this.currentPage + delta) < (this.pageCount - endWidth)) {\n                split2 = this.currentPage + delta;\n            }\n            if (split1 === -1 && split2 !== -1) {\n                split2 += endPages + 1 + 1 - (this.currentPage - delta);\n            }\n            else if (split2 === -1 && split1 !== -1)  {\n                split1 -= (this.currentPage + delta) - (this.pageCount - endWidth);\n            }\n        }\n        this.items = [];\n        if (this.showNavigation) {\n            if (this.showFirstLast) {\n                this.items.push(new BsPager.Item(1, this.currentPage, BsPager.FIRST_PAGE, \"msg#pager.firstPage\"));\n            }\n            this.items.push(new BsPager.Item(this.currentPage > 1 ? this.currentPage - 1 : 1, this.currentPage, BsPager.PREVIOUS_PAGE, \"msg#pager.previousPage\"));\n        }\n        if (this.showPages) {\n            for (let i = 1, ic = split1 !== -1 ? endPages : split2 !== -1 ? split2 : this.pageCount; i <= ic; i++) {\n                this.items.push(new BsPager.Item(i, this.currentPage));\n            }\n            if (split1 !== -1) {\n                this.items.push(new BsPager.Item(0, this.currentPage, BsPager.ELLIPSIS));\n                for (let i = split1, ic = split2 !== -1 ? split2 : this.pageCount; i <= ic; i++) {\n                    this.items.push(new BsPager.Item(i, this.currentPage));\n                }\n            }\n            if (split2 !== -1) {\n                this.items.push(new BsPager.Item(0, this.currentPage, BsPager.ELLIPSIS));\n                for (let i = this.pageCount - endPages + 1, ic = this.pageCount; i <= ic; i++) {\n                    this.items.push(new BsPager.Item(i, this.currentPage));\n                }\n            }\n        }\n        if (this.showNavigation) {\n            this.items.push(new BsPager.Item(this.currentPage < this.pageCount ? this.currentPage + 1 : this.pageCount, this.currentPage, BsPager.NEXT_PAGE, \"msg#pager.nextPage\"));\n            if (this.showFirstLast) {\n                this.items.push(new BsPager.Item(this.pageCount, this.currentPage, BsPager.LAST_PAGE, \"msg#pager.lastPage\"));\n            }\n        }\n    }\n\n    gotoPage(page: number) {\n        if (page !== this.currentPage && page > 0) {\n            this.searchService.gotoPage(page);\n        }\n    }\n}\n\nexport namespace BsPager {\n    export class Item {\n        constructor(\n            public page: number,\n            public currentPage: number,\n            public display?: string | number,\n            public title?: string) {\n            if (display) {\n                this.display = display;\n            }\n            else {\n                this.display = page;\n            }\n            if (Utils.isUndefined(title) && page) {\n                this.title = \"msg#pager.pageNumberTitle\";\n            }\n        }\n\n        get active(): boolean {\n            return this.isPage && (this.currentPage === this.page);\n        }\n\n        get disabled(): boolean {\n            return this.isEllipsis || ((this.currentPage === this.page) && this.isNavigation);\n        }\n\n        get isNavigation(): boolean {\n            return this.display === BsPager.FIRST_PAGE ||\n                this.display === BsPager.PREVIOUS_PAGE ||\n                this.display === BsPager.NEXT_PAGE ||\n                this.display === BsPager.LAST_PAGE;\n        }\n\n        get isPage(): boolean {\n            return !!this.page && !this.isNavigation;\n        }\n\n        get isEllipsis(): boolean {\n            return this.display === BsPager.ELLIPSIS;\n        }\n    }\n}","<ul class=\"pagination my-0\" *ngIf=\"pageCount > 1\">\n    <li *ngFor=\"let item of items\" \n        title=\"{{item.title | sqMessage:{values: {page: item.page} } }}\" \n        class=\"page-item\" \n        [ngClass]=\"{'active': item.active, 'disabled': item.disabled, 'sq-navigation': item.isNavigation, 'sq-page': item.isPage, 'sq-ellipsis': item.isEllipsis}\" \n        (click)=\"gotoPage(item.page)\">\n        <a href=\"javascript:void(0)\" class=\"page-link\"> \n            <span>{{item.display | sqNumber}}</span>\n        </a>            \n    </li>\n</ul>","const MODAL_MODULE_PROVIDERS = [];\n\nexport {MODAL_MODULE_PROVIDERS};\n","import {Component, HostBinding, OnInit, OnDestroy, Inject} from \"@angular/core\";\nimport {FormBuilder, FormGroup, FormControl, Validators} from \"@angular/forms\";\nimport {Subscription} from \"rxjs\";\nimport {START_CONFIG, StartConfig} from \"@sinequa/core/web-services\";\nimport {ModalService, MODAL_MODEL, ModalRef, ModalButton, ModalResult} from \"@sinequa/core/modal\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {AuthenticationService, Credentials} from \"@sinequa/core/login\";\n\n@Component({\n    selector: \"sq-login\",\n    templateUrl: \"./login.component.html\"\n})\nexport class BsLogin implements OnInit, OnDestroy {\n    @HostBinding(\"class.sq-login\") true;\n    userNameControl: FormControl;\n    passwordControl: FormControl;\n    providerNameControl: FormControl;\n    form: FormGroup;\n    formChanges: Subscription;\n    buttons: ModalButton[];\n    providers: any[];\n    providerName: string;\n\n    constructor(\n        @Inject(MODAL_MODEL) protected model: Credentials,\n        protected modalService: ModalService,\n        protected modalRef: ModalRef,\n        protected formBuilder: FormBuilder,\n        @Inject(START_CONFIG) protected startConfig: StartConfig,\n        protected authenticationService: AuthenticationService) {\n    }\n\n    ngOnInit() {\n        this.userNameControl = new FormControl(this.model.userName, Validators.required);\n        this.passwordControl = new FormControl(this.model.password, Validators.required);\n        this.providerNameControl = new FormControl();\n        this.form = this.formBuilder.group({\n            userName: this.userNameControl,\n            password: this.passwordControl,\n            providerName: this.providerNameControl\n        });\n        this.formChanges = Utils.subscribe(this.form.valueChanges,\n            (value) => {\n                this.model.userName = this.userNameControl.value;\n                this.model.password = this.passwordControl.value;\n                this.providerName = this.providerNameControl.value;\n            });\n\n        this.buttons = [\n            new ModalButton({\n                result: ModalResult.OK,\n                primary: true,\n                validation: this.form\n            }),\n            new ModalButton({\n                result: ModalResult.Cancel\n            })\n        ];\n\n        if (this.startConfig.providers) {\n            Object.keys(this.startConfig.providers).forEach((providerName) => {\n                if (!this.providers) {\n                    this.providerName = \"\";\n                    this.providers = [{displayName: \"msg#modal.login.signInWith\", name: \"\"}];\n                }\n                this.providers.push(this.startConfig.providers![providerName]);\n            });\n        }\n    }\n\n    ngOnDestroy() {\n        this.formChanges.unsubscribe();\n    }\n\n    yes() {\n        this.modalRef.close(ModalResult.Yes);\n    }\n\n    authenticate() {\n        Utils.subscribe(this.authenticationService.authenticateWithProvider(this.providerName),\n            (response) => {\n                this.yes();\n            },\n            (error) => {\n                console.log(\"login.authenticate cancelled: \", error);\n            });\n    }\n}\n","<form novalidate [formGroup]=\"form\">\n    <sq-modal\n        [title]=\"'msg#modal.login.title'\"\n        [buttons]=\"buttons\">\n        <div class=\"form-group sq-form-group\">\n            <label for=\"userName\">{{'msg#modal.login.userName' | sqMessage}}</label>\n            <input [sqValidation]=\"form\" type=\"text\" class=\"form-control\" id=\"userName\" formControlName=\"userName\" spellcheck=\"off\" cdkFocusInitial>\n        </div>\n        <div class=\"form-group sq-form-group\">\n            <label for=\"password\">{{'msg#modal.login.password' | sqMessage}}</label>\n            <input [sqValidation]=\"form\" type=\"password\" class=\"form-control\" id=\"password\" formControlName=\"password\" autocomplete=\"off\" spellcheck=\"off\">\n        </div>\n        <div class=\"form-group sq-form-group\" *ngIf=\"!!providers\">\n            <label for=\"providerName\">{{'msg#modal.login.singleSignOn' | sqMessage}}</label>\n            <select class=\"form-control custom-select\" id=\"providerName\" formControlName=\"providerName\" (change)=\"authenticate()\">\n                <option *ngFor=\"let provider of providers\" [value]=\"provider.name\" [hidden]=\"!provider.name\" [disabled]=\"!provider.name\">{{(provider.displayName || provider.name) | sqMessage}}</option>\n            </select>\n        </div>\n    </sq-modal>\n</form>","import {Injectable, Inject} from \"@angular/core\";\nimport {START_CONFIG, StartConfig, SqHttpClient, HttpService} from \"@sinequa/core/web-services\";\nimport {Observable} from \"rxjs\";\nimport {map} from \"rxjs/operators\";\n\n/**\n * A service to manage JWT and CSRF tokens. The methods of this service\n * can be called before the authentication process has completed\n */\n@Injectable({\n    providedIn: \"root\"\n})\nexport class TokenService extends HttpService {\n\n    constructor(\n        @Inject(START_CONFIG) startConfig: StartConfig,\n        private httpClient: SqHttpClient) {\n        super(startConfig);\n    }\n\n    /**\n     * Retrieve the CSRF token corresponding to the current JWT cookie\n     * which should accompany the request. This method is called by\n     * [AuthenticationService.autoAuthenticate]{@link AuthenticationService#autoAuthenticate}\n     *\n     * @param notify `true` if any errors should be notified using the {@NotificationService}\n     */\n    getCsrfToken(notify = false): Observable<string> {\n        return this.httpClient.get<{csrfToken: string}>(this.makeUrl(\"challenge\"), {\n            params: this.makeParams({\n                action: \"getCsrfToken\",\n                suppressErrors: !notify,\n                noUserOverride: true,\n                noAutoAuthentication: true,\n                noNotify: !notify\n            })\n        }).pipe(\n            map((value) => {\n                return value.csrfToken;\n            }));\n    }\n\n    /**\n     * Delete the current JWT cookie.\n     * This method is called by [AuthenticationService.logout]{@link AuthenticationService#logout}\n     */\n    deleteWebTokenCookie(): Observable<void> {\n        return this.httpClient.get<void>(this.makeUrl(\"challenge\"), {\n            params: this.makeParams({\n                action: \"deleteWebTokenCookie\",\n                noUserOverride: true,\n                noAutoAuthentication: true\n            })\n        });\n    }\n}\n","export default {\n    \"results\": {\n        \"viewTitle\": \"Vue : {text}\",\n        \"unselectableViewDisplay\": \"<Autre>\",\n        \"resultsListView\": {\n            \"display\": \"Liste\",\n            \"selectDocument\": \"Sélectionner le document\",\n            \"unselectDocument\": \"Désélectionner le document\",\n            \"previewPopup\": \"Document Navigator\",\n            \"previewInCurrentPage\": \"Document Navigator (dans la page courante)\",\n            \"previewInNewTab\": \"Document Navigator (dans un nouvel onglet)\",\n            \"showMetadata\": \"Détails\",\n            \"showLabels\": \"Libellés\"\n        },\n        \"resultsGridView\": {\n            \"display\": \"Grille\",\n            \"selectDocument\": \"Sélectionner le document\",\n            \"unselectDocument\": \"Désélectionner le document\",\n            \"selectDocuments\": \"Sélectionner les documents\",\n            \"unselectDocuments\": \"Désélectionner les documents \"\n        },\n        \"viewPageSize\": \"Nombre de résultats par page\",\n        \"viewUpdateApply\": \"Appliquer\",\n        \"warningNoViewForTab\": \"L'onglet '{tab}' n'est associé à aucune vue.\",\n        \"warningCannotDisplayTabOnView\": \"L'onglet '{tab}' ne peut pas être affiché dans la vue '{view}' car il n'est pas inclus dans la configuration de la vue.\",\n\n        \"resultsAllTab\": \"Tous\",\n        \"resultsTextTab\": \"Texte\",\n        \"results_all_tab\": \"Tous\",\n        \"results_text_tab\": \"Texte\",\n    }\n};\n","\nexport * from \"./advanced-form-checkbox/advanced-form-checkbox\";\nexport * from \"./advanced-form-input/advanced-form-input\";\nexport * from \"./advanced-form-multi-input/advanced-form-multi-input\";\nexport * from \"./advanced-form-range/advanced-form-range\";\nexport * from \"./advanced-form-select/advanced-form-select\";\nexport * from \"./advanced.module\";\nexport * from \"./advanced-form-select/select/select\";\nexport * from \"./advanced-form-range/date-picker/date-picker\";\nexport * from \"./advanced-form-range/date-range-picker/date-range-picker\";\nexport * from \"./advanced-form-autocomplete.directive\";\nexport * from \"./advanced-form-validation.directive\";\nexport * from \"./advanced-form-multi-input/advanced-form-autocomplete-multi-input.directive\";\n","export * from \"./public-api\";","import {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\n\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\n\nimport {ModalModule as CoreModalModule} from \"@sinequa/core/modal\";\nimport {LoginModule} from \"@sinequa/core/login\";\nimport {IntlModule} from \"@sinequa/core/intl\";\nimport {ValidationModule} from \"@sinequa/core/validation\";\n\nimport {UtilsModule} from \"@sinequa/components/utils\";\n\nimport {BsModal} from \"./modal.component\";\nimport {BsModalHeader} from \"./modal-header.component\";\nimport {BsModalFooter} from \"./modal-footer.component\";\nimport {BsLogin} from \"./login.component\";\nimport {BsConfirm} from \"./confirm.component\";\nimport {BsPrompt} from \"./prompt.component\";\nimport {BsHelp} from \"./help/help\";\nimport {BsOverrideUser} from \"./override-user/override-user\";\nimport {BsEditable} from \"./editable/editable\";\n\nimport {OverlayModule} from \"@angular/cdk/overlay\";\nimport {A11yModule} from \"@angular/cdk/a11y\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule, ReactiveFormsModule,\n        OverlayModule,\n        A11yModule,\n\n        IntlModule,\n        ValidationModule,\n        CoreModalModule.forRoot(BsConfirm, BsPrompt),\n        LoginModule.forRoot(BsLogin),\n\n        UtilsModule,\n    ],\n    declarations: [\n        BsModal, BsModalHeader, BsModalFooter, BsLogin, BsConfirm,\n        BsHelp, BsOverrideUser, BsEditable, BsPrompt\n    ],\n    exports: [\n        BsModal, BsModalHeader, BsModalFooter, BsLogin, BsConfirm,\n        BsHelp, BsOverrideUser, BsEditable, BsPrompt\n    ],\n})\nexport class BsModalModule {\n}","export default {\n\n    \"userMenu\": {\n        \"user\": \"Benutzer\",\n        \"login\": \"Anmeldung\",\n        \"overrideUser\": \"Benutzer wechseln\",\n        \"settings\": \"Einstellungen\",\n        \"revertUserOverride\": \"Zum Administrator zurückkehren\",\n        \"administration\": \"Administration\",\n        \"logout\": \"Abmeldung\",\n\n        \"language\": \"Sprache\",\n        \n        \"resetUserSettings\": {\n            \"menu\": \"Benutzereinstellungen zurücksetzen\",\n            \"modalTitle\": \"Benutzereinstellungen zurücksetzen\",\n            \"modalMessage\": \"Sie sind dabei, ALLE Ihre Benutzerdaten zurückzusetzen (letzte Abfragen, Sammlungen, Warnungen, Einstellungen usw.). Möchtest du fortfahren?\",\n            \"modalConfirmButton\": \"Bestätigen\",\n            \"successMessage\": \"Benutzereinstellungen erfolgreich zurücksetzen\",\n            \"errorMessage\": \"Benutzereinstellungen zurücksetzen fehlgeschlagen\"\n        }\n    },\n\n    \"editUserSettings\": {\n        \"title\": \"Einstellungen\",\n        \"language\": \"Sprache der Benutzeroberfläche\",\n        \"pageSize\": \"Anzahl der Ergebnisse pro Seite\",\n        \"email\": \"E-Mail\"\n    }\n\n};\n","import {Pipe, ChangeDetectorRef} from \"@angular/core\";\nimport {AbstractIntlPipe} from \"./abstract-intl.pipe\";\nimport {IntlService} from \"./intl.service\";\nimport {Utils, MapOf} from \"@sinequa/core/base\";\n\n/**\n * Describes the parameters that can be passed to the [sqMessage]{@link MessagePipe} pipe\n */\nexport interface MessageParams {\n    /**\n     * Values that can be referenced from ICU messages\n     */\n    values?: MapOf<any>;\n}\n\n/**\n * A pipe to display messages in the current locale. Inputs are processed by\n * [IntlService.formatMessage]{@link IntlService#formatMessage}\n */\n@Pipe({name: \"sqMessage\", pure: false})\nexport class MessagePipe extends AbstractIntlPipe {\n    constructor(\n        intlService: IntlService,\n        changeDetectorRef: ChangeDetectorRef) {\n        super(intlService, changeDetectorRef);\n    }\n\n    protected updateValue(value: any, params: MessageParams): void {\n        if (!Utils.isEmpty(value)) {\n            // coerce to string (eg sys date strings get converted to dates so if this happens to a title we will break otherwise)\n            value = value + \"\";\n        }\n        super.updateValue(value, params);\n        if (!value) {\n            this.value = value;\n            return;\n        }\n        let values: MapOf<any> | undefined;\n        if (params) {\n            values = params.values ? params.values : params;\n        }\n        this.value = this.intlService.formatMessage(value, values);\n    }\n}\n","import {Injectable} from \"@angular/core\";\nimport {IntlService} from \"@sinequa/core/intl\";\nimport {Utils, FieldValue} from \"@sinequa/core/base\";\nimport {AppServiceHelpers} from \"./app-service-helpers\";\nimport {CCColumn} from \"@sinequa/core/web-services\";\nimport {format} from \"d3-format\";\n\n/**\n * Describes a value item object that includes a {@link FieldValue} and an optional display value\n * to override standard field value formatting\n */\nexport interface ValueItem {\n    value: FieldValue;\n    display?: string;\n    count?: number; // Following ES-11166, the number of occurrence for an entity can be included\n}\n\n/**\n * This service provides methods for locale-sensitive formatting and parsing of values that can be found in\n * Sinequa search results.\n */\n@Injectable({\n    providedIn: \"root\"\n})\nexport class FormatService {\n    constructor(\n        public intlService: IntlService) {\n    }\n\n    /**\n     * Returns `true` if the passed parameter is a `ValueItem` object\n     */\n    protected isValueItem(valueItem: ValueItem | FieldValue): valueItem is ValueItem {\n        if (Utils.isObject(valueItem) && !Utils.isDate(valueItem) && !Utils.isArray(valueItem)) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Extracts the value and display components from a parameter that can be either a `ValueItem`\n     * object or a simple `FieldValue`, in which case the display will be `undefined`.\n     */\n    protected getValueAndDisplay(valueItem: ValueItem | FieldValue): [FieldValue, string] {\n        let value: FieldValue;\n        let display: string;\n        if (this.isValueItem(valueItem)) {\n            value = valueItem.value;\n            display = valueItem.display || \"\";\n        }\n        else {\n            value = valueItem;\n            display = \"\";\n        }\n        return [value, display];\n    }\n\n    /**\n     * Return the display equivalent of a Sinequa language specifier (`en`, `fr`, ...).\n     * The display values are defined in the {@link IntlModule} message files\n     *\n     * @param value A value containing a Sinequa language specifier\n     */\n    formatLanguage(value: FieldValue): string {\n        return this.intlService.formatMessage(`msg#language.${Utils.toLowerCase(value + \"\")}`);\n    }\n\n    /**\n     * Return the display equivalent of a size value. The units (`kb`, `mb`, ...) are defined\n     * in the {@link IntlModule} message files\n     *\n     * @param size A memory size in bytes\n     */\n    formatMemorySize(size: number): string {\n        const kiloBytes: number = size / 1024;\n        const megaBytes: number = kiloBytes / 1024;\n        const gigaBytes: number = megaBytes / 1024;\n        const teraBytes: number = gigaBytes / 1024;\n        const petaBytes: number = teraBytes / 1024;\n\n        let messageKey = \"msg#system.memorySize.bytes\";\n        const params: any = { value: size };\n        if (Math.abs(petaBytes) >= 1) {\n            messageKey = \"msg#system.memorySize.pb\";\n            params.value = petaBytes;\n        }\n        else if (Math.abs(teraBytes) >= 1) {\n            messageKey = \"msg#system.memorySize.tb\";\n            params.value = teraBytes;\n        }\n        else if (Math.abs(gigaBytes) >= 1) {\n            messageKey = \"msg#system.memorySize.gb\";\n            params.value = gigaBytes;\n        }\n        else if (Math.abs(megaBytes) >= 1) {\n            messageKey = \"msg#system.memorySize.mb\";\n            params.value = megaBytes;\n        }\n        else if (Math.abs(kiloBytes) >= 1) {\n            messageKey = \"msg#system.memorySize.kb\";\n            params.value = kiloBytes;\n        }\n        return this.intlService.formatMessage(messageKey, params);\n    }\n\n    /** D3 formatter for large number: 42096 => 42K */\n    bigNumberFormatter = format(\"~s\");\n\n    /** Similar to bigNumberFormatter, but replaces \"G\" by \"B\" (as in \"$42B\") */\n    moneyFormatter = s => this.bigNumberFormatter(s).replace(/G/, \"B\");\n    \n    /**\n     * Format an amount of money (typically extracted by a Sinequa Text-mining agent)\n     * USD 42069 => USD 42K\n     * @param value \n     * @returns \n     */\n    formatMoney(value: string): string {\n        let [currency, val] = value.split(\" \");\n        return `${currency} ${this.moneyFormatter(+val)}`;\n    }\n\n    /**\n     * Format a value for display according to the passed `column`. Formatters\n     * can be defined in the column's configuration to provide domain-specific\n     * formatting. The standard formatters are `language` and `memorysize`.\n     *\n     * @param valueItem The value to format\n     * @param column The column associated with the value\n     */\n    formatValue(valueItem: ValueItem | FieldValue, column?: CCColumn): string {\n        let [value, display] = this.getValueAndDisplay(valueItem);\n        if (column && column.formatter) {\n            switch (Utils.toLowerCase(column.formatter)) {\n                case \"language\": return this.formatLanguage(value);\n                case \"memorysize\":\n                    if (Utils.isNumber(value)) {\n                        return this.formatMemorySize(value);\n                    }\n                    break;\n                case \"money\":\n                    if(Utils.isString(value)) {\n                        return this.formatMoney(value);\n                    }\n                    else if(Utils.isArray(value)) {\n                        return value.map(v => \n                            this.formatMoney(Utils.isString(v)? v : v.value)\n                        ).join(', ');\n                    }\n                    break;\n            }\n        }\n        if (display) {\n            if (Utils.isDate(display)) { // ES-7785\n                display = Utils.toSysDateStr(display);\n            }\n            return this.intlService.formatMessage(display, {value});\n        }\n        if (Utils.isNumber(value)) {\n            const message = this.intlService.getMessage(\"msg#system.number\");\n            if (message) {\n                return this.intlService.formatText(message, {value});\n            }\n            else {\n                return this.intlService.formatNumber(value);\n            }\n        }\n        if (column && AppServiceHelpers.isDate(column) && Utils.isString(value)) {\n            value = Utils.fromSysDateStr(value) || value;\n        }\n        if (Utils.isDate(value)) {\n            if (column && !AppServiceHelpers.isDate(column)) { // ES-7785\n                value = Utils.toSysDateStr(value);\n            }\n            else {\n                const message = this.intlService.getMessage(\"msg#system.date\");\n                if (message) {\n                    return this.intlService.formatText(message, {date: value, time: Utils.getTime(value)});\n                }\n                else {\n                    let s = this.intlService.formatDate(value);\n                    if (Utils.getTime(value) !== 0) {\n                        s += \", \" + this.intlService.formatTime(value);\n                    }\n                    return s;\n                }\n            }\n        }\n        if (Utils.isBoolean(value)) {\n            const message = this.intlService.getMessage(\"msg#system.boolean\");\n            if (message) {\n                return this.intlService.formatText(message, {value});\n            }\n            else {\n                return value.toString();\n            }\n        }\n        if (Utils.isArray(value)) {\n            const joinValue: string[] = [];\n            value.forEach(v => {\n                if (joinValue.length > 0) {\n                    joinValue.push(\";\");\n                }\n                let _v: string;\n                if (!v) {\n                    _v = \"<null>\";\n                }\n                else if (Utils.isDate(v)) {\n                    _v = Utils.toSysDateStr(v);\n                }\n                else if (Utils.isString(v)) {\n                    _v = v;\n                }\n                else {\n                    _v = v.display || v.value || \"<null>\";\n                }\n                joinValue.push(_v);\n            });\n            value = joinValue.join(\"\");\n        }\n        if (!value) {\n            return value;\n        }\n        return this.intlService.formatMessage(value);\n    }\n\n    /**\n     * Transform a display value. Multiple transformers can be defined on a column and their calls are chained.\n     * The standard formatters are `uppercase`, `upperfirst`, `lowercase`, `lowerfirst`, `startcase`, `kebabcase`,\n     * `snakecase` and `camelcase`.\n     *\n     * @param value The value to transform\n     * @param column The column associated with the value\n     */\n    transformValue(value: string, column?: CCColumn): string {\n        const transforms = column ? Utils.split(column.transforms || \"\", \",\") : undefined;\n        if (!transforms || transforms.length === 0) {\n            return value;\n        }\n        // transforms are composable\n        for (const transform of transforms) {\n            switch (Utils.toLowerCase(transform)) {\n                case \"uppercase\": value = Utils.toUpperCase(value); break;\n                case \"upperfirst\": value = Utils.toUpperFirst(value); break;\n                case \"lowercase\": value = Utils.toLowerCase(value); break;\n                case \"lowerfirst\": value = Utils.toLowerFirst(value); break;\n                case \"startcase\": value = Utils.toStartCase(value); break;\n                case \"kebabcase\": value = Utils.toKebabCase(value); break;\n                case \"snakecase\": value = Utils.toSnakeCase(value); break;\n                case \"camelcase\": value = Utils.toCamelCase(value); break;\n            }\n        }\n        return value;\n    }\n\n    /**\n     * Format a value item for display. This is the standard entry point for formatting a value.\n     * By default, this method calls [formatValue]{@link #formatValue} and [transformValue]{@link #transformValue}.\n     *\n     * @param valueItem The value item to format\n     * @param column The column associated with the value item\n     */\n    formatFieldValue(valueItem: ValueItem | FieldValue, column?: CCColumn): string {\n        let formattedValue = this.formatValue(valueItem, column);\n        formattedValue = this.transformValue(formattedValue, column);\n        return formattedValue;\n    }\n\n    /**\n     * Parse an input value according to the passed `parser`. The standard parser is `memorysize`. Parsers\n     * are configured in the {@link CCColumn} configuration. The parsed value is returned as a string for\n     * processing by the {@link ValidationModule}\n     *\n     * @param value The value to parse\n     * @param parser The parser to use\n     */\n    parseValue(value: any, parser: string): string {\n        if (Utils.isString(value)) {\n            if (parser) {\n                switch (Utils.toLowerCase(parser)) {\n                    case \"memorysize\": {\n                        return this.parseMemorySize(value) + \"\";\n                    }\n                }\n            }\n        }\n        return value;\n    }\n\n    /**\n     * Parse a size string using [Utils.toSize]{@link Utils#toSize}\n     *\n     * @param str The string to parse\n     * @param _default The default value to return if the string cannot be parsed\n     * @return The parsed size in bytes\n     */\n    parseMemorySize(str: string, _default = 0): number {\n        return Utils.toSize(str, _default);\n    }\n\n    /**\n     * Display a raw value without applying any formatting\n     * (besides the native toString() method for non-string values)\n     * @param value \n     * @returns \n     */\n    formatRaw(value: ValueItem | FieldValue): string {\n        let [val] = this.getValueAndDisplay(value);\n        if(Utils.isArray(val)) {\n            return val.map(v => Utils.isString(v)? v : v.value).join(';');\n        }\n        return val?.toString();\n    }\n}\n","import \"fast-text-encoding\"; // IE 11 / Edge\n\n// NB the name of the intl polyfill (below) conflicts with @sinequa/core/intl in the module resolution.\n// Output of traceResolution: true gives the following:\n//\n// Resolving module name 'intl' relative to base url 'D:/ice/sba/ng-ws/projects/core' - 'D:/ice/sba/ng-ws/projects/core/intl'.\n// Loading module as file / folder, candidate module location 'D:/ice/sba/ng-ws/projects/core/intl', target file type 'TypeScript'.\n// ...\n// This can be worked around in a number of ways:\n// 1. Rename the @sinequa/core/intl folder and all references to it (not overly desirable)\n// 2. Install the intl polyfill using an alias: npm install my-intl-alias@npm:intl. But then references in the locale files would have\n//    to use import \"my-intl-alias/...\"\n// 3. Don't use index.ts as the entry point filename. This is a bit hacky but it works and has the least impact so that's what we've gone with\n//    _index.ts is used and referenced in package.json: { \"ngPackage\": { \"lib\": { \"entryFile\": \"index.ts\" } } }\n//    We also put an explicit Path to @sinequa/core/intl => ./intl/_index in the local tsconfig.json so that references to @sinequa/core/intl\n//    are resolved correctly in VSCode\nimport \"intl\"; // Safari\nimport \"intl/locale-data/jsonp/en-US\"; // Locale needed for formatjs initialization (new Intl.NumberFormat())\nimport \"js-polyfills/url\";\nimport \"matchmedia-polyfill\";\nimport focusWithin from \"focus-within\"; // IE 11 / Edge - https://github.com/jonathantneal/focus-within\n\nfocusWithin(document);\n\n// String.trimStart, String.trimEnd\nif (!(<any>String.prototype).trimStart) {\n  (<any>String.prototype).trimStart = function () {\n    return this.replace(/^[\\s\\uFEFF\\xA0]+/g, '');\n  };\n}\n\nif (!(<any>String.prototype).trimEnd) {\n  (<any>String.prototype).trimEnd = function () {\n    return this.replace(/[\\s\\uFEFF\\xA0]+$/g, '');\n  };\n}\n\n// See https://gist.github.com/jocki84/6ffafd003387179a988e\nif (!(<any>Element.prototype).scrollIntoViewIfNeeded) {\n    (<any>Element.prototype).scrollIntoViewIfNeeded = function (centerIfNeeded) {\n        function withinBounds(value, min, max, extent) {\n            if (false === centerIfNeeded || max <= value + extent && value <= min + extent) {\n                return Math.min(max, Math.max(min, value));\n            } else {\n                return (min + max) / 2;\n            }\n        }\n\n        function makeArea(left, top, width, height) {\n            return  { \"left\": left, \"top\": top, \"width\": width, \"height\": height\n                    , \"right\": left + width, \"bottom\": top + height\n                    , \"translate\":\n                        function (x, y) {\n                            return makeArea(x + left, y + top, width, height);\n                        }\n                    , \"relativeFromTo\":\n                        function (lhs, rhs) {\n                            let newLeft = left, newTop = top;\n                            lhs = lhs.offsetParent;\n                            rhs = rhs.offsetParent;\n                            if (lhs === rhs) {\n                                return area;\n                            }\n                            for (; lhs; lhs = lhs.offsetParent) {\n                                newLeft += lhs.offsetLeft + lhs.clientLeft;\n                                newTop += lhs.offsetTop + lhs.clientTop;\n                            }\n                            for (; rhs; rhs = rhs.offsetParent) {\n                                newLeft -= rhs.offsetLeft + rhs.clientLeft;\n                                newTop -= rhs.offsetTop + rhs.clientTop;\n                            }\n                            return makeArea(newLeft, newTop, width, height);\n                        }\n                    };\n        }\n\n        let parent, elem = this, area = makeArea(\n            this.offsetLeft, this.offsetTop,\n            this.offsetWidth, this.offsetHeight);\n        while ((parent = elem.parentNode) instanceof HTMLElement) {\n            const clientLeft = parent.offsetLeft + parent.clientLeft;\n            const clientTop = parent.offsetTop + parent.clientTop;\n\n            // Make area relative to parent's client area.\n            area = area.\n                relativeFromTo(elem, parent).\n                translate(-clientLeft, -clientTop);\n\n            parent.scrollLeft = withinBounds(\n                parent.scrollLeft,\n                area.right - parent.clientWidth, area.left,\n                parent.clientWidth);\n\n            parent.scrollTop = withinBounds(\n                parent.scrollTop,\n                area.bottom - parent.clientHeight, area.top,\n                parent.clientHeight);\n\n            // Determine actual scroll amount by reading back scroll properties.\n            area = area.translate(clientLeft - parent.scrollLeft,\n                                  clientTop - parent.scrollTop);\n            elem = parent;\n        }\n    };\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/CustomEvent\n(function () {\n\n  if ( typeof (<any>window).CustomEvent === \"function\" ) return;\n\n  function CustomEvent ( event, params ) {\n    params = params || { bubbles: false, cancelable: false, detail: undefined };\n    const evt = document.createEvent( 'CustomEvent' );\n    evt.initCustomEvent( event, params.bubbles, params.cancelable, params.detail );\n    return evt;\n   }\n\n  CustomEvent.prototype = (<any>window).Event.prototype;\n\n  (<any>window).CustomEvent = CustomEvent;\n})();\n\n// IE\nif (!window.location.origin) { // Some browsers (mainly IE) do not have this property, so we need to build it manually...\n    try {\n        window.location[/*foo readonly*/<string>\"origin\"] = window.location.protocol + '//' + window.location.hostname + (window.location.port ? (':' + window.location.port) : '');\n    }\n    catch (e) {\n    }\n}\n\n// fake storage (eg for Safari private browsing)\nfunction fakeStorage(storageName: string) {\n    let fakeStorage = {};\n    let storage;\n    let needed = false;\n\n    if (typeof window[storageName] === \"object\") {\n        // Storage is there, does it work (eg Safari private browsing)\n        try {\n            window[storageName].setItem(\"fakeStorageTest\", \"1\");\n            window[storageName].removeItem(\"fakeStorageTest\");\n        }\n        catch (e) {\n            needed = true;\n        }\n    }\n    else {\n        needed = true;\n    }\n\n    if (!needed) {\n        return;\n    }\n\n    if (typeof window[storageName] === \"object\") {\n        // Override with fake implementation\n        storage = window[storageName];\n    }\n    else {\n        // Implement with fake\n        try {\n            storage = window[/*fool readonly*/<string>storageName] = {};\n        }\n        catch (e) {\n            console.warn(\"Unable to set fake\", storageName);\n            return;\n        }\n    }\n\n    console.warn(\"Using fake\", storageName);\n\n    const dispatchStorageEvent = function(key, newValue) {\n        const oldValue = (!key) ? null : storage.getItem(key);\n        const url = location.href.substr(location.origin.length);\n        const storageEvent = document.createEvent(\"StorageEvent\"); // For IE, http://stackoverflow.com/a/25514935/1214183\n\n        storageEvent[\"initStorageEvent\"](\"storage\", false, false, key, oldValue, newValue, url, storage);\n        window.dispatchEvent(storageEvent);\n    };\n\n    storage.key = function(i) {\n        const key = Object.keys(fakeStorage)[i];\n        return typeof key === \"string\" ? key : null;\n    };\n\n    storage.getItem = function(key) {\n        return typeof fakeStorage[key] === 'string' ? fakeStorage[key] : null;\n    };\n\n    storage.setItem = function(key, value) {\n        dispatchStorageEvent(key, value);\n        fakeStorage[key] = String(value);\n    };\n\n    storage.removeItem = function(key) {\n        dispatchStorageEvent(key, null);\n        delete fakeStorage[key];\n    };\n\n    storage.clear = function() {\n        dispatchStorageEvent(null, null);\n        fakeStorage = {};\n    };\n}\n\nfakeStorage(\"localStorage\");\nfakeStorage(\"sessionStorage\");\n\n// DOMRect polyfill\n// Credit: https://github.com/Financial-Times/polyfill-service/pull/1732\n(function(global: any) {\n    if (global.DOMRect) {\n        return;\n    }\n    function number(v) {\n        return v === undefined ? 0 : Number(v);\n    }\n    function different(u, v) {\n        return u !== v && !(isNaN(u) && isNaN(v));\n    }\n    function DOMRect(this: DOMRect, xArg, yArg, wArg, hArg) {\n        let x; let y; let width; let height; let left; let right; let top; let bottom;\n        x = number(xArg);\n        y = number(yArg);\n        width = number(wArg);\n        height = number(hArg);\n        Object.defineProperties(this, {\n            x: {\n                get: function () { return x; },\n                set: function (newX) {\n                    if (different(x, newX)) {\n                        x = newX;\n                        left = right = undefined;\n                    }\n                },\n                enumerable: true\n            },\n            y: {\n                get: function () { return y; },\n                set: function (newY) {\n                    if (different(y, newY)) {\n                        y = newY;\n                        top = bottom = undefined;\n                    }\n                },\n                enumerable: true\n            },\n            width: {\n                get: function () { return width; },\n                set: function (newWidth) {\n                    if (different(width, newWidth)) {\n                        width = newWidth;\n                        left = right = undefined;\n                    }\n                },\n                enumerable: true\n            },\n            height: {\n                get: function () { return height; },\n                set: function (newHeight) {\n                    if (different(height, newHeight)) {\n                        height = newHeight;\n                        top = bottom = undefined;\n                    }\n                },\n                enumerable: true\n            },\n            left: {\n                get: function () {\n                    if (left === undefined) {\n                        left = x + Math.min(0, width);\n                    }\n                    return left;\n                },\n                enumerable: true\n            },\n            right: {\n                get: function () {\n                    if (right === undefined) {\n                        right = x + Math.max(0, width);\n                    }\n                    return right;\n                },\n                enumerable: true\n            },\n            top: {\n                get: function () {\n                    if (top === undefined) {\n                        top = y + Math.min(0, height);\n                    }\n                    return top;\n                },\n                enumerable: true\n            },\n            bottom: {\n                get: function () {\n                    if (bottom === undefined) {\n                        bottom = y + Math.max(0, height);\n                    }\n                    return bottom;\n                },\n                enumerable: true\n            }\n        });\n    }\n    global.DOMRect = DOMRect;\n}(window));\n\n// Element.closest and Element.matches polyfills (see https://developer.mozilla.org/en-US/docs/Web/API/Element/closest)\nif (!Element.prototype.matches) {\n    Element.prototype.matches =\n        (Element.prototype as any).msMatchesSelector ||\n        Element.prototype.webkitMatchesSelector;\n}\n\nif (!Element.prototype.closest) {\n    Element.prototype.closest = function(s) {\n        let el = this;\n        do {\n            if (el.matches(s)) {\n                return el;\n            }\n            el = el.parentElement || el.parentNode as Element;\n        } while (el !== null && el.nodeType === 1);\n        return null;\n    };\n}\n\nexport {\n};\n","export * from \"./public-api\";","export * from \"./baskets.module\";\nexport * from \"./baskets-menu/baskets-menu.component\";\nexport * from \"./edit-basket/edit-basket\";\nexport * from \"./facet-baskets/facet-baskets.component\";\nexport * from \"./manage-baskets/manage-baskets\";\nexport * from \"./result-baskets/result-baskets\";\nexport * from \"./select-basket/select-basket\";\n","import {Injectable, Inject, OnDestroy} from \"@angular/core\";\nimport {Subject, Observable} from \"rxjs\";\nimport {SqHttpClient} from \"./http-client\";\nimport {HttpService} from \"./http.service\";\nimport {START_CONFIG, StartConfig} from \"./start-config.web.service\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {AuditEvents} from \"./audit.web.service\";\nimport jstz from \"jstz\";\n\n/**\n * Minimal built-in user settings. Can be extended in the context of\n * complex applications to store user data, preferences, objects, etc.\n */\nexport interface UserSettings {\n    language?: string;\n    skipCount?: number;\n    email?: string;\n    [key: string]: any;\n}\n\n/**\n * A base event from which all events that can be issued by the {@link UserSettingsWebService} are derived\n */\nexport interface UserSettingsEvent {\n    type: \"changed\";\n}\n\n/**\n * This event is fired each time the [userSettings]{@link UserSettingsWebService#userSettings} member is modified.\n * Typically this will be at login / logoff and also if the \"override user\" admin feature is used.\n */\nexport interface UserSettingsChangedEvent extends UserSettingsEvent {\n    type: \"changed\";\n}\n\n/**\n * A service for calling the usersettings web service\n */\n@Injectable({\n    providedIn: \"root\"\n})\nexport class UserSettingsWebService extends HttpService implements OnDestroy {\n    private _userSettings: UserSettings | undefined;\n    /**\n     * The timezone for the user\n     */\n    timezone: string;\n    /**\n     * A reviver function that, if set, will be called on the user settings when they are loaded\n     */\n    reviver: (us: UserSettings) => void;\n    private _events = new Subject<UserSettingsChangedEvent>();\n\n    constructor(\n        @Inject(START_CONFIG) startConfig: StartConfig,\n        private httpClient: SqHttpClient) {\n        super(startConfig);\n        this.timezone = jstz.determine().name(); // until momentjs gets this\n    }\n\n    ngOnDestroy() {\n        this._events.complete();\n    }\n\n    /**\n     * The observable events emitted by this service\n     */\n    get events(): Observable<UserSettingsChangedEvent> {\n        return this._events;\n    }\n\n    /**\n     * Gets the current {@link UserSettings}\n     */\n    get userSettings(): UserSettings | undefined {\n        return this._userSettings;\n    }\n\n    /**\n     * Sets the current {@link UserSettings} and issues the \"changed\" event\n     */\n    set userSettings(value: UserSettings | undefined) {\n        this._userSettings = value;\n        this._events.next({type: \"changed\"});\n    }\n\n    //TODO remove\n    /**\n     * @deprecated use \"userSettings\" get property to retrieve the user settings\n     * @returns User settings object or undefined\n     */\n    public getUserSettings(): UserSettings | undefined{\n        return this.userSettings;\n    }\n\n    /**\n     * Load the user settings for the currently logged in user.\n     * Sets the userSettings member and issues the \"changed\" event\n     */\n    public load(): Observable<UserSettings> {\n        const observable = this.httpClient.get<UserSettings>(this.makeUrl(\"usersettings\"), {\n            params: this.makeParams({\n                app: this.appName,\n                action: \"load\"\n            })\n        });\n        Utils.subscribe(observable,\n            (response) => {\n                this.userSettings = response;\n                if (this.userSettings) {\n                    if (this.reviver) {\n                        this.reviver(this.userSettings);\n                    }\n                }\n            },\n            (error) => {\n                console.log(\"userSettingsService.load failure - error: \", error);\n            });\n        return observable;\n    }\n\n    /**\n     * Saves the current user settings on the server\n     *\n     * @param auditEvents\n     */\n    public save(auditEvents?: AuditEvents): Observable<void> {\n        const observable = this.httpClient.post<void>(this.makeUrl(\"usersettings\"), {\n            app: this.appName,\n            action: \"save\",\n            userSettings: this.userSettings,\n            $auditRecord: auditEvents\n        });\n        Utils.subscribe(observable,\n            (response) => response,\n            (error) => {\n                console.log(\"userSettingsService.save failure - error: \", error);\n            });\n        return observable;\n    }\n\n    /**\n     * Patches the user settings on the server using a partial user settings object. The partial\n     * object is used to update the user settings on the server according to [RFC7396]{@link https://tools.ietf.org/html/rfc7396}\n     *\n     * @param userSettings The partial user settings\n     * @param auditEvents Any associated audit events to store on the server\n     */\n    public patch(userSettings: UserSettings, auditEvents?: AuditEvents): Observable<void> {\n        const observable = this.httpClient.post<void>(this.makeUrl(\"usersettings\"), {\n            app: this.appName,\n            action: \"patch\",\n            userSettings: userSettings,\n            $auditRecord: auditEvents\n        });\n        Utils.subscribe(observable,\n            (response) => response,\n            (error) => {\n                console.log(\"userSettingsService.patch failure - error: \", error);\n            });\n        return observable;\n    }\n\n    /**\n     * Resets User Settings (emits a change event and audit events).\n     */\n    public reset() {\n        // Save current state\n        const currentState = this.userSettings;\n        // Reset User settings (and emit an event!)\n        this.userSettings = {};\n        const observable = this.save({\n            type: 'UserSettings_Reset'\n        });\n        observable.subscribe({\n            next: () => {},\n            error: () => this.userSettings = currentState // Restore previous state\n        })\n        return observable;\n    }\n\n    /**\n     * Reads a user setting.\n     *\n     * @param paths The path to the setting in the JSON.\n     */\n    public readUserSetting(paths: string[]): any {\n        let json: any = this.userSettings;\n        if (json) {\n            for (const path of paths) {\n                json = json[path];\n                if (!json) {\n                    // Value does not exist yet\n                    return undefined;\n                }\n            }\n        }\n        return json;\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { BasketsService, Basket, BasketEventType } from '../../baskets.service';\nimport { AbstractFacet } from '@sinequa/components/facet';\nimport { Action } from '@sinequa/components/action';\n\n@Component({\n  selector: 'sq-facet-baskets',\n  templateUrl: './facet-baskets.component.html',\n  styles: [`\n.basket-item .basket-delete{\n    opacity: 0;\n}\n\n.basket-item:hover .basket-delete{\n    opacity: 1;\n    transition: opacity 0.2s ease-in-out;\n}\n  `]\n})\nexport class BsFacetBasketsComponent extends AbstractFacet {\n  @Input() searchRoute: string = \"/search\";\n  @Input() maxBaskets: number = 5;\n  @Input() enableDelete: boolean = true;\n\n  page: number = 0;\n\n  createBasket: Action;\n  manageBasket: Action;\n  previousPage: Action;\n  nextPage: Action;\n\n  constructor(\n    public basketsService: BasketsService) {\n    super();\n\n    this.createBasket = new Action({\n      icon: \"fas fa-plus\",\n      title: \"msg#baskets.createBasket\",\n      action: () => {\n        this.basketsService.createBasketModal();\n      }\n    });\n\n    this.manageBasket = new Action({\n      icon: \"fas fa-cog\",\n      title: \"msg#baskets.manageBaskets\",\n      action: () => {\n        this.basketsService.manageBasketsModal();\n      }\n    });\n\n    this.previousPage = new Action({\n      icon: \"fas fa-chevron-left\",\n      title: \"msg#facet.previous\",\n      action: () => {\n        this.page--;\n      },\n      updater: (action: Action) => {\n        action.disabled = this.page <= 0;\n        action.hidden = this.maxPage === 0;\n      }\n    });\n\n    this.nextPage = new Action({\n      icon: \"fas fa-chevron-right\",\n      title: \"msg#facet.next\",\n      action: () => {\n        this.page++;\n      },\n      updater: (action: Action) => {\n        action.disabled = this.page >= this.maxPage;\n        action.hidden = this.maxPage === 0;\n      }\n    });\n  }\n\n  get maxPage(): number {\n    return Math.max(0, Math.ceil(this.basketsService.baskets.length / this.maxBaskets) - 1);\n  }\n\n  get startIndex(): number {\n    return this.page * this.maxBaskets;\n  }\n\n  get endIndex(): number {\n    return (this.page+1) * this.maxBaskets;\n  }\n\n  openBasket(basket: Basket){\n    this.basketsService.notifyOpenBasket(basket)\n    return true;\n  }\n\n  get actions(): Action[] {\n    this.previousPage.update();\n    this.nextPage.update();\n    return [this.createBasket, this.previousPage, this.nextPage, this.manageBasket];\n  }\n\n  deleteBasket(basket: Basket, event: Event){\n    event.stopPropagation();\n    this.basketsService.deleteBasket(basket);\n    this.page = Math.min(this.page, this.maxPage);\n    return false;\n  }\n\n  getQueryParams(basket: Basket) {\n    const query = this.basketsService.makeQuery(basket);\n    const queryParams = query.toJsonForQueryString();\n    return {query: queryParams};\n  }\n\n  getRouterState(basket: Basket) {\n    return {\n      audit: {\n        type: BasketEventType.Open,\n        detail: {\n          basket: basket.name\n        }\n      }\n    }\n  }\n}\n","<div class=\"list-group list-group-flush\">\n    <a *ngFor=\"let basket of basketsService.baskets | slice:startIndex:endIndex\"\n        class=\"basket-item list-group-item list-group-item-action d-flex align-items-center\"\n        [routerLink]=\"[searchRoute]\" [queryParams]=\"getQueryParams(basket)\" [state]=\"getRouterState(basket)\"\n        (click)=\"openBasket(basket)\">\n        <span class=\"basket-name text-truncate mr-auto\">{{ basket.name }}</span>\n        <span *ngIf=\"basket.ids\" class=\"basket-count ml-2 text-muted small\">{{ basket.ids.length }}</span>\n        <i *ngIf=\"enableDelete\" class=\"basket-delete ml-2 fas fa-times\" [title]=\"'msg#baskets.delete' | sqMessage\" (click)=\"deleteBasket(basket, $event)\"></i>\n    </a>\n    <div *ngIf=\"basketsService.baskets.length == 0\" class=\"list-group-item text-center text-muted font-italic small py-5\">\n        {{ 'msg#baskets.noBasket' | sqMessage }}\n    </div>\n</div>","export default {\n    \"advanced\": {\n        \"rangeSeparator\": \" / \",\n        \"dateRangePicker\": {\n            \"separator\": \" / \"\n        },\n        \"rangeInput\": {\n            \"separator\": \"/\"\n        },\n        \"select\": {\n            \"nItems\": \"{count} items selected\",\n            \"allItems\": \"All items selected\",\n            \"noItems\": \"No items selected\"\n        }\n    }\n};\n","import {Component, Input, Output, EventEmitter} from \"@angular/core\";\n\nexport interface CollapseStateChange {\n    group: string;\n    collapsed: boolean;\n}\n\n@Component({\n    selector: \"sq-collapse-link\",\n    templateUrl: \"./collapse-link.component.html\"\n})\nexport class CollapseLink {\n    @Input() title: string = \"\";\n    @Input() icon: string = \"\";\n    @Input() text: string = \"\";\n    @Input() group: string;\n    @Output() stateChange = new EventEmitter<CollapseStateChange>();\n    collapsed: boolean = true;\n\n    constructor() {\n    }\n\n    click() {\n        this.collapsed = !this.collapsed;\n        this.stateChange.emit({group: this.group, collapsed: this.collapsed});\n        return false; // Prevent following href\n    }\n}","<a href=\"#\" title=\"{{title | sqMessage}}\" (click)=\"click()\">\n    <sq-collapse-button [collapsed]=\"collapsed\" [icon]=\"icon\" [text]=\"text\"></sq-collapse-button>\n</a>","import {Injectable, Inject} from \"@angular/core\";\nimport {Observable} from \"rxjs\";\nimport {tap} from \"rxjs/operators\";\nimport {SqHttpClient} from \"./http-client\";\nimport {HttpService} from \"./http.service\";\nimport {START_CONFIG, StartConfig} from \"./start-config.web.service\";\nimport {Record} from \"./query.web.service\";\nimport {AuditEventType} from \"./audit.web.service\";\n\n/**\n * Describes a rating configuration object\n */\nexport interface CCRating {\n    ratingsColumn: string;\n    averageColumn: string;\n\n    updateDocWeight: boolean;\n\n    ratingsDistribution: string[];\n}\n\n/**\n * Describes a user rating response object\n */\nexport interface UserRatingResponse {\n    rating: number;\n    averagerating: number;\n}\n\n/**\n * A service for calling the ratings web service\n */\n@Injectable({\n    providedIn: \"root\"\n})\nexport class UserRatingsWebService extends HttpService {\n    constructor(\n        @Inject(START_CONFIG) startConfig: StartConfig,\n        private httpClient: SqHttpClient) {\n        super(startConfig);\n    }\n\n    /**\n     * Gets the current user rating for a document\n     *\n     * @param docid The id of a document for which to get the rating\n     * @param config The ratings configuration\n     */\n    getRating(docid: string, config: CCRating): Observable<UserRatingResponse> {\n        return this.httpClient.post<UserRatingResponse>(this.makeUrl(\"ratings\"), {\n            action: \"get\",\n            docid,\n            ratingscolumn: config.ratingsColumn,\n            averagecolumn: config.averageColumn,\n            ratingsdistribution: config.ratingsDistribution\n        }).pipe(tap(\n            r => {},\n            error => console.log(\"ratingsService.getRating failure - error: \", error)\n        ));\n    }\n\n    /**\n     * Sets the current user rating for a document\n     *\n     * @param record The document for which to set the rating\n     * @param rating A rating value\n     * @param config The ratings configuration\n     */\n    setRating(record: Record, rating: number, config: CCRating): Observable<UserRatingResponse> {\n        const ratingResponse = this.getRecordRating(record, config);\n        const observable = this.httpClient.post<UserRatingResponse>(this.makeUrl(\"ratings\"), {\n            action: \"set\",\n            docid: record.id,\n            ratingscolumn: config.ratingsColumn,\n            averagecolumn: config.averageColumn,\n            ratingsdistribution: config.ratingsDistribution,\n            updatedocweight: config.updateDocWeight,\n            rating,\n            $auditRecord: {\n                auditEvents: [\n                    {\n                        type: AuditEventType.Rating_Set,\n                        detail: {\n                            \"doc-id\": record.id,\n                            ratingnum: rating,\n                            value: ratingResponse.rating,\n                            average: ratingResponse.averagerating\n                        }\n                    }\n                ],\n                mlAuditEvents: [\n                    {\n                        actionType: \"addRating\",\n                        documentIds: record.id\n                    }\n                ]\n            }\n        });\n\n        observable.subscribe(\n            response => response,\n            error => console.log(\"ratingsService.setRating failure - error: \", error)\n        );\n\n        return observable;\n    }\n\n    /**\n     * Delete a rating for a document\n     *\n     * @param record The document for which to delete the rating\n     * @param config The ratings configuration\n     */\n    deleteRating(record: Record, config: CCRating): Observable<UserRatingResponse> {\n        const ratingResponse = this.getRecordRating(record, config);\n        const observable = this.httpClient.post<UserRatingResponse>(this.makeUrl(\"ratings\"), {\n            action: \"delete\",\n            docid: record.id,\n            ratingscolumn: config.ratingsColumn,\n            averagecolumn: config.averageColumn,\n            ratingsdistribution: config.ratingsDistribution,\n            updatedocweight: config.updateDocWeight,\n            $auditRecord: {\n                auditEvents: [\n                    {\n                        type: AuditEventType.Rating_Delete,\n                        detail: {\n                            \"doc-id\": record.id,\n                            value: ratingResponse.rating,\n                            average: ratingResponse.averagerating\n                        }\n                    }\n                ],\n                mlAuditEvents: [\n                    {\n                        actionType: \"removeRating\",\n                        documentIds: record.id\n                    }\n                ]\n            }\n        });\n\n        observable.subscribe(\n            response => response,\n            error => console.log(\"ratingsService.deleteRating failure - error: \", error)\n        );\n\n        return observable;\n    }\n\n    /**\n     * Gets user rating information from the given record\n     *\n     * @param record The record for which to get the rating\n     * @param config The ratings configuration\n     */\n    getRecordRating(record: Record, config: CCRating): UserRatingResponse {\n        return {\n            rating: this.parseUserRating(record[config.ratingsColumn], config),\n            averagerating: this.parseAverageRating(record[config.averageColumn], config)\n        };\n    }\n\n    private parseAverageRating(columnEntries: string[], config: CCRating): number {\n        if (config.ratingsDistribution && columnEntries) {\n            return config.ratingsDistribution.indexOf(columnEntries[0]);\n        }\n        else {\n            return -1;\n        }\n    }\n\n    private parseUserRating(ratingValues: string[], config: CCRating): number {\n        if(ratingValues) {\n            if (config.ratingsDistribution) {\n                return config.ratingsDistribution.indexOf(ratingValues[0]);\n            }\n        }\n        return -1;\n    }\n}\n","import {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\n\nimport {IntlModule} from \"@sinequa/core/intl\";\n\nimport {BsDatepickerModule} from \"ngx-bootstrap/datepicker\";\n\nimport {UtilsModule} from \"@sinequa/components/utils\";\nimport {BsAutocompleteModule} from \"@sinequa/components/autocomplete\";\n\nimport {BsAdvancedFormCheckbox} from \"./advanced-form-checkbox/advanced-form-checkbox\";\nimport {BsAdvancedFormRange} from \"./advanced-form-range/advanced-form-range\";\nimport {BsAdvancedFormSelect} from \"./advanced-form-select/advanced-form-select\";\nimport { BsAdvancedFormMultiInput } from './advanced-form-multi-input/advanced-form-multi-input';\nimport { BsAdvancedFormInput } from './advanced-form-input/advanced-form-input';\nimport { BsDatePicker } from './advanced-form-range/date-picker/date-picker';\nimport { BsDateRangePicker } from './advanced-form-range/date-range-picker/date-range-picker';\nimport { BsSelectComponent } from './advanced-form-select/select/select';\n\n// Directives\nimport {BsAdvancedFormAutocomplete} from \"./advanced-form-autocomplete.directive\";\nimport {BsAdvancedFormValidation} from \"./advanced-form-validation.directive\";\nimport { BsAdvancedFormAutocompleteMultiInput } from './advanced-form-multi-input/advanced-form-autocomplete-multi-input.directive';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n\n        IntlModule,\n\n        // ngx-bootstrap\n        BsDatepickerModule.forRoot(),\n\n        UtilsModule,\n        BsAutocompleteModule\n    ],\n    declarations: [\n        BsAdvancedFormCheckbox,\n        BsAdvancedFormInput,\n        BsAdvancedFormRange,\n        BsAdvancedFormSelect,\n        BsAdvancedFormMultiInput,\n        BsDatePicker,\n        BsDateRangePicker,\n        BsSelectComponent,\n\n        BsAdvancedFormAutocompleteMultiInput,\n        BsAdvancedFormAutocomplete,\n        BsAdvancedFormValidation,\n    ],\n    exports: [\n        BsAdvancedFormCheckbox,\n        BsAdvancedFormInput,\n        BsAdvancedFormRange,\n        BsAdvancedFormSelect,\n        BsAdvancedFormMultiInput,\n        BsDatePicker,\n        BsDateRangePicker,\n        BsSelectComponent,\n\n        BsAdvancedFormAutocompleteMultiInput,\n        BsAdvancedFormAutocomplete,\n        BsAdvancedFormValidation,\n    ]\n})\nexport class BsAdvancedModule {\n}\n","import {Component, Input, OnChanges, SimpleChanges, ChangeDetectorRef} from \"@angular/core\";\nimport {FormGroup, FormBuilder, AbstractControl} from \"@angular/forms\";\nimport {Results} from \"@sinequa/core/web-services\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {SearchService} from \"@sinequa/components/search\";\nimport {AbstractFacet} from \"../../abstract-facet\";\nimport {ParseResult} from '@sinequa/components/autocomplete';\n\n@Component({\n    selector: \"sq-refine\",\n    templateUrl: \"./facet-refine.html\"\n})\nexport class BsRefine extends AbstractFacet implements OnChanges {\n\n    /**\n     * Results of the search page associated to this refine\n     */\n    @Input() results: Results;\n\n    /**\n     * Whether or not to enable autocompletion\n     */\n    @Input() autocompleteEnabled: boolean;\n\n    /**\n     * Suggest query with which to perform autocompletion\n     */\n    @Input() suggestQuery: string;\n\n    /**\n     * Minimum delay (in ms) between suggest queries\n     */\n    @Input() suggestDelay: number = 200;\n\n    form: FormGroup;\n    searchControl: AbstractControl | null;\n\n    inputErrorMessage: string;\n\n    constructor(\n        public formBuilder: FormBuilder,\n        public searchService: SearchService,\n        private changeDetectorRef: ChangeDetectorRef) {\n        super();\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (!this.form) {\n            this.form = this.formBuilder.group({\n                \"search\": \"\"\n            });\n            this.searchControl = this.form.get(\"search\");\n        }\n        if (!!changes[\"results\"] && this.searchControl) {\n            this.searchControl.setValue(this.searchService.lastRefineText);\n        }\n    }\n\n    doRefine = () => {\n        if (this.searchControl) {\n            const text = Utils.trim(this.searchControl.value);\n            if (text) {\n                this.searchService.searchRefine(text);\n            }\n        }\n    }\n\n    setError(parseResult: ParseResult = {}){\n        if(parseResult.error !== this.inputErrorMessage){\n            this.inputErrorMessage = parseResult.error || \"\";\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n}","<div class=\"card-body\">\n    <form role=\"search\" novalidate [formGroup]=\"form\">\n        \n        <div class=\"d-flex flex-column flex-grow-1 position-relative\">        \n            <div class=\"input-group\">\n                <label class=\"sr-only\">{{'msg#facet.refine.input.label' | sqMessage}}</label>\n                \n                <input type=\"text\"\n                    formControlName=\"search\" \n                    class=\"form-control {{inputErrorMessage ? 'is-invalid' : ''}}\"\n                    spellcheck=\"false\"\n                    autocomplete=\"off\"\n                    [title]=\"inputErrorMessage\"\n\n                    sqAutocomplete\n                    [placeholder]=\"'msg#facet.refine.input.placeholder' | sqMessage\"\n                    [dropdown]=\"dropdown\" \n                    [suggestQuery]=\"suggestQuery\"\n                    [off]=\"!autocompleteEnabled\"\n                    [suggestDelay]=\"suggestDelay\"                    \n\n                    (submit)=\"doRefine()\"\n                    (parse)=\"setError($event)\">\n    \n                <div class=\"input-group-append\">\n                    <button class=\"btn btn-light\" type=\"button\" (click)=\"doRefine()\" title=\"{{'msg#facet.refine.input.buttonTitle' | sqMessage}}\">\n                        <i class=\"fas fa-search\"></i>\n                    </button>\n                </div>\n            </div>\n    \n            <sq-autocomplete-list #dropdown>\n                <ng-template #itemTpl let-item>\n                    <div class=\"py-2\" style=\"padding-left:0.75rem;\">{{item.display}}\n                        <small *ngIf=\"item.category\" class=\"ml-2 text-muted\">{{(item.label || item.category) | sqMessage}}</small>\n                    </div>\n                </ng-template>\n            </sq-autocomplete-list>\n        </div>\n    </form>    \n    <sq-did-you-mean [results]=\"results\" [context]=\"'refine'\"></sq-did-you-mean>\n</div>","import { Directive, ElementRef, Input } from '@angular/core';\nimport { AutocompleteFieldSearch, SuggestService, AutocompleteItem, AutocompleteState } from '@sinequa/components/autocomplete';\nimport { AppService, ExprBuilder } from '@sinequa/core/app-utils';\nimport { UIService } from '@sinequa/components/utils';\nimport { RecentQueriesService, RecentDocumentsService, SavedQueriesService, RecentDocument, RecentQuery, SavedQuery } from '@sinequa/components/saved-queries';\nimport { PreviewService } from '@sinequa/components/preview';\nimport { SearchService } from '@sinequa/components/search';\nimport { BasketsService } from '@sinequa/components/baskets';\nimport { Observable, forkJoin, from, of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport { Basket } from '@sinequa/components/baskets';\nimport { AuditEventType, AuditWebService } from '@sinequa/core/web-services';\n\n/**\n * This directive extends the autocomplete directive to provide autocomplete on\n * additional objects, such as recent queries, documents and baskets\n */\n@Directive({\n    selector: \"[sqAutocompleteExtended]\"\n})\nexport class AutocompleteExtended extends AutocompleteFieldSearch {\n\n    /**\n     * List of features within which to search in\n     * (list of 'recent-documents', 'recent-queries', 'saved-queries', 'baskets')\n     */\n    @Input() sqAutocompleteExtended: string[] = [];\n\n    constructor(\n        elementRef: ElementRef,\n        suggestService: SuggestService,\n        appService: AppService,\n        uiService: UIService,\n        exprBuilder: ExprBuilder,\n        protected recentQueriesService: RecentQueriesService,\n        protected recentDocumentsService: RecentDocumentsService,\n        protected savedQueriesService: SavedQueriesService,\n        protected basketsService: BasketsService,\n        protected previewService: PreviewService,\n        protected searchService: SearchService,\n        protected audit: AuditWebService){\n        super(elementRef, suggestService, appService, uiService, exprBuilder);\n\n    }\n\n    /**\n     * This method overrides the Autocomplete.getSuggestsObs() method from the sqAutocomplete directive.\n     * Rather than only getting suggests from the server via the SuggestService, this directive also\n     * searches for matches in the User Settings objects (recent documents, recent queries, saved\n     * queries, baskets)\n     */\n    protected getSuggestsObs(value: string, fields?: string[]): Observable<AutocompleteItem[]> {\n    \n        // Methods returning (observable of) suggestions from different sources\n        let dataSources: Observable<AutocompleteItem[]>[];\n        // Fielded search mode\n        if((fields && fields.length > 0) || this.fieldSearchItems.length > 0 || value !== this.getInputValue()){\n            dataSources = [super.getSuggestsObs(value, fields)];\n        }\n        // Normal mode\n        else {\n            dataSources = this.sqAutocompleteExtended.map(source => {\n                switch(source) {\n                    case 'suggests': return  this.suggestService.get(this.suggestQuery, value, fields);\n                    case 'baskets': return from(this.searchBaskets(value));\n                    case 'recent-documents': return from(this.searchRecentDocuments(value));\n                    case 'recent-queries': return from(this.searchRecentQueries(value));\n                    case 'saved-queries': return from(this.searchSavedQueries(value));\n                }\n                return of([]);\n            });\n        }\n        \n        // The forkJoin method allows to merge the suggestions into a single array, so the parent\n        // directive only sees a single source.\n        return forkJoin(...dataSources).pipe(\n            map((suggests) => {\n                return [].concat(...suggests)\n                    .sort((a,b) => (b['score'] || 0) - (a['score'] || 0)); // autocomplete items returned by searchData still have their \"score\" attribute, which is consistent across categories\n            }),\n            catchError((err, caught) => {\n                console.error(err);\n                return [];\n            })\n        );\n\n    }\n\n    /**\n     * This method overrides the Autocomplete.select() method from the sqAutocomplete directive.\n     * It performs custom actions when a specific category of autocomplete item is selected, such\n     * as selecting a basket, a saved query or a recent document.\n     * @param item\n     * @param submit\n     */\n    protected select(item: AutocompleteItem, submit?: boolean) {\n        this.audit.notify({type: AuditEventType.Search_AutoComplete, detail:{display: item.display, category: item.category }})\n\n        if(item.category === \"recent-document\"){\n            this.previewService.openRoute(item['data'], this.searchService.makeQuery());\n        }\n        else if (item.category === \"saved-query\"){\n            this.savedQueriesService.searchSavedQuery(item['data'], \"/search\");\n            this.setState(AutocompleteState.SELECTED);\n            this.dropdown.update(false);    // Close dropdown\n        }\n        else if (item.category === \"basket\"){\n            this.basketsService.searchBasket(item['data'], \"/search\");\n            this.setState(AutocompleteState.SELECTED);\n            this.dropdown.update(false);    // Close dropdown\n        }\n        else {\n            super.select(item, submit);\n        }\n    }\n\n    /**\n     * Search for the input text in the recent queries and return autocomplete items asynchronously\n     * @param text\n     */\n    searchRecentQueries(text: string): Promise<AutocompleteItem[]> {\n        return this.suggestService.searchData<RecentQuery>(\n            'recent-query',\n            text,\n            this.recentQueriesService.recentqueries,\n            (query) => query.query.text || \"\",\n            undefined,\n            \"msg#searchForm.recentQuery\");\n    }\n\n    /**\n     * Search for the input text in the recent documents and return autocomplete items asynchronously\n     * @param text\n     */\n    searchRecentDocuments(text: string): Promise<AutocompleteItem[]> {\n        return this.suggestService.searchData<RecentDocument>(\n            'recent-document',\n            text,\n            this.recentDocumentsService.recentdocuments,\n            (doc: RecentDocument) => doc.title,\n            (doc: RecentDocument) => ([] as string[]).concat(doc.url1, doc.treepath, doc.authors),\n            \"msg#searchForm.recentDocument\");\n    }\n\n    /**\n     * Search for the input text in the saved queries and return autocomplete items asynchronously\n     * @param text\n     */\n    searchSavedQueries(text: string): Promise<AutocompleteItem[]> {\n        return this.suggestService.searchData<SavedQuery>(\n            'saved-query',\n            text,\n            this.savedQueriesService.savedqueries,\n            (query) => query.name,\n            (query) => [query.description || \"\", query.query.text || \"\"],\n            \"msg#editSavedQuery.title\");\n    }\n\n    /**\n     * Search for the input text in the baskets and return autocomplete items asynchronously\n     * @param text\n     */\n    searchBaskets(text: string): Promise<AutocompleteItem[]> {\n        return this.suggestService.searchData<Basket>(\n            'basket',\n            text,\n            this.basketsService.baskets,\n            (bsk) => bsk.name,\n            (bsk) => [bsk.description || \"\"],\n            \"msg#editBasket.title\");\n    }\n\n}","import { NgModule, APP_INITIALIZER } from \"@angular/core\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { RouterModule, Routes } from '@angular/router';\nimport { LocationStrategy, HashLocationStrategy } from \"@angular/common\";\nimport { HTTP_INTERCEPTORS } from \"@angular/common/http\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\n// @sinequa/core library\nimport { WebServicesModule, StartConfigWebService, StartConfig } from \"@sinequa/core/web-services\";\nimport { LoginModule, LoginInterceptor } from \"@sinequa/core/login\";\nimport { IntlModule } from \"@sinequa/core/intl\";\nimport { ModalModule } from \"@sinequa/core/modal\";\nimport { NotificationsInterceptor } from \"@sinequa/core/notification\";\nimport { AuditInterceptor } from \"@sinequa/core/app-utils\";\n\n// @sinequa/components library\nimport { BsSearchModule, SearchOptions } from \"@sinequa/components/search\";\nimport { BsAutocompleteModule } from \"@sinequa/components/autocomplete\";\nimport { BsNotificationModule } from \"@sinequa/components/notification\";\nimport { BsFacetModule } from \"@sinequa/components/facet\";\nimport { BsActionModule } from \"@sinequa/components/action\";\nimport { BsModalModule } from \"@sinequa/components/modal\";\nimport { BsBasketsModule } from '@sinequa/components/baskets';\nimport { BsAlertsModule } from '@sinequa/components/alerts';\nimport { BsSavedQueriesModule } from '@sinequa/components/saved-queries';\nimport { UtilsModule, SCREEN_SIZE_RULES } from '@sinequa/components/utils';\nimport { BsLabelsModule } from '@sinequa/components/labels';\nimport { BsUserSettingsModule } from '@sinequa/components/user-settings';\nimport { ResultModule } from '@sinequa/components/result';\nimport { BsFeedbackModule } from '@sinequa/components/feedback';\nimport { BsPreviewModule } from '@sinequa/components/preview';\nimport { MetadataModule } from '@sinequa/components/metadata';\nimport { BsSelectionModule } from '@sinequa/components/selection';\nimport { BsAdvancedModule } from '@sinequa/components/advanced';\n\n// Components\nimport { AppComponent } from \"./app.component\";\nimport { HomeComponent } from './home/home.component';\nimport { SearchComponent } from './search/search.component';\nimport { PreviewComponent } from './preview/preview.component';\nimport { SearchFormComponent } from './search-form/search-form.component';\nimport { AutocompleteExtended } from './search-form/autocomplete-extended.directive';\n\n// Environment\nimport { environment } from \"../environments/environment\";\n\n\n// Initialization of @sinequa/core\nexport const startConfig: StartConfig = {\n    // app: \"training\",\n    production: environment.production,\n    // autoSAMLProvider: environment.autoSAMLProvider,\n    auditEnabled: true\n};\n\n// @sinequa/core config initializer\nexport function StartConfigInitializer(startConfigWebService: StartConfigWebService): () => Promise<StartConfig> {\n    const init = () => startConfigWebService.fetchPreLoginAppConfig().toPromise();\n    return init;\n}\n\n\n// Application routes (see https://angular.io/guide/router)\nexport const routes: Routes = [\n    {path: \"home\", component: HomeComponent},\n    {path: \"search\", component: SearchComponent},\n    {path: \"preview\", component: PreviewComponent},\n    {path: \"**\", redirectTo: \"home\"}\n];\n\n\n// Search options (search service)\nexport const searchOptions: SearchOptions = {\n    routes: [\"search\"],\n    homeRoute: \"home\"\n};\n\n\n// Application languages (intl service)\nimport {LocalesConfig, Locale} from \"@sinequa/core/intl\";\nimport enLocale from \"../locales/en\";\nimport frLocale from \"../locales/fr\";\nimport deLocale from \"../locales/de\";\n\nexport class AppLocalesConfig implements LocalesConfig {\n    defaultLocale: Locale;\n    locales?: Locale[];\n    constructor(){\n        this.locales = [\n            { name: \"en\", display: \"msg#locale.en\", data: enLocale},\n            { name: \"fr\", display: \"msg#locale.fr\", data: frLocale},\n            { name: \"de\", display: \"msg#locale.de\", data: deLocale},\n        ];\n        this.defaultLocale = this.locales[0];\n    }\n}\n\n\n// Screen size breakpoints (consistent with Bootstrap custom breakpoints in app.scss)\nexport const breakpoints = {\n    xl: \"(min-width: 1650px)\",\n    lg: \"(min-width: 1400px) and (max-width: 1649.98px)\",\n    md: \"(min-width: 992px) and (max-width: 1399.98px)\",\n    sm: \"(min-width: 576px) and (max-width: 991.98px)\",\n    xs: \"(max-width: 575.98px)\",\n};\n\n\n@NgModule({\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        RouterModule.forRoot(routes),\n        FormsModule,\n        ReactiveFormsModule,\n\n        WebServicesModule.forRoot(startConfig),\n        IntlModule.forRoot(AppLocalesConfig),\n        LoginModule,\n        ModalModule,\n\n        BsSearchModule.forRoot(searchOptions),\n        BsAutocompleteModule,\n        BsNotificationModule,\n        BsFacetModule,\n        BsActionModule,\n        BsModalModule,\n        BsBasketsModule,\n        BsAlertsModule,\n        BsSavedQueriesModule,\n        UtilsModule,\n        BsLabelsModule,\n        BsUserSettingsModule,\n        ResultModule,\n        BsFeedbackModule,\n        BsPreviewModule,\n        MetadataModule,\n        BsSelectionModule,\n        BsAdvancedModule\n    ],\n    declarations: [\n        AppComponent,\n        HomeComponent,\n        SearchComponent,\n        PreviewComponent,\n        SearchFormComponent,\n        AutocompleteExtended\n    ],\n    providers: [\n        // Provides an APP_INITIALIZER which will fetch application configuration information from the Sinequa\n        // server automatically at startup using the application name specified in the URL (app[-debug]/<app-name>).\n        // This allows an application to avoid hard-coding parameters in the StartConfig but requires that the application\n        // be served from the an app[-debug]/<app name> URL.\n        {provide: APP_INITIALIZER, useFactory: StartConfigInitializer, deps: [StartConfigWebService], multi: true},\n\n        // Provides the Angular LocationStrategy to be used for reading route state from the browser's URL. Currently\n        // only the HashLocationStrategy is supported by Sinequa.\n        {provide: LocationStrategy, useClass: HashLocationStrategy},\n\n        // Provides an HttpInterceptor to handle user login. The LoginInterceptor handles HTTP 401 responses\n        // to Sinequa web service requests and initiates the login process.\n        {provide: HTTP_INTERCEPTORS, useClass: LoginInterceptor, multi: true},\n\n        // Provides an HttpInterceptor that offers a centralized location through which all client-side\n        // audit records pass. An application can replace AuditInterceptor with a subclass that overrides\n        // the updateAuditRecord method to add custom audit information to the records.\n        {provide: HTTP_INTERCEPTORS, useClass: AuditInterceptor, multi: true},\n\n        // Provides an HttpInterceptor that automatically processes any notifications specified in the $notifications\n        // member of the response body to any Sinequa web service requests.\n        {provide: HTTP_INTERCEPTORS, useClass: NotificationsInterceptor, multi: true},\n\n        {provide: SCREEN_SIZE_RULES, useValue: breakpoints}\n    ],\n    bootstrap: [\n        AppComponent\n    ]\n})\nexport class AppModule {\n}","import {Injectable, Inject} from \"@angular/core\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {flatMap} from \"rxjs/operators\";\nimport {PopupService} from \"ng2-ui-auth\";\nimport {START_CONFIG, StartConfig} from \"@sinequa/core/web-services\";\nimport {Utils} from \"@sinequa/core/base\";\n\n/**\n * Override ng2-ui-auth's popup handling as it doesn't work with SAML + IE11 because\n * of a double redirection.\n * The initial request is to Sinequa which redirects to the authentication provider.\n * On successful authentication, the authentication provider redirects back\n * to Sinequa to perform the login.\n * In IE the initial redirection causes the popup window to be reported as \"closed\"\n * which breaks the process.\n * So, override ng2-ui-auth's PopupService and do the inital request to get the\n * redirect url outside of the popup\n */\n@Injectable({\n    providedIn: \"root\"\n})\nexport class AuthenticationPopupService extends PopupService {\n    constructor(\n        @Inject(START_CONFIG) protected startConfig: StartConfig,\n        protected httpClient: HttpClient) {\n        super();\n    }\n\n    open(url: string, options: any/*IOauth2Options | IOauth1Options*/, cordova: boolean | undefined): Observable<Window> {\n        if (Utils.startsWith(url, this.startConfig.apiPath!)) {\n            return this.httpClient.get<{redirectUrl: string}>(url, {\n                params: Utils.makeHttpParams({\n                    noUserOverride: true,\n                    noAutoAuthentication: true,\n                    tokenInCookie: true,\n                    loginInPopup: true\n                })\n            }).pipe(flatMap((ret) => {\n                return super.open(ret.redirectUrl, options, cordova);\n            }));\n        }\n        return super.open(url, options, cordova);\n    }\n}\n","import {Pipe, ChangeDetectorRef} from \"@angular/core\";\nimport {AbstractIntlPipe, IntlService} from \"@sinequa/core/intl\";\n\n@Pipe({name: \"sqDate\", pure: false})\nexport class DatePipe extends AbstractIntlPipe {\n    constructor(\n        intlService: IntlService,\n        changeDetectorRef: ChangeDetectorRef) {\n        super(intlService, changeDetectorRef);\n    }\n\n    updateValue(key: number | Date, params: Intl.DateTimeFormatOptions): void {\n        super.updateValue(key, params);\n        this.value = this.intlService.formatDate(key, params);\n    }\n}","export default {\r\n    \"clipboard\": {\r\n        \"success\": \"{data} copié dans le presse-papiers\",\r\n        \"error\": \"Erreur du presse-papiers\"\r\n    }\r\n};\r\n","import { Component, ContentChild, TemplateRef, Input, Output, EventEmitter } from \"@angular/core\";\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\nimport { Record } from \"@sinequa/core/web-services\";\nimport { SearchService } from '@sinequa/components/search';\nimport { SelectionService, SelectionItem } from '../../selection.service';\n\n@Component({\n    selector: \"sq-selection-arranger\",\n    templateUrl: \"./selection-arranger.component.html\",\n    styleUrls: [\"./selection-arranger.component.scss\"]\n})\nexport class BsSelectionArranger {\n\n    /**\n     * If a list of records is supplied it is used to display and rearrange the list of records.\n     * If this list is not supplied, the SelectionService list of items is used instead.\n     */\n    @Input() records?: Record[];\n\n    /**\n     * A template must be passed by transclusion to display each record in the selection\n     */\n    @ContentChild(TemplateRef, {static: false}) recordTpl: TemplateRef<any>;\n\n    /**\n     * Triggers event when the user moves or removes a record in the list.\n     */\n    @Output() change = new EventEmitter<SelectionItem[]>();\n\n    constructor(\n        public searchService: SearchService,\n        public selectionService: SelectionService\n    ) {\n    }\n\n    getRecords(): SelectionItem[] {\n        return this.records || this.selectionService.getSelectedItems();\n    }\n\n    dropRecord(event: CdkDragDrop<string[]>) {\n        if (event.isPointerOverContainer) { //https://material.angular.io/cdk/drag-drop/api#CdkDragExit\n            if(this.records) {\n                moveItemInArray(this.records, event.previousIndex, event.currentIndex); // Reorder the items when item dragged inside the drop zone\n            }\n            else {\n                const record = this.selectionService.getSelectedItems()[event.previousIndex];\n                this.selectionService.moveSelectedRecord(record as Record, event.currentIndex);\n            }\n        }\n        else {\n            if(this.records) {\n                this.records.splice(event.previousIndex, 1);\n            }\n            else {\n                const record = this.selectionService.getSelectedItems()[event.previousIndex];\n                this.selectionService.toggleSelectedRecords(record as Record, \"selection-arranger\");\n            }\n        }\n        this.change.next(this.getRecords());\n    }\n\n    removeRecord(record: Record) {\n        if(this.records) {\n            this.records.splice(this.records.indexOf(record), 1);\n        }\n        else {\n            this.selectionService.toggleSelectedRecords(record, \"selection-arranger\");\n        }\n        this.change.next(this.getRecords());\n    }\n}","<div cdkDropList  (cdkDropListDropped)=\"dropRecord($event)\">\n    <div class=\"card\" *ngFor=\"let record of getRecords(); let i=index\" cdkDrag>\n        <div class=\"record-placeholder\" *cdkDragPlaceholder></div>\n        <ng-container *ngTemplateOutlet=\"recordTpl; context:{$implicit: record, index: i}\"></ng-container>\n        <i class=\"position-absolute fas fa-times record-close\" (click)=\"removeRecord(record)\"></i>\n    </div>\n</div>","export * from \"./bootstrap/index\";\nexport * from \"./autocomplete.directive\";\nexport * from \"./autocomplete-field-search.directive\";\nexport * from \"./suggest.service\";","export * from \"./preview.module\";\nexport * from \"./preview.service\";\nexport * from \"./preview-document\";\nexport * from \"./preview-document-iframe.component\";\nexport * from \"./preview-tooltip.component\";\nexport * from \"./bootstrap/index\";\nexport * from \"./messages/index\";","export default {\n    \"preview\": {\n        \"noDocumentDataErrorPopupTitle\": \"Error loading document's data\",\n        \"highlightsTitle\": \"Highlights\",\n        \"noEntityToHighlight\": \"No highlighted entity in document\",\n        \"termXLabel\": \"Search term {index, number}\",\n        \"otherTerms\": \"Other terms\",\n        \"previousDocument\": \"Previous\",\n        \"nextDocument\": \"Next\",\n        \"originalDocument\": \"Original document\",\n        \"selectedHighlight\": \"Selected highlight\",\n        \"noSelectedHighlight\": \"No highlight selected\",\n        \"firstHighlightButtonAltText\": \"First\",\n        \"previousHighlightButtonAltText\": \"Previous\",\n        \"nextHighlightButtonAltText\": \"Next\",\n        \"relevanceSortHighlightButtonText\": \"Relevance\",\n        \"textOrderSortHighlightButtonText\": \"Text order\",\n        \"lastHighlightButtonAltText\": \"Last\",\n        \"highlightFilters\": {\n            \"title\": \"Filters\",\n            \"keepAll\": \"All\",\n            \"keepNone\": \"None\",\n            \"keepAllInCategory\": \"All\",\n            \"keepNoneInCategory\": \"None\"\n        },\n        \"documentPropertiesTitle\": \"Details\",\n        \"similarDocumentsTitle\": \"Similar documents\",\n        \"showAll\": \"Show all values\",\n        \"sortAlphabetically\": \"Sort alphabetically\",\n        \"sortFrequency\": \"Sort by frequency\",\n        \"loading\": \"Loading...\",\n        \"noextract\": \"No extract\",\n        \"search\": \"Search\",\n        \"gotopage\": \"Go to page\",\n        \"page\": \"Page {page}\",\n        \"current\": \"current\"\n    },\n    \"facet\": {\n        \"preview\": {\n            \"closeTitle\": \"Close\",\n            \"expandTitle\": \"Maximize\",\n            \"minimize\": \"Zoom out\",\n            \"maximize\": \"Zoom in\",\n            \"toggleExtracts\": \"Toggle relevant extracts highlighting\",\n            \"toggleEntities\": \"Toggle entities highlighting\"\n        }\n    }\n};\n","import {Component, OnInit, OnDestroy, Inject} from \"@angular/core\";\nimport {FormBuilder, FormGroup, FormControl, Validators} from \"@angular/forms\";\nimport {Subscription} from \"rxjs\";\nimport {MODAL_MODEL, ModalResult, ModalRef} from \"@sinequa/core/modal\";\nimport {Credentials} from \"./authentication.service\";\nimport {Utils} from \"@sinequa/core/base\";\n\n/**\n * A basic login component that request a user name and password. It is designed to work with\n * [LoginService.getCredentials]{@link LoginService#getCredentials} and can be set using the\n * {@link MODAL_LOGIN} injection token\n */\n@Component({\n    selector: \"sq-core-login\",\n    template: `\n        <form novalidate [formGroup]=\"form\" style=\"border: solid;padding: 16px;background-color: white;\"\n            cdkTrapFocus [cdkTrapFocusAutoCapture]=\"true\">\n            <h3 style=\"margin-top: 0;\">{{'msg#modal.login.title' | sqMessage}}</h3>\n            <input placeholder=\"{{'msg#modal.login.userName' | sqMessage}}\" formControlName=\"userName\">\n            <ng-container *ngIf=\"showError(userNameControl)\">\n                <br>\n                <span style=\"color: red;\">{{form.get(\"userName\")?.errors | sqValidationError}}</span>\n            </ng-container>\n            <div style=\"margin-bottom: 8px;\"></div>\n            <input type=\"password\" placeholder=\"{{'msg#modal.login.password' | sqMessage}}\" formControlName=\"password\">\n            <ng-container *ngIf=\"showError(passwordControl)\">\n                <br>\n                <span style=\"color: red;\">{{form.get(\"password\")?.errors | sqValidationError}}</span>\n            </ng-container>\n            <hr>\n            <button type=\"submit\" (click)=\"ok()\">{{'msg#modal.buttons.ok' | sqMessage}}</button>\n            <button type=\"button\" (click)=\"cancel()\">{{'msg#modal.buttons.cancel' | sqMessage}}</button>\n        </form>\n    `\n})\nexport class Login implements OnInit, OnDestroy {\n    userNameControl: FormControl;\n    passwordControl: FormControl;\n    form: FormGroup;\n    formChanges: Subscription;\n\n    constructor(\n        @Inject(MODAL_MODEL) protected model: Credentials,\n        protected modalRef: ModalRef,\n        protected formBuilder: FormBuilder) {\n    }\n\n    ngOnInit() {\n        this.userNameControl = new FormControl(this.model.userName, Validators.required);\n        this.passwordControl = new FormControl(this.model.password, Validators.required);\n        this.form = this.formBuilder.group({\n            userName: this.userNameControl,\n            password: this.passwordControl\n        });\n        this.formChanges = Utils.subscribe(this.form.valueChanges,\n            (value) => {\n                this.model.userName = this.userNameControl.value;\n                this.model.password = this.passwordControl.value;\n            });\n    }\n\n    ngOnDestroy() {\n        this.formChanges.unsubscribe();\n    }\n\n    showError(control: FormControl): boolean {\n        return control.invalid && (control.dirty || this.modalRef.submitted);\n    }\n\n    ok() {\n        if (!this.form.valid) {\n            return;\n        }\n        this.modalRef.close(ModalResult.OK);\n    }\n\n    cancel() {\n        this.modalRef.close(ModalResult.Cancel);\n    }\n}\n","export default {\n    \"feedback\":{\n        \"text\" : \"\",\n        \"title\" : \"Envoyer un feedback à l'admin Sinequa\",\n        \"content\" : {\n            \"text\" : \"Contenu\",\n            \"title\" : \"Proposer d'ajouter du contenu ou d'améliorer le contenu actuel\"\n        },\n        \"ui\" : {\n            \"text\" : \"Interface Utilisateur\",\n            \"title\" : \"Proposer des améliorations d'interfaces utilisateur\"\n        },\n        \"lang\" : {\n            \"text\" : \"Langage\",\n            \"title\" : \"Proposer des améliorations linguistiques, comme des nouveaux mots et synonymes à ajouter aux dictionaires (cela affecte directement la pertinence du moteur de recherche)\"\n        },\n        \"other\" : {\n            \"text\" : \"Autre\",\n            \"title\" : \"Proposer des fonctionnalités supplémentaires et autres idées d'améliorations\"\n        },\n        \"thankyou\": \"Merci pour votre commentaire !\",\n        \"quality\" : {\n            \"label\" : \"Qualité du document:\"\n        },\n        \"relevance\" : {\n            \"label\" : \"Pertinence du document:\"\n        },\n        \"labels\" : {\n            \"public\" : {\n                \"label\" : \"Tags:\"\n            },\n            \"private\" : {\n                \"label\" : \"Tags privés:\"\n            }\n        }\n    },\n};\n","import {Component, OnInit, OnDestroy, ChangeDetectorRef} from \"@angular/core\";\nimport {Subscription} from \"rxjs\";\nimport {NotificationsService} from \"@sinequa/core/notification\";\nimport {Action} from \"@sinequa/components/action\";\n\n\n@Component({\n    selector: \"sq-notifications-manager\",\n    templateUrl: \"./notifications-manager.html\"\n})\nexport class BsNotificationsManager implements OnInit, OnDestroy {\n    private subscription: Subscription | undefined;\n    action: Action;\n    randomAction: Action;\n\n    constructor(\n        private notificationsService: NotificationsService,\n        private changeDetectorRef: ChangeDetectorRef) {\n    }\n\n    ngOnInit() {\n        this.buildAction();\n        this.unbind();\n        this.bind();\n    }\n\n    bind() {\n        this.subscription = this.notificationsService.notificationsStream.subscribe(\n            notification => {\n                this.action.update();\n        });\n    }\n\n    unbind() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n            this.subscription = undefined;\n        }\n    }\n\n    ngOnDestroy() {\n        this.unbind();\n    }\n\n    buildAction() {\n        this.action = new Action({\n            icon: \"fas fa-shield-alt\",\n            title: \"msg#notification.title\",\n            hidden: true,\n            children: [\n                new Action({\n                    text: \"msg#notification.showNotifications\",\n                    action: (item, $event) => {\n                        this.notificationsService.showNotifications();\n                    },\n                    updater: (item) => {\n                        item.hidden = this.notificationsService.allNotificationsShowing;\n                        this.changeDetectorRef.markForCheck();\n                    }\n                }),\n                new Action({\n                    text: \"msg#notification.hideNotifications\",\n                    action: (item, $event) => {\n                        this.notificationsService.hideNotifications();\n                    },\n                    updater: (item) => {\n                        item.hidden = this.notificationsService.allNotificationsHidden;\n                        this.changeDetectorRef.markForCheck();\n                    }\n                }),\n                new Action({\n                    separator: true\n                }),\n                new Action({\n                    text: \"msg#notification.clearNotifications\",\n                    action: (item, $event) => {\n                        this.notificationsService.deleteAllNotifications();\n                    }\n                })\n            ]\n        });\n    }\n}","<div class=\"btn-toolbar dropup\">\n    <div class=\"btn-group\" [sq-action-buttons]=\"{items: [action]}\"></div>\n</div>","import {Directive, ElementRef, Output, EventEmitter, AfterViewInit, OnDestroy, NgZone} from \"@angular/core\";\nimport {UIService} from \"../ui.service\";\n\n@Directive({\n    selector: \"[sqResize]\"\n})\nexport class ResizeEventDirective implements AfterViewInit, OnDestroy {\n    @Output(\"sqResize\") resizeEvent = new EventEmitter<DOMRectReadOnly>();\n    // NB we don't use one of the ResizeObserver polyfills as they rely on polling\n    // for changes which continuously consumes cpu time...\n    protected resizeObserver: /*ResizeObserver*/any;\n\n    constructor(\n        protected elementRef: ElementRef,\n        protected zone: NgZone,\n        protected uiService: UIService\n    ) {\n    }\n\n    protected raiseEvent = () => {\n        const contentRect = this.elementRef.nativeElement.getBoundingClientRect();\n        this.resizeEvent.emit(contentRect);\n    }\n\n    ngAfterViewInit() {\n        if ((window as any).ResizeObserver) {\n            this.resizeObserver = new (window as any).ResizeObserver((entries) => {\n                this.zone.run(() => {\n                    const contentRect = (entries?.length === 1 && entries[0].contentRect);\n                    this.resizeEvent.emit(contentRect);\n                });\n            });\n            this.resizeObserver.observe(this.elementRef.nativeElement);\n        }\n        else {\n            this.uiService.addElementResizeListener(this.elementRef.nativeElement, this.raiseEvent);\n        }\n    }\n\n    ngOnDestroy() {\n        if ((window as any).ResizeObserver) {\n            this.resizeObserver.unobserve(this.elementRef.nativeElement);\n        }\n        else {\n            this.uiService.removeElementResizeListener(this.elementRef.nativeElement, this.raiseEvent);\n        }\n    }\n}\n","import {Component, OnInit, OnDestroy, Inject} from \"@angular/core\";\nimport {FormBuilder, FormGroup, FormControl, Validators} from \"@angular/forms\";\nimport {Subscription} from \"rxjs\";\nimport {ModalRef, MODAL_MODEL, ModalButton, ModalResult} from \"@sinequa/core/modal\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {AlertsService, Alert} from \"../../alerts.service\";\nimport {SearchService} from \"@sinequa/components/search\";\nimport {KeyValue} from \"@angular/common\";\n\n@Component({\n    selector: \"sq-edit-alert\",\n    templateUrl: \"./edit-alert.html\",\n    styleUrls: [\"./edit-alert.scss\"]\n})\nexport class BsEditAlert implements OnInit, OnDestroy {\n    form: FormGroup;\n    formChanges: Subscription;\n    buttons: ModalButton[];\n    frequencies: Alert.Frequency[];\n    frequency: typeof Alert.Frequency;\n    canUpdateQuery: boolean;\n    updateQuery: boolean;\n    weekdays = {\n        'monday': Alert.Days.Monday, \n        'tuesday': Alert.Days.Tuesday,\n        'wednesday': Alert.Days.Wednesday,\n        'thursday': Alert.Days.Thursday,\n        'friday': Alert.Days.Friday,\n        'saturday': Alert.Days.Saturday,\n        'sunday': Alert.Days.Sunday\n    };\n    \n    showDirtyMessage = false;\n    \n    // Preserve original property order\n    originalOrder = (a: KeyValue<string, Alert.Days>, b: KeyValue<string, Alert.Days>): number => 0\n    \n    private alertDaysControl: FormControl;\n    private alertNameControl: FormControl;\n    private alertFrequencyControl: FormControl;\n    private alertTimesControl: FormControl;\n    private alertActiveControl: FormControl;\n    private updateQueryControl: FormControl;\n\n    constructor(\n        @Inject(MODAL_MODEL) public model: { alert: Alert, searchRoute?: string },\n        private formBuilder: FormBuilder,\n        private searchService: SearchService,\n        private alertsService: AlertsService,\n        private modalRef: ModalRef) {\n        this.frequencies = [\n            Alert.Frequency.Daily,\n            Alert.Frequency.Hourly,\n            Alert.Frequency.Immediate,\n        ];\n        this.frequency = Alert.Frequency;\n    }\n\n    get alert() {\n        return this.model.alert;\n    }\n\n    ngOnInit() {\n        if (!this.alert.days) {\n            this.alert.days = Alert.Days.None;\n        }\n        this.canUpdateQuery = (!!this.alertsService.alert(this.alert.name)) &&\n            !!this.searchService.results && !!this.searchService.results.records;\n\n        this.alertDaysControl = new FormControl(this.alert.days);\n        this.alertNameControl = new FormControl(this.alert.name, Validators.required);\n        this.alertFrequencyControl = new FormControl(this.alert.frequency);\n        this.alertTimesControl = new FormControl(this.alert.times); // TODO validator\n        this.alertActiveControl = new FormControl(this.alert.active);\n        this.updateQueryControl = new FormControl(this.updateQuery);\n        this.form = this.formBuilder.group({\n            alertName: this.alertNameControl,\n            alertFrequency: this.alertFrequencyControl,\n            alertTimes: this.alertTimesControl,\n            alertActive: this.alertActiveControl,\n            updateQuery: this.updateQueryControl\n        });\n        this.formChanges = Utils.subscribe(this.form.valueChanges,\n            (value) => {\n                this.alert.name = this.alertNameControl.value;\n                this.alert.frequency = this.alertFrequencyControl.value;\n                this.alert.times = this.alertTimesControl.value;\n                this.alert.active = this.alertActiveControl.value;\n                this.alert.days = this.alertDaysControl.value;\n                this.updateQuery = this.updateQueryControl.value;\n            }\n        );\n        \n        this.createButtons();\n    }\n\n    private createButtons() {\n        this.buttons = [\n            new ModalButton({\n                text: \"msg#editAlert.runQuery\",\n                result: ModalResult.Custom,\n                action: (button) => {\n                    this.runQuery();\n                    this.modalRef.close(ModalResult.Cancel); // dismiss the dialog too (?)\n                },\n                visible: !!this.alertsService.alert(this.alert.name)\n            }),\n            new ModalButton({\n                result: ModalResult.OK,\n                primary: true,\n                validation: this.form,\n                action: (button) => {\n                    if (this.updateQuery) {\n                        this.alertsService.setAlertToCurrentQuery(this.alert);\n                    }\n                }\n            }),\n            new ModalButton({\n                result: ModalResult.Cancel,\n                action: (button) => {\n                    if (this.form.dirty) {\n                        button.result = ModalResult.Custom;\n                        this.showDirtyMessage = true;\n                        this.createYesNoButtons();\n                    }\n                }\n            })\n        ];\n    }\n    private createYesNoButtons() {\n        this.buttons = [\n            new ModalButton({\n                result: ModalResult.Yes,\n                primary: true,\n            }),\n            new ModalButton({\n                result: ModalResult.No,\n                action: (button) => {\n                    button.result = ModalResult.Custom;\n                    this.showDirtyMessage = false;\n                    this.createButtons();\n                }\n            })\n        ];\n    }\n    ngOnDestroy() {\n        this.formChanges.unsubscribe();\n    }\n\n    dayChecked(day: Alert.Days): boolean {\n        return (this.alert.days & day) !== 0;\n    }\n\n    dayChange(event: UIEvent, day: Alert.Days) {\n        const input = event.target as HTMLInputElement;\n        if (input.checked) {\n            this.alertDaysControl.setValue(this.alert.days |= day);\n            // this.alert.days |= day;\n        }\n        else {\n            this.alertDaysControl.setValue(this.alert.days &= ~day);\n            // this.alert.days &= ~day;\n        }\n        this.form.markAsDirty();\n    }\n\n    runQuery() {\n        this.alertsService.searchAlert(this.alert, this.model.searchRoute);\n    }\n}","<form name=\"editAlert\" novalidate [formGroup]=\"form\">\n    <sq-modal [title]=\"'msg#editAlert.title'\" [buttons]=\"buttons\">\n        <div class=\"form-group sq-form-group\">\n            <label for=\"alertName\">{{'msg#editAlert.name' | sqMessage}}</label>\n            <input [sqValidation]=\"form\" type=\"text\" class=\"form-control\" id=\"alertName\" formControlName=\"alertName\" autocomplete=\"off\" spellcheck=\"off\" sqAutofocus>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"alertFrequency\">{{'msg#editAlert.frequency' | sqMessage}}</label>\n            <select class=\"form-control custom-select\" id=\"alertFrequency\" formControlName=\"alertFrequency\">\n                <option *ngFor=\"let frequencyValue of frequencies\" [value]=\"frequencyValue\">{{frequency[frequencyValue] | sqMessage}}</option>\n            </select>\n        </div>\n        <div class=\"form-group\">\n            <label>{{'msg#editAlert.days' | sqMessage}}</label>\n            <div class=\"weekdays-grid\">\n                <label *ngFor=\"let day of weekdays | keyvalue: originalOrder\" class=\"custom-control custom-control-inline custom-checkbox\">\n                    <input class=\"custom-control-input\" type=\"checkbox\" [checked]=\"dayChecked(day.value)\" (change)=\"dayChange($event, day.value)\">\n                    <span class=\"custom-control-label user-select-none cursor-pointer\">{{ 'msg#editAlert.'+day.key | sqMessage}}</span>\n                </label>\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"alertTimes\">{{'msg#editAlert.times' | sqMessage}}</label>\n            <input type=\"text\" class=\"form-control\" id=\"alertTimes\" formControlName=\"alertTimes\" autocomplete=\"off\" spellcheck=\"off\">\n        </div>\n        <div class=\"form-group\">\n            <label class=\"custom-control custom-control-inline custom-checkbox\">\n                <input class=\"custom-control-input\" type=\"checkbox\" id=\"alertActive\" formControlName=\"alertActive\">\n                <span class=\"custom-control-label user-select-none cursor-pointer\">{{'msg#editAlert.active' | sqMessage}}</span>\n            </label>\n            <label *ngIf=\"canUpdateQuery\" class=\"custom-control custom-control-inline custom-checkbox\">\n                <input class=\"custom-control-input\" type=\"checkbox\" id=\"updateQuery\" formControlName=\"updateQuery\">\n                <span class=\"custom-control-label user-select-none cursor-pointer\">{{'msg#editAlert.updateQuery' | sqMessage}}</span>\n            </label>\n        </div>\n        <sq-alert-message footer [message]=\"'msg#editAlert.lossDataMessage' | sqMessage\" *ngIf=\"showDirtyMessage\"></sq-alert-message>\n    </sq-modal>\n</form>","import {Injectable, Inject} from \"@angular/core\";\nimport {Observable} from \"rxjs\";\nimport {map} from \"rxjs/operators\";\nimport {SqHttpClient} from \"./http-client\";\nimport {HttpService} from \"./http.service\";\nimport {START_CONFIG, StartConfig} from \"./start-config.web.service\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {IntlService} from \"@sinequa/core/intl\";\nimport {IQuery} from \"./query/query\";\nimport {AuditEventType} from \"./audit.web.service\";\n\n/**\n * Describes the object returned by the list action of the labels web service\n */\nexport interface Labels {\n    labels: string[];\n}\n\n/**\n * Describes the object returned by the getUserRights action of the labels web service\n */\nexport interface LabelsRights {\n    canManagePublicLabels: boolean;\n    canEditPublicLabels: boolean;\n}\n\n/**\n * A service for calling the labels web service\n */\n@Injectable({\n    providedIn: \"root\"\n})\nexport class LabelsWebService extends HttpService {\n\n    constructor(\n        @Inject(START_CONFIG) startConfig: StartConfig,\n        private httpClient: SqHttpClient,\n        private intlService: IntlService) {\n        super(startConfig);\n    }\n\n    /**\n     * Calls the list action of the labels web service\n     *\n     * @param prefix The string that the returned labels should begin with\n     * @param _public Determines whether public or private labels should be returned\n     */\n    list(\n        prefix: string,\n        _public: boolean): Observable<Labels> {\n        const observable = this.httpClient.get<Labels>(this.makeUrl(\"labels\"), {\n            params: this.makeParams({\n                app: this.appName,\n                action: \"list\",\n                q: prefix,\n                public: _public,\n                locale: this.intlService.currentLocale.name,\n                localize: false\n            })\n        });\n        Utils.subscribe(observable,\n            (response) => {\n                return response;\n            },\n            (error) => {\n                console.log(\"labelsService.list failure - error: \", error);\n            });\n        return observable;\n    }\n\n    /**\n     * A wrapper around the list method. The matching labels are returned as an array of strings\n     *\n     * @param prefix The string that the returned labels should begin with\n     * @param _public Determines whether public or private labels should be returned\n     */\n    array(\n        prefix: string,\n        _public: boolean): Observable<string[]> {\n        return this.list(prefix, _public)\n            .pipe(map((value) => {\n                return value.labels;\n            }));\n    }\n\n    /**\n     * Calls the getUserRights action of the labels web service\n     */\n\n    getUserRights(): Observable<LabelsRights> {\n        const observable = this.httpClient.get<LabelsRights>(\n            this.makeUrl('labels'),\n            {\n                params: this.makeParams({\n                    app: this.appName,\n                    action: 'getUserRights'\n                })\n            }\n        );\n        Utils.subscribe(\n            observable,\n            response => response,\n            error => console.log(\"labelsService.getUserRights failure - error: \", error)\n        );\n        return observable;\n    }\n\n    /**\n     * Add labels to a set of documents\n     *\n     * @param labels The labels to add\n     * @param ids The ids of the documents to which the labels should be added\n     * @param _public Determines whether the labels are public or private\n     */\n    add(labels: string[],\n        ids: string[],\n        _public: boolean): Observable<void> {\n        const observable = this.httpClient.post<void>(this.makeUrl(\"labels\"), {\n            app: this.appName,\n            action: \"add\",\n            labels: labels,\n            ids: ids,\n            public: _public,\n            $auditRecord: {\n                auditEvents: [\n                    {\n                        type: AuditEventType.Label_AddDoc,\n                        detail: {\n                            public: _public,\n                            label: !!labels ? labels.toString() : null,\n                            doccount: !!ids ? ids.length : 0\n                        }\n                    }\n                ],\n                mlAuditEvents: [\n                    {\n                        actionType: \"addToLabel\",\n                        documentIds: ids\n                    }\n                ]\n            }\n        });\n        Utils.subscribe(observable,\n            (response) => {\n                return response;\n            },\n            (error) => {\n                console.log(\"labelsService.add failure - error: \", error);\n            });\n        return observable;\n    }\n\n    /**\n     * Removes labels from a set of documents\n     *\n     * @param labels The labels to remove\n     * @param ids The ids of the documents from which the labels should be removed\n     * @param _public Determines whether the labels are public or private\n     */\n    remove(labels: string[],\n        ids: string[],\n        _public: boolean): Observable<void> {\n        const observable = this.httpClient.post<void>(this.makeUrl(\"labels\"), {\n            app: this.appName,\n            action: \"remove\",\n            labels: labels,\n            ids: ids,\n            public: _public,\n            $auditRecord: {\n                auditEvents: [\n                    {\n                        type: AuditEventType.Label_RemoveDoc,\n                        detail: {\n                            public: _public,\n                            label: !!labels ? labels.toString() : null,\n                            doccount: !!ids ? ids.length : 0\n                        }\n                    }\n                ],\n                mlAuditEvents: [\n                    {\n                        actionType: \"removeFromLabel\",\n                        documentIds: ids\n                    }\n                ]\n            }\n        });\n        Utils.subscribe(observable,\n            (response) => {\n                return response;\n            },\n            (error) => {\n                console.log(\"labelsService.remove failure - error: \", error);\n            });\n        return observable;\n    }\n\n    /**\n     * Renames a set of labels\n     *\n     * @param labels The labels to rename\n     * @param newLabel The new name for the labels\n     * @param _public Determines whether the labels are public or private\n     */\n    rename(labels: string[],\n        newLabel: string,\n        _public: boolean): Observable<void> {\n        const observable = this.httpClient.post<void>(this.makeUrl(\"labels\"), {\n            app: this.appName,\n            action: \"rename\",\n            labels: labels,\n            newLabel: newLabel,\n            public: _public,\n            auditEvents: {\n                type: AuditEventType.Label_Rename,\n                detail: {\n                    public: _public,\n                    oldlabel: !!labels ? labels.toString() : null,\n                    label: newLabel\n                }\n            }\n        });\n        Utils.subscribe(observable,\n            (response) => {\n                return response;\n            },\n            (error) => {\n                console.log(\"labelsService.rename failure - error: \", error);\n            });\n        return observable;\n    }\n\n    /**\n     * Deletes a set of labels\n     *\n     * @param labels The labels to be deleted\n     * @param _public Determines whether the labels are public or private\n     */\n    delete(labels: string[],\n        _public: boolean): Observable<void> {\n        const observable = this.httpClient.post<void>(this.makeUrl(\"labels\"), {\n            app: this.appName,\n            action: \"delete\",\n            labels: labels,\n            public: _public,\n            auditEvents: {\n                type: AuditEventType.Label_Delete,\n                detail: {\n                    public: _public,\n                    label: !!labels ? labels.toString() : null\n                }\n            }\n        });\n        Utils.subscribe(observable,\n            (response) => {\n                return response;\n            },\n            (error) => {\n                console.log(\"labelsService.delete failure - error: \", error);\n            });\n        return observable;\n    }\n\n    /**\n     * Adds labels to the documents identified by the passed query\n     *\n     * @param labels The labels to add\n     * @param query The query to produce the documents to which the labels should be added\n     * @param _public Determines whether the labels are public or private\n     */\n    bulkAdd(labels: string[],\n        query: IQuery,\n        _public: boolean): Observable<void> {\n        const observable = this.httpClient.post<void>(this.makeUrl(\"labels\"), {\n            app: this.appName,\n            action: \"bulkAdd\",\n            labels: labels,\n            query: query,\n            public: _public,\n            auditEvents: {\n                type: AuditEventType.Label_Add,\n                detail: {\n                    public: _public,\n                    label: !!labels ? labels.toString() : null,\n                    query: query != null ? query.name : null\n                }\n            }\n        });\n        Utils.subscribe(observable,\n            (response) => {\n                return response;\n            },\n            (error) => {\n                console.log(\"labelsService.bulkAdd failure - error: \", error);\n            });\n        return observable;\n    }\n\n    /**\n     * Removes labels from the documents identified by the passed query\n     *\n     * @param labels The labels to remove\n     * @param query The query to produce the documents from which the labels should be removed\n     * @param _public Determines whether the labels are public or private\n     */\n    bulkRemove(labels: string[],\n        query: IQuery,\n        _public: boolean): Observable<void> {\n        const observable = this.httpClient.post<void>(this.makeUrl(\"labels\"), {\n            app: this.appName,\n            action: \"bulkRemove\",\n            labels: labels,\n            query: query,\n            public: _public,\n            auditEvents: {\n                type: AuditEventType.Label_Delete,\n                detail: {\n                    public: _public,\n                    label: !!labels ? labels.toString() : null,\n                    query: query != null ? query.name : null\n                }\n            }\n        });\n        Utils.subscribe(observable,\n            (response) => {\n                return response;\n            },\n            (error) => {\n                console.log(\"labelsService.bulkRemove failure - error: \", error);\n            });\n        return observable;\n    }\n}\n","import { Component, OnChanges, Input, Output, ViewChild, EventEmitter, ChangeDetectorRef } from '@angular/core';\nimport { Results } from '@sinequa/core/web-services';\nimport { AbstractFacet } from '../../abstract-facet';\nimport { Action } from '@sinequa/components/action';\nimport { FacetService } from '../../facet.service';\nimport { Utils } from '@sinequa/core/base';\n\nexport interface FacetConfig {\n  name: string;\n  type: 'list' | 'tree';\n  title: string;\n  icon?: string;\n  aggregation: string;\n  showCount?: boolean;\n  searchable?: boolean;\n  allowExclude?: boolean;\n  allowOr?: boolean;\n  allowAnd?: boolean;\n  displayEmptyDistributionIntervals?: boolean;\n\n  // Parameters set by the component\n  $count?: string;\n  $hasData?: boolean;\n  $hasFiltered?: boolean;\n}\n\n@Component({\n  selector: 'sq-facet-multi',\n  templateUrl: './facet-multi.component.html',\n  styleUrls: ['./facet-multi.component.scss']\n})\nexport class BsFacetMultiComponent extends AbstractFacet implements OnChanges {\n\n  @Input() results: Results;\n  @Input() facets: FacetConfig[];\n  @Input() showCount: boolean = true;\n  @Input() showProgressBar = false;    // will display or not item count as progress bar\n\n  @Output() events = new EventEmitter<FacetConfig>();\n  @ViewChild(\"facet\", {static: false}) public facetComponent: AbstractFacet;\n\n  /**\n   * The facet configuration to open\n   */\n  openedFacet: FacetConfig | undefined;\n\n  /**\n   * Action to switch back from an opened facet to the facet multi view\n   */\n  backAction: Action;\n  clearAllFiltersAction: Action;\n\n  constructor(\n    public facetService: FacetService,\n    private changeDetectorRef: ChangeDetectorRef\n  ) {\n\n    super();\n\n    this.backAction = new Action({\n      name: \"back\",\n      icon: \"fas fa-arrow-left\",\n      title: \"msg#facet.filters.back\",\n      action: () => {\n        this.openedFacet = undefined;\n        this.events.next(undefined);\n        this.changeDetectorRef.detectChanges();\n      }\n    });\n\n    this.clearAllFiltersAction = new Action({\n      icon: \"far fa-minus-square\",\n      title: \"msg#facet.filters.clear\",\n      action: () => {\n        const facetsWithFiltered = this.facets.filter((facet) => facet.$hasFiltered).map(facet => facet.name);\n        this.facetService.clearFiltersSearch(facetsWithFiltered, true);\n      }\n    });\n\n  }\n\n  /**\n   * If a sub-facet is opened, add a Back button and forward\n   * the actions of the facet.\n   */\n  get actions(): Action[] {\n    const actions: Action[] = [];\n    if(this.openedFacet){\n      actions.push(this.backAction);\n    } else {\n      const hasFiltered = this.facets.some(facet => facet.$hasFiltered);\n      if (hasFiltered) actions.push(this.clearAllFiltersAction);\n    }\n    if(this.facetComponent){\n      actions.push(...this.facetActions);\n    }\n    return actions;\n  }\n\n  /**\n   * Return the actions of the child facet\n   */\n  get facetActions(): Action[] {\n    if(this.facetComponent){\n      return this.facetComponent.actions;\n    }\n    return [];\n  }\n\n  /**\n   * Open this sub facet\n   * @param facet\n   */\n  openFacet(facet: FacetConfig){\n    this.openedFacet = facet;\n    this.events.next(facet);\n    this.changeDetectorRef.detectChanges();\n  }\n\n  clearFacetFilters(facet: FacetConfig, e:Event) {\n    e.stopPropagation();\n    this.facetService.clearFiltersSearch(facet.name, true);\n    return false;\n  }\n\n  /**\n   * Return the number of items to display for a given facet\n   * @param facet\n   */\n  private getFacetCount(facet: FacetConfig): string {\n    const agg = this.results.aggregations.find(agg => Utils.eqNC(agg.name, facet.aggregation)); // avoid calling getAggregation() which is costly for trees\n    if (!agg?.items)\n      return \"\";\n    const count = this.facetService.getAggregationCount(facet.aggregation); // configured count (default: 10)\n    const aggItemCounter = (!agg.isDistribution || facet.displayEmptyDistributionIntervals)\n      ? agg.items.length\n      : agg.items.filter(item => item.count > 0).length;\n    return aggItemCounter >= count ? `${count}+` : `${aggItemCounter}`;\n  }\n\n  /**\n   * Return whether a given facet has been used in the current context\n   * @param facet\n   */\n  private hasFiltered(facet: FacetConfig): boolean {\n    return this.facetService.hasFiltered(facet.name);\n  }\n\n  /**\n   * When the results change, actualize count, hasData and hasFiltered\n   * which are displayed in the template.\n   */\n  ngOnChanges() {\n    this.facets.forEach(facet => {\n      facet.$count = this.getFacetCount(facet);\n      facet.$hasData = this.facetService.hasData(facet.aggregation, this.results);\n      facet.$hasFiltered = this.hasFiltered(facet);\n    });\n    this.changeDetectorRef.detectChanges();\n  }\n\n}\n","<div *ngIf=\"!openedFacet\" class=\"list-group list-group-flush\">\n    <div *ngFor=\"let facet of facets\" (click)=\"openFacet(facet)\"\n        class=\"open-facet d-flex flex-row list-group-item border-0 list-group-item-action px-3 py-1 align-items-center\"\n        [ngClass]=\"{'list-group-item-success':facet.$hasFiltered, 'disabled':!facet.$hasData }\">\n        <span class=\"flex-grow-1\">{{ facet.title | sqMessage }}</span>\n        <span class=\"fa-stack icons-group\" sqTooltip=\"{{ 'msg#facet.filters.clear' | sqMessage }}\" (click)=\"clearFacetFilters(facet, $event)\" *ngIf=\"facet.$hasFiltered\">\n            <i class=\"ml-2 far fa-minus-square fa-stack-1x icons icon-hover\"></i>\n            <i class=\"ml-2 far fa-check-square fa-stack-1x icons icon-default\"></i>\n        </span>\n        <span\n            *ngIf=\"showCount\"\n            class=\"mx-2 text-muted small\"\n            title=\"{{ 'msg#facet.filterItemCountTooltip' | sqMessage:{ values: { count: facet.$count } } }}\"\n        >\n            {{ facet.$count | sqNumber }}\n        </span>\n        <i class=\"fas fa-caret-right\"></i>\n    </div>\n</div>\n\n<ng-container *ngIf=\"openedFacet\">\n    <sq-facet-list #facet *ngIf=\"openedFacet.type==='list'\"\n        [name]=\"openedFacet.name\"\n        [results]=\"results\"\n        [aggregation]=\"openedFacet.aggregation\"\n        [showCount]=\"openedFacet.showCount\"\n        [searchable]=\"openedFacet.searchable\"\n        [allowExclude]=\"openedFacet.allowExclude\"\n        [allowOr]=\"openedFacet.allowOr\"\n        [allowAnd]=\"openedFacet.allowAnd\"\n        [displayEmptyDistributionIntervals]=\"openedFacet.displayEmptyDistributionIntervals\"\n        [showProgressBar]=\"showProgressBar\"\n    >\n    </sq-facet-list>\n\n    <sq-facet-tree #facet *ngIf=\"openedFacet.type==='tree'\"\n        [name]=\"openedFacet.name\"\n        [results]=\"results\"\n        [aggregation]=\"openedFacet.aggregation\"\n        [showCount]=\"openedFacet.showCount\"\n        [allowExclude]=\"openedFacet.allowExclude\"\n        [allowOr]=\"openedFacet.allowOr\">\n    </sq-facet-tree>\n</ng-container>\n","import {Injectable, ViewContainerRef, ComponentRef, Type, ComponentFactory, ComponentFactoryResolver, ApplicationRef,\n    Injector, SimpleChanges, SimpleChange, EventEmitter} from \"@angular/core\";\nimport {Subscription} from \"rxjs\";\nimport {Utils, MapOf} from \"@sinequa/core/base\";\n\n/**\n * Describes the options that can be passed to [LoadComponentService.loadComponent]{@link LoadComponentService#loadComponent}\n */\nexport interface LoadComponentOptions {\n    /**\n     * The type of the component to load\n     */\n    component: Type<any>;\n    /**\n     * The initial values for the component's `@Input` decorated properties\n     */\n    inputs?: MapOf<any>;\n    /**\n     * The handlers for the component's `@Output` decorated events\n     */\n    outputs?: MapOf<any>;\n    /**\n     * The index at which to insert the loaded component's host view into the container.\n     * If not specified, appends the new view as the last entry.\n     * See [ViewContainerRef.createComponent]{@link https://angular.io/api/core/ViewContainerRef#createComponent}\n     */\n    index?: number;\n}\n\n/**\n * Describes the object returned by [LoadComponentService.loadComponent]{@link LoadComponentService#loadComponent}\n */\nexport interface LoadedComponent {\n    /**\n     * The loaded component instance\n     */\n    componentRef: ComponentRef<any>;\n    /**\n     * The subscriptions made to the component's output events\n     */\n    subscriptions?: Subscription;\n}\n\n/**\n * This service provides methods to dynamically load and unload an angular component from its type.\n * The component's initial inputs and outputs are respected and the first call to the component's\n * `ngOnChanges` method is made.\n * Changes to the inputs and outputs can be made by calling {@link #bindComponent} which will call\n * the component's `ngOnChanges` method again\n */\n@Injectable({\n    providedIn: \"root\"\n})\nexport class LoadComponentService {\n\n    // A cache of resolved component factories\n    private factories = new Map<Type<any>, ComponentFactory<any>>();\n\n    constructor(\n        private componentFactoryResolver: ComponentFactoryResolver,\n        private applicationRef: ApplicationRef) {\n    }\n\n    private _bindComponent(options: LoadComponentOptions, loadedComponent: LoadedComponent, initialLoad: boolean) {\n        if (!initialLoad) {\n            this.unbindComponent(loadedComponent);\n        }\n        const ngOnChanges: (changes: SimpleChanges) => void = loadedComponent.componentRef.instance.ngOnChanges;\n        let simpleChanges: SimpleChanges | undefined;\n        const makeSimpleChanges = Utils.isFunction(ngOnChanges) && !!options.inputs;\n        if (!!options.inputs) {\n            // Assign inputs and generate SimpleChanges if required\n            Object.keys(options.inputs).forEach(name => {\n                if (makeSimpleChanges) {\n                    const previousValue = initialLoad ? undefined : loadedComponent.componentRef.instance[name];\n                    const currentValue = options.inputs![name];\n                    if (initialLoad || currentValue !== previousValue) {\n                        if (!simpleChanges) {\n                            simpleChanges = {};\n                        }\n                        simpleChanges[name] = new SimpleChange(previousValue, currentValue, initialLoad);\n                    }\n                }\n                loadedComponent.componentRef.instance[name] = options.inputs![name];\n            });\n        }\n        if (!!options.outputs) {\n            Object.keys(options.outputs).forEach(name => {\n                const eventEmitter: EventEmitter<any> = loadedComponent.componentRef.instance[name];\n                if (eventEmitter) {\n                    const subscription = eventEmitter.subscribe(options.outputs![name]);\n                    if (!loadedComponent.subscriptions) {\n                        loadedComponent.subscriptions = subscription;\n                    }\n                    else {\n                        loadedComponent.subscriptions.add(subscription);\n                    }\n                }\n            });\n        }\n        if (simpleChanges) {\n            ngOnChanges.call(loadedComponent.componentRef.instance, simpleChanges);\n        }\n    }\n\n    /**\n     * Bind a component's input and output properties according to the passed options. Generate a\n     * call to the component's `ngOnChanges` method if the inputs have changed since the last call.\n     * If the component has been previously bound it is first unbound by calling {@link #unbindComponent}\n     * which will unsubscribe the component's outputs\n     *\n     * @param options Specify the inputs and outputs for the component\n     * @param loadedComponent A component loaded by {@link #loadComponent}\n     */\n    public bindComponent(options: LoadComponentOptions, loadedComponent: LoadedComponent) {\n        return this._bindComponent(options, loadedComponent, false);\n    }\n\n    /**\n     * Unbind a previously bound dynamically loaded component. Subscriptions to the component's\n     * outputs are unsubscribed\n     *\n     * @param loadedComponent A component loaded by {@link #loadComponent}\n     */\n    unbindComponent(loadedComponent: LoadedComponent) {\n        if (!!loadedComponent.subscriptions) {\n            loadedComponent.subscriptions.unsubscribe();\n            loadedComponent.subscriptions = undefined;\n        }\n    }\n\n    /**\n     * Dynamically load a component from its type. The component's inputs and outputs will be initialized\n     * by calling {@link #bindComponent}.\n     *\n     * @param options The options containing the component to load and its inputs and outputs\n     * @param viewContainerRef Specifies where the loaded component should be attached. If not specified then the\n     * loaded component is inserted before the application component\n     * @param injector Overrides the injector to use as the parent for the component. By default this will be\n     * the injector held on the `viewContainerRef`\n     */\n    loadComponent<T>(options: LoadComponentOptions, viewContainerRef?: ViewContainerRef, injector?: Injector): LoadedComponent {\n        let componentRef: ComponentRef<T>;\n        let factory = this.factories.get(options.component);\n        if (!factory) {\n            factory = this.componentFactoryResolver.resolveComponentFactory(options.component);\n        }\n        if (!viewContainerRef) {\n            const appElement: Element = this.applicationRef.components[0].location.nativeElement;\n            const injector1 = this.applicationRef.components[0].injector;\n            componentRef = factory.create(injector1, [[appElement]]);\n            this.applicationRef.attachView(componentRef.hostView);\n            if (appElement.parentElement) {\n                appElement.parentElement.insertBefore(componentRef.location.nativeElement, appElement.nextSibling);\n            }\n        }\n        else {\n            if (!injector) {\n                injector = viewContainerRef.injector;\n            }\n            const index = !Utils.isEmpty(options.index) ? options.index : undefined;\n            componentRef = viewContainerRef.createComponent(factory, index, injector, []);\n        }\n        const loadedComponent: LoadedComponent = {\n            componentRef\n        };\n        this._bindComponent(options, loadedComponent, true);\n        loadedComponent.componentRef.changeDetectorRef.detectChanges();\n        return loadedComponent;\n    }\n\n    /**\n     * Unload a dynamically loaded component. It is unbound prior to being destroyed\n     *\n     * @param component A loaded component\n     */\n    unloadComponent(component: LoadedComponent) {\n        if (!!component) {\n            this.unbindComponent(component);\n            component.componentRef.destroy();\n        }\n    }\n}\n","export default {\n    \"results\": {\n        \"missingTerms\": \"fehlende Begriffe:\",\n        \"resultsCount\": \"{count, plural, =0 {keine Ergebnisse} one {# Ergebnis} other {# Ergebnisse}}\"\n    },\n    \"userRatings\": {\n        \"average\": \"Durchschnittlich: {average}\"\n    },\n};\n","export * from \"./feedback.service\";\nexport * from \"./bootstrap/index\";\nexport * from \"./messages/index\";","export default {\n    \"modal\": {\n        \"login\": {\n            \"title\": \"Login\",\n            \"userName\": \"User name\",\n            \"password\": \"Password\",\n            \"singleSignOn\": \"Single sign-on\",\n            \"signInWith\": \"Sign in with...\"\n        }\n    }\n};\n","export * from \"./public-api\";","import { Component, OnInit, Inject, ChangeDetectorRef } from \"@angular/core\";\nimport {\n    ModalButton,\n    ModalResult,\n    MODAL_MODEL,\n    ModalRef,\n} from \"@sinequa/core/modal\";\nimport { ModalProperties, LabelsService } from \"../../labels.service\";\nimport { SelectionService } from \"@sinequa/components/selection\";\nimport { AppService } from \"@sinequa/core/app-utils\";\nimport { Record } from \"@sinequa/core/web-services\";\nimport { SearchService } from \"@sinequa/components/search\";\nimport { Utils } from \"@sinequa/core/base\";\nimport { NotificationsService } from \"@sinequa/core/notification\";\n\n@Component({\n    selector: \"sq-edit-label\",\n    templateUrl: \"./edit-label.html\",\n    styles: [\n        `\n            .clickable {\n                cursor: pointer;\n            }\n            .clickable:hover {\n                opacity: 85%;\n            }\n        `,\n    ],\n})\nexport class BsEditLabel implements OnInit {\n    public selectedRecordsIds: string[];\n    public buttons: ModalButton[];\n    /** Initial labels list assigned to a record */\n    public initialLabels: string[] = [];\n    public record: Record | undefined;\n    public isProcessing: boolean = false;\n\n    constructor(\n        @Inject(MODAL_MODEL)\n        public model: {\n            valuesToBeAdded: string[],\n            valuesToBeRemoved: string[],\n            properties: ModalProperties\n        },\n        private appService: AppService,\n        private selectionService: SelectionService,\n        private labelsService: LabelsService,\n        private searchService: SearchService,\n        private notificationService: NotificationsService,\n        private changeDetectorRef: ChangeDetectorRef,\n        private modalRef: ModalRef\n    ) {}\n\n    ngOnInit() {\n        this.selectedRecordsIds = !!this.selectionService.getSelectedIds()\n            ? this.selectionService.getSelectedIds()\n            : [];\n        if (this.selectedRecordsIds.length === 1) {\n            this.record = this.searchService.getRecordFromId(\n                this.selectedRecordsIds[0]\n            );\n            this.initialLabels = this._getInitialRecordLabels();\n        }\n        this.buttons = [\n            new ModalButton({\n                text: \"msg#editLabel.btnEdit\",\n                primary: true,\n                result: ModalResult.Custom,\n                anchor: true,\n                action: () => {\n                    const observable = this.labelsService.addLabels(\n                        this.model.valuesToBeAdded,\n                        this.selectionService.getSelectedIds(),\n                        this.model.properties.public\n                    );\n                    if (observable) {\n                        this.isProcessing = true;\n                        this.changeDetectorRef.markForCheck();\n                        Utils.subscribe(\n                            observable,\n                            () => {},\n                            (error) => {\n                                this.notificationService.error(\n                                    \"msg#editLabel.errorFeedback\"\n                                );\n                                this.modalRef.close(error);\n                            },\n                            () => {\n                                this.labelsService\n                                    .removeLabels(\n                                        this.model.valuesToBeRemoved,\n                                        this.selectionService.getSelectedIds(),\n                                        this.model.properties.public\n                                    )\n                                    .subscribe(\n                                        () => {},\n                                        (error) => {\n                                            this.notificationService.error(\n                                                \"msg#editLabel.errorFeedback\"\n                                            );\n                                            this.modalRef.close(error);\n                                        },\n                                        () => {\n                                            this.isProcessing = false;\n                                            this.modalRef.close(ModalResult.OK);\n                                            this.notificationService.success(\n                                                \"msg#editLabel.successFeedback\"\n                                            );\n                                            this.searchService.search(); /** Update the display immediately in the components and facets*/\n                                        }\n                                    );\n                            }\n                        );\n                    }\n                },\n            }),\n            new ModalButton({\n                result: ModalResult.Cancel,\n            }),\n        ];\n    }\n\n    updateLabelsNature(nature: boolean) {\n        this.model.properties.public = nature;\n        this.model.valuesToBeRemoved = [];\n        this.model.valuesToBeAdded = [];\n        if (this.selectedRecordsIds.length === 1) {\n            this.initialLabels = this._getInitialRecordLabels(); /** update initial labels */\n        }\n    }\n\n    onLabelsChanged(values: string[]) {\n        if (!!this.initialLabels) {\n            this.model.valuesToBeAdded = values.filter(\n                (value) => !this.initialLabels.find((label) => label === value)\n            );\n            this.model.valuesToBeRemoved = this.initialLabels.filter(\n                (label) => !values.find((value) => value === label)\n            );\n        } else {\n            this.model.valuesToBeAdded = values;\n            this.model.valuesToBeRemoved = [];\n        }\n    }\n\n    onLabelsToBeAddedChanged(values: string[]) {\n        this.model.valuesToBeAdded = values;\n    }\n\n    onLabelsToBeRemovedChanged(values: string[]) {\n        this.model.valuesToBeRemoved = values;\n    }\n\n    /**\n     * Return the list of labels already assigned to the selected record\n     */\n    private _getInitialRecordLabels(): string[] {\n        if (!!this.record) {\n            const field = this.model.properties.public\n                ? this.labelsService.publicLabelsField\n                : this.labelsService.privateLabelsField;\n            const labelsField = this.appService.resolveColumnAlias(field);\n            if (!this.model.properties.public) {\n                return !!this.record[labelsField]\n                    ? (this.labelsService.removePrivatePrefix(\n                          this.record[labelsField]\n                      ) as string[])\n                    : ([] as string[]);\n            }\n            return this.record[labelsField] || [];\n        } else {\n            return [];\n        }\n    }\n}\n","<form name=\"editLabel\" novalidate>\n    <sq-modal [title]=\"'msg#editLabel.title'\" [buttons]=\"buttons\" [isProcessingState]=\"isProcessing\">\n        <div class=\"form-group sq-form-group\">\n            <div class=\"alert alert-warning\" role=\"alert\">\n                {{'msg#editLabel.alertText' | sqMessage}}\n            </div>\n            <div *ngIf=\"model.properties.allowManagePublicLabels || !model.properties.public \" class=\"alert alert-info\" role=\"alert\">\n                {{'msg#editLabel.infoText' | sqMessage}}\n            </div>\n            <section>\n                <div *ngFor=\"let item of model.properties.radioButtons\" class=\"custom-control custom-radio custom-control-inline\">\n                    <input type=\"radio\" class=\"custom-control-input\" id=\"{{item.id}}\" name=\"nature\" value=\"{{item.value}}\"\n                        [checked]=\"item.checked\" [disabled]=\"item.disabled\" (click)=\"updateLabelsNature(item.value)\" [ngClass]=\"{'disabled': item.disabled, 'clickable': !item.disabled}\">\n                    <label class=\"custom-control-label\" for=\"{{item.id}}\">{{ item.name | sqMessage }}</label>\n                </div>\n            </section>\n\n            <section *ngIf=\"record\">\n                <b><label for=\"label\">{{'msg#labels.labels' | sqMessage}}</label></b>\n                <sq-labels-autocomplete\n                    (labelsUpdate)=\"onLabelsChanged($event)\"\n                    [public]=\"model.properties.public\"\n                    [disableAutocomplete]=\"model.properties.disableAutocomplete\"\n                    [allowNewLabels]=\"model.properties.allowNewLabels\"\n                    [allowManagePublicLabels]=\"model.properties.allowManagePublicLabels\"\n                    [initLabels]=\"initialLabels\">\n                </sq-labels-autocomplete>\n            </section>\n\n            <section *ngIf=\"!record\">\n                <b><label for=\"label\">{{'msg#editLabel.labelsToBeAdded' | sqMessage}}</label></b>\n                <sq-labels-autocomplete\n                    (labelsUpdate)=\"onLabelsToBeAddedChanged($event)\"\n                    [public]=\"model.properties.public\"\n                    [disableAutocomplete]=\"model.properties.disableAutocomplete\"\n                    [allowNewLabels]=\"model.properties.allowNewLabels\"\n                    [allowManagePublicLabels]=\"model.properties.allowManagePublicLabels\">\n                </sq-labels-autocomplete>\n                <b><label for=\"label\">{{'msg#editLabel.labelsToBeRemoved' | sqMessage}}</label></b>\n                <sq-labels-autocomplete\n                    (labelsUpdate)=\"onLabelsToBeRemovedChanged($event)\"\n                    [public]=\"model.properties.public\"\n                    [disableAutocomplete]=\"model.properties.disableAutocomplete\"\n                    [allowNewLabels]=\"model.properties.allowNewLabels\"\n                    [allowManagePublicLabels]=\"model.properties.allowManagePublicLabels\">\n                </sq-labels-autocomplete>\n            </section>\n\n        </div>\n    </sq-modal>\n</form>\n","export * from \"./results-view.service\";\nexport * from \"./bootstrap/index\";\nexport * from \"./messages/index\";","export * from \"./public-api\";","export default {\n    \"baskets\": {\n        \"baskets\": \"Paniers\",\n        \"addToBasket\": \"Ajouter au panier\",\n        \"removeFromBasket\": \"Supprimer du panier\",\n        \"removeFromAllBaskets\": \"Supprimer de tous les paniers\",\n        \"removeFromAllBasketsConfirmation\": \"Êtes-vous sûr de vouloir supprimer ce résultat de ces paniers : {baskets} ?\",\n        \"basketAlreadyExists\": \"Un panier avec ce nom existe déjà. Voulez-vous le remplacer ?\",\n        \"noBasket\": \"Vous n'avez pas encore ajouté de document à un panier...\",\n        \"createBasket\": \"Créer un panier\",\n        \"manageBaskets\": \"Gérer les paniers\",\n        \"delete\": \"Supprimer ce panier\"\n    },\n\n    \"editBasket\": {\n        \"title\": \"Panier\",\n        \"name\": \"Nom\"\n    },\n\n    \"manageBaskets\": {\n        \"title\": \"Gérer les paniers\",\n        \"edit\": \"Editer\",\n        \"reorder\": \"Réorganiser\",\n        \"remove\": \"Effacer\",\n        \"removeAll\": \"Effacer tout\",\n        \"name\": \"Nom\"\n    },\n\n    \"selectBasket\": {\n        \"title\": \"Sélectionner un panier\",\n        \"newBasket\": \"Nouveau panier...\"\n    },\n\n};\n","import {Utils} from \"@sinequa/core/base\";\nimport {enIntl, frIntl, deIntl} from \"@sinequa/core/intl\";\nimport _enModal from \"./en\";\nimport _frModal from \"./fr\";\nimport _deModal from \"./de\";\n\nconst enModal = Utils.merge({}, _enModal, enIntl);\nconst frModal = Utils.merge({}, _frModal, frIntl);\nconst deModal = Utils.merge({}, _deModal, deIntl);\n\nexport { enModal, frModal, deModal };\n","import enIntl from \"./en\";\nimport frIntl from \"./fr\";\nimport deIntl from \"./de\";\n\nexport { enIntl, frIntl, deIntl };\n","export default {\n    \"modal\": {\n        \"buttons\": {\n            \"ok\": \"OK\",\n            \"cancel\": \"Annuler\",\n            \"yes\": \"Oui\",\n            \"no\": \"Non\",\n            \"abort\": \"Abandonner\",\n            \"retry\": \"Réessayer\",\n            \"ignore\": \"Ignorer\"\n        },\n\n        \"confirm\": {\n            \"title\": \"Confirmer\"\n        },\n        \"prompt\": {\n            \"title\": \"Saississez une valeur\"\n        }\n    }\n};\n","import { Component, Input, OnChanges, SimpleChanges, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { Utils } from \"@sinequa/core/base\";\nimport { LinkResult, SponsoredLinksWebService, AuditWebService, AuditEventType, AuditEvent } from \"@sinequa/core/web-services\";\nimport { AppService, Query } from \"@sinequa/core/app-utils\";\nimport {SearchService} from \"@sinequa/components/search\";\n\n@Component({\n    selector: 'sq-sponsored-results',\n    templateUrl: './sponsored-results.html',\n    styleUrls: [\"./sponsored-results.scss\"]\n})\n\n/**\n * Represent the component that display the sponsored results on result page.\n * NOTE: this class and (its containing file) could have been named SponsoredLinks but this naming causes\n * the file to be flagged as ads by Adblock.\n */\nexport class SponsoredResults implements OnChanges, OnInit {\n    @Input() query: Query;\n    public sponsoredlinks: LinkResult[];\n\n    private lastText: string;\n    private currentPage?: number;\n    private linksQuery: Query;\n    private initDone: boolean;\n    private webService: string;\n\n    constructor(\n        private appService: AppService,\n        private searchService: SearchService,\n        private sponsoredResultsService: SponsoredLinksWebService,\n        private auditService: AuditWebService,\n        private changeDetectorRef: ChangeDetectorRef) {\n    }\n\n    /**\n     * Considers the text of the new query and sees if the list of the sponsored lists needs to be updated.\n     *\n     * @param text The text of the new query.\n     * @memberof SponsoredLinks\n     */\n    private updateSponsoredLinksIfNecessary(text: string): void {\n        if (!this.appService.app) {\n            return; // logout\n        }\n\n        let redoQuery = false;\n        const currentWS = this.getWebService();\n        if (!Utils.eqNC(this.webService, currentWS)) {\n            this.webService = currentWS;\n            redoQuery = true;\n        }\n\n        if (!redoQuery && !Utils.eqNC(this.lastText, text)) {\n            this.lastText = text;\n            redoQuery = true;\n        }\n\n        if (!redoQuery && this.currentPage !== this.searchService.query.page) {\n            this.currentPage = this.searchService.query.page;\n            redoQuery = true;\n        }\n\n        if (redoQuery) {\n            if (!Utils.isEmpty(this.webService) && !Utils.isEmpty(text)) {\n                this.linksQuery.text = text;\n                this.linksQuery.page = this.currentPage;\n                Utils.subscribe(\n                    this.sponsoredResultsService.getLinks(this.linksQuery, this.webService),\n                    (results) => {\n                        this.sponsoredlinks = results.links;\n                        this.auditLinksDisplay();\n                        this.changeDetectorRef.markForCheck();\n                    },\n                    (error) => console.log(`Could not retrieve sponsored links: ${error}.`)\n                );\n            } else {\n                this.sponsoredlinks = [];\n            }\n        }\n    }\n\n    /**\n     * Retrieves the web service for sponsored links.\n     * If it is defined both in the component configuration and the app configuration,\n     * this method returns the one in the component configuration.\n     *\n     * @returns the web service for sponsored links.\n     */\n    private getWebService(): string {\n        return (this.appService.app && this.appService.app.sponsoredLinks) || \"\";\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (!this.initDone) {\n            this.initialize();\n        }\n\n        if (changes['query'] || changes['results']) {\n            this.updateSponsoredLinksIfNecessary(Utils.trim(this.query.text || \"\"));\n        }\n    }\n\n    private initialize(): void {\n        if (this.initDone) {\n            return;\n        }\n\n        if (this.appService.ccquery) {\n            this.linksQuery = new Query(this.appService.ccquery.name);\n        } else {\n            return;\n        }\n        this.initDone = true;\n    }\n\n    ngOnInit(): void {\n        this.initialize();\n    }\n\n    auditLinksDisplay() {\n        if (!!this.sponsoredlinks && this.sponsoredlinks.length > 0) {\n            const auditEvents: AuditEvent[] = [];\n            this.sponsoredlinks.forEach(link => {\n                auditEvents.push({\n                    type: AuditEventType.Link_Display,\n                    detail: {\n                        resultid: this.searchService.results && this.searchService.results.id,\n                        linkid: link.id,\n                        rank: link.rank,\n                        title: link.title,\n                        url: link.url\n                    }\n                });\n            });\n            this.auditService.notify(auditEvents);\n        }\n    }\n\n    click(link: LinkResult) {\n        this.auditService.notifySponsoredLink(AuditEventType.Link_Click, link,\n            this.searchService.results && this.searchService.results.id || \"\");\n    }\n}\n","<ul class=\"sq-sponsored-links-list\" *ngIf=\"!!sponsoredlinks\" >\n    <li *ngFor=\"let link of sponsoredlinks\" class=\"sponsored-item\" >\n        <div class=\"sq-sponsored-link-view\">\n            <div *ngIf=\"link.thumbnail\" class=\"sq-sponsored-link-view-thumbnail\">\n                <a href=\"{{link.url}}\" (click)=\"click(link)\" target=\"_blank\">\n                    <img src=\"{{link.thumbnail}}\">\n                </a>\n            </div>\n            <div class=\"sq-sponsored-link-view-info\">\n                <a href=\"{{link.url}}\" (click)=\"click(link)\" target=\"_blank\" title=\"{{link.title | sqMessage}}\">{{link.title | sqMessage}}</a>\n                <div *ngIf=\"link.summary\" class=\"sq-sponsored-link-view-summary\">{{link.summary | sqMessage}}</div>\n            </div>\n        </div>\n    </li>\n</ul>\n","import {Pipe, ChangeDetectorRef} from \"@angular/core\";\nimport {AbstractIntlPipe, IntlService} from \"@sinequa/core/intl\";\n\n@Pipe({name: \"sqTime\", pure: false})\nexport class TimePipe extends AbstractIntlPipe {\n    constructor(\n        intlService: IntlService,\n        changeDetectorRef: ChangeDetectorRef) {\n        super(intlService, changeDetectorRef);\n    }\n\n    updateValue(key: number | Date, params: Intl.DateTimeFormatOptions): void {\n        super.updateValue(key, params);\n        this.value = this.intlService.formatTime(key, params);\n    }\n}","import { Inject, Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { SqHttpClient } from \"./http-client\";\r\nimport { HttpService } from \"./http.service\";\r\nimport { Results } from \"./query.web.service\";\r\nimport { StartConfig, START_CONFIG } from \"./start-config.web.service\";\r\n\r\nexport type Dataset = {[key: string]: Results|DatasetError};\r\n\r\nexport interface DatasetError {\r\n    errorCode: number;\r\n    errorMessage: string;\r\n}\r\n\r\nexport interface DatasetDescription {\r\n    name: string;\r\n    description?: string;\r\n}\r\n\r\n/**\r\n * A service to notify the audit manager on the Sinequa server of client-side events\r\n */\r\n@Injectable({\r\n    providedIn: \"root\"\r\n})\r\nexport class DatasetWebService extends HttpService {\r\n    private static readonly endpoint = \"search.dataset\";\r\n\r\n    constructor(\r\n        @Inject(START_CONFIG) startConfig: StartConfig,\r\n        protected httpClient: SqHttpClient) {\r\n        super(startConfig);\r\n    }\r\n\r\n    /**\r\n     * Return the list of queries configured in the given\r\n     * dataset web service.\r\n     * @param webServiceName name of the web service\r\n     */\r\n    list(webServiceName: string): Observable<DatasetDescription[]> {\r\n        return this.httpClient.get<DatasetDescription[]>(\r\n            `${this.makeUrl(DatasetWebService.endpoint)}/${webServiceName}`\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Queries the given web service.\r\n     * @param webServiceName name of the web service\r\n     * @param query name of the query\r\n     * @param params parameters of the queries\r\n     */\r\n    get(webServiceName: string, query: string, parameters = {}): Observable<Results|DatasetError> {\r\n        let url = `${this.makeUrl(DatasetWebService.endpoint)}/${webServiceName}/${query}`;\r\n        return this.httpClient.post<{datasets: Dataset}>(url, {parameters})\r\n            .pipe(map(d => d.datasets[query]));\r\n    }\r\n\r\n    /**\r\n     * Queries the given web service.\r\n     * @param webServiceName name of the web service\r\n     * @param params parameters of the queries\r\n     */\r\n    getAll(webServiceName: string, parameters = {}): Observable<Dataset> {\r\n        let url = `${this.makeUrl(DatasetWebService.endpoint)}/${webServiceName}`;\r\n        return this.httpClient.post<{datasets: Dataset}>(url, {parameters})\r\n            .pipe(map(d => d.datasets));\r\n    }\r\n\r\n}","import {Injectable, InjectionToken, Optional, Inject, OnDestroy} from \"@angular/core\";\nimport {Router} from \"@angular/router\";\nimport {SearchService} from \"./search.service\";\nimport {Subscription, Observable, of} from 'rxjs';\nimport {Utils} from \"@sinequa/core/base\";\nimport {AuditEventType, Results} from \"@sinequa/core/web-services\";\n\nexport interface FirstPageOptions {\n    displayOnHomePage?: boolean;\n}\n\nexport const FIRST_PAGE_OPTIONS = new InjectionToken<FirstPageOptions>(\"FIRST_PAGE_OPTIONS\");\n\n@Injectable({\n    providedIn: \"root\"\n})\nexport class FirstPageService implements OnDestroy {\n    private searchSubscription: Subscription;\n    firstPage: Results;\n\n    constructor(\n        @Optional() @Inject(FIRST_PAGE_OPTIONS) protected options: FirstPageOptions,\n        protected searchService: SearchService,\n        protected router: Router\n    ) {\n        if (!this.options) {\n            this.options = {};\n        }\n        this.searchSubscription = this.searchService.events.subscribe(\n            (event) => {\n                if (event.type === \"clear\") {\n                    if (this.displayOnHomePage(event.path)) {\n                        Utils.subscribe(this.getFirstPage(),\n                            (results) => {\n                                this.searchService.setResults(results);\n                            });\n                    }\n                }\n            }\n        );\n    }\n\n    ngOnDestroy() {\n        this.searchSubscription.unsubscribe();\n    }\n\n    /**\n     * @ignore\n     * legacy\n     */\n    get isFirstPage(): boolean {\n        return this.isCurrentSearchResults;\n    }\n\n    get isCurrentSearchResults(): boolean {\n        return !!this.searchService.results && this.searchService.results === this.firstPage;\n    }\n\n    displayOnHomePage(path?: string): boolean {\n        if (Utils.isArray(this.options.displayOnHomePage)) {\n            if (!path) {\n                const url = Utils.makeURL(this.router.url);\n                path = url.pathname;\n            }\n            for (const path1 of this.options.displayOnHomePage) {\n                if (Utils.endsWith(path, Utils.addUrl(\"/\", path1))) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        else {\n            return !!this.options.displayOnHomePage;\n        }\n    }\n\n    getFirstPage(): Observable<Results> {\n        if (this.firstPage) {\n            return of<Results>(this.firstPage);\n        }\n        const query = this.searchService.makeQuery();\n        query.isFirstPage = true;\n        const observable = this.searchService.getResults(query, {\n            type: AuditEventType.Search_FirstPage\n        }, {\n            searchInactive: true\n        });\n        Utils.subscribe(observable,\n            (results) => {\n                this.firstPage = results;\n                return results;\n            });\n        return observable;\n    }\n}\n","import {Utils} from \"@sinequa/core/base\";\nimport {enSearch, frSearch, deSearch} from \"@sinequa/components/search\";\nimport {enSelection, frSelection, deSelection} from \"@sinequa/components/selection\";\nimport {enCollapse, frCollapse, deCollapse} from \"@sinequa/components/collapse\";\nimport _enFacet from \"./en\";\nimport _frFacet from \"./fr\";\nimport _deFacet from \"./de\";\n\nconst enFacet = Utils.merge({}, _enFacet, enSearch, enSelection, enCollapse);\nconst frFacet = Utils.merge({}, _frFacet, frSearch, frSelection, frCollapse);\nconst deFacet = Utils.merge({}, _deFacet, deSearch, deSelection, deCollapse);\n\nexport {enFacet, frFacet, deFacet};\n\n","export default {\n    metadata: {\n        extractslocationsLabel: \"Relevant extract\",\n        extractslocationsPluralLabel: \"Relevant extracts\",\n        geoLabel: \"Place\",\n        geoPluralLabel: \"Places\",\n        personLabel: \"Person\",\n        personPluralLabel: \"People\",\n        companyLabel: \"Company\",\n        companyPluralLabel: \"Companies\",\n        treepathLabel: \"Source\",\n        treepathPluralLabel: \"Sources\",\n        matchlocationsLabel: \"Search term\",\n        matchlocationsPluralLabel: \"Search terms\",\n        titleLabel: \"Title\",\n        titlePluralLabel: \"Titles\",\n        authorsLabel: \"Author\",\n        authorsPluralLabel: \"Authors\",\n        filenameLabel: \"Filename\",\n        filenamePluralLabel: \"Filenames\",\n        modifiedLabel: \"Date\",\n        modifiedPluralLabel: \"Dates\",\n        sizeLabel: \"Size\",\n        sizePluralLabel: \"Sizes\",\n        docformatLabel: \"Format\",\n        docformatPluralLabel: \"Formats\",\n        documentlanguagesLabel: \"Language\",\n        documentlanguagesPluralLabel: \"Languages\",\n        geo_label: \"Place\",\n        geo_plural_label: \"Places\",\n        person_label: \"Person\",\n        person_plural_label: \"People\",\n        company_label: \"Company\",\n        company_plural_label: \"Companies\",\n        treepath_label: \"Source\",\n        treepath_plural_label: \"Sources\",\n        title_label: \"Title\",\n        title_plural_label: \"Titles\",\n        authors_label: \"Author\",\n        authors_plural_label: \"Authors\",\n        filename_label: \"Filename\",\n        filename_plural_label: \"Filenames\",\n        modified_label: \"Date\",\n        modified_plural_label: \"Dates\",\n        size_label: \"Size\",\n        size_plural_label: \"Sizes\",\n        docformat_label: \"Format\",\n        docformat_plural_label: \"Formats\",\n        documentlanguages_label: \"Language\",\n        documentlanguages_plural_label: \"Languages\",\n        accessLists: {\n            authorizedListTitleText: \"Authorized access list\",\n            authorizedListHeader: \"Authorized access list {value, number}\",\n            deniedListTitleText: \"Denied access list\",\n            deniedListHeader: \"Denied access list {value, number}\"\n        },\n        item: {\n            label: \"{label}:\",\n            separator: \"|\",\n            treeSeparator: \" ; \",\n            treeNodeSeparator: \"/\",\n            listSeparator: \", \",\n            empty_boolean: 'false',\n            empty_number: '0'\n        }\n    },\n};\n","import {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\n\nimport {IntlModule} from \"@sinequa/core/intl\";\nimport {ValidationModule} from \"@sinequa/core/validation\";\nimport {UtilsModule} from \"@sinequa/components/utils\";\n\nimport {BsModalModule} from \"@sinequa/components/modal\";\n\nimport {BsAutocompleteModule} from \"@sinequa/components/autocomplete\";\n\nimport {LabelPipe} from \"./label.pipe\";\nimport {Labels} from \"./labels.component\";\nimport {ResultLabels} from \"./result-labels.component\";\nimport {LabelsAutocomplete} from \"./labels-autocomplete.directive\";\n\n@NgModule({\n    imports: [\n        FormsModule, ReactiveFormsModule,\n        CommonModule,\n\n        IntlModule,\n        ValidationModule,\n\n        UtilsModule,\n        BsModalModule,\n        BsAutocompleteModule,\n    ],\n    declarations: [\n        LabelPipe, Labels, ResultLabels, LabelsAutocomplete\n    ],\n    exports: [\n        LabelPipe, Labels, ResultLabels, LabelsAutocomplete\n    ],\n})\nexport class LabelsModule {\n}\n","import {\n    Component,\n    OnInit,\n    Input,\n    OnChanges,\n    SimpleChanges,\n    OnDestroy,\n} from \"@angular/core\";\nimport { Action } from \"@sinequa/components/action\";\nimport { LoginService } from \"@sinequa/core/login\";\nimport { LabelsService } from \"../../labels.service\";\nimport { Results } from \"@sinequa/core/web-services\";\nimport { Subscription } from \"rxjs\";\n\n@Component({\n    selector: \"sq-labels-menu\",\n    templateUrl: \"./labels-menu.component.html\",\n})\nexport class BsLabelsMenuComponent implements OnInit, OnChanges, OnDestroy {\n    @Input() results: Results;\n    @Input() icon: string = \"fas fa-tags\";\n    @Input() autoAdjust: boolean = true;\n    @Input() autoAdjustBreakpoint: string = \"xl\";\n    @Input() collapseBreakpoint: string = \"sm\";\n    @Input() size: string;\n\n    menu: Action | undefined;\n\n    // Labels  actions\n    renameAction: Action;\n    deleteAction: Action;\n    bulkAddAction: Action;\n    bulkDeleteAction: Action;\n\n    private _loginServiceSubscription: Subscription;\n\n    constructor(\n        public loginService: LoginService,\n        public labelsService: LabelsService\n    ) {\n        this.renameAction = new Action({\n            text: \"msg#renameLabel.title\",\n            title: \"msg#renameLabel.title\",\n            action: () => {\n                this.labelsService.renameLabelModal();\n            },\n        });\n\n        this.deleteAction = new Action({\n            text: \"msg#deleteLabel.title\",\n            title: \"msg#deleteLabel.title\",\n            action: () => {\n                this.labelsService.deleteLabelModal();\n            },\n        });\n\n        this.bulkAddAction = new Action({\n            text: \"msg#bulkAddLabel.title\",\n            title: \"msg#bulkAddLabel.title\",\n            action: () => {\n                this.labelsService.bulkAddLabelModal();\n            },\n        });\n\n        this.bulkDeleteAction = new Action({\n            text: \"msg#bulkRemoveLabel.title\",\n            title: \"msg#bulkRemoveLabel.title\",\n            action: () => {\n                this.labelsService.bulkRemoveLabelModal();\n            },\n        });\n    }\n\n    ngOnInit() {\n        this._loginServiceSubscription = this.loginService.events.subscribe(\n            (event) => {\n                if (event.type === \"session-changed\") {\n                    this.updateMenu();\n                }\n            }\n        );\n    }\n\n    ngOnDestroy() {\n        if (this._loginServiceSubscription) {\n            this._loginServiceSubscription.unsubscribe();\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.results) {\n            this.updateMenu();\n        }\n    }\n\n    updateMenu() {\n        if (!this.loginService.complete) {\n            this.menu = undefined;\n            return;\n        }\n\n        if (\n            !this.labelsService.publicLabelsField &&\n            !this.labelsService.privateLabelsField\n        ) {\n            this.menu = undefined;\n            return;\n        }\n\n        const labelsActions: Action[] = [this.renameAction, this.deleteAction];\n\n        /** Allow Bulk actions only if there are some results */\n        if (!!this.results && !!this.results.records) {\n            labelsActions.push(this.bulkAddAction);\n            labelsActions.push(this.bulkDeleteAction);\n        }\n\n        this.menu = new Action({\n            icon: this.icon,\n            text: \"msg#labels.labels\",\n            children: labelsActions,\n        });\n    }\n}\n","<li *ngIf=\"!!menu && !menu.hidden\" class=\"nav-item dropdown\" \n    [sq-action-item]=\"{item: menu, size: size, autoAdjust: autoAdjust, autoAdjustBreakpoint: autoAdjustBreakpoint, inMenu: true}\"\n    [collapseBreakpoint]=\"collapseBreakpoint\"\n></li>","import {Component, Input, Output, EventEmitter, HostBinding} from \"@angular/core\";\nimport {SearchService} from \"@sinequa/components/search\";\nimport {AppService, ValueItem} from \"@sinequa/core/app-utils\";\nimport {Record} from \"@sinequa/core/web-services\";\n\n@Component({\n    selector: \"sq-metadata\",\n    templateUrl: \"./metadata.html\",\n    styleUrls: [\"./metadata.scss\"]\n})\nexport class Metadata {\n    @Input() record: Record;\n    @Input() items: string[];\n    @Input() showTitles: boolean = true;\n    @Input() showIcons: boolean = false;\n    @Input() showCounts: boolean = true;\n    @Input() clickable: boolean = true;\n    @HostBinding(\"class.sq-tabular\") @Input() tabular: boolean = true;\n    @Input() collapseRows: boolean = true;\n    @Input() searchOnClick: boolean = true;\n    \n    @Output(\"select\") _select = new EventEmitter<{item: string, valueItem: ValueItem}>();\n\n    constructor(\n        public appService: AppService, \n        public searchService: SearchService) {\n    }\n\n    select(item: string, valueItem: ValueItem) {\n        if(this.searchOnClick) {\n            this.searchService.addFieldSelect(item, valueItem);\n            this.searchService.search();\n        }\n        this._select.emit({item: item, valueItem: valueItem});\n    }\n}","<sq-metadata-item *ngFor=\"let item of items; let $index = index\"\n    [record]=\"record\"\n    [item]=\"item\"\n    (select)=\"select($event.item, $event.valueItem)\"\n    [showTitle]=\"showTitles\"\n    [showIcon]=\"showIcons\"\n    [showCounts]=\"showCounts\"\n    [clickable]=\"clickable\"\n    [tabular]=\"tabular\"\n    [collapseRows]=\"collapseRows\">\n    <span *ngIf=\"!tabular && $index < items.length - 1\" class=\"ml-1 mr-2\">{{'msg#metadata.item.separator' | sqMessage}}</span>\n</sq-metadata-item>\n","export * from \"./validation.directive\";\nexport * from \"./validation-error.pipe\";\nexport * from \"./validation-message.component\";\nexport * from \"./validation.module\";\nexport * from \"./validation.service\";\nexport * from \"./messages/index\";\n","export * from \"./abstract-intl.pipe\";\nexport * from \"./import-moment\";\nexport * from \"./intl.module\";\nexport * from \"./intl.service\";\nexport * from \"./message.pipe\";\nexport * from \"./messages/index\";\n","export * from \"./edit-saved-query/edit-saved-query\";\nexport * from \"./export-query/export-query\";\nexport * from \"./manage-saved-queries/manage-saved-queries\";\nexport * from \"./query-exporter/query-exporter\";\nexport * from \"./saved-queries.module\";\nexport * from \"./saved-queries-menu/saved-queries-menu.component\";\nexport * from \"./facet-saved-queries/facet-saved-queries\";\nexport * from \"./facet-recent-queries/facet-recent-queries\";\nexport * from \"./facet-recent-documents/facet-recent-documents\";","import {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\n\nimport {BaseModule} from \"@sinequa/core/base\";\nimport {AppUtilsModule} from \"@sinequa/core/app-utils\";\nimport {IntlModule} from \"@sinequa/core/intl\";\nimport {LoadComponentModule} from \"@sinequa/core/load-component\";\n\nimport {ValidationDirective, VALIDATION_MESSAGE_COMPONENT} from \"./validation.directive\";\nimport {ValidationErrorPipe} from \"./validation-error.pipe\";\nimport {ValidationMessageComponent} from \"./validation-message.component\";\n\nimport {VALIDATION_MODULE_PROVIDERS} from \"./module.providers\";\n\n/**\n * This module contains facilities for working with Angular's form validation. It provides a\n * {@link ValidationService} that works with {@link IntlService} and {@link FormatService} to\n * support locale-sensitive validators.\n */\n@NgModule({\n    imports: [\n        CommonModule,\n        BaseModule,\n        AppUtilsModule,\n        IntlModule,\n        LoadComponentModule\n    ],\n    declarations: [\n        ValidationDirective, ValidationMessageComponent, ValidationErrorPipe,\n    ],\n    exports: [\n        ValidationDirective, ValidationMessageComponent, ValidationErrorPipe,\n    ],\n    providers: [\n        {provide: VALIDATION_MESSAGE_COMPONENT, useValue: ValidationMessageComponent},\n\n        ...VALIDATION_MODULE_PROVIDERS\n    ]\n})\nexport class ValidationModule {\n}\n","export default {\n    \"advanced\": {\n        \"rangeSeparator\": \" / \",\n        \"dateRangePicker\": {\n            \"separator\": \" / \"\n        },\n        \"rangeInput\": {\n            \"separator\": \"/\"\n        },\n        \"select\": {\n            \"nItems\": \"{count} Elemente ausgewählt\",\n            \"allItems\": \"Alle Elemenente ausgewählt\",\n            \"noItems\": \"Keine Elemente ausgewählt\"\n        }\n    }\n};\n","import { Component, Input, OnChanges, SimpleChanges, ChangeDetectorRef, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { Record } from \"@sinequa/core/web-services\";\nimport { ModalService, ModalResult } from \"@sinequa/core/modal\";\nimport { BasketsService, Basket } from \"../../baskets.service\";\nimport { Action } from \"@sinequa/components/action\";\n\n/**\n * Component representing the add-to-baskets button in one item of the result list view.\n *\n */\n@Component({\n    selector: 'sq-result-baskets',\n    templateUrl: './result-baskets.html'\n})\nexport class BsResultBaskets implements OnChanges, OnDestroy {\n    @Input() record: Record;\n    @Input() rightAligned: boolean;\n\n    public basketsAction: Action;\n    private addToBasketAction: Action;\n    private removeFromBasketAction: Action;\n    private removeFromAllBasketsAction: Action;\n\n    private baskets: string[];\n    private initialized: boolean;\n    private basketsSubscription: Subscription;\n\n    constructor(\n        private modalService: ModalService,\n        private basketsService: BasketsService,\n        private changeDetectorRef: ChangeDetectorRef\n    ) {\n        this.baskets = [];\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (!this.initialized) {\n            this.initialized = true;\n            this.addToBasketAction = this.buildAddToBasketAction();\n            this.removeFromBasketAction = this.buildRemoveFromBasketAction();\n            this.removeFromAllBasketsAction = this.buildRemovalFromAllBasketsAction();\n            this.basketsSubscription = this.basketsService.changes.subscribe(event => {\n                this.updateRecordBaskets();\n                this.refreshVisualization();\n            });\n        }\n        this.updateRecordBaskets();\n        this.refreshVisualization();\n    }\n\n    ngOnDestroy(): void {\n        if (this.basketsSubscription) {\n            this.basketsSubscription.unsubscribe();\n        }\n    }\n\n    public get isInBaskets(): boolean {\n        return this.baskets.length > 0;\n    }\n\n    private refreshVisualization(): void {\n        this.basketsAction = this.buildBasketsAction();\n        this.changeDetectorRef.markForCheck();\n    }\n\n    private updateRecordBaskets(): void {\n        const currentBaskets: Basket[] = this.basketsService.baskets;\n        this.baskets = [];\n        for (const basket of currentBaskets) {\n            if (!!basket.ids && basket.ids.includes(this.record.id)) {\n                this.baskets.push(basket.name);\n            }\n        }\n    }\n\n    private buildAddToBasketAction(): Action {\n        return new Action({\n            text: 'msg#baskets.addToBasket',\n            action: (item, $event) => {\n                this.basketsService.addToBasketModal(this.record.id, this.baskets);\n            }\n        });\n    }\n\n    private buildRemoveFromBasketAction(): Action {\n        return new Action({\n            text: 'msg#baskets.removeFromBasket',\n            action: (item, $event) => {\n                this.basketsService.removeFromBasketModal(this.record.id, this.baskets);\n            }\n        });\n    }\n\n    private buildRemovalFromAllBasketsAction(): Action {\n        return new Action({\n            text: 'msg#baskets.removeFromAllBaskets',\n            action: () => {\n                this.modalService\n                    .yesNo(\n                        'msg#baskets.removeFromAllBasketsConfirmation',\n                        {values: {baskets: this.baskets.join(', ')}})\n                    .then(result => {\n                        if (result === ModalResult.Yes) {\n                            this.basketsService.removeFromAllBaskets(this.record.id);\n                        }\n                    });\n            }\n        });\n    }\n\n    private buildBasketsAction(): Action {\n        return new Action({\n            icon: 'fas fa-shopping-basket',\n            title: 'msg#baskets.baskets',\n            children: this.isInBaskets\n                ? this.baskets.length === 1\n                    ? [this.addToBasketAction, this.removeFromBasketAction]\n                    : [this.addToBasketAction, this.removeFromBasketAction, this.removeFromAllBasketsAction]\n                : [this.addToBasketAction]\n        });\n    }\n}\n","<div class=\"btn-group {{ isInBaskets ? 'sq-document-in-baskets' : 'sq-document-not-in-baskets' }}\"\n    [sq-action-buttons]=\"{\n        items: [basketsAction],\n        autoAdjust: true,\n        rightAligned: rightAligned\n    }\"></div>\n","export * from \"./bootstrap/index\";\nexport * from \"./messages/index\";","export * from \"./public-api\";","export default {\n    \"system\": {\n        \"date\": \"{time, selectordinal, =0 {{date, date}} other {{date, date}, {date, time, medium}}}\",\n        \"number\": \"{value, number}\",\n        \"boolean\": \"{value, select, true {true} other {false}}\",\n        \"percent\": \"{value, number, percent}\",\n        \"fieldSeparator\": \": \",\n        \"memorySize\": {\n            \"bytes\": \"{value, number, sqZeroDecimalPlaces} B\",\n            \"kb\": \"{value, number, sqZeroDecimalPlaces} KB\",\n            \"mb\": \"{value, number, sqOneDecimalPlace} MB\",\n            \"gb\": \"{value, number, sqTwoDecimalPlaces} GB\",\n            \"tb\": \"{value, number, sqThreeDecimalPlaces} TB\",\n            \"pb\": \"{value, number, sqFourDecimalPlaces} PB\"\n        }\n    },\n\n    \"error\": {\n        \"serverError\": \"Server error\",\n        \"loginCancelled\": \"login cancelled\",\n        \"processedCredentialsError\": \"unable to get processed credentials\",\n        \"autoLoginError\": \"login failed\",\n        \"principalSwitched\": \"the logged in user has changed\",\n        \"userOverrideFailure\": \"unable to override user\",\n        \"responseLoadFailure\": \"failed to load response\",\n        \"unknownError\": \"unknown error\"\n    },\n\n    \"language\": {\n        \"ar\": \"Arabic\",\n        \"da\": \"Danish\",\n        \"de\": \"German\",\n        \"el\": \"Greek\",\n        \"en\": \"English\",\n        \"es\": \"Spanish\",\n        \"fi\": \"Finnish\",\n        \"fr\": \"French\",\n        \"it\": \"Italian\",\n        \"ja\": \"Japanese\",\n        \"ko\": \"Korean\",\n        \"nl\": \"Dutch\",\n        \"no\": \"Norwegian\",\n        \"pl\": \"Polish\",\n        \"pt\": \"Portuguese\",\n        \"ro\": \"Romanian\",\n        \"ru\": \"Russian\",\n        \"sv\": \"Swedish\",\n        \"th\": \"Thai\",\n        \"zh\": \"Traditional Chinese\",\n        \"zs\": \"Simplified Chinese\",\n        \"zz\": \"Unknown\"\n    }\n};\n","import {Input, Component} from \"@angular/core\";\n\n@Component({\n    selector: \"sq-results-counter\",\n    templateUrl: \"./results-counter.html\"\n})\nexport class ResultsCounter {\n    @Input() rowCount: number;\n}\n","<div class=\"sq-results-count\">{{'msg#results.resultsCount' | sqMessage:{values: {count: rowCount} } }}</div>","export default {\n    \"statusBar\": {\n        \"fullscreenTitleEnter\": \"Plein écran\",\n        \"fullscreenTitleExit\": \"Quitter le mode plein écran\",\n        \"networkActivity\": \"Activité reseau\"\n    }\n};\n","import { Component, OnInit, Inject, ChangeDetectorRef } from \"@angular/core\";\nimport {\n    ModalButton,\n    ModalResult,\n    MODAL_MODEL,\n    ModalRef,\n} from \"@sinequa/core/modal\";\nimport { ModalProperties, LabelsService } from \"../../labels.service\";\nimport { Utils } from \"@sinequa/core/base\";\n\n@Component({\n    selector: \"sq-add-label\",\n    templateUrl: \"./add-label.html\",\n    styles: [\n        `\n            .clickable {\n                cursor: pointer;\n            }\n            .clickable:hover {\n                opacity: 85%;\n            }\n        `,\n    ],\n})\nexport class BsAddLabel implements OnInit {\n    public buttons: ModalButton[];\n    public isProcessing: boolean = false;\n\n    constructor(\n        @Inject(MODAL_MODEL)\n        public model: {\n            values: string[],\n            properties: ModalProperties\n        },\n        private labelsService: LabelsService,\n        private changeDetectorRef: ChangeDetectorRef,\n        private modalRef: ModalRef\n    ) {}\n\n    ngOnInit() {\n        this.buttons = [\n            new ModalButton({\n                text: \"msg#bulkAddLabel.btnBulkAdd\",\n                primary: true,\n                result: ModalResult.Custom,\n                anchor: true,\n                action: () => {\n                    const observable = this.labelsService.bulkAddLabels(\n                        this.model.values,\n                        this.model.properties.public\n                    );\n                    if (observable) {\n                        this.isProcessing = true;\n                        this.changeDetectorRef.markForCheck();\n                        Utils.subscribe(\n                            observable,\n                            () => {},\n                            (error) => {\n                                this.modalRef.close(error);\n                            },\n                            () => {\n                                this.isProcessing = false;\n                                this.modalRef.close(ModalResult.OK);\n                            }\n                        );\n                    }\n                },\n            }),\n            new ModalButton({\n                result: ModalResult.Cancel,\n            }),\n        ];\n    }\n\n    updateLabelsNature(nature: boolean) {\n        this.model.properties.public = nature;\n    }\n\n    onLabelsChanged(values: string[]) {\n        this.model.values = values;\n    }\n}\n","<form name=\"addLabel\" novalidate>\n    <sq-modal [title]=\"'msg#bulkAddLabel.title'\" [buttons]=\"buttons\" [isProcessingState]=\"isProcessing\">\n        <div class=\"form-group sq-form-group\">\n            <div class=\"alert alert-warning\" role=\"alert\">\n                {{'msg#bulkAddLabel.alertText' | sqMessage}}\n            </div>\n            <div *ngIf=\"model.properties.allowManagePublicLabels || !model.properties.public \" class=\"alert alert-info\" role=\"alert\">\n                {{'msg#bulkAddLabel.infoText' | sqMessage}}\n            </div>\n            <section>\n                <div *ngFor=\"let item of model.properties.radioButtons\" class=\"custom-control custom-radio custom-control-inline\">\n                    <input type=\"radio\" class=\"custom-control-input\" id=\"{{item.id}}\" name=\"nature\" value=\"{{item.value}}\"\n                        [checked]=\"item.checked\" [disabled]=\"item.disabled\" (click)=\"updateLabelsNature(item.value)\" [ngClass]=\"{'disabled': item.disabled, 'clickable': !item.disabled}\">\n                    <label class=\"custom-control-label\" for=\"{{item.id}}\">{{ item.name | sqMessage }}</label>\n                </div>\n            </section>\n            <b><label for=\"label\">{{'msg#labels.labels' | sqMessage}}</label></b>\n            <sq-labels-autocomplete\n                (labelsUpdate)=\"onLabelsChanged($event)\"\n                [public]=\"model.properties.public\"\n                [disableAutocomplete]=\"model.properties.disableAutocomplete\"\n                [allowNewLabels]=\"model.properties.allowNewLabels\"\n                [allowManagePublicLabels]=\"model.properties.allowManagePublicLabels\">\n            </sq-labels-autocomplete>\n        </div>\n    </sq-modal>\n</form>\n","import { Component, Input, OnChanges, ChangeDetectorRef, SimpleChanges, DoCheck, Optional } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl } from '@angular/forms';\nimport { Utils } from '@sinequa/core/base';\nimport { AppService } from '@sinequa/core/app-utils';\nimport { AbstractFacet, BsFacetCard, FacetService } from '@sinequa/components/facet';\nimport { Results, ListAggregation, AggregationItem } from '@sinequa/core/web-services';\nimport { SearchService } from '@sinequa/components/search';\nimport { Action } from '@sinequa/components/action';\nimport { UserPreferences } from '@sinequa/components/user-settings';\nimport { SelectionService } from '@sinequa/components/selection';\nimport { HeatmapItem } from './heatmap.component';\n\n@Component({\n    selector: \"sq-facet-heatmap\",\n    templateUrl: './facet-heatmap.component.html'\n})\nexport class BsFacetHeatmapComponent extends AbstractFacet implements OnChanges, DoCheck {\n    @Input() results: Results;\n    @Input() aggregation= \"Heatmap\";\n    @Input() name?: string;\n\n    // Fields primarily used for a cross-distribution heatmap\n    @Input() fieldX?: string;\n    @Input() fieldY?: string;\n    @Input() fieldsX?: string[];\n    @Input() fieldsY?: string[];\n\n    // Field used for a cooccurrence heatmap (optionally fieldX and fieldY can be used for filtering based on axes)\n    @Input() fieldCooc?: string; \n    \n    // Graphical settings\n    @Input() height = 600; // Height of the SVG viewbox (will adjust to container while preserving aspect ratio)\n    @Input() width = 600; // Width of the SVG viewbox (will adjust to container while preserving aspect ratio)\n    @Input() allowResizeOption = true; // The resize option allows to adjust the actual width/height in function of the number of items on each axis. If set to false, the tiles are resized so that the heatmap always matches the input width/height.\n    @Input() margin = {top: 100, bottom: 20, left: 100, right: 40};\n    @Input() transition = 1000; // Transition time in ms (0 to avoid transitions)\n    @Input() buckets = 9; // Color buckets\n    @Input() colorScheme = \"schemeBlues\"; // Color scheme from D3\n    @Input() maxX = 20; // Max items on X\n    @Input() maxY = 20; // Max items on Y\n    @Input() theme: \"light\" | \"dark\" = \"light\";\n\n    // Interaction settings\n    @Input() itemsClickable = true;\n    @Input() axisClickable = true;\n    @Input() highlightSelected = true;\n\n    // Data\n    aggregationData?: ListAggregation;\n    data?: HeatmapItem[];\n\n    // Actions\n    selectFieldX: Action;\n    selectFieldY: Action;\n    clearFilters: Action;\n\n    // Settings form\n    form: FormGroup;\n\n    // Selected items\n    readonly selectedItems = new Set<string>();\n\n    // A flag to wait for the parent component to actually display this child, since creating\n    // the heatmap component without displaying causes strange bugs...\n    ready = false;\n\n    constructor(\n        public appService: AppService,\n        public searchService: SearchService,\n        public facetService: FacetService,\n        public selectionService: SelectionService,\n        public formBuilder: FormBuilder,\n        public cdRef: ChangeDetectorRef,\n        public prefs: UserPreferences,\n        @Optional() public cardComponent?: BsFacetCard\n    ){\n        super();\n           \n        // Clear the current filters\n        this.clearFilters = new Action({\n            icon: \"far fa-minus-square\",\n            title: \"msg#facet.clearSelects\",\n            action: () => {\n                this.searchService.query.removeSelect(this._name);\n                this.searchService.search();\n            }\n        });\n\n        // Listen to selection changes & update the heatmap items accordingly\n        this.selectionService.events.subscribe(() => {\n            if(this.highlightSelected) {\n                // Update the selectedItems set\n                this.updateSelectedItems();\n    \n                // Update the data\n                if(this.data){\n                    this.data.forEach(item => item.selected = this.selectedItems.has(this.fieldCooc ? item.value : item.display));\n                    this.cdRef.markForCheck();\n                }\n            }\n        });\n    }\n\n    // The name of the heatmap is used to identify it in the list of breadcrumbs and the user preferences\n    get _name(): string{\n        return this.name || 'heatmap-'+this.aggregation.toLowerCase();\n    }\n\n    /**\n     * On changes triggers when the results change (following a new query)\n     */\n    ngOnChanges(changes: SimpleChanges) {\n        this.updateActions();\n        // Create the heatmap data\n        if(changes['results'] || changes['aggregation']) {\n            this.updateData();\n        }\n    }\n    \n    ngDoCheck(){\n        // We check that the parent component (if any) as been expanded at least once so that the fusioncharts\n        // gets created when it is visible (otherwise, there can be visual bugs...)\n        this.ready = !this.cardComponent?._collapsed;\n    }\n\n    \n    /**\n     * Update the actions for selecting the X or Y fields\n     */\n    updateActions() {\n        // Create or update the actions to change the X and Y axis\n        if(this.fieldsX){\n            if(!this.selectFieldX){\n                this.selectFieldX = this.selectField('x');\n            }\n            this.selectFieldX.update();\n        }\n        if(this.fieldsY){\n            if(!this.selectFieldY){\n                this.selectFieldY = this.selectField('y');\n            }\n            this.selectFieldY.update();\n        }\n    }\n\n    /**\n     * Updates the heatmap data\n     */\n    updateData() {\n        if(this.results) {\n            this.aggregationData = this.facetService.getAggregation(this.aggregation, this.results);\n            if(!this.aggregationData){\n                this.getHeatmapData();\n            }\n            else {\n                this.data = this.processAggregation();\n            }\n        }\n        else {\n            this.data = undefined;\n        }\n    }\n\n    /**\n     * This method is called by the parent sq-facet-card when the settings\n     * button is clicked. This has the effect of displaying the settingsTpl template\n     * instead of the heatmap.\n     * @param opened if true settings are opened, if false they are closed\n     */\n    onOpenSettings(opened: boolean){\n        if(opened) {\n\n            const maxXControl = new FormControl(this.maxXPref);\n            const maxYControl = new FormControl(this.maxYPref);\n            const rescaleControl = new FormControl(!!this.prefs.get(this._name+'-rescale'));\n            const colorControl = new FormControl(this.colorSchemePref);\n\n            this.form = this.formBuilder.group({\n                maxX: maxXControl,\n                maxY: maxYControl,\n                scaleAxes: rescaleControl,\n                colors: colorControl\n            });\n\n            this.form.valueChanges.subscribe(_ => {\n                this.prefs.set(this._name+'-max-x', maxXControl.value, true);\n                this.prefs.set(this._name+'-max-y', maxYControl.value, true);\n                this.prefs.set(this._name+'-rescale', rescaleControl.value, true);\n                this.prefs.set(this._name+'-color-scheme', colorControl.value, true);\n                this.debounceSync();\n            });\n        }\n        else {\n            this.updateData();\n        }\n    }\n\n    // Debounce syncing to avoid many calls to the user settings web service\n    debounceSync = Utils.debounce(() => {\n        this.prefs.sync();\n    }, 1000);\n\n    /**\n     * This method resets all the user preferences and rebuilds the settings form,\n     * so that the values displayed are up-to-date\n     */\n    setDefaults() {\n        this.prefs.delete(this._name+'-field-x', true);\n        this.prefs.delete(this._name+'-field-y', true);\n        this.prefs.delete(this._name+'-max-x', true);\n        this.prefs.delete(this._name+'-max-y', true);\n        this.prefs.delete(this._name+'-rescale', true);\n        this.prefs.delete(this._name+'-color-scheme', true);\n        this.prefs.sync();\n        this.onOpenSettings(true);\n    }\n\n    /**\n     * Returns the list of actions to display for this facet component\n     */\n    get actions(): Action[] {\n        const actions: Action[] = [];\n        if(this.facetService.hasFiltered(this._name)){\n            actions.push(this.clearFilters);\n        }\n        actions.push(this.selectFieldY, this.selectFieldX);\n        return actions;\n    }\n\n    /**\n     * Queries the server for the heatmap data via the Search Service\n     */\n    getHeatmapData() {\n        if(!this.appService.getCCAggregation(this.aggregation)) {\n            throw new Error(`Aggregation ${this.aggregation} does not exist in the Query web service configuration`);\n        }\n        const query = Utils.copy(this.searchService.query);\n        query.action = \"aggregate\";\n        query.aggregations = [this.aggregation];\n        if(!this.fieldCooc) {\n            query[\"heatmapField1\"] = this.fieldXPref;\n            query[\"heatmapField2\"] = this.fieldYPref;\n        }\n\n        this.searchService.getResults(query).subscribe(\n            results => {\n                this.aggregationData = results.aggregations[0] as ListAggregation;\n                this.data = this.processAggregation();\n            }\n        );\n    }\n\n    /**\n     * Transform an aggregation into a list of HeatmapItem objects\n     */\n    processAggregation(): HeatmapItem[] | undefined {\n        if (!this.aggregationData || !this.aggregationData.items) {\n            return undefined;\n        }\n        if(this.fieldCooc) {\n            return this.aggregationData.items.map(this.parseCooccurrenceItem);\n        }\n        else {\n            return this.aggregationData.items.map(this.parseCrossDistributionItem);\n        }\n    }\n\n    /**\n     * Default parsing method for cross-distribution aggregation data\n     */\n    @Input() parseCrossDistributionItem: (i:AggregationItem) => HeatmapItem \n    = value => {\n        if(!value.display){\n            throw new Error(`Aggregation Item '${value.value}' has no display value`);\n        }\n        const parts = value.display.split(\"/\");\n        if(parts.length < 2){\n            throw new Error(`'${value.display}' does not contain the '/' cross-distribution separator`);\n        }\n        return {\n            x: parts[0],\n            y: parts[1],\n            count: value.count,\n            display: value.display,\n            value: value.value as string,\n            selected: this.selectedItems.has(value.display)\n        };\n    }\n    \n    /**\n     * Default parsing method for cooccurrence aggregation data\n     */\n    @Input() parseCooccurrenceItem: (i:AggregationItem) => HeatmapItem \n    = value => {\n        const val = value.display || value.value.toString();\n        const parts = val.substr(1, val.length-2).split(\")#(\");\n        if(parts.length < 2){\n            throw new Error(`'${val}' is not formatted as a co-occurrence: (value 1)#(value 2)`);\n        }\n        return {\n            x: parts[0],\n            y: parts[1],\n            count: value.count,\n            display: `${parts[0]} - ${parts[1]}`,\n            value: value.value.toString(),\n            selected: this.selectedItems.has(value.value.toString())\n        };\n    }\n\n    /**\n     * Callback when a heatmap time is clicked\n     * @param item \n     */\n    onItemClicked(item: HeatmapItem){\n        if(this.aggregationData){\n            this.facetService.addFilterSearch(this._name, this.aggregationData, item);\n        }\n    }\n\n    /**\n     * Callback when a value of an axis is clicked\n     * @param item \n     */\n    onAxisClicked(item: {value: string, axis: 'x' | 'y'}){\n        this.searchService.addFieldSelect(item.axis === 'x'? this.fieldXPref : this.fieldYPref, item);\n        this.searchService.search();\n    }\n\n    /**\n     * Helper method to build the actions for selecting each dimension\n     * @param axis \n     */\n    selectField(axis: 'x' | 'y'): Action {\n        return new Action({\n            title: \"Select field\",\n            scrollable: true,\n            updater: (action) => {\n                action.name = axis === 'x'? this.fieldXPref : this.fieldYPref;\n                action.text = this.appService.getPluralLabel(axis === 'x'? this.fieldXPref : this.fieldYPref);\n                action.icon = \"sq-icon-\"+(axis === 'x'? this.fieldXPref : this.fieldYPref);\n                action.children = ((axis === 'x'? this.fieldsX : this.fieldsY) || [])\n                    .filter(f => f !== (axis === 'x'? this.fieldXPref : this.fieldYPref))\n                    .map(f => {\n                        return new Action({\n                            name: f,\n                            text: this.appService.getPluralLabel(f),\n                            icon: \"sq-icon-\"+f,\n                            action : () => {\n                                this.prefs.set(this._name+'-field-'+axis, f);\n                                this.updateActions();\n                                this.updateData();\n                            }\n                        });\n                    });\n            }\n        });\n    }\n\n    /**\n     * When the list of selected record changes we need to refresh the\n     * selectedItems Set (which can then be used to set the 'selected'\n     * property of HeatmapItem)\n     */\n    updateSelectedItems() {\n\n        this.selectedItems.clear();\n\n        if(this.results){\n\n            this.results.records\n                .filter(r => r.$selected)\n                .forEach(r => {\n\n                    if(this.fieldCooc) {                \n                        if(r[this.fieldCooc]){\n                            r[this.fieldCooc].forEach(v => this.selectedItems.add(v.value));                                \n                        }\n                    }\n\n                    else {\n                        if(r[this.fieldXPref] && r[this.fieldYPref]){\n                            r[this.fieldXPref].forEach(x => {\n                                r[this.fieldYPref].forEach(y => {\n                                    this.selectedItems.add(x.display+\"/\"+y.display);\n                                });\n                            });\n                        }\n                    }\n            });\n        }\n    }\n\n    // Accessor methods to get the preferred or default values of the heatmap parameters\n\n    get fieldXPref(): string {\n        return this.prefs.get(this._name+'-field-x') || this.fieldX;\n    }\n    \n    get fieldYPref(): string {\n        return this.prefs.get(this._name+'-field-y') || this.fieldY;\n    }\n\n    get maxXPref(): number {\n        return this.prefs.get(this._name+'-max-x') || this.maxX;\n    }\n    \n    get maxYPref(): number {\n        return this.prefs.get(this._name+'-max-y') || this.maxY;\n    }\n\n    get colorSchemePref(): string {\n        return this.prefs.get(this._name+'-color-scheme') || this.colorScheme;\n    }\n    \n    get widthPref(): number {\n        if(this.prefs.get(this._name+'-rescale')){\n            return ((this.width - this.margin.left - this.margin.right) * this.maxXPref / this.maxX) + this.margin.left + this.margin.right\n        }\n        return this.width;\n    }\n    \n    get heightPref(): number {\n        if(this.prefs.get(this._name+'-rescale')){\n            return ((this.height - this.margin.top - this.margin.bottom) * this.maxYPref / this.maxY) + this.margin.top + this.margin.bottom\n        }\n        return this.height;\n    }\n}","<sq-heatmap *ngIf=\"data && ready\"\n    [data]=\"data\"\n    [height]=\"heightPref\"\n    [width]=\"widthPref\"\n    [margin]=\"margin\"\n    [transition]=\"transition\"\n    [itemsClickable]=\"itemsClickable\"\n    [axisClickable]=\"axisClickable\"\n    [buckets]=\"buckets\"\n    [colorScheme]=\"colorSchemePref\"\n    [maxX]=\"maxXPref\"\n    [maxY]=\"maxYPref\"\n    [theme]=\"theme\"\n\n    (itemClicked)=\"onItemClicked($event)\"\n    (axisClicked)=\"onAxisClicked($event)\"\n>\n</sq-heatmap>\n\n<div class=\"text-center py-5 px-3\" *ngIf=\"!data\">\n    <i>{{'msg#heatmap.nodata' | sqMessage}}</i>\n</div>\n\n<ng-template #settingsTpl>\n    <div class=\"card-body\">\n        <form [formGroup]=\"form\">\n            <div class=\"form-group\">\n                <label for=\"maxX\">{{'msg#heatmap.maxX' | sqMessage}} ({{maxXPref}})</label>\n                <input type=\"range\" class=\"form-control-range\" id=\"maxX\" min=\"10\" max=\"40\" formControlName=\"maxX\">\n\n                <label for=\"maxY\">{{'msg#heatmap.maxY' | sqMessage}} ({{maxYPref}})</label>\n                <input type=\"range\" class=\"form-control-range\" id=\"maxY\" min=\"10\" max=\"100\" formControlName=\"maxY\">\n                \n                <div class=\"custom-control custom-checkbox my-1\" *ngIf=\"allowResizeOption\">\n                    <input class=\"custom-control-input\" type=\"checkbox\" id=\"scaleAxes\" formControlName=\"scaleAxes\">\n                    <label class=\"custom-control-label\" for=\"scaleAxes\">{{'msg#heatmap.rescale' | sqMessage}}</label>\n                </div>\n\n                <hr>\n\n                <label for=\"colors\">{{'msg#heatmap.colors' | sqMessage}}</label>\n                <select id=\"colors\" class=\"form-control\" formControlName=\"colors\">\n                    <option [ngValue]=\"'schemeBlues'\">{{'msg#heatmap.blue' | sqMessage}}</option>\n                    <option [ngValue]=\"'schemeReds'\">{{'msg#heatmap.red' | sqMessage}}</option>\n                    <option [ngValue]=\"'schemeGreens'\">{{'msg#heatmap.green' | sqMessage}}</option>\n                    <option [ngValue]=\"'schemeRdBu'\">{{'msg#heatmap.diverging' | sqMessage}}</option>\n                    <option [ngValue]=\"'schemeSpectral'\">{{'msg#heatmap.diverging' | sqMessage}}</option>\n                    <option [ngValue]=\"'schemeYlGnBu'\">{{'msg#heatmap.cool' | sqMessage}}</option>\n                </select>\n\n                <hr>\n\n                <button class=\"btn btn-light\" (click)=\"setDefaults()\">{{'msg#heatmap.defaults' | sqMessage}}</button>\n            </div>\n        </form>\n    </div>\n</ng-template>","import {Utils} from \"@sinequa/core/base\";\nimport {enSearch, frSearch, deSearch} from \"@sinequa/components/search\";\nimport {enSelection, frSelection, deSelection} from \"@sinequa/components/selection\";\n\nimport _enResultsView from \"./en\";\nimport _frResultsView from \"./fr\";\nimport _deResultsView from \"./de\";\n\nconst enResultsView = Utils.merge({}, _enResultsView, enSearch, enSelection);\nconst frResultsView = Utils.merge({}, _frResultsView, frSearch, frSelection);\nconst deResultsView = Utils.merge({}, _deResultsView, deSearch, deSelection);\n\nexport { enResultsView, frResultsView, deResultsView };\n","const VALIDATION_MODULE_PROVIDERS = [];\n\nexport {VALIDATION_MODULE_PROVIDERS};\n","import {Component, Input, OnInit, ElementRef, HostBinding, ChangeDetectionStrategy} from \"@angular/core\";\nimport {Action} from \"../../action\";\n\nexport interface DropdownMenuOptions {\n    item: Action;\n    rightAligned?: boolean;\n    showMenuClass: string;\n    header?: string;\n}\n\n@Component({\n    selector: \"[sq-dropdown-menu]\",\n    host: {\n        \"class\": \"dropdown-menu\",\n        \"role\": \"menu\"\n    },\n    templateUrl: \"./dropdown-menu.html\",\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BsDropdownMenu implements OnInit {\n    children: Action[];\n    \n    private _options: DropdownMenuOptions;\n    \n    @Input(\"sq-dropdown-menu\")\n    set options(opts: DropdownMenuOptions) {\n        this._options = {...opts};\n        this.children = opts.item.children?.filter(child => !child.hidden) || [];\n    }\n    get options(): DropdownMenuOptions {\n        return this._options;\n    }\n    \n    @HostBinding(\"class.dropdown-menu-right\") rightAligned;\n\n    constructor(\n        private elementRef: ElementRef) {\n    }\n\n    ngOnInit() {\n        const element: HTMLElement = this.elementRef.nativeElement;\n        if (this.options.item.scrollable) {\n            element.classList.add(\"sq-scrollable-menu\");\n        }\n        else if (this.options.item.scrollGroup) {\n            element.classList.add(\"sq-scroll-menu\");\n        }\n        this.rightAligned = this.options.rightAligned;\n    }\n\n    private getLi(element: HTMLElement): HTMLElement | null {\n        let element1: HTMLElement | null = element;\n        while (element1 && element1.nodeName !== \"LI\") {\n            element1 = element1.parentElement;\n        }\n        return element1;\n    }\n\n    click(item: Action, event: UIEvent) {\n        if (!this.options.item.disabled) {\n            // Handle sub-menu opening\n            let isOpen = false;\n            const li = this.getLi(<HTMLElement>event.target);\n            if (!!li && li.classList.contains(\"dropdown-submenu\")) {\n                event.preventDefault();\n                event.stopPropagation();\n                isOpen = li.classList.contains(this.options.showMenuClass);\n                const ul = li.parentElement;\n                if (ul) {\n                    for (let i = 0, ic = ul.children.length; i < ic; i++) {\n                        const _li = ul.children[i];\n                        _li.classList.remove(this.options.showMenuClass);\n                    }\n                }\n                // NB toggle's second param does not work on IE\n                // li.classList.toggle(this.options.showMenuClass, !isOpen);\n                if (!isOpen) {\n                    li.classList.add(this.options.showMenuClass);\n                }\n            }\n            if (item.action) {\n                item.action(item, event);\n            }\n            if (item.toggle) {\n                item.toggle(item, !isOpen);\n            }\n        }\n    }\n}","<h6 *ngIf=\"options.item.title && options.item.headerGroup\" class=\"dropdown-header\">{{ options.item.title | sqMessage:options.item.messageParams }}</h6>\n<ng-container *ngFor=\"let child of options.item.children\">\n    <li *ngIf=\"!child.hidden\" class=\"{{child.separator ? 'dropdown-divider' : child.scrollGroup ? 'sq-scroll-menu-item open' : child.hasChildren ? 'dropdown-submenu' : ''}}\" title=\"{{child.title | sqMessage:child.messageParams}}\" [attr.aria-label]=\"child.title | sqMessage:child.messageParams\">\n        <ng-container *ngIf=\"!child.separator\">\n            <a *ngIf=\"!child.scrollGroup && child.href\" class=\"dropdown-item {{child.disabled ? 'disabled' : ''}}\" tabindex=\"-1\" href=\"{{child.href}}\">\n                <sq-action-item-content [item]=\"child\" [text]=\"child.text\" [in-dropdown-menu]=\"true\"></sq-action-item-content>\n            </a>\n            <a *ngIf=\"!child.scrollGroup && !child.href && !child.component\" href=\"javascript:void(0)\" class=\"dropdown-item {{child.hasChildren ? 'dropdown-toggle': ''}} {{child.disabled ? 'disabled' : ''}}\" [attr.data-toggle]=\"child.hasChildren ? 'dropdown' : ''\" tabindex=\"-1\" (click)=\"click(child, $event)\">\n                <sq-action-item-content [item]=\"child\" [text]=\"child.text\" [in-dropdown-menu]=\"true\"></sq-action-item-content>\n            </a>\n            <sq-action-item-content *ngIf=\"child.component\" [item]=\"child\" [text]=\"child.text\" [in-dropdown-menu]=\"true\"></sq-action-item-content>\n            <ul *ngIf=\"child.hasChildren\" [sq-dropdown-menu]=\"{item: child, showMenuClass: options.showMenuClass}\"></ul>\n        </ng-container>\n    </li>\n</ng-container>","export * from \"./result-extracts/result-extracts\";\nexport * from \"./result-icon/result-icon\";\nexport * from \"./result-missing-terms/result-missing-terms\";\nexport * from \"./result-module\";\nexport * from \"./result-source/result-source\";\nexport * from \"./result-thumbnail/result-thumbnail\";\nexport * from \"./result-title/result-title\";\nexport * from \"./results-counter/results-counter\";\nexport * from \"./sponsored-results/sponsored-results\";\nexport * from \"./user-rating/user-rating\";\nexport * from \"./messages/index\";","export default {\n    \"heatmap\": {\n        \"name\": \"Heatmap-Diagramm\",\n        \"nodata\": \"Keine Daten zum Anzeigen\",\n        \"maxX\": \"Maximale Anzahl von Elementen auf der X-Achse\",\n        \"maxY\": \"Maximale Anzahl von Elementen auf der Y-Achse\",\n        \"rescale\": \"Achsen neu skalieren\",\n        \"colors\": \"Farbschema\",\n        \"blue\": \"Blau\",\n        \"red\": \"Rot\",\n        \"green\": \"Grün\",\n        \"diverging\": \"Abweichend\",\n        \"spectral\": \"Spektral\",\n        \"cool\": \"Kalt\",\n        \"defaults\": \"Standard\",\n        \"showing\": \"Zeige {shown, number} von {total, number} Elementen\",\n        \"tooltip\": \"{count, plural, one {# Element} other {# Elemente}}\"\n    }\n};\n","import {Component, OnInit, OnDestroy, Inject} from \"@angular/core\";\nimport {FormBuilder, FormGroup, FormControl, Validators} from \"@angular/forms\";\nimport {Subscription} from \"rxjs\";\nimport {MODAL_MODEL, ModalButton, ModalResult} from \"@sinequa/core/modal\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {SavedQuery} from \"../../saved-queries.service\";\n\n@Component({\n    selector: \"sq-edit-saved-query\",\n    templateUrl: \"./edit-saved-query.html\"\n})\nexport class BsEditSavedQuery implements OnInit, OnDestroy {\n    nameControl: FormControl;\n    form: FormGroup;\n    formChanges: Subscription;\n    buttons: ModalButton[];\n\n    constructor(\n        @Inject(MODAL_MODEL) public model: SavedQuery,\n        private formBuilder: FormBuilder) {\n    }\n\n    ngOnInit() {\n        this.nameControl = new FormControl(this.model.name, Validators.required);\n        this.form = this.formBuilder.group({\n            savedQueryName: this.nameControl\n        });\n        this.formChanges = Utils.subscribe(this.form.valueChanges,\n            (value) => {\n                this.model.name = this.nameControl.value;\n            }\n        );\n\n        this.buttons = [\n            new ModalButton({\n                result: ModalResult.OK,\n                primary: true,\n                validation: this.form\n            }),\n            new ModalButton({\n                result: ModalResult.Cancel\n            })\n        ];\n    }\n\n    ngOnDestroy() {\n        this.formChanges.unsubscribe();\n    }\n}\n","<form name=\"editSavedQuery\" novalidate [formGroup]=\"form\">\n    <sq-modal [title]=\"'msg#editSavedQuery.title'\" [buttons]=\"buttons\">\n        <div class=\"form-group sq-form-group\">\n            <label for=\"savedQueryName\">{{'msg#editSavedQuery.name' | sqMessage}}</label>\n            <input [sqValidation]=\"form\" type=\"text\" class=\"form-control\" id=\"savedQueryName\" formControlName=\"savedQueryName\" spellcheck=\"off\" sqAutofocus>\n        </div>\n    </sq-modal>\n</form>","import { Component, Input, OnChanges } from \"@angular/core\";\nimport { FormGroup } from \"@angular/forms\";\nimport { AppService } from '@sinequa/core/app-utils';\n\n@Component({\n    selector: \"sq-advanced-form-checkbox\",\n    templateUrl: \"./advanced-form-checkbox.html\",\n})\nexport class BsAdvancedFormCheckbox implements OnChanges {\n    @Input() form: FormGroup;\n    @Input() field: string;\n    @Input() label: string;\n\n    constructor(public appService: AppService) {}\n\n    ngOnChanges() {\n        if(this.label === undefined) {\n            this.label = this.appService.getLabel(this.field);\n        }\n    }\n}\n","<div class=\"form-group\" [formGroup]=\"form\">\n    <div class=\"form-check\">\n        <label class=\"custom-control custom-checkbox\">\n            <input\n                class=\"custom-control-input\"\n                type=\"checkbox\"\n                sqAdvancedFormValidation\n                [field]=\"field\"\n                [validationForm]=\"form\"\n                [formControlName]=\"field\">\n            <span class=\"custom-control-label\">{{label | sqMessage}}</span>\n        </label>\n    </div>\n</div>\n","export default {\n    \"system\": {\n        \"date\": \"{time, selectordinal, =0 {{date, date}} other {{date, date} à {date, time, medium}}}\",\n        \"number\": \"{value, number}\",\n        \"boolean\": \"{value, select, true {vrai} other {faux}}\",\n        \"percent\": \"{value, number, percent}\",\n        \"fieldSeparator\": \" : \",\n        \"memorySize\": {\n            \"bytes\": \"{value, number, sqZeroDecimalPlaces} o\",\n            \"kb\": \"{value, number, sqZeroDecimalPlaces} Ko\",\n            \"mb\": \"{value, number, sqOneDecimalPlace} Mo\",\n            \"gb\": \"{value, number, sqTwoDecimalPlaces} Go\",\n            \"tb\": \"{value, number, sqThreeDecimalPlaces} To\",\n            \"pb\": \"{value, number, sqFourDecimalPlaces} Po\"\n        }\n    },\n\n    \"error\": {\n        \"serverError\": \"Erreur de serveur\",\n        \"loginCancelled\": \"Connexion annulée\",\n        \"processedCredentialsError\": \"Impossible d'obtenir les informations d'identification\",\n        \"autoLoginError\": \"Echec de la connexion\",\n        \"principalSwitched\": \"L'utilisateur connecté a été modifié\",\n        \"userOverrideFailure\": \"Echec de surchargement de l'utilisateur\",\n        \"responseLoadFailure\": \"Echec de chargement de la réponse\",\n        \"unknownError\": \"Erreur inconnue\"\n    },\n\n    \"language\": {\n        \"ar\": \"Arabe\",\n        \"da\": \"Danois\",\n        \"de\": \"Allemand\",\n        \"el\": \"Grec\",\n        \"en\": \"Anglais\",\n        \"es\": \"Espagnol\",\n        \"fi\": \"Finlandais\",\n        \"fr\": \"Français\",\n        \"it\": \"Italien\",\n        \"ja\": \"Japonais\",\n        \"ko\": \"Coréen\",\n        \"nl\": \"Néerlandais\",\n        \"no\": \"Norvégien\",\n        \"pl\": \"Polonais\",\n        \"pt\": \"Portugais\",\n        \"ro\": \"Roumain\",\n        \"ru\": \"Russe\",\n        \"sv\": \"Suédois\",\n        \"th\": \"Thaïlandais\",\n        \"zh\": \"Chinois traditionnel\",\n        \"zs\": \"Chinois simplifié\",\n        \"zz\": \"Inconnu\"\n    },\n};\n","import {Component, OnInit, OnDestroy, Inject} from \"@angular/core\";\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {Subscription} from \"rxjs\";\nimport {debounceTime} from \"rxjs/operators\";\nimport {MODAL_MODEL, ModalButton, ModalResult} from \"@sinequa/core/modal\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {UserOverride} from \"@sinequa/core/login\";\n\n@Component({\n    selector: \"sq-override-user\",\n    templateUrl: \"./override-user.html\"\n})\nexport class BsOverrideUser implements OnInit, OnDestroy {\n    form: FormGroup;\n    formChanges: Subscription;\n    buttons: ModalButton[];\n\n    constructor(\n        @Inject(MODAL_MODEL) public model: UserOverride,\n        private formBuilder: FormBuilder) {\n    }\n\n    ngOnInit() {\n        this.form = this.formBuilder.group({\n            \"userName\": [this.model.userName, Validators.required],\n            \"domain\": [this.model.domain, Validators.required]\n        });\n        this.formChanges = Utils.subscribe(this.form.valueChanges.pipe(debounceTime(100)),\n            (value) => {\n                Utils.merge(this.model, value);\n                //this.model.userName = this.form.get(\"userName\").value;\n                //this.model.domain = this.form.get(\"domain\").value;\n            });\n\n        this.buttons = [\n            new ModalButton({\n                result: ModalResult.OK,\n                primary: true,\n                validation: <any>this.form\n            }),\n            new ModalButton({\n                result: ModalResult.Cancel\n            })\n        ];\n    }\n\n    ngOnDestroy() {\n        this.formChanges.unsubscribe();\n    }\n}","<form name=\"overrideUser\" novalidate [formGroup]=\"form\">\n    <sq-modal [title]=\"'msg#overrideUser.title'\" [buttons]=\"buttons\">\n        <div class=\"form-group sq-form-group\">\n            <label for=\"userName\">{{'msg#overrideUser.userName' | sqMessage}}</label>\n            <input [sqValidation]=\"form\" type=\"text\" class=\"form-control\" id=\"userName\" formControlName=\"userName\" spellcheck=\"off\" sqAutofocus>\n        </div>\n        <div class=\"form-group sq-form-group\">\n            <label for=\"domain\">{{'msg#overrideUser.domain' | sqMessage}}</label>\n            <input [sqValidation]=\"form\" type=\"text\" class=\"form-control\" id=\"domain\" formControlName=\"domain\" spellcheck=\"off\">\n        </div>\n    </sq-modal>\n</form>","import enCollapse from \"./en\";\nimport frCollapse from \"./fr\";\nimport deCollapse from \"./de\";\n\nexport { enCollapse, frCollapse, deCollapse };\n","import {Injectable, InjectionToken, Inject, Type, OnDestroy} from \"@angular/core\";\nimport {Subject} from \"rxjs\";\nimport {UserSettingsWebService, AuditEvents, AuditEvent} from \"@sinequa/core/web-services\";\nimport {ModalService, ModalResult} from \"@sinequa/core/modal\";\nimport {Query} from \"@sinequa/core/app-utils\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {SearchService} from \"@sinequa/components/search\";\n\n// From core/models/usersettings\nexport namespace Alert {\n    export enum Frequency {\n        Daily,\n        Hourly,\n        Immediate,\n        Weekly,\n        Monthly\n    }\n\n    export enum Days {\n        None = 0x00,\n        Monday = 0x01,\n        Tuesday = 0x02,\n        Wednesday = 0x04,\n        Thursday = 0x08,\n        Friday = 0x10,\n        Saturday = 0x20,\n        Sunday = 0x40,\n        AllDays = (Monday | Tuesday | Wednesday | Thursday | Friday | Saturday | Sunday),\n        WeekDays = (Monday | Tuesday | Wednesday | Thursday | Friday)\n    }\n}\n\nexport interface Alert {\n    name: string;\n    description?: string;\n    query: Query;\n    timezone: string;\n    timezoneOffset?: string;\n    frequency: Alert.Frequency;\n    days: Alert.Days;\n    interval: number; // every \"n\"...\n    index: number; // day of month\n    times: string; //times: number[]; // offsets from 00:00 in milliseconds\n    active: boolean;\n    combine: boolean;\n    respectTabSelection: boolean;\n    appQueryUrl?: string; // the URL reference the query of the Alert in the SBA.\n}\n\n// from core/models/audit\nexport const enum AlertEventType {\n    Loaded = \"Alert_Loaded\",\n    Patched = \"Alert_Patched\",\n\n    Add = \"Alert_Add\",\n    Delete = \"Alert_Delete\",\n    DeleteAll = \"Alert_DeleteAll\",\n    Update = \"Alert_Update\",\n\n    Search_AlertQuery = \"Search_AlertQuery\",\n}\n\n// Types of events triggering a change event\nexport const ALERT_CHANGE_EVENTS = [\n    AlertEventType.Loaded,\n    AlertEventType.Add,\n    AlertEventType.Delete,\n    AlertEventType.Update\n];\n\n\n// CRUD Events\nexport interface AlertChangeEvent {\n    type: AlertEventType;\n    alert?: Alert;\n}\n\n\n// Model expected by the ManageAlerts Modal.\nexport interface ManageAlertsModel {\n    alerts: Alert[];\n    auditEvents?: AuditEvent[];\n    searchRoute?: string;\n}\n\n/**\n * The modal types are unknown to this service.\n * The module using this service must provide these components\n * in their forRoot() method\n *\n * Example below:\n *\n *  public static forRoot(): ModuleWithProviders<AlertsModule> {\n        return {\n            ngModule: AlertsModule,\n            providers: [\n                {\n                    provide: ALERT_COMPONENTS,\n                    useValue: {\n                        editAlertModal: EditAlert,\n                        manageAlertsModal: ManageAlerts\n                    }\n                },\n                AlertsService\n            ]\n        };\n    }\n *\n */\nexport interface AlertComponents {\n    editAlertModal: Type<any>;\n    manageAlertsModal: Type<any>;\n}\nexport const ALERT_COMPONENTS = new InjectionToken<AlertComponents>('ALERT_COMPONENTS');\nexport const WINDOW = new InjectionToken('WindowToken');\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AlertsService implements OnDestroy {\n\n    private readonly _events = new Subject<AlertChangeEvent>();\n    private readonly _changes = new Subject<AlertChangeEvent>();\n\n    constructor(\n        public userSettingsService: UserSettingsWebService,\n        public searchService: SearchService,\n        public modalService: ModalService,\n        @Inject(ALERT_COMPONENTS) public alertComponents: AlertComponents,\n        @Inject(WINDOW) private window : Window\n    ){\n        // Listen to the user settings\n        this.userSettingsService.events.subscribe(event => {\n            // E.g. new login occurs\n            // ==> Menus need to be rebuilt\n            this.events.next({type: AlertEventType.Loaded});\n        });\n        // Listen to own events, to trigger change events\n        this._events.subscribe(event => {\n            if(ALERT_CHANGE_EVENTS.indexOf(event.type) !== -1){\n                this.changes.next(event);\n            }\n        });\n    }\n\n    // GETTERS\n\n    /**\n     * Returns the list of this user's alerts.\n     * The list is stored in the user settings (this is a redirection).\n     * Using this service creates the list of alerts if it does not already exist.\n     */\n    public get alerts() : Alert[]{\n        if(!this.userSettingsService.userSettings)\n            this.userSettingsService.userSettings = {};\n        if(!this.userSettingsService.userSettings[\"alerts\"])\n            this.userSettingsService.userSettings[\"alerts\"] = [];\n        return <Alert[]> (<unknown>this.userSettingsService.userSettings[\"alerts\"]);\n    } // TODO: remove cast when UserSettings is updated\n\n    /**\n     * Triggers any event among AlertChangeEvent\n     * (use for fine-grained control of alerts workflow)\n     */\n    public get events() : Subject<AlertChangeEvent> {\n        return this._events;\n    }\n\n    /**\n     * Triggers when events affect the list of alerts\n     * (use to refresh alert menus)\n     * Cf. CHANGE_EVENTS list\n     */\n    public get changes() : Subject<AlertChangeEvent> {\n        return this._changes;\n    }\n\n    /**\n     * @returns true if there is at least one alert\n     */\n    public get hasAlert(): boolean {\n        return this.alerts.length > 0;\n    }\n\n    /**\n     * @returns an alert with the given name or undefined if it does not exist\n     * @param name\n     */\n    public alert(name: string): Alert | undefined {\n        const i = this.alertIndex(name);\n        return i>= 0? this.alerts[i] : undefined;\n    }\n\n    private alertIndex(name: string): number {\n        for (let i = 0, ic = this.alerts.length; i < ic; i++) {\n            const alert = this.alerts[i];\n            if (alert && alert.name === name) {\n                return i;\n            }\n        }\n        return -1;\n    }\n\n\n    // CRUD\n\n    /**\n     * Creates a new alert unless it already exists.\n     * Emits an Alert event.\n     * Update the data on the server.\n     * @param alert the alert to create\n     * @returns true if alert was created\n     */\n    public createAlert(alert: Alert) : boolean {\n\n        if(this.alertIndex(alert.name) >= 0)\n            return false; // This alert already exists\n\n        this.alerts.unshift(alert);\n        this.events.next({type : AlertEventType.Add, alert: alert});\n        this.patchAlerts([{\n            type: AlertEventType.Add,\n            detail: {\n                alert: alert.name\n            }\n        }]);\n        return true;\n    }\n\n    /**\n     * Update the alert at the given index, unless an alert with the same name\n     * already exists in the list of alerts.\n     * Emits an Alert event.\n     * Update the data on the server.\n     * @param alert the alert to update\n     * @param index the index at which to update the alert\n     * @returns true if alert was updated\n     */\n    public updateAlert(alert: Alert, index : number) : boolean {\n\n        const prevIndex = this.alertIndex(alert.name);\n        if(prevIndex !== -1 && index !== prevIndex)\n            return false; // An alert with the same name exists at a different index\n\n        if(index >= 0 && index < this.alerts.length){\n\n            this.alerts.splice(index, 1, alert);\n            this.events.next({type : AlertEventType.Update, alert: alert});\n            this.patchAlerts([\n                {\n                    type: AlertEventType.Update,\n                    detail: {\n                        alert: alert.name\n                    }\n                }\n            ]);\n            return true;\n\n        }\n        return false;   // This alert does not exist\n    }\n\n    /**\n     * Updates the full list of alerts.\n     * Emits an Alert event.\n     * Update the data on the server.\n     * @param alerts the new list of alerts\n     * @param auditEvents the list of audit events to log\n     */\n    public updateAlerts(alerts : Alert[], auditEvents?: AuditEvents) : boolean {\n        Utils.arraySet(this.alerts, alerts);\n        this.events.next({type : AlertEventType.Update});\n        this.patchAlerts(auditEvents);\n        return true;\n    }\n\n    /**\n     * Deletes the given alert (based on its name)\n     * Emits an Alert event.\n     * Update the data on the server.\n     * @param alert\n     * @returns true if alert was deleted\n     */\n    public deleteAlert(alert: Alert) : boolean {\n\n        const index = this.alertIndex(alert.name);\n\n        if(index === -1)\n            return false; // Nothing to delete\n\n        this.alerts.splice(index, 1);\n        this.events.next({type : AlertEventType.Delete, alert: alert});\n        this.patchAlerts([\n            {\n                type: AlertEventType.Delete,\n                detail: {\n                    alert: alert.name\n                }\n            }\n        ]);\n        return true;\n    }\n\n    /**\n     * Sets this alert to the current search context, using the search service\n     */\n    public setAlertToCurrentQuery(alert: Alert){\n        alert.query = Query.copy(this.searchService.query);\n    }\n\n    /**\n     * Updates Alerts in User settings.\n     * @param auditEvents : Audit Events to be triggered\n     * @returns an Observable which can be used to trigger further events\n     */\n    private patchAlerts(auditEvents?: AuditEvents) {\n        return this.userSettingsService.patch({alerts: this.alerts}, auditEvents)\n            .subscribe(\n                next => {\n                    this.events.next({type: AlertEventType.Patched});\n                },\n                error => {\n                    console.error(\"Could not patch Alerts!\", error);\n                }\n            );\n    }\n\n\n\n\n    // EVENT HANDLERS (Menus)\n\n    /**\n     * Uses the SearchService to perform a search returning all\n     * the documents matching this alert.\n     * @param alert\n     * @returns the search service promise\n     */\n    public searchAlert(alert: Alert, path?: string) : Promise<boolean> {\n        this.searchService.setQuery(Utils.extend(this.searchService.makeQuery(), Utils.copy(alert.query)));\n        this.events.next({type: AlertEventType.Search_AlertQuery, alert: alert});\n        return this.searchService.search( {path: path}, {\n            type: AlertEventType.Search_AlertQuery,\n            detail: {\n                alert: alert.name\n            }\n        });\n    }\n\n    /**\n     * Opens a dialog allowing a user to create a new alert.\n     * @returns a boolean promise resolved when the user closes the dialog\n     * the result is true if the alert was created.\n     */\n    public createAlertModal() : Promise<boolean> {\n        const alert: Alert = {\n            name: \"\",\n            description: \"\",\n            timezone: this.userSettingsService.timezone,\n            query: Query.copy(this.searchService.query),\n            frequency: Alert.Frequency.Daily,\n            days: Alert.Days.WeekDays,\n            interval: 1,\n            index: 1,\n            times: \"9:00\",\n            active: true,\n            combine: true,\n            respectTabSelection: false\n        };\n        const queryUrl = this.window.location.href;\n        return this.modalService.open(this.alertComponents.editAlertModal, {model: { alert: alert }})\n            .then((result) => {\n                if (result === ModalResult.OK) {\n\n                    const index = this.alertIndex(alert.name);\n                    if (index !== -1) {\n\n                        return this.modalService.yesNo(\"msg#alerts.alertAlreadyExists\")\n                            .then((result) => {\n                                if (result === ModalResult.Yes) {\n                                    alert.appQueryUrl = queryUrl;\n                                    return this.updateAlert(alert, index);\n                                }\n                                return false;\n                            });\n\n                    } else {\n                        alert.appQueryUrl = queryUrl;\n                        return this.createAlert(alert);\n                    }\n                }\n                return false;\n            });\n    }\n\n    /**\n     * Opens a dialog allowing a user to edit an existing alert.\n     * @param alert: The alert to edit\n     * @param noUpdate: if true, will not update the server after the edit\n     * @param searchRoute: the route to use when replaying the alert's query\n     * @returns a boolean promise resolved when the user closes the dialog\n     * the result is true if the alert was updated.\n     */\n    public editAlertModal(alert: Alert, noUpdate?: boolean, searchRoute?: string) : Promise<boolean> {\n\n        const prevName = alert.name;\n\n        const queryUrl = this.window.location.href;\n        return this.modalService.open(this.alertComponents.editAlertModal,  {model: { alert: alert, searchRoute: searchRoute }})\n            .then((result) => {\n\n                if (result === ModalResult.OK) {\n\n                    if(noUpdate) return true;\n\n                    const prevIndex = this.alertIndex(prevName);\n                    if(prevIndex === -1) return false; // this alert did not exist\n\n                    const index = this.alertIndex(alert.name);\n                    if (index !== -1 && index !== prevIndex) {  // An alert with the same (new) name exists\n\n                        return this.modalService.yesNo(\"msg#alerts.alertAlreadyExists\")\n                            .then((result) => {\n                                if (result === ModalResult.Yes) {\n                                    const prevAlert = this.alert(prevName);\n                                    if (prevAlert) {\n                                        this.deleteAlert(prevAlert); // Remove the alert with old name\n                                    }\n                                    alert.appQueryUrl = queryUrl;\n                                    return this.updateAlert(alert, this.alertIndex(alert.name)); // Update the alert with new name (index might have changed due to delete of old name)\n                                }\n                                return false;\n                            });\n\n                    } else {\n\n                        alert.appQueryUrl = queryUrl;\n                        return this.updateAlert(alert, prevIndex); // Update this alert\n\n                    }\n                }\n\n                return false;\n            });\n    }\n\n    /**\n     * Opens a dialog allowing a user to reorganize and edit the\n     * list of alerts.\n     * @returns a boolean promise resolved when the user closes the dialog\n     * the result is true is the list was updated.\n     */\n    public manageAlertsModal(searchRoute?: string) : Promise<boolean> {\n\n        const model: ManageAlertsModel =  { alerts: Utils.copy(this.alerts), searchRoute: searchRoute };\n\n        return this.modalService.open(this.alertComponents.manageAlertsModal, {model})\n            .then((result) => {\n                if (result === ModalResult.OK) {\n                    return this.updateAlerts(model.alerts, model.auditEvents);\n                }\n                return false;\n            });\n\n    }\n\n    ngOnDestroy() {\n        this.events.complete();\n        this.changes.complete();\n    }\n}\n","export * from \"./alerts.service\";\nexport * from \"./bootstrap/index\";\nexport * from \"./messages/index\";","export * from \"./public-api\";","import { Component, OnInit, Input } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ModalButton, ModalResult } from \"@sinequa/core/modal\";\nimport { UserSettingsWebService } from \"@sinequa/core/web-services\";\nimport { MapOf, Utils } from \"@sinequa/core/base\";\nimport { IntlService } from \"@sinequa/core/intl\";\nimport { Validator } from \"@sinequa/core/validation\";\n\nexport module JsonInfo {\n    export interface Entry {\n        type: string;\n        path: string;\n        valueType: string;\n        label: string;\n        list?: string;\n        pattern?: string;\n        min?: number | Date;\n        max?: number | Date;\n        validators?: Validator[];\n    }\n\n    export enum InputType {\n        Entry = 'JsonEntryInput',\n        Range = 'JsonRangeInput',\n        MultiEntry = 'JsonMultiEntryInput',\n    }\n\n    export enum ValueType {\n        String = 'String',\n        Int = 'Int',\n        Number = 'Number',\n        Date = 'Date',\n        Bool = 'Bool',\n    }\n\n    export interface EntryInput extends Entry {\n        type: InputType.Entry;\n    }\n\n    export interface RangeInput extends Entry {\n        type: InputType.Range;\n    }\n\n    export interface MultiEntryInput extends Entry {\n        type: InputType.MultiEntry;\n        distinct?: boolean;\n        nbVisibleLines?: number;\n    }\n}\n\n/**\n * Opens a dialog to modify the user settings.\n *\n */\n@Component({\n    selector: 'sq-edit-user-settings',\n    templateUrl: './edit-user-settings.html'\n})\nexport class BsEditUserSettings implements OnInit {\n\n    @Input() visibleThreshold = 0;\n    @Input() showUILanguageSelector?: boolean;\n\n    public model: MapOf<any>;\n    public layout: MapOf<JsonInfo.Entry>;\n    public form: FormGroup;\n    public buttons: ModalButton[];\n\n    constructor(\n        private userSettingsService: UserSettingsWebService,\n        private intlService: IntlService,\n        private formBuilder: FormBuilder,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.layout = {};\n        this.model = {\n            'language': this.intlService.currentLocale.name\n        };\n        this.form = this.formBuilder.group({\n            'selectedLocale': [this.intlService.currentLocale.name]\n        });\n\n        const onOkClicked = (_) => {\n            if (this.form.dirty) {\n                // Locale is treated separately because it is not really stored in the user settings.\n                const newLocale = this.form.value['selectedLocale'];\n                this.form.removeControl('selectedLocale');\n                if (!Utils.eqNC(this.model['language'], newLocale)) {\n                    Utils.subscribe(\n                        this.intlService.use(newLocale),\n                        response => console.log('editUserSettings UI language changed.')\n                    );\n                }\n\n                const patch = this.calculatePatch();\n                if (!Utils.isUndefined(patch) && !Utils.isEmpty(patch)) {\n                    const observable = this.userSettingsService.patch(patch);\n                    Utils.subscribe(\n                        observable,\n                        response => {\n                            if (this.userSettingsService.userSettings) {\n                                this.setNewValue(this.userSettingsService.userSettings, patch);\n                            }\n                            console.log('editUserSettings saved.');\n                        },\n                        error => console.log('editUserSettings save failed: ', error)\n                    );\n                }\n            }\n        };\n\n        this.buttons = [\n            new ModalButton({\n                result: ModalResult.OK,\n                primary: true,\n                validation: this.form as any,\n                action: onOkClicked\n            }),\n            new ModalButton({\n                result: ModalResult.Cancel\n            })\n        ];\n    }\n\n    private setNewValue(obj: MapOf<any>, newObj: MapOf<any>): void {\n        for (const key of Object.keys(newObj)) {\n            const value = newObj[key];\n            if (value === null) {\n                /* NOTE: Don't use delete obj[key] because some component may put an observer on the user settings property */\n                obj[key] = undefined;\n            }\n            else if (Utils.isObject(value)) {\n                if (Utils.isDate(value)) {\n                    obj[key] = new Date(value.valueOf());\n                }\n                else if (Utils.isRegExp(value)) {\n                    obj[key] = new RegExp(value);\n                }\n                else if (Utils.isArray(value)) {\n                    obj[key] = value.slice(0); // clone the array\n                }\n                else {\n                    if (!Utils.isObject(obj[key])) {\n                        obj[key] = Utils.isArray(value) ? [] : {};\n                    }\n                    this.setNewValue(obj[key], value);\n                }\n            }\n            else {\n                obj[key] = value;\n            }\n        }\n    }\n\n    /**\n     * Calculates the update patch for user settings.\n     *\n     * @returns the update patch.\n     */\n    private calculatePatch(): MapOf<any> {\n        const patch = {};\n        Object.keys(this.form.value).forEach(key => {\n            const formValue = this.ensureType(this.layout[key], this.readFormValue(key));\n            const paths = Utils.split(this.layout[key].path, '.');\n            const currentValue = this.userSettingsService.readUserSetting(paths);\n\n            let includedInPatch = false;\n            if (!Utils.isUndefined(currentValue)) {\n                if (formValue !== currentValue) {\n                    includedInPatch = true;\n                }\n            } else {\n                if (!Utils.isUndefined(formValue)) {\n                    includedInPatch = true;\n                }\n            }\n\n            if (includedInPatch) {\n                this.setValue(patch, paths, formValue);\n            }\n        });\n\n        return patch;\n    }\n\n    /**\n     * Ensures that the form value is of the same type as the user setting before saving it.\n     *\n     * @param entryInfo The entry information.\n     * @param value The form value.\n     * @returns The conformed value for the user setting.\n     */\n    private ensureType(entryInfo: JsonInfo.Entry, value: any): any {\n        const inputType = entryInfo.type as JsonInfo.InputType;\n        const valueType = entryInfo.valueType as JsonInfo.ValueType;\n\n        switch (valueType as JsonInfo.ValueType) {\n            case JsonInfo.ValueType.Bool:\n                // For the case of boolean, we ignore the input type because we only support having a JSON boolean\n                return !!value;\n            case JsonInfo.ValueType.Date:\n                return this.cast<Date>(inputType, value, Utils.asDate);\n            case JsonInfo.ValueType.Int:\n            case JsonInfo.ValueType.Number:\n                return this.cast<number>(inputType, value, Utils.asNumber);\n            case JsonInfo.ValueType.String:\n            default:\n                return this.cast<string>(inputType, value, Utils.asString);\n        }\n    }\n\n\n    /**\n     * Casts the value of a given type to another type.\n     * <p>\n     * If the given value is of array type, it is casted into another array containing element of the\n     * desired type.\n     *\n     * @template T The desired type after casting.\n     * @param inputType The type of form input where the value comes.\n     * @param value The value to cast.\n     * @param castFn The casting function.\n     * @returns the cast result.\n     */\n    private cast<T>(\n        inputType: JsonInfo.InputType, value: any, castFn: (params: any) => T | undefined\n    ): T | T[] | undefined {\n        if (Utils.isArray(value)) {\n            const array = value as any[];\n            const empty = array.length === 0;\n            switch (inputType) {\n                case JsonInfo.InputType.Entry:\n                    return !empty ? castFn(array[0]) : undefined;\n                case JsonInfo.InputType.MultiEntry:\n                case JsonInfo.InputType.Range:\n                    const result: T[] = [];\n                    for (const v of array) {\n                        result.push(castFn(v) as T);\n                    }\n                    return result;\n            }\n            return undefined;\n        }\n\n        return castFn(value);\n    }\n\n    /**\n     * Reads the form value for the given entry.\n     *\n     * @param key The entry key.\n     * @returns The form value.\n     */\n    private readFormValue(key: string): any {\n        const formValue = this.form.value[key];\n        if (Utils.isArray(formValue)) {\n            switch (this.layout[key].type as JsonInfo.InputType) {\n                case JsonInfo.InputType.Entry:\n                    // The entry is single-value type whereas its corresponding form control has an array value.\n                    // This should be because its form control is represented by a Select component.\n                    // The array value should be then a singleton array, we simply return the first element.\n                    const array = <any[]>formValue;\n                    if (array.length !== 1) {\n                        console.log('editUserSettings.readFormValue not a singleton array.');\n                    }\n                    return array[0];\n                case JsonInfo.InputType.MultiEntry:\n                    break;\n                case JsonInfo.InputType.Range:\n                    break;\n            }\n        }\n        return formValue;\n    }\n\n    /**\n     * Sets a JSON value.\n     *\n     * @param json The JSON to set.\n     * @param paths The path of the value in the JSON.\n     * @param value The value to set.\n     */\n    private setValue(json: MapOf<any>, paths: string[], value: any): void {\n        const nbPaths = paths.length;\n        if (nbPaths > 1) {\n            for (let i = 0; i < nbPaths - 1; ++i) {\n                const path = paths[i];\n                if (!json[path]) {\n                    json[path] = {};\n                }\n                json = json[path];\n            }\n        }\n\n        json[paths[nbPaths - 1]] = Utils.isEmpty(value) ? null : value;\n    }\n\n    /**\n     * Indicates the height of the dialog content to trigger scroll behavior when there are too many input controls.\n     *\n     * @return the height of the dialog content to trigger scroll behavior when there are too many input controls.\n     */\n    public get maxHeight(): string {\n        //If size is undefined use 5 as default\n        return (((this.visibleThreshold | 0) || 5) * 10) + \"ex\";\n    }\n}\n","<form name=\"editUserSettings\" novalidate [formGroup]=\"form\">\n    <sq-modal [title]=\"'msg#editUserSettings.title'\" [buttons]=\"buttons\">\n        <div class=\"sq-user-settings-modal-body\" [style.max-height]=\"maxHeight\">\n            <sq-user-settings-editor [form]=\"form\" [model]=\"model\" [layout]=\"layout\"></sq-user-settings-editor>\n        </div>\n    </sq-modal>\n</form>\n","/**\n * An enumeration of keyboard code values\n */\nexport enum Keys {\n    up = 38,\n    down = 40,\n    left = 37,\n    right = 39,\n    del = 46,\n    tab = 9,\n    enter = 13,\n    esc = 27,\n    comma = 188,\n    space = 32,\n    pageUp = 33,\n    pageDown = 34,\n    home = 36,\n    end = 35,\n    backspace = 8\n}\n","import {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\n\nimport {IntlModule} from \"@sinequa/core/intl\";\nimport {UtilsModule} from \"@sinequa/components/utils\";\nimport {CollapseModule} from \"@sinequa/components/collapse\";\n\nimport {Metadata} from \"./metadata/metadata\";\nimport {MetadataItem} from \"./metadata-item/metadata-item\";\nimport {MetadataAccessListsItem} from \"./metadata-access-lists-item/metadata-access-lists-item\";\nimport {MetadataAccessListsItemSingleAccessList} from \"./metadata-access-lists-item-single-access-list/metadata-access-lists-item-single-access-list\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        IntlModule,\n        UtilsModule,\n        CollapseModule,\n    ],\n    declarations: [\n        Metadata, MetadataItem,\n        MetadataAccessListsItem, MetadataAccessListsItemSingleAccessList\n    ],\n    exports: [\n        Metadata, MetadataItem\n    ],\n})\nexport class MetadataModule {\n}","import {ChangeDetectionStrategy, Component, Input, OnInit} from \"@angular/core\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {Action} from \"../../action\";\n\n@Component({\n    selector: \"sq-action-menu\",\n    templateUrl: \"./action-menu.html\",\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BsActionMenu implements OnInit{\n    @Input() items: Action[];\n    @Input() size: string;\n    @Input() autoAdjust: boolean;\n    @Input() autoAdjustBreakpoint: string;\n    @Input() collapseBreakpoint: string;\n    @Input() right: boolean;\n\n    ngOnInit() {\n        if (!Utils.isArray(this.items)) {\n            this.items = [<Action>this.items];\n        }\n    }\n\n    identify(index:number, item: Action) {\n        return item.name || item.text || item.title || index;\n    }\n}","<ul class=\"navbar-nav {{right ? 'navbar-right' : ''}}\">\n    <ng-container *ngFor=\"let item of items; trackBy(identify)\">\n        <li *ngIf=\"!item.hidden\" class=\"nav-item {{item.hasChildren ? 'dropdown' : ''}}\"\n            [sq-action-item]=\"{item: item, size: size, autoAdjust: autoAdjust, autoAdjustBreakpoint: autoAdjustBreakpoint, inMenu: true}\"\n            [collapseBreakpoint]=\"collapseBreakpoint\"></li>\n    </ng-container>\n</ul>","import {Injectable, Inject, InjectionToken, OnDestroy, ComponentFactory, ComponentRef, Type} from \"@angular/core\";\nimport {Subject, Observable} from \"rxjs\";\nimport {Utils, MapOf} from \"@sinequa/core/base\";\nimport elementResizeDetectorMaker from \"element-resize-detector\";\nimport {NotificationsService} from \"@sinequa/core/notification\";\nimport {Clipboard} from '@angular/cdk/clipboard';\n\nexport interface CaretPosition {\n    start: number;\n    end: number;\n}\n\nexport const SCREEN_SIZE_RULES = new InjectionToken<MapOf<string>>('SCREEN_SIZE_RULES');\n\n@Injectable({\n    providedIn: \"root\"\n})\nexport class UIService implements OnDestroy {\n    _resizeEvent = new Subject<UIEvent>();\n    _priorityResizeEvent = new Subject<UIEvent>();\n    screenSizes: string[];\n    screenSize: string; // one of the screen size rules values\n    elementResizeDetector: any;\n    factories = new Map<Type<any>, ComponentFactory<any>>();\n\n    constructor(\n        @Inject(SCREEN_SIZE_RULES) public screenSizeRules: MapOf<string>,\n        public notificationsService: NotificationsService,\n        public clipboard: Clipboard\n    ) {\n\n        this.screenSizes = [\"xs\", \"sm\", \"md\", \"lg\", \"xl\", \"xxl\"]; // in ascending size order\n        this.setScreenSize();\n        window.addEventListener(\"resize\", this.resizeEventListener);\n        this.elementResizeDetector = elementResizeDetectorMaker({ strategy: \"scroll\" });\n    }\n\n    protected resizeEventListener = Utils.frame((event: UIEvent) => {\n        this.setScreenSize();\n        this._priorityResizeEvent.next(event);\n        this._resizeEvent.next(event);\n    });\n\n    ngOnDestroy() {\n        this._resizeEvent.complete();\n        this._priorityResizeEvent.complete();\n        window.removeEventListener(\"resize\", this.resizeEventListener);\n    }\n\n    get resizeEvent(): Observable<UIEvent> {\n        return this._resizeEvent;\n    }\n\n    get priorityResizeEvent(): Observable<UIEvent> {\n        return this._priorityResizeEvent;\n    }\n\n    /*private setTitle(title: string) {\n        document.title = this.intlService.formatMessage(title);\n    }*/\n\n    appInit(appComponentRef: ComponentRef<any>) {\n        //this.setTitle();\n        //Utils.subscribe(this.intlService.events,\n        //    (value) => {\n        //        this.setTitle();\n        //    });\n\n        // See https://github.com/angular/angular/issues/18817\n        /*this.resizeEvent.subscribe(\n            (event) => {\n                appComponentRef.changeDetectorRef.markForCheck();\n            });*/\n\n        // this.loadComponent({component: DirtyChecker});\n    }\n\n    // legacy (was called from app.ts)\n    addResizeListener(listener: (event?: UIEvent) => any) {\n        this._resizeEvent.subscribe(listener);\n    }\n\n    private screenSizeIs(list: string | string[]) {\n        //let rules = this.coreConfig.screenSizeRules;\n\n        // validate that we're getting a string or array.\n        if (!Utils.isString(list) && !Utils.isArray(list)) {\n            throw new Error('screenSizeIs requires an array or comma-separated list');\n        }\n\n        // if it's a string, convert to array.\n        if (Utils.isString(list)) {\n            list = list.split(/\\s*,\\s*/);\n        }\n\n        return list.some((size) => window.matchMedia(this.screenSizeRules[size]).matches);\n    }\n\n    private setScreenSize() {\n        for (const size of this.screenSizes) {\n            if (this.screenSizeIs(size)) {\n                this.screenSize = size;\n                return;\n            }\n        }\n        throw new Error(\"UIService.setScreenSize - no matching screen size\");\n    }\n\n    screenSizeIsEqual(screenSize: string): boolean {\n        return this.screenSize === screenSize;\n    }\n\n    screenSizeIsGreater(screenSize: string | undefined): boolean {\n        const index1 = this.screenSizes.findIndex((value) => value === this.screenSize);\n        const index2 = this.screenSizes.findIndex((value) => value === screenSize);\n        return index1 > index2;\n    }\n\n    screenSizeIsLess(screenSize: string): boolean {\n        const index1 = this.screenSizes.findIndex((value) => value === this.screenSize);\n        const index2 = this.screenSizes.findIndex((value) => value === screenSize);\n        return index1 < index2;\n    }\n\n    screenSizeIsGreaterOrEqual(screenSize: string | undefined): boolean {\n        if (screenSize === this.screenSize) {\n            return true;\n        }\n        return this.screenSizeIsGreater(screenSize);\n    }\n\n    screenSizeIsLessOrEqual(screenSize: string): boolean {\n        if (screenSize === this.screenSize) {\n            return true;\n        }\n        return this.screenSizeIsLess(screenSize);\n    }\n\n    private _screenSizeTest(screenSize: string): boolean {\n        if (Utils.eqNCN(screenSize, \"always\", \"true\")) {\n            return true;\n        }\n        if (Utils.eqNCN(screenSize, \"never\", \"false\")) {\n            return false;\n        }\n        if (Utils.startsWith(screenSize, \">=\")) {\n            return this.screenSizeIsGreaterOrEqual(screenSize.slice(2));\n        }\n        if (Utils.startsWith(screenSize, \">\")) {\n            return this.screenSizeIsGreater(screenSize.slice(1));\n        }\n        if (Utils.startsWith(screenSize, \"<=\")) {\n            return this.screenSizeIsLessOrEqual(screenSize.slice(2));\n        }\n        if (Utils.startsWith(screenSize, \"<\")) {\n            return this.screenSizeIsLess(screenSize.slice(1));\n        }\n        if (Utils.startsWith(screenSize, \"=\")) {\n            return this.screenSizeIsEqual(screenSize.slice(1));\n        }\n        return this.screenSizeIsEqual(screenSize);\n    }\n\n    // screenSizes is a sequence of size specs with optional operator separated by space or and (AND)\n    // Multiple sequences can be specified using , or ; as a separator (these are OR'd)\n    screenSizeTest(screenSizes: string): boolean {\n        if (!screenSizes) {\n            return true;\n        }\n        const ors = Utils.split(screenSizes, [',', ';']);\n        for (const or of ors) {\n            const ands = Utils.split(or, \" \");\n            if (ands.length === 0) {\n                continue;\n            }\n            let ok = true;\n            for (const and of ands) {\n                if (Utils.eqNC(and, \"and\")) { // space separated but you can use and if you want to\n                    continue;\n                }\n                if (!this._screenSizeTest(and)) {\n                    ok = false;\n                    break;\n                }\n            }\n            if (ok) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    getContentRect(element: HTMLElement): ClientRect {\n        const rect = element.getBoundingClientRect();\n        const computedStyle = window.getComputedStyle(element);\n        const borderLeft = parseFloat(computedStyle.borderLeft);\n        const borderRight = parseFloat(computedStyle.borderRight);\n        const borderTop = parseFloat(computedStyle.borderTop);\n        const borderBottom = parseFloat(computedStyle.borderBottom);\n        const paddingLeft = parseFloat(computedStyle.paddingLeft);\n        const paddingRight = parseFloat(computedStyle.paddingRight);\n        const paddingTop = parseFloat(computedStyle.paddingTop);\n        const paddingBottom = parseFloat(computedStyle.paddingBottom);\n        return {\n            top: rect.top + borderTop + paddingTop,\n            right: rect.right - borderRight - paddingRight,\n            bottom: rect.bottom - borderBottom - paddingBottom,\n            left: rect.left + borderLeft + paddingLeft,\n            width: rect.width - borderLeft - paddingLeft - paddingRight - borderRight,\n            height: rect.height - borderTop - paddingTop - paddingBottom - borderBottom\n        };\n    }\n\n    // caret support\n    getCaret(input: HTMLInputElement): CaretPosition {\n        return {\n            start: input.selectionStart || 0,\n            end: input.selectionEnd || 0\n        };\n    }\n\n    setCaret(input: HTMLInputElement, start: number, end = start, text?: string, selectionAction = UIService.SelectionAction.collapse, ensureVisible = true, raiseEvent = true) {\n        if (start < 0) {\n            return;\n        }\n        if (Utils.isString(text)) {\n            let value = input.value;\n            if (end >= start) {\n                value = value.slice(0, start) + text + value.slice(end);\n            }\n            else {\n                value = value.slice(0, start) + text;\n            }\n            input.value = value;\n            switch (selectionAction) {\n                case UIService.SelectionAction.adjust:\n                    end = start + text.length;\n                    break;\n                case UIService.SelectionAction.none:\n                    break;\n                case UIService.SelectionAction.collapseToStart:\n                    end = start;\n                    break;\n                case UIService.SelectionAction.collapse:\n                default:\n                    end = start + text.length;\n                    start = end;\n                    break;\n            }\n        }\n        if (end < 0) {\n            end = start;\n        }\n        input.setSelectionRange(start, end);\n        if (ensureVisible) {\n            const rect = input.getBoundingClientRect();\n            const contentRect = this.getContentRect(input);\n            const textPos = this.getTextPosition(input, this.getCaret(input).end);\n            let scrollLeft = input.scrollLeft;\n            const minX = contentRect.left + scrollLeft;\n            const maxX = contentRect.right + scrollLeft;\n            const caretX = rect.left + textPos.left;\n            if (caretX < minX || caretX > maxX) {\n                scrollLeft = Math.max(caretX - contentRect.right + 1/*for the caret*/, 0);\n                input.scrollLeft = scrollLeft;\n            }\n        }\n        if (raiseEvent) {\n            const event = new CustomEvent(\"input\");\n            input.dispatchEvent(event);\n        }\n    }\n\n    // See https://github.com/component/textarea-caret-position\n    // We return a lineHeight value in addition\n    private textPositionProperties = [\n        'direction',  // RTL support\n        'boxSizing',\n        'width',  // on Chrome and IE, exclude the scrollbar, so the mirror div wraps exactly as the textarea does\n        'height',\n        'overflowX',\n        'overflowY',  // copy the scrollbar for IE\n\n        'borderTopWidth',\n        'borderRightWidth',\n        'borderBottomWidth',\n        'borderLeftWidth',\n        'borderStyle',\n\n        'paddingTop',\n        'paddingRight',\n        'paddingBottom',\n        'paddingLeft',\n\n        // https://developer.mozilla.org/en-US/docs/Web/CSS/font\n        'fontStyle',\n        'fontVariant',\n        'fontWeight',\n        'fontStretch',\n        'fontSize',\n        'fontSizeAdjust',\n        'lineHeight',\n        'fontFamily',\n\n        'textAlign',\n        'textTransform',\n        'textIndent',\n        'textDecoration',  // might not make a difference, but better be safe\n\n        'letterSpacing',\n        'wordSpacing',\n\n        'tabSize',\n        'MozTabSize'\n    ];\n    getTextPosition(element: HTMLElement, position: number, options?: {debug: boolean}): {top: number, left: number, lineHeight: number} {\n        const debug = options && options.debug || false;\n        if (debug) {\n            const el = document.querySelector('#input-textarea-caret-position-mirror-div');\n            if ( el ) {\n                if (el.parentNode) {\n                    el.parentNode.removeChild(el);\n                }\n            }\n        }\n\n        // mirrored div\n        const div = document.createElement('div');\n        div.id = 'input-textarea-caret-position-mirror-div';\n        document.body.appendChild(div);\n\n        const style = div.style;\n        const computed = !!window.getComputedStyle ? getComputedStyle(element) : (<any>element).currentStyle;  // currentStyle for IE < 9\n\n        // default textarea styles\n        style.whiteSpace = 'pre-wrap';\n        if (element.nodeName !== 'INPUT')\n            style.wordWrap = 'break-word';  // only for textarea-s\n\n        // position off-screen\n        style.position = 'absolute';  // required to return coordinates properly\n        if (!debug)\n            style.visibility = 'hidden';  // not 'display: none' because we want rendering\n\n        // transfer the element's properties to the div\n        this.textPositionProperties.forEach(function (prop) {\n            style[prop] = computed[prop];\n        });\n\n        if (!Utils.isUndefined((<any>window).mozInnerScreenX)) {\n            // Firefox lies about the overflow property for textareas: https://bugzilla.mozilla.org/show_bug.cgi?id=984275\n            if (element.scrollHeight > parseInt(computed.height, 10))\n            style.overflowY = 'scroll';\n        } else {\n            style.overflow = 'hidden';  // for Chrome to not render a scrollbar; IE keeps overflowY = 'scroll'\n        }\n\n        div.textContent = (<any>element).value.substring(0, position);\n        // the second special handling for input type=\"text\" vs textarea: spaces need to be replaced with non-breaking spaces - http://stackoverflow.com/a/13402035/1269037\n        if (element.nodeName === 'INPUT' && div.textContent) {\n            div.textContent = div.textContent.replace(/\\s/g, '\\u00a0');\n        }\n\n        const span = document.createElement('span');\n        // Wrapping must be replicated *exactly*, including when a long word gets\n        // onto the next line, with whitespace at the end of the line before (#7).\n        // The  *only* reliable way to do that is to copy the *entire* rest of the\n        // textarea's content into the <span> created at the caret position.\n        // for inputs, just '.' would be enough, but why bother?\n        div.appendChild(span);\n\n        // return lineHeight too\n        span.textContent = '.';\n        const lineHeight = span.offsetHeight;\n\n        span.textContent = (<any>element).value.substring(position) || '.';  // || because a completely empty faux span doesn't render at all\n\n        const coordinates = {\n            top: span.offsetTop + parseInt(computed['borderTopWidth'], 10),\n            left: span.offsetLeft + parseInt(computed['borderLeftWidth'], 10),\n            lineHeight: lineHeight\n        };\n\n        if (debug) {\n            span.style.backgroundColor = '#aaa';\n        } else {\n            document.body.removeChild(div);\n        }\n\n        return coordinates;\n    }\n\n    getViewport(): ClientRect {\n        return document.body.getBoundingClientRect();\n    }\n\n    addElementResizeListener(element: HTMLElement, listener: (this: HTMLElement) => void) {\n        this.elementResizeDetector.listenTo(element, listener);\n    }\n\n    removeElementResizeListener(element: HTMLElement, listener: (this: HTMLElement) => void) {\n        this.elementResizeDetector.removeListener(element, listener);\n    }\n    \n    copyToClipboard(data: string, maxLength = 30) {\n        if (!navigator?.clipboard) {\n            // Note: CDK seems to struggle with large chunks of text\n            this.copyToClipboardCdk(data, maxLength);\n        }\n        else {\n            // Navigator built-in clipboard management\n            navigator.clipboard.writeText(data).then(() => {\n                this.notificationsService.success(\"msg#clipboard.success\", {data: \"\\\"\"+(data.length>maxLength? (data.slice(0,maxLength) + \"...\") : data)+\"\\\"\"});\n            }, err => {\n                this.notificationsService.warning(\"msg#clipboard.error\");\n            });\n        }\n    }\n\n    copyToClipboardCdk(data: string, maxLength = 30) {\n        const pending = this.clipboard.beginCopy(data);\n        let remainingAttempts = 3;\n        const attempt = () => {\n            const result = pending.copy();\n            if (!result && --remainingAttempts) {\n                setTimeout(attempt);\n            } else {\n                // Remember to destroy when you're done!\n                pending.destroy();\n                if(result) {\n                    this.notificationsService.success(\"msg#clipboard.success\", {data: \"\\\"\"+(data.length>maxLength? (data.slice(0,maxLength) + \"...\") : data)+\"\\\"\"});\n                }\n                else {\n                    this.notificationsService.warning(\"msg#clipboard.error\");\n                }\n            }\n        };\n        attempt();\n    }\n}\n\nexport module UIService {\n    export enum SelectionAction {\n        adjust,\n        none,\n        collapseToStart,\n        collapse\n    }\n}\n","import {Injectable} from \"@angular/core\";\nimport {HttpClient, HttpRequest, HttpHandler} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {share, tap} from \"rxjs/operators\";\nimport {Utils} from \"@sinequa/core/base\";\n\n/**\n * A helper service that overrides the standard Angular [HttpClient]{@link https://angular.io/api/common/http/HttpClient}\n * to prevent multiple subscribers from causing multiple requests to be issued and to mitigate against request flooding\n */\n@Injectable({\n    providedIn: \"root\"\n})\nexport class SqHttpClient extends HttpClient {\n\n    private responseCache = new Map<string, Observable<any>>();\n\n    constructor(\n        httpHandler: HttpHandler) {\n        super(httpHandler);\n    }\n\n    private getRequestHash(first: string | HttpRequest<any>, url?: string, options = {}): string {\n        // The replacer ensures that object keys are always serialized in the same order\n        const strRequest = JSON.stringify([first, url, options],\n            (key: string, value: any) => {\n                if (Utils.isObject(value) && !Utils.isIterable(value)) {\n                    return Object.keys(value).sort().reduce(\n                        (s, k) => {\n                            s[k] = value[k];\n                            return s;\n                        }, {});\n                }\n                else {\n                    return value;\n                }\n            });\n        return Utils.sha256(strRequest);\n    }\n\n    /**\n     * Overrides the standard `HttpClient.request` method to change its behavior as follows:\n     * * pipes the observable to the share operator so that only a single request is issued even if there are multiple subscribers\n     * * to mitigate request flooding, a cache of pending response observables keyed by the request thumbprint is maintained.\n     * An observable from the cache is returned if the incoming request is identical to one in the cache\n     */\n    request(first: string | HttpRequest<any>, url?: string, options = {}): Observable<any> {\n        const requestHash = this.getRequestHash(first, url, options);\n        let observable = this.responseCache.get(requestHash);\n        if (!observable) {\n            observable = super.request(first as string, url as string, options)\n                .pipe(share())\n                .pipe(tap(() => this.responseCache.delete(requestHash)));\n            this.responseCache.set(requestHash, observable);\n        }\n        return observable;\n    }\n}\n","export * from \"./public-api\";","export default {\n    \"labels\": {\n        \"labels\": \"Libellés\",\n        \"publicLabels\": \"Libellés publics\",\n        \"privateLabels\": \"Libellés privés\",\n        \"public\": \"Public\",\n        \"private\": \"Privé\",\n        \"selectLabel\": \"Sélectionner le(s) libellé(s)\",\n        \"deleteLabelAreYouSure\": \"Etes-vous sûr de vouloir effacer le libellé: {name} ?\",\n        \"bulkAddLabelAreYouSure\": \"Etes-vous sûr de vouloir ajouter en lot le libellé: {name} aux résultats de la requête courante ? \",\n        \"bulkRemoveLabelAreYouSure\": \"Etes-vous sûr de vouloir enlever en lot le libellé: {name} aux résultats de la requête courante ?\",\n        \"addPublicLabelText\": \"+\",\n        \"removePublicLabelText\": \"×\",\n        \"addPublicLabelTitle\": \"Ajouter un libellé public\",\n        \"selectPublicLabelTitle\": \"Sélectionner le libellé public\",\n        \"removePublicLabelTitle\": \"Supprimer le libellé public\",\n        \"addPrivateLabelText\": \"+\",\n        \"removePrivateLabelText\": \"×\",\n        \"addPrivateLabelTitle\": \"Ajouter un libellé privé\",\n        \"selectPrivateLabelTitle\": \"Sélectionner le libellé privé\",\n        \"removePrivateLabelTitle\": \"Supprimer le libellé privé\"\n    },\n\n    \"renameLabel\": {\n        \"title\": \"Renommer le(s) libellé(s) globalement\",\n        \"btnRename\": \"Renommer\",\n        \"newLabel\": \"Nouveau Libellé\",\n        \"oldLabels\": \"Ancien(s) libellé(s)\",\n        \"alertText\": \"Cette action renomme le(s) libellé(s) sélectionné(s) dans l'index et est irréversible\",\n        \"successFeedback\": \"Libellé(s) renommé(s) dans l'index\",\n        \"errorFeedback\": \"Une erreur s'est produite. Requête non aboutie\"\n    },\n\n    \"deleteLabel\": {\n        \"title\": \"Supprimer le(s) libellé(s) globalement\",\n        \"btnDelete\": \"Supprimer\",\n        \"alertText\": \"Cette action supprime le(s) libellé(s) sélectionné(s) de l'index et est irréversible\",\n        \"successFeedback\": \"Libellé(s) supprimé(s) de l'index\",\n        \"errorFeedback\": \"Une erreur s'est produite. Requête non aboutie\"\n    },\n\n    \"bulkRemoveLabel\": {\n        \"title\": \"Enlever le(s) libellé des résultats courants\",\n        \"btnBulkRemove\": \"Enlever\",\n        \"alertText\": \"Cette action enlève le(s) libellé(s) sélectionné(s) de tous les résultats remontés par le moteur (pas seulement de la première page)\",\n        \"successFeedback\": \"Libellé(s) enlevé(s) de tous les résultats remontés par le moteur\",\n        \"errorFeedback\": \"Une erreur s'est produite. Requête non aboutie\"\n    },\n\n    \"bulkAddLabel\": {\n        \"title\": \"Ajouter le(s) libellé(s) aux résultats courants\",\n        \"btnBulkAdd\": \"Ajouter\",\n        \"alertText\": \"Cette action ajoute le(s) libellé(s) sélectionné(s) à tous les résultats remontés par le moteur (pas seulement à la première page)\",\n        \"infoText\": \"Appuyez sur 'Entrée' pour ajouter un nouveau libellé qui n'existe pas dans les suggestions\",\n        \"successFeedback\": \"Libellé(s) ajouté(s) à tous les résultats remontés par le moteur\",\n        \"errorFeedback\": \"Une erreur s'est produite. Requête non aboutie\"\n    },\n\n    \"editLabel\": {\n        \"title\": \"Editer le(s) libellé(s) de(s) résultat(s) sélectionné(s)\",\n        \"btnEdit\": \"Sauvegarder\",\n        \"alertText\": \"Cette action édite le(s) libellé(s) de(s) résultat(s) sélectionné(s)\",\n        \"infoText\": \"Appuyez sur 'Entrée' pour ajouter un nouveau libellé qui n'existe pas dans les suggestions\",\n        \"labelsToBeRemoved\": \"Libellé(s) à enlever\",\n        \"labelsToBeAdded\": \"Libellé(s) à ajouter\",\n        \"successFeedback\": \"Libellé(s) de(s) résultat(s) sélectionné(s) édité(s)\",\n        \"errorFeedback\": \"Une erreur s'est produite. Requête non aboutie\"\n    }\n};\n","import enStatusBar from \"./en\";\nimport frStatusBar from \"./fr\";\nimport deStatusBar from \"./de\";\n\nexport { enStatusBar, frStatusBar, deStatusBar };\n","import {Utils} from \"@sinequa/core/base\";\nimport {enModal, frModal, deModal} from \"@sinequa/components/modal\";\n\nimport _enUserSettings from \"./en\";\nimport _frUserSettings from \"./fr\";\nimport _deUserSettings from \"./de\";\n\nconst enUserSettings = Utils.merge({}, _enUserSettings, enModal);\nconst frUserSettings = Utils.merge({}, _frUserSettings, frModal);\nconst deUserSettings = Utils.merge({}, _deUserSettings, deModal);\n\nexport { enUserSettings, frUserSettings, deUserSettings };\n","import {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {ScrollingModule} from \"@angular/cdk/scrolling\";\n\nimport {IntlModule} from \"@sinequa/core/intl\";\nimport {WebServicesModule} from \"@sinequa/core/web-services\";\nimport {ValidationModule} from \"@sinequa/core/validation\";\n\nimport {UtilsModule} from \"@sinequa/components/utils\";\nimport {CollapseModule} from \"@sinequa/components/collapse\";\nimport {MetadataModule} from \"@sinequa/components/metadata\";\nimport {BsModalModule} from \"@sinequa/components/modal\";\nimport {BsFacetModule} from \"@sinequa/components/facet\";\nimport {ResultModule} from \"@sinequa/components/result\";\nimport {BsActionModule} from \"@sinequa/components/action\";\nimport {PreviewModule} from \"../preview.module\";\nimport {BsPreviewHighlights} from \"./preview-highlights/preview-highlights\";\nimport {BsPreviewLinks} from \"./preview-links/preview-links\";\nimport {BsPreviewPopup} from \"./preview-popup/preview-popup\";\nimport {BsPreviewPanel} from \"./preview-panel/preview-panel\";\nimport {BsResultLinkPreview} from \"./result-link-preview/result-link-preview\";\nimport {BsFacetPreview} from \"./facet-preview/facet-preview\";\nimport {BsSimilarDocuments} from \"./similar-documents/similar-documents\";\nimport {BsFacetPreviewComponent2 } from './facet-preview-2/facet-preview.component';\nimport {BsPreviewEntityFacetComponent} from './preview-entity-facet/preview-entity-facet.component';\nimport {BsPreviewEntityPanelComponent} from './preview-entity-panel/preview-entity-panel.component';\nimport {BsPreviewExtractsPanelComponent} from './preview-extracts-panel/preview-extracts-panel.component';\nimport {BsPreviewSearchFormComponent} from './preview-search-form/preview-search-form.component';\nimport {BsPreviewPagesPanelComponent} from './preview-pages-panel/preview-pages-panel.component';\nimport {BsPreviewPageFormComponent} from './preview-page-form/preview-page-form.component';\n\nimport {PREVIEW_MODAL} from '../preview.service';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule, ReactiveFormsModule,\n        ScrollingModule,\n\n        IntlModule,\n        WebServicesModule,\n        ValidationModule,\n\n        UtilsModule,\n        CollapseModule,\n        MetadataModule,\n        BsModalModule,\n        BsFacetModule,\n        ResultModule,\n        BsActionModule,\n        PreviewModule\n    ],\n    declarations: [\n        BsPreviewHighlights, BsPreviewLinks,\n        BsPreviewPopup, BsPreviewPanel, BsResultLinkPreview,\n        BsFacetPreview, BsFacetPreviewComponent2,\n        BsSimilarDocuments,\n        BsPreviewEntityFacetComponent,\n        BsPreviewEntityPanelComponent,\n        BsPreviewExtractsPanelComponent,\n        BsPreviewSearchFormComponent,\n        BsPreviewPagesPanelComponent,\n        BsPreviewPageFormComponent\n    ],\n    exports: [\n        PreviewModule,\n        BsPreviewHighlights, BsPreviewLinks,\n        BsPreviewPopup, BsPreviewPanel, BsResultLinkPreview,\n        BsFacetPreview, BsFacetPreviewComponent2,\n        BsSimilarDocuments,\n        BsPreviewEntityFacetComponent,\n        BsPreviewEntityPanelComponent,\n        BsPreviewExtractsPanelComponent,\n        BsPreviewSearchFormComponent,\n        BsPreviewPagesPanelComponent,\n        BsPreviewPageFormComponent\n    ],\n    providers: [\n        {provide: PREVIEW_MODAL, useValue: BsPreviewPopup}\n    ]\n})\nexport class BsPreviewModule {\n}","export * from \"./notification.module\";\nexport * from \"./notification/notification\";\nexport * from \"./notifications/notifications\";\nexport * from \"./notifications-manager/notifications-manager\";","export * from \"./public-api\";","import {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {DragDropModule} from \"@angular/cdk/drag-drop\";\nimport {RouterModule} from '@angular/router';\n\nimport {IntlModule} from \"@sinequa/core/intl\";\nimport {ValidationModule} from \"@sinequa/core/validation\";\n\nimport {UtilsModule} from \"@sinequa/components/utils\";\nimport {BsSelectionModule} from \"@sinequa/components/selection\";\nimport {BsModalModule} from \"@sinequa/components/modal\";\nimport {BsActionModule} from \"@sinequa/components/action\";\n\nimport {SAVEDQUERY_COMPONENTS} from \"../saved-queries.service\";\nimport {BsEditSavedQuery} from \"./edit-saved-query/edit-saved-query\";\nimport {BsManageSavedQueries} from \"./manage-saved-queries/manage-saved-queries\";\nimport {BsExportQuery} from \"./export-query/export-query\";\nimport {BsQueryExporter} from \"./query-exporter/query-exporter\";\nimport {BsSavedQueriesMenuComponent} from \"./saved-queries-menu/saved-queries-menu.component\";\nimport {BsFacetSavedQueries} from \"./facet-saved-queries/facet-saved-queries\";\nimport {BsFacetRecentQueries} from \"./facet-recent-queries/facet-recent-queries\";\nimport {BsFacetRecentDocuments} from \"./facet-recent-documents/facet-recent-documents\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule, ReactiveFormsModule,\n        DragDropModule,\n\n        BsModalModule,\n\n        IntlModule,\n        ValidationModule,\n        RouterModule,\n\n        BsSelectionModule,\n        BsModalModule,\n        UtilsModule,\n        BsActionModule\n    ],\n    declarations: [\n        BsEditSavedQuery, BsManageSavedQueries,\n        BsExportQuery, BsQueryExporter, BsSavedQueriesMenuComponent,\n        BsFacetSavedQueries, BsFacetRecentQueries, BsFacetRecentDocuments\n    ],\n    exports: [\n        BsEditSavedQuery, BsManageSavedQueries,\n        BsExportQuery, BsQueryExporter, BsSavedQueriesMenuComponent,\n        BsFacetSavedQueries, BsFacetRecentQueries, BsFacetRecentDocuments\n    ],\n    providers: [\n        {\n            provide: SAVEDQUERY_COMPONENTS,\n            useValue: {\n                editSavedQueryModal: BsEditSavedQuery,\n                manageSavedQueriesModal: BsManageSavedQueries,\n                exportSavedQueryModal: BsExportQuery\n            }\n        }\n    ]\n})\nexport class BsSavedQueriesModule {\n}\n","import { Component, OnInit, OnDestroy, Inject, ChangeDetectorRef} from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { ValidationService } from \"@sinequa/core/validation\";\nimport { NotificationsService } from \"@sinequa/core/notification\";\nimport { Utils } from \"@sinequa/core/base\";\nimport { ModalRef, ModalButton, ModalResult, MODAL_MODEL } from \"@sinequa/core/modal\";\nimport { ExportSourceType, ExportOutputFormat, CCWebService, CCApp} from \"@sinequa/core/web-services\";\nimport {SavedQueriesService, ExportQueryModel} from \"../../saved-queries.service\";\nimport {SelectionService} from \"@sinequa/components/selection\";\nimport { AppService } from '@sinequa/core/app-utils';\n\n/**\n * Component representing the Export dialog where user can customize the query export action.\n *\n */\n@Component({\n    selector: 'sq-export-query',\n    templateUrl: './export-query.html'\n})\nexport class BsExportQuery implements OnInit, OnDestroy {\n\n    public readonly supportedFormats: ExportOutputFormat[] = [\n        ExportOutputFormat.Csv,\n        ExportOutputFormat.Xlsx,\n        ExportOutputFormat.Json\n    ];\n    public readonly outputFormats: typeof ExportOutputFormat = ExportOutputFormat;\n    public readonly sourceTypes: typeof ExportSourceType = ExportSourceType;\n\n    public form: FormGroup;\n    public savedQueries: string[];\n    public buttons: ModalButton[];\n    public isDownloading: boolean;\n    public exportableColumns: string[];\n\n    private formChanges: Subscription;\n\n    maxCount = 1000; // Default max count hard coded in web service\n\n    constructor(\n        @Inject(MODAL_MODEL) public model: ExportQueryModel,\n        private formBuilder: FormBuilder,\n        private appService: AppService,\n        private selectionService: SelectionService,\n        private savedQueriesService: SavedQueriesService,\n        private validationService: ValidationService,\n        private notificationsService: NotificationsService,\n        private changeDetectorRef: ChangeDetectorRef,\n        public modalRef: ModalRef) { }\n\n    ngOnInit(): void {\n        this.savedQueries = [];\n        for (const query of this.savedQueriesService.savedqueries) {\n            this.savedQueries.push(query.name);\n        }\n\n        this.exportableColumns = [];\n\n        if (this.appService.app) {\n            const queryExportConfig = this.getDefaultQueryExportConfig(this.appService.app);\n            const columns = (queryExportConfig.columns && queryExportConfig.columns['column$']) || [];\n            for (const column of columns) {\n                this.exportableColumns.push(column.title);\n            }\n            if(queryExportConfig.maxCount && Utils.isNumber(queryExportConfig.maxCount)) {\n                this.maxCount = queryExportConfig.maxCount;\n            }\n        }\n\n        this.form = this.formBuilder.group({\n            'format': [this.supportedFormats[0]],\n            'exportedColumns': [this.model.exportedColumns],\n            'export': [this.model.export, Validators.required],\n            'maxCount': [this.model.maxCount, Validators.compose([\n                this.validationService.integerValidator(),\n                this.validationService.minValidator(1)\n            ])],\n        });\n\n        this.isDownloading = false;\n\n        this.buttons = [\n            new ModalButton({\n                text: \"msg#exportQuery.btnDownload\",\n                result: ModalResult.Custom,\n                anchor: true,\n                primary: true,\n                action: (_button) => {\n                    const observable = this.savedQueriesService.download(this.model);\n                    if (observable) {\n                        Utils.subscribe(observable,\n                            (response: HttpResponse<Blob>) => {\n                                console.log('exportQuery.download done.');\n                                this.notificationsService.info('msg#exportQuery.successNotification');\n                                this.modalRef.close(ModalResult.OK);\n                                return response;\n                            },\n                            (error) => {\n                                console.log('exportQuery.download failure - error: ', error);\n                                this.modalRef.close(error);\n                            });\n\n                        this.isDownloading = true;\n                        this.changeDetectorRef.markForCheck();\n                    }\n                },\n            }),\n            new ModalButton({\n                result: ModalResult.Cancel,\n            })\n        ];\n\n        const onFormChanged = () => {\n            const newFormat = this.form.value['format'];\n            const newMaxCount = this.form.value['maxCount'];\n            const newExportedColumns = this.form.value['exportedColumns'];\n\n            if (this.model.format !== newFormat) {\n                this.model.format = newFormat;\n            }\n\n            if (this.model.maxCount !== newMaxCount) {\n                this.model.maxCount = newMaxCount;\n            }\n\n            this.model.exportedColumns = newExportedColumns;\n        };\n\n        this.formChanges = Utils.subscribe(this.form.valueChanges, onFormChanged);\n    }\n\n    ngOnDestroy(): void {\n        if (this.formChanges) {\n            this.formChanges.unsubscribe();\n        }\n    }\n\n    private getDefaultQueryExportConfig(app: CCApp): CCQueryExport {\n        let queryExport = app.queryExport;\n        if (queryExport.indexOf(',') !== -1) {\n            queryExport = queryExport.substring(0, queryExport.indexOf(','));\n        }\n        return <CCQueryExport>Utils.getField(app.webServices, queryExport);\n    }\n\n    /**\n     * Check if the client has selected some records.\n     *\n     * @returns true if the client has selected some records.\n     */\n    public hasSelectedRecords(): boolean {\n        return this.selectionService.haveSelectedRecords;\n    }\n\n    /**\n     * Checks if the user chosen export source is the same as the given one.\n     * <p>\n     * Used to control the radio button state.\n     *\n     * @param type The source to check.\n     * @returns true if the user chosen export source is the same as the given one.\n     */\n    public sourceChosen(type: ExportSourceType): boolean {\n        return (this.model.export & type) !== 0;\n    }\n\n    /**\n     * Callback called when user chooses a new export source.\n     *\n     * @param event The related UI event.\n     * @param type The new chosen source.\n     */\n    public sourceChanged(event: UIEvent, type: ExportSourceType): void {\n        const input = <HTMLInputElement>event.target;\n        if (input.checked) {\n            this.model.export = type;\n        }\n    }\n\n    /**\n     * Checks if the dialog allows user to choose export source.\n     * Generally, it returns false when the input model export type is already saved query.\n     *\n     * @returns true if the dialog allows user to choose export source.\n     */\n    public showSourceChooser(): boolean {\n        return !this.sourceChosen(ExportSourceType.SavedQuery);\n    }\n}\n\ninterface CCQueryExportColumnDef {\n    title: string;\n    pattern: string;\n    selectionQuery?: string;\n}\n\ninterface CCQueryExport extends CCWebService {\n    webServiceType: \"queryexport\";\n    columns?: CCQueryExportColumnDef[];\n    linksFilterDuplicateUrls?: boolean;\n    linksGlobalRelevance?: string;\n    linksMaxCount?: number;\n    linksSortByOrder?: boolean;\n    maxCount?: number;\n    separator?: string;\n}\n","<form name=\"exportQuery\" novalidate [formGroup]=\"form\">\n    <sq-modal\n        [title]=\"'msg#exportQuery.dialogTitle'\"\n        [buttons]=\"buttons\"\n        [isProcessingState]=\"isDownloading\">\n        <div class=\"form-group sq-form-group\">\n            <label for=\"format\">{{ 'msg#exportQuery.dialogOutputFormat' | sqMessage }}</label>\n            <select [sqValidation]=\"form\" class=\"form-control custom-select\" formControlName=\"format\" id=\"format\" sqAutofocus>\n                <option [value]=\"format\" *ngFor=\"let format of supportedFormats\">{{ outputFormats[format].toUpperCase() }}</option>\n            </select>\n        </div>\n        <div class=\"form-group sq-form-group\">\n            <label\n                for=\"exportedColumns\"\n                title=\"{{ 'msg#exportQuery.exportedColumnsLabelTooltip' | sqMessage }}\"\n            >\n                {{ 'msg#exportQuery.exportedColumns' | sqMessage }}&nbsp;&#9432;\n            </label>\n            <select\n                id=\"exportedColumns\"\n                formControlName=\"exportedColumns\"\n                [sqValidation]=\"form\"\n                class=\"form-control custom-select\"\n                sqAutofocus multiple\n            >\n                <option [value]=\"column\" *ngFor=\"let column of exportableColumns\">{{ column }}</option>\n            </select>\n        </div>\n        <div class=\"form-group sq-form-group\">\n            <label \n                for=\"maxCount\"\n                title=\"{{ 'msg#exportQuery.dialogMaxCountTooltip' | sqMessage:{values: {count: maxCount} } }}\"\n            >{{ 'msg#exportQuery.dialogMaxCount' | sqMessage }}&nbsp;&#9432;</label>\n            <input [sqValidation]=\"form\" type=\"number\" class=\"form-control\" id=\"maxCount\" formControlName=\"maxCount\" autocomplete=\"off\" spellcheck=\"off\">\n        </div>\n        <div class=\"form-group sq-form-group\" *ngIf=\"showSourceChooser()\">\n            <label for=\"export\">{{ 'msg#exportQuery.dialogSourceType' | sqMessage }}</label>\n            <div>\n                <div class=\"form-check form-check-inline\">\n                    <label class=\"form-check-label\">\n                        <input class=\"form-check-input\" type=\"radio\" [checked]=\"sourceChosen(sourceTypes.Result)\" (change)=\"sourceChanged($event, sourceTypes.Result)\" >\n                        {{ 'msg#exportQuery.dialogResult' | sqMessage }}\n                    </label>\n                </div>\n                <div class=\"form-check form-check-inline\">\n                    <label class=\"form-check-label\">\n                        <input class=\"form-check-input\" type=\"radio\" [checked]=\"sourceChosen(sourceTypes.Selection)\" (change)=\"sourceChanged($event, sourceTypes.Selection)\"\n                        [disabled]=\"!hasSelectedRecords()\" >\n                        {{ 'msg#exportQuery.dialogSelection' | sqMessage }}\n                    </label>\n                </div>\n            </div>\n        </div>\n    </sq-modal>\n</form>\n","import {Utils, MapOf} from \"@sinequa/core/base\";\nimport {IQuery, Select, Open, SpellingCorrectionMode, AggregationOptions} from \"@sinequa/core/web-services\";\n\n\nexport const advancedFacetPrefix = \"advanced_\";\n\n/**\n * Represents a query for retrieving search results from a Sinequa search engine.\n *\n * The properties are described in the {@link IQuery} interface\n */\nexport class Query implements IQuery {\n    text?: string;\n    action: \"\" | \"search\" | \"open\" | \"aggregate\";\n    select?: Select[];\n    open?: Open[];\n    page?: number;\n    pageSize?: number;\n    tab?: string;\n    scope?: string;\n    sort?: string;\n    basket?: string;\n    isFirstPage?: boolean;\n    strictRefine?: boolean;\n    globalRelevance?: number;\n    questionLanguage?: string;\n    questionDefaultLanguage?: string;\n    spellingCorrectionMode?: SpellingCorrectionMode;\n    spellingCorrectionFilter?: string;\n    documentWeight?: string;\n    textPartWeights?: string;\n    relevanceTransforms?: string;\n    removeDuplicates?: boolean;\n    queryId?: string;\n    aggregations: MapOf<AggregationOptions> | string[];\n    orderBy?: string;\n    groupBy?: string;\n\n    /**\n     * Return a copy of the passed query\n     */\n    static copy(query: Query): Query {\n        if (!query) {\n            return query;\n        }\n        return query.copy();\n    }\n\n    constructor(\n        public name: string) {\n    }\n\n    /**\n     * Return `true` if the query has fulltext search elements\n     */\n    get hasRelevance(): boolean {\n        if (!Utils.isEmpty(this.text)) {\n            return true;\n        }\n        if (this.findSelect(\"refine\")) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Add a select filter to the query\n     *\n     * @param expr The fielded search expression to filter the results\n     * @param facet The name of the associated facet\n     */\n    addSelect(expr: string, facet?: string): number {\n        return this.pushSelect({\n            expression: expr,\n            facet: facet || \"\"\n        });\n    }\n\n    /**\n     * Adds a new `Select` object to the end of the query's `selects`\n     */\n    pushSelect(select: Select): number {\n        if (!this.select) {\n            this.select = [];\n        }\n        return this.select.push(select);\n    }\n\n    /**\n     * Remove the last `Select` object from the `selects` and return it\n     */\n    popSelect(): Select | undefined {\n        if (!this.select) {\n            return undefined;\n        }\n        return this.select.pop();\n    }\n\n    /**\n     * Remove the `Select` object identified by `indexOrFacet`\n     *\n     * @param indexOrFacet either an index in the `selects` array or a facet name\n     * @param all If `true` and `indexOrFacet` is a facet name then all `Select` objects with a matching facet name will be removed\n     */\n    removeSelect(indexOrFacet: number | string, all = false): void {\n        if (!this.select) {\n            return;\n        }\n        if (Utils.isString(indexOrFacet)) {\n            // indexOrFacet is a facet name\n            for (let i = this.select.length - 1; i >= 0; i--) {\n                const _select = this.select[i];\n                if (Utils.eqNC(_select.facet, indexOrFacet)) {\n                    this.select.splice(i, 1);\n                    if (this.select.length === 0) {\n                        delete this.select; // Clean the query if no more select\n                        return;\n                    }\n                    if (!all) {\n                        return;\n                    }\n                }\n            }\n        }\n        else {\n            if (indexOrFacet < 0 || indexOrFacet >= this.select.length) {\n                return;\n            }\n            this.select.splice(indexOrFacet, 1);\n            if (this.select.length === 0) {\n                delete this.select;\n            }\n        }\n    }\n\n    /**\n     * Replace a `Select` with another\n     *\n     * @param index The index in the `selects` array of the `Select to replace\n     * @param select The `Select` to use as a replacement\n     */\n    replaceSelect(index: number, select: Select) {\n        if (!this.select) {\n            return;\n        }\n        this.select.splice(index, 1, select);\n    }\n\n    /**\n     * Find the index of the nth `Select` object matching the passed facet name\n     *\n     * @param facet A facet name\n     * @param ordinal Specifies which `Select` object to retrieve among selects with the same facet name\n     */\n    findSelectIndex(facet: string, ordinal = 0): number {\n        if (!this.select) {\n            return -1;\n        }\n        let index = 0;\n        let facetOrdinal = 0;\n        let facetIndex = -1;\n        for (const select of this.select) {\n            if (Utils.eqNC(facet, select.facet)) {\n                facetIndex = index;\n                if (facetOrdinal === ordinal) {\n                    break;\n                }\n                facetOrdinal++;\n            }\n            index++;\n        }\n        return facetIndex;\n    }\n\n    /**\n     * Find the first `Select` matching the passed facet name\n     *\n     * @param facet A facet name\n     * @param fromEnd If `true` start searching backwards from the last `Select`\n     */\n    findSelect(facet: string, fromEnd = true): Select | undefined {\n        const facetSelectIndex = this.findSelectIndex(facet, fromEnd ? -1 : 0);\n        return facetSelectIndex >= 0 ? this.select && this.select[facetSelectIndex] : undefined;\n    }\n\n    /**\n     * Return the last `Select` object\n     */\n    lastSelect(): Select | undefined {\n        if (!this.select) {\n            return undefined;\n        }\n        return this.select[this.select.length - 1];\n    }\n\n    /**\n     * Return the number of `Select` objects\n     */\n    get selectLength(): number {\n        if (!this.select) {\n            return 0;\n        }\n        return this.select.length;\n    }\n\n    /**\n     * Add an `Open` filter to the query. This is typically used to load children of tree nodes\n     *\n     * @param expr The fielded search expression specifying the node to expand\n     * @param aggregation The associated aggregation\n     */\n    addOpen(expr: string, aggregation: string) {\n        if (!this.open || !Utils.isArray(this.open)) {\n            this.open = [];\n        }\n        return this.open.push({\n            expression: expr,\n            aggregation\n        });\n    }\n\n    /**\n     * Clear all fields in the query except the name\n     */\n    clear(): void {\n        const name = this.name;\n        Utils.clearObject(this);\n        this.name = name;\n    }\n\n    /**\n     * Remove advanced search select(s) from the query\n     */\n    toStandard(): Query {\n        const advancedSelect = this.select?.filter(\n          (select: Select) => select.facet && select.facet.startsWith(advancedFacetPrefix)\n        )\n        advancedSelect?.forEach(\n          (select) => this.removeSelect(select.facet, true)\n        )\n        return this;\n    }\n\n    /**\n     * Return a copy of this query\n     */\n    copy(): Query {\n        const query = new Query(this.name);\n        Utils.copy(this, query);\n        return query;\n    }\n\n    /**\n     * Return a copy of this query but without any advanced select\n     */\n    copyStandard(): Query {\n        const query = this.copy();\n        return query.toStandard();\n    }\n\n    /**\n     * Remove all properties from the query except advanced search select(s) and optionally `text`\n     *\n     * @param withText If `true` do not remove the `text` field\n     */\n    toAdvanced(withText: boolean = false): Query {\n        for (const property in this) {\n            if (this.hasOwnProperty(property) && !Utils.eqNC(property, \"select\") && (!withText || !Utils.eqNC(property, \"text\"))) {\n                delete this[property];\n            }\n        }\n        const notAdvancedSelect = this.select?.filter(\n          (select: Select) => select.facet && !select.facet.startsWith(advancedFacetPrefix)\n        )\n        notAdvancedSelect?.forEach(\n          (select) => this.removeSelect(select.facet)\n        )\n        return this;\n    }\n\n    /**\n     * Return a copy of this query including just the advanced fields and optionally `text`\n     *\n     * @param withText If `true` include the `text` field\n     */\n    copyAdvanced(withText: boolean = false): Query {\n        const query = this.copy();\n        return query.toAdvanced(withText);\n    }\n\n    /**\n     * Tests whether this query has advanced search selections\n     */\n    hasAdvanced(): boolean {\n        return !!this.select?.find(s => s.facet && s.facet.startsWith(advancedFacetPrefix));\n    }\n\n    /**\n     * Initialize this query from the passed JSON string\n     *\n     * @param jquery JSON in string form\n     */\n    fromJson(jquery: string): Query {\n        this.clear();\n        const query = Utils.fromJson(jquery);\n        // convert select and open\n        const select = query.select;\n        if (Utils.isArray(select)) {\n            query.select = select.map<Select>((value: Select | string[]) => {\n                if (Utils.isArray(value)) {\n                    return {\n                        expression: value[0],\n                        facet: value[1]\n                    };\n                }\n                else {\n                    return value;\n                }\n            });\n        }\n        const open = query.open;\n        if (Utils.isArray(open)) {\n            query.open = open.map<Open>((value: Open | string[]) => {\n                if (Utils.isArray(value)) {\n                    return {\n                        expression: value[0],\n                        aggregation: value[1]\n                    };\n                }\n                else {\n                    return value;\n                }\n            });\n        }\n        Utils.extend(this, query);\n        return this;\n    }\n\n    /**\n     * Returns a JSON representation of this query where `Select` and `Open` objects are expressed as tuple arrays for conciseness\n     */\n    toJsonForQueryString(): string {\n        const o: any = {};\n        Utils.merge(o, this);\n        if (this.select) {\n            o.select = this.select.map<string[]>((value) => {\n                const a = [value.expression];\n                if (value.facet) {\n                    a.push(value.facet);\n                }\n                return a;\n            });\n        }\n        if (this.open) {\n            o.open = this.open.map<string[]>((value) => [value.expression, value.aggregation]);\n        }\n        return Utils.toJson(o);\n    }\n\n    /**\n     * Return a hash value of this query that excludes any pagination parameters\n     */\n    hash(): string {\n        const obj: any = {};\n        Utils.mergeAndSort(obj, this);\n        // remove pagination\n        delete obj.page;\n        delete obj.pageSize;\n        const str = Utils.toJson(obj);\n        return Utils.sha512(str);\n    }\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'sq-alert-message',\n  templateUrl: './alert-message.component.html'\n})\nexport class BsAlertMessageComponent {\n  @Input() message: string;\n}\n","<div class=\"alert alert-danger ml-3 mr-3 p-3 text-center\" role=\"alert\">\n  {{ message }}\n</div>","import { Component, Input } from '@angular/core';\nimport { Results, ExportSourceType } from \"@sinequa/core/web-services\";\nimport { SavedQueriesService } from \"../../saved-queries.service\";\nimport { SelectionService } from \"@sinequa/components/selection\";\nimport { Action } from \"@sinequa/components/action\";\n\n\n\n/**\n * Toolbar component for Export query feature.\n *\n */\n@Component({\n    selector: 'sq-query-exporter',\n    templateUrl: './query-exporter.html'\n})\nexport class BsQueryExporter {\n\n    @Input() results: Results;\n    @Input() rightAligned: boolean;\n\n    public exportAction: Action;\n\n    constructor(\n        private selectionService: SelectionService,\n        private savedQueriesService: SavedQueriesService\n    ) {\n        this.exportAction = new Action({\n            icon: 'fas fa-download',\n            title: 'msg#exportQuery.btnTitle',\n            action: (item: Action, event: Event) => {\n                this.export();\n            }\n        });\n    }\n\n    /**\n     * Check if the client has selected some records.\n     *\n     * @returns true if the client has selected some records.\n     */\n    public hasSelectedRecords(): boolean {\n        return this.selectionService.haveSelectedRecords;\n    }\n\n    /**\n     * Generic export function.\n     * <p>\n     * Opens up a dialog to let user choose the export source, export format and other parameters.\n     *\n     * @memberof QueryExporter\n     */\n    public export(): void {\n\n        this.savedQueriesService.exportModal(\n            this.hasSelectedRecords() ? ExportSourceType.Selection : ExportSourceType.Result);\n\n    }\n\n}\n","<div [sq-action-buttons]=\"{\n        items: [exportAction],\n        autoAdjust: true,\n        rightAligned: rightAligned\n    }\">\n</div>","import {Component, OnInit, OnDestroy, ViewChild, ElementRef, DoCheck} from '@angular/core';\nimport {FormBuilder, FormGroup, FormControl} from \"@angular/forms\";\nimport {SearchService} from '@sinequa/components/search';\nimport {LoginService} from '@sinequa/core/login';\nimport {AppService} from '@sinequa/core/app-utils';\nimport {Subscription} from 'rxjs';\nimport {FEATURES} from '../../config';\nimport {ParseResult} from '@sinequa/components/autocomplete';\nimport {AutocompleteExtended} from './autocomplete-extended.directive';\nimport {UserPreferences} from '@sinequa/components/user-settings';\nimport {FirstPageService} from '@sinequa/components/search';\nimport {AdvancedService} from '@sinequa/components/advanced';\nimport {take} from 'rxjs/operators';\nimport {ActivatedRoute} from '@angular/router';\nimport {VoiceRecognitionService} from '@sinequa/components/utils';\n\n@Component({\n  selector: 'app-search-form',\n  templateUrl: './search-form.component.html',\n  styleUrls: ['./search-form.component.scss']\n})\nexport class SearchFormComponent implements OnInit, DoCheck, OnDestroy {\n  searchControl: FormControl;\n  form: FormGroup;\n  autofocus = 0;\n\n  /** Expression from the query selects, if any (\"simple\"/\"selects\" field search mode) */\n  fieldSearchExpression?: string;\n\n  /** Result of query parsing (\"advanced\" field search mode) */\n  parseResult?: ParseResult;\n\n  /** A reference to the AutocompleteExtended directive, needed to get the field search selections, if any */\n  @ViewChild(AutocompleteExtended) autocompleteDirective: AutocompleteExtended;\n\n  @ViewChild('searchInput') searchInput: ElementRef;\n\n  // Advanced search flags\n  showAdvancedSearch: boolean;\n  initAdvanced: boolean;\n  enableAdvancedForm = false; // Show the advanced form button or not\n\n  /** Define if a filter, NOT belonging to fielded & advanced search, is currently applied to the searchService.query */\n  isFiltering = false;\n\n  /** Specify if already applied filters should be kept or not while chaining searches */\n  keepFilters = false;\n  keepFiltersTitle = 'msg#searchForm.notKeepFilters';\n  enableKeepFilters = false; // Show the \"keep filters\" button or not\n\n  /** USED ALONG WITH keepFilters context, to optionally reset the advanced-search or not */\n  keepAdvancedSearchFilters = false;\n\n  /** Define if should stay on the same tab even after a new search */\n  keepTab = false;\n\n  /** Voice recognition */\n  voiceRecognitionState = false;\n  enableVoiceRecognition = false; // Show the voice recognition button or not\n\n  hasScroll = false;\n  @ViewChild('searchContainer') searchContainer: ElementRef;\n  private timeout: any;\n\n  private subscriptions: Subscription[] = [];\n\n  constructor(\n    public voiceService: VoiceRecognitionService,\n    public searchService: SearchService,\n    public loginService: LoginService,\n    private formBuilder: FormBuilder,\n    public appService: AppService,\n    public prefs: UserPreferences,\n    public firstPageService: FirstPageService,\n    public advancedService: AdvancedService,\n    public route: ActivatedRoute) {\n\n    this.voiceService.init();\n\n    this.subscriptions.push(...[\n        this.voiceService.started.subscribe(state => {\n        this.voiceRecognitionState = state;\n      }),\n        this.voiceService.text.subscribe(value => {\n        this.searchControl.setValue(value);\n      })\n    ]);\n\n  }\n\n  /**\n   * Initialization of the form\n   */\n  ngOnInit() {\n    this.searchControl = new FormControl('');\n    this.form = this.formBuilder.group({\n      search: this.searchControl\n    });\n\n    // Every time the query changes, we want to update the search form\n    this.subscriptions.push(this.searchService.queryStream.subscribe(query => {\n      // Update main search bar\n      this.searchControl.setValue(this.searchService.query?.text || '');\n      this.fieldSearchExpression = query?.findSelect(\"search-form\")?.expression;\n      this.autofocus++;\n\n      // Update advanced form\n      this.form.get('treepath')?.setValue(this.advancedService.getValue('treepath'));\n      this.form.get('authors')?.setValue(this.advancedService.getValue('authors'));\n      this.form.get('size')?.setValue(this.advancedService.getRangeValue('size'));\n      this.form.get('modified')?.setValue(this.advancedService.getRangeValue('modified'));\n      this.form.get('person')?.setValue(this.advancedService.getValue('person'));\n      this.form.get('docformat')?.setValue(this.advancedService.getValue('docformat'));\n\n      // Update the filtering status\n      this._updateFilteringStatus();\n\n      // Check user preferences regarding keeping filters\n      if(typeof this.prefs.get('keep-filters-state') !== 'undefined') {\n        this.keepFilters = this.prefs.get('keep-filters-state');\n        this.keepFiltersTitle = this.keepFilters ? 'msg#searchForm.keepFilters' : 'msg#searchForm.notKeepFilters';\n      }\n    }));\n\n    // Initialize the search form options (either now, or when login is complete)\n    if(this.appService.app) {\n      this.setOptions();\n    }\n    else {\n      this.subscriptions.push(this.loginService.events.subscribe(event => {\n        if(this.appService.app) {\n          this.setOptions();\n        }\n      }));\n    }\n  }\n\n  ngDoCheck() {\n    // Check if the input has a scrollbar\n    this.hasScroll = this.searchContainer?.nativeElement.scrollWidth > this.searchContainer?.nativeElement.clientWidth;\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.map(item => item.unsubscribe());\n  }\n\n  setOptions() {\n    const features = this.appService.app?.data?.features as string[] || FEATURES;\n    features.forEach(feature =>{\n      switch(feature){\n        case \"advanced-form\": this.enableAdvancedForm = true; break;\n        case \"keep-advanced-form-filters\": this.keepAdvancedSearchFilters = true; break;\n        case \"keep-tab\": this.keepTab = true; break;\n        case \"keep-filters\": {\n          // Initialize keep filter flag, if not already in preferences\n          if(typeof this.prefs.get('keep-filters-state') === 'undefined') {\n            this.keepFilters = true;\n          }\n          break;\n        }\n        case \"toggle-keep-filters\": this.enableKeepFilters = true; break;\n        case \"voice-recognition\": this.enableVoiceRecognition = true; break;\n      }\n    });\n  }\n\n  /**\n   * Trigger a search query via the search service\n   */\n  search() {\n    if(this.loginService.complete && this.form.valid) {\n\n      /** Hide autocomplete suggestions */\n      this.searchInput.nativeElement.blur();\n\n      /** Store relevant filters (tab ...)*/\n      const queryTab = this.searchService.query.tab;\n\n      /** If this.keepFilters = false, clear the query and reset all its filters. */\n      if (!this.keepFilters) {\n        this.searchService.clearQuery();\n\n        /** MUST explicitly reset the advanced form if this.keepAdvancedSearchFilters = false */\n        if (!this.keepAdvancedSearchFilters && !this.showAdvancedSearch) {\n          this.clearAdvancedForm();\n        }\n      }\n      \n      /** Close the advanced form */\n      this.showAdvancedSearch = false;\n\n      /** Update the new query with entered text */\n      this.searchService.query.text = this.searchControl?.value || \"\";\n\n      /** Update advanced search filters */\n      this.advancedService.setSelect('treepath', this.form.get('treepath')?.value);\n      this.advancedService.setSelect('authors', this.form.get('authors')?.value);\n      this.advancedService.setRangeSelect('size', this.form.get('size')?.value);\n      this.advancedService.setRangeSelect('modified', this.form.get('modified')?.value);\n      this.advancedService.setSelect('person', this.form.get('person')?.value);\n      this.advancedService.setSelect('docformat', this.form.get('docformat')?.value);\n\n      /** Add select from the fielded search (\"selects\", aka \"simple\" mode) */\n      if(this.getMode() === \"selects\") {\n        this.searchService.query.removeSelect(\"search-form\"); // Prevent having multiple instance if this.keepFilters = true\n        const expr = this.autocompleteDirective.getFieldSearchExpression();\n        if(expr) {\n          this.searchService.query.addSelect(expr, \"search-form\");\n        }\n      }\n\n      // if this.keepTab, stay on the same tab even after a new search\n      if (this.keepTab && !!queryTab) {\n        this.searchService.query.tab = queryTab;\n      }\n\n      /** Trigger the search with the new criteria */\n      this.searchService.searchText(\"search\");\n    }\n  }\n\n  /**\n   * Test if the search input is not empty\n   */\n  hasContent(): boolean {\n    return this.searchControl.value\n      || this.fieldSearchExpression;\n  }\n\n  /**\n   * Clears the search input and the fielded search\n   */\n  clearForm() {\n    this.searchControl.reset();\n    this.fieldSearchExpression = \"\";\n  }\n\n  /**\n   * Test if the advanced form has non-undefined values set\n   */\n  hasAdvancedContent(): boolean {\n    return this.form.get(\"treepath\")?.value\n      || this.form.get(\"authors\")?.value\n      || this.form.get(\"size\")?.value?.find(v => v)\n      || this.form.get(\"modified\")?.value?.find(v => v)\n      || this.form.get(\"person\")?.value\n      || this.form.get(\"docformat\")?.value;\n  }\n\n  /**\n   * Clears the advanced-search form\n   */\n  clearAdvancedSearch(): void {\n    this.advancedService.resetAdvancedValues();\n    /** Close the advanced form */\n    this.showAdvancedSearch = false;\n  }\n\n  /**\n   * Test if the query contains advanced-search related filters\n   */\n  isAdvancedSearchActive(): boolean {\n    return this.searchService.query.hasAdvanced();\n  }\n\n  /**\n   * Clear only the advanced form\n   */\n  clearAdvancedForm() {\n    if(this.initAdvanced) {\n      this.advancedService.resetControl(this.form.get(\"treepath\")!);\n      this.advancedService.resetControl(this.form.get(\"authors\")!);\n      this.advancedService.resetRangeControl(this.form.get(\"size\")!);\n      this.advancedService.resetRangeControl(this.form.get(\"modified\")!);\n      this.advancedService.resetControl(this.form.get(\"person\")!);\n      this.advancedService.resetControl(this.form.get(\"docformat\")!);\n    }\n  }\n\n  onParse(parseResult: ParseResult) {\n    this.parseResult = parseResult;\n    this.searchControl.setErrors(parseResult.error? {incorrect: true} : null);\n  }\n\n  /**\n   * Autocomplete icon per category\n   * @param category\n   */\n  autocompleteIcon(category): string {\n    switch(category){\n      case \"recent-document\": return \"far fa-file-alt fa-fw\";\n      case \"recent-query\": return \"fas fa-history fa-fw\";\n      case \"basket\": return \"fas fa-inbox fa-fw\";\n      case \"saved-query\": return \"far fa-save fa-fw\";\n    }\n    return \"far fa-lightbulb fa-fw\";\n  }\n\n  /**\n   * Retrieve autocomplete sources, which include the standard\n   */\n  get autocompleteSources(): string[] {\n    return this.appService.app?.data?.features as string[] || FEATURES;\n  }\n\n  /**\n   * Sets the field search mode\n   * event.preventDefault() to avoid the label stealing the focus\n   * and closing the autocomplete...\n   */\n  setMode(mode: \"off\" | \"selects\" | \"text\", event?: Event) {\n    event?.preventDefault();\n    this.prefs.set('field-search-mode', mode);\n  }\n\n  /**\n   * Returns the field search mode, stored in user\n   * preferences\n   */\n  getMode(): \"off\" | \"selects\" | \"text\" {\n    return this.prefs.get('field-search-mode') || \"selects\";\n  }\n\n  /**\n   * Toggle the keepFilters status\n   */\n  toggleKeepFilters(): void {\n    this.keepFilters = !this.keepFilters;\n    this.keepFiltersTitle = this.keepFilters ? 'msg#searchForm.keepFilters' : 'msg#searchForm.notKeepFilters';\n    /** Sets the state of keeping search's filters*/\n    this.prefs.set('keep-filters-state', this.keepFilters);\n  }\n\n  /**\n   * Programmatically handle opening/closing of the advanced-search form\n   */\n  toggleAdvancedSearch(): void {\n    this.showAdvancedSearch = !this.showAdvancedSearch;\n    this._instantiateAdvancedForm();\n  }\n\n  toggleVoice() {\n    this.voiceService.toggleRecognition();\n  }\n\n  scrollRight() {\n    this.timeout = setTimeout(() => {\n      this._scrollRight()\n    }, 100);\n  }\n\n  scrollLeft() {\n    this.timeout = setTimeout(() => {\n      this._scrollLeft();\n    }, 100);\n  }\n\n  endScroll() {\n    clearTimeout(this.timeout);\n  }\n\n  private _scrollRight() {\n    this.searchContainer!.nativeElement.scrollLeft += 20;\n    this.scrollRight();\n  }\n\n  private _scrollLeft() {\n    this.searchContainer!.nativeElement.scrollLeft -= 20;\n    this.scrollLeft();\n  }\n\n  /**\n   * Close the advanced-search form if the search input is focused\n   */\n  onMouseDown(): void {\n    this.showAdvancedSearch = false;\n  }\n\n  /**\n   * Instantiation of the advanced search form and its dependencies/configurations\n   */\n  private _instantiateAdvancedForm(): void {\n    if(!this.initAdvanced) {\n      this.firstPageService.getFirstPage().pipe(take(1)).subscribe(\n        () => {},\n        () => {},\n        () => {\n            this.form.addControl('treepath', this.advancedService.createSelectControl('treepath'));\n            this.form.addControl('authors', this.advancedService.createSelectControl('authors'));\n            this.form.addControl('size', this.advancedService.createRangeControl('size',\n              [ this.advancedService.validators.range('size') ]\n            ));\n            this.form.addControl('modified', this.advancedService.createRangeControl('modified',\n              [\n                this.advancedService.validators.range('modified'),\n                this.advancedService.validators.date('modified')\n              ]\n            ));\n            this.form.addControl('person', this.advancedService.createMultiInputControl('person'));\n            this.form.addControl('docformat', this.advancedService.createInputControl('docformat'));\n\n            this.initAdvanced = true;\n        }\n      )\n    }\n  }\n\n  /**\n   * Update the status of filters (other than advanced & fielded search filters) existence in this.searchService.query\n   */\n  private _updateFilteringStatus(): void {\n    const _query =  this.searchService.query.copy();\n    this.isFiltering = (_query.toStandard().select?.filter((select) => select.facet !== \"search-form\").length || 0) > 0;\n  }\n}\n","\n<!-- Wrapper div to ensure the autocomplete dropdown is aligned with the search input and button -->\n<div class=\"d-flex flex-column flex-grow-1 position-relative\">\n\n    <form novalidate [formGroup]=\"form\">\n\n        <div class=\"input-group\">\n            <!-- Input with autocomplete -->\n            <div\n                class=\"form-control d-flex pr-1\"\n                [title]=\"parseResult?.error || ''\"\n                [ngClass]=\"{'is-invalid': !!parseResult?.error}\">\n\n                <!-- scroll left -->\n                <button type=\"button\"\n                    class=\"btn btn-focus p-0\"\n                    *ngIf=\"hasScroll\"\n                    [sqTooltip]=\"'msg#searchForm.scrollLeft' | sqMessage\"\n                    [disabled]=\"!loginService.complete  ? '' : null\"\n                    (mouseup)=\"endScroll()\"\n                    (mousedown)=\"scrollLeft()\">\n                    <i class=\"fas fa-chevron-circle-left text-muted\"></i>\n                </button>\n\n                <div class=\"d-flex search-form-control scrollbar-hidden\" #searchContainer>\n\n                    <!-- Fielded search -->\n                    <sq-field-search-items #fieldSearchItemsContainer></sq-field-search-items>\n\n                    <!-- Search input -->\n                    <input type=\"text\"\n                        class=\"search-input flex-grow-1\"\n                        formControlName=\"search\"\n                        spellcheck=\"false\"\n                        autocomplete=\"off\"\n\n                        [placeholder]=\"'msg#searchForm.searchFor' | sqMessage\"\n                        [sqAutofocus]=\"autofocus\"\n                        [sqAutocompleteExtended]=\"autocompleteSources\"\n                        [dropdown]=\"dropdown\"\n                        [off]=\"!loginService.complete || !appService.suggestQueries\"\n                        [suggestQuery]=\"appService.suggestQueries? appService.suggestQueries[0] : ''\"\n\n                        [fieldSearchMode]=\"getMode()\"\n                        [fieldSearchExpression]=\"fieldSearchExpression\"\n                        [fieldSearchItemsContainer]=\"fieldSearchItemsContainer\"\n                        [excludedFields]=\"['concepts','textlexicon','recent-query','saved-query','basket','recent-document']\"\n\n                        (submit)=\"search()\"\n                        (parse)=\"onParse($event)\"\n                        (mousedown)=\"onMouseDown()\"\n                        #searchInput>\n                </div>\n\n                <!-- scroll right -->\n                <button type=\"button\"\n                    class=\"btn btn-focus p-0 mr-2\"\n                    *ngIf=\"hasScroll\"\n                    [sqTooltip]=\"'msg#searchForm.scrollRight' | sqMessage\"\n                    [disabled]=\"!loginService.complete  ? '' : null\"\n                    (mouseup)=\"endScroll()\"\n                    (mousedown)=\"scrollRight()\">\n                    <i class=\"fas fa-chevron-circle-right text-muted\"></i>\n                </button>\n\n                <!-- Clear Button -->\n                <button type=\"button\"\n                    *ngIf=\"hasContent()\"\n                    class=\"btn btn-focus p-0 mr-2\"\n                    [sqTooltip]=\"'msg#searchForm.clear' | sqMessage\"\n                    [disabled]=\"!loginService.complete ? '' : null\"\n                    (click)=\"clearForm()\">\n                    <i class=\"fas fa-times-circle text-muted\"></i>\n                </button>\n\n                <!-- Keep Filters Button -->\n                <button type=\"button\"\n                    *ngIf=\"isFiltering && enableKeepFilters\"\n                    class=\"btn btn-focus p-0 mr-2\"\n                    [sqTooltip]=\"keepFiltersTitle | sqMessage\"\n                    [disabled]=\"!loginService.complete ? '' : null\"\n                    (click)=\"toggleKeepFilters()\">\n                    <i class=\"fas fa-filter\" [ngClass]=\"keepFilters ? 'light-green' : 'text-muted'\"></i>\n                </button>\n\n                <!-- Toggle voice recognition -->\n                <button *ngIf=\"voiceService.available && enableVoiceRecognition\"\n                    type=\"button\"\n                    class=\"btn btn-focus p-0 mr-2\"\n                    [sqTooltip]=\"'msg#searchForm.voiceRecognition' | sqMessage\"\n                    (click)=\"toggleVoice()\">\n                    <i class=\"fas fa-microphone\"[ngClass]=\"voiceRecognitionState ? 'light-green' : 'text-muted'\"></i>\n                </button>\n\n                <!-- Toggle advanced search -->\n                <button type=\"button\"\n                    *ngIf=\"enableAdvancedForm\"\n                    class=\"btn p-0 pr-1\"\n                    [sqTooltip]=\"'msg#searchForm.advancedSearch' | sqMessage\"\n                    [disabled]=\"!loginService.complete ? '' : null\"\n                    (click)=\"toggleAdvancedSearch()\">\n                    <i class=\"fas fa-chevron-circle-{{showAdvancedSearch ? 'up' : 'down'}}\"\n                        [ngClass]=\"{'text-muted': !hasAdvancedContent() && !isAdvancedSearchActive(),\n                                    'light-green': isAdvancedSearchActive(),\n                                    'light-blue': hasAdvancedContent() && !isAdvancedSearchActive()}\">\n                    </i>\n                </button>\n            </div>\n\n            <!-- Search buttons -->\n            <div class=\"input-group-append\">\n                <button class=\"btn btn-primary\" type=\"button\" (click)=\"search()\"\n                    [sqTooltip]=\"'msg#searchForm.search' | sqMessage\"\n                    [disabled]=\"!loginService.complete || !form.valid ? '' : null\">\n                    <i class=\"fas fa-search\"></i>\n                </button>\n            </div>\n        </div>\n\n        <!-- Card displaying advanced-search -->\n        <div class=\"card advanced-search\" *ngIf=\"showAdvancedSearch\">\n            <div class=\"card-header pl-3 pr-2 py-1\">\n              <div class=\"d-flex justify-content-between\">\n                <span class=\" mb-0 py-1\">\n                    <i class=\"fab fa-searchengin mr-2\"></i>\n                    {{'msg#searchForm.advancedSearch' | sqMessage}}\n                </span>\n                <button\n                    type=\"button\" class=\"btn btn-light btn-sm\"\n                    *ngIf=\"isAdvancedSearchActive()\"\n                    [sqTooltip]=\"'msg#facet.clearSelects' | sqMessage\"\n                    (click)=\"clearAdvancedSearch()\">\n                    <i class=\"far fa-minus-square\"></i>\n                </button>\n              </div>\n            </div>\n            <div *ngIf=\"!firstPageService.firstPage\" class=\"d-flex flex-column align-items-stretch pl-3 pr-2 py-1\">\n                <span class=\"fas fa-sync fa-spin fa-fw\"></span>\n            </div>\n            <div *ngIf=\"firstPageService.firstPage\" class=\"d-flex flex-column align-items-stretch pl-3 pr-2 py-1\">\n                <sq-advanced-form-select [form]=\"form\" [field]=\"'treepath'\" [multiple]=\"true\"></sq-advanced-form-select>\n                <sq-advanced-form-select [form]=\"form\" [field]=\"'authors'\" [multiple]=\"true\"></sq-advanced-form-select>\n                <sq-advanced-form-range [form]=\"form\" [field]=\"'size'\"></sq-advanced-form-range>\n                <sq-advanced-form-range [form]=\"form\" [field]=\"'modified'\"></sq-advanced-form-range>\n                <sq-advanced-form-multi-input [form]=\"form\" [field]=\"'person'\" [suggestQuery]=\"appService.suggestQueries? appService.suggestQueries[0] : ''\"></sq-advanced-form-multi-input>\n                <sq-advanced-form-input [form]=\"form\" [field]=\"'docformat'\" [suggestQuery]=\"appService.suggestQueries? appService.suggestQueries[0] : ''\"></sq-advanced-form-input>\n            </div>\n        </div>\n    </form>\n\n    <!-- Autocomplete dropdown panel displaying suggestions -->\n    <sq-autocomplete-list #dropdown>\n        <ng-template #itemTpl let-item>\n            <div class=\"autocomplete-item p-2\">\n                <i class=\"{{autocompleteIcon(item.category)}}\"></i><!--\n                --><span class=\"mx-2\" [innerHTML]=\"item.displayHtml || item.display\"></span><!--\n                --><small *ngIf=\"item.category\" class=\"autocomplete-category ml-2\">{{(item.label || item.category) | sqMessage}}</small>\n            </div>\n        </ng-template>\n\n        <ng-template #footerTpl>\n            <div class=\"small d-flex align-items-center\">\n                {{ 'msg#searchForm.fieldedSearch' | sqMessage}}: &nbsp;\n                <div class=\"form-check form-check-inline\">\n                    <input class=\"form-check-input\" type=\"radio\" id=\"off\" value=\"off\" (click)=\"setMode('off')\" [checked]=\"getMode() === 'off'\">\n                    <label class=\"form-check-label\" for=\"off\" (click)=\"setMode('off', $event)\">{{ 'msg#searchForm.off' | sqMessage}}</label>\n                </div>\n                <div class=\"form-check form-check-inline\">\n                    <input class=\"form-check-input\" type=\"radio\" id=\"selects\" value=\"selects\" (click)=\"setMode('selects')\" [checked]=\"getMode() === 'selects'\">\n                    <label class=\"form-check-label\" for=\"selects\" (click)=\"setMode('selects', $event)\" [title]=\"'msg#searchForm.simpleTitle' | sqMessage\">{{ 'msg#searchForm.simple' | sqMessage}}</label>\n                </div>\n                <div class=\"form-check form-check-inline\">\n                    <input class=\"form-check-input\" type=\"radio\" id=\"text\" value=\"text\" (click)=\"setMode('text')\" [checked]=\"getMode() === 'text'\">\n                    <label class=\"form-check-label\" for=\"text\" (click)=\"setMode('text', $event)\" [title]=\"'msg#searchForm.advancedTitle' | sqMessage\">{{ 'msg#searchForm.advanced' | sqMessage}}</label>\n                </div>\n            </div>\n        </ng-template>\n    </sq-autocomplete-list>\n\n</div>\n\n","export * from \"./public-api\";","import {Injectable, InjectionToken, Inject, Type, Optional} from \"@angular/core\";\nimport {Router} from \"@angular/router\";\nimport {Observable, Subject} from \"rxjs\";\nimport {AppService, ExprBuilder, Query} from \"@sinequa/core/app-utils\";\nimport {AuthenticationService} from \"@sinequa/core/login\";\nimport {PreviewWebService, PreviewData, AuditEventType, Record, AuditEvent, Results} from \"@sinequa/core/web-services\";\nimport {JsonObject, Utils} from \"@sinequa/core/base\";\nimport {ModalService} from \"@sinequa/core/modal\";\nimport {SearchService} from \"@sinequa/components/search\";\nimport {RecentDocumentsService} from '@sinequa/components/saved-queries';\n\nexport const enum PreviewEventType {\n    Data = \"Preview_Data\",\n    Modal = \"Preview_Modal\",\n    Route = \"Preview_Route\",\n    Window = \"Preview_Window\"\n}\n\nexport interface PreviewEvent {\n    type: PreviewEventType;\n    record?: Record;\n    query: Query;\n}\n\nexport const PREVIEW_MODAL = new InjectionToken<Type<any>>(\"PREVIEW_MODAL\");\n\n\n@Injectable({\n    providedIn: \"root\"\n})\nexport class PreviewService {\n\n    private readonly _events = new Subject<PreviewEvent>();\n    private rank: number;\n\n    constructor(\n        @Optional() @Inject(PREVIEW_MODAL) public previewModal: Type<any>,\n        private router: Router,\n        private previewWebService: PreviewWebService,\n        private appService: AppService,\n        private authenticationService: AuthenticationService,\n        private searchService: SearchService,\n        private modalService: ModalService,\n        private recentDocumentsService: RecentDocumentsService,\n        public exprBuilder: ExprBuilder) {\n\n        // Subscribe to own events and add documents to the recent documents service\n        this.events.subscribe(event => {\n            if(event.record && (event.type === PreviewEventType.Modal || event.type === PreviewEventType.Route || event.type === PreviewEventType.Window)){\n                this.recentDocumentsService.addDocument(event.record, false);\n            }\n        });\n    }\n\n    /**\n     * Triggers any event among PreviewEvent\n     */\n    public get events() : Subject<PreviewEvent> {\n        return this._events;\n    }\n\n    private makeQuery(query: Query): Query {\n        query = Utils.copy(query);\n        delete query.sort;\n        delete query.scope;\n        delete query.tab;\n        delete query.basket;\n        delete query.page;\n        delete query.queryId;\n        if (query.select) {\n            query.select = query.select.filter(value => Utils.eqNC(value.facet, \"refine\"));\n            if (query.select.length === 0) {\n                delete query.select;\n            }\n        }\n        return query;\n    }\n\n    public getPreviewData(id: string, query: Query, audit = true): Observable<PreviewData> {\n        let auditEvent: AuditEvent | undefined;\n        const record = this.searchService.getRecordFromId(id);\n        const resultId = record ? this.searchService.results?.id : undefined;\n        if (audit) {\n            auditEvent = {\n                type: AuditEventType.Doc_Preview,\n                detail: this.getAuditPreviewDetail(id, query, record, resultId)\n            };\n        }\n        query = this.makeQuery(query);\n        const observable = this.previewWebService.get(id, query, auditEvent);\n        Utils.subscribe(observable,\n            (previewData) => {\n                previewData.resultId = resultId || \"\";\n                return previewData;\n            });\n        this._events.next({type: PreviewEventType.Data, record, query});\n\n        return observable;\n    }\n\n    public makeDownloadUrl(url: string): string | undefined {\n        return url ? this.appService.updateUrlForCors(url) : undefined;\n    }\n\n    openModal(record: Record, query: Query, model: any) {\n        model.record = record;\n        model.query = query;\n\n        this._events.next({type: PreviewEventType.Modal, record, query});\n\n        this.modalService.open(this.previewModal, { model });\n    }\n\n    private getQueryStr(query: Query): string {\n        query = this.makeQuery(query);\n        return query.toJsonForQueryString();\n    }\n\n    openNewWindow(record: Record, query: Query): Window | null {\n        const params = {\n            id: record.id,\n            query: this.getQueryStr(query),\n            app: this.appService.appName\n        };\n\n        if (this.authenticationService.userOverrideActive && this.authenticationService.userOverride) {\n            params[\"overrideUser\"] = this.authenticationService.userOverride.userName;\n            params[\"overrideDomain\"] = this.authenticationService.userOverride.domain;\n        }\n        const httpParams = Utils.makeHttpParams(params);\n        const url = \"#/preview?\" + httpParams.toString();\n\n        this._events.next({type: PreviewEventType.Window, record, query});\n\n        return window.open(url, \"_blank\");\n    }\n\n    openRoute(record: Record, query: Query, path = \"preview\"): Promise<Boolean> {\n\n        this._events.next({type:PreviewEventType.Route, record, query});\n        this.rank = record.rank;\n\n        return this.router.navigate([path], {\n            queryParams: {\n                id: record.id,\n                query: this.getQueryStr(query)\n            }\n        });\n    }\n\n    /**\n     * Get the page number of a splitted document's record or undefined if\n     * it is not in fact splitted. Stores the page number in the record itself ($page property)\n     * @param record \n     */\n    getPageNumber(record: Record): number | undefined {\n        const containerid: string | undefined = record.containerid;\n        if(containerid && record.id.startsWith(containerid)) {\n            const pageNumberStr = record.id.slice(containerid.length+1);\n            if(/#\\d+#/g.test(pageNumberStr)) {\n                const pageNumber = parseInt(pageNumberStr.slice(1, pageNumberStr.length-1), 10);\n                if(!isNaN(pageNumber)) {\n                    record.$page = pageNumber;\n                    return pageNumber;\n                }\n            }\n        }\n        return undefined;\n    }\n\n    /**\n     * Returns the pages of a given record id\n     * @param containerid\n     * @param query\n     */\n    fetchPages(containerid: string, query: Query): Observable<Results> {\n        query = this.makeQuery(query);\n        query.groupBy = \"\"; // If the query web service uses GROUP BY containerid\n        query.addSelect(this.exprBuilder.makeExpr(\"containerid\", containerid));\n        return this.searchService.getResults(query);\n    }\n\n    getAuditPreviewDetail(id: string, query: Query, record?: Record, resultId?: string): JsonObject {\n        const queryLanguage = this.searchService.results?.queryAnalysis?.queryLanguage\n            || this.searchService?.query?.questionLanguage\n            || this.appService?.ccquery?.questionLanguage;\n        const collectionColumn = record?.collection;\n        const collection = !!collectionColumn ? collectionColumn[0] : Utils.split(id, \"|\")[0];\n        const rank = !!record ? record.rank : this.rank || 0;\n        return {\n            \"doc-id\": id,\n            rank: rank,\n            collection: collection,\n            source: Utils.treeFirstNode(collection),\n            resultid: resultId,\n            querylang: queryLanguage,\n            text: query.text,\n            filename: record?.filename,\n            fileext: record?.fileext,\n        }\n    }\n    \n    /**\n     * returns document's preview HTML\n     * @param url \n     * @returns document's preview HTML\n     */\n    public getHtmlPreview(url:string) {\n        return this.previewWebService.getHtmlPreview(url);\n    }\n}","import {Utils} from \"./utils\";\n\n/**\n * Defines the different pattern types\n * `Empty`: no pattern\n * `RegExp`: a regular expression pattern\n * `Value`: a literal value\n */\nexport enum PatternType {\n    Empty = 0,\n    RegExp = 1,\n    // WildCard = 2,\n    Value = 3\n}\n\n/**\n * A class that represents a single pattern. The pattern type is deduced automatically from the input pattern text.\n *\n * `<empty string>` => `Empty`\n * `<pattern with wildcards ?*>` => `RegExp` (wildcards are converted to regular expressions)\n * `<pattern starting with ~>` => `RegExp` (the text following the ~ character is treated as a regular expression)\n * `<any other value>` => `Value` (a literal value that is matched as-is)\n */\nexport class Pattern {\n    private _type: PatternType;\n    public get type(): PatternType {\n        return this._type;\n    }\n    private reg?: RegExp;\n    private preparedPattern1?: string;\n    // private preparedPattern2: string;\n    private _text?: string;\n    public get text(): string | undefined {\n        return this._text;\n    }\n\n    public static getPatternType(pattern: string): PatternType {\n        if (!pattern) {\n            return PatternType.Empty;\n        }\n        if (pattern[0] === \"~\" || pattern.includes(\"*\") || pattern.includes(\"?\")) {\n            return PatternType.RegExp;\n        }\n        return PatternType.Value;\n    }\n\n    public static isPattern(pattern: string): boolean {\n        if (!pattern) {\n            return false;\n        }\n        if (pattern[0] === \"~\" || pattern.includes(\"*\") || pattern.includes(\"?\")) {\n            return true;\n        }\n        return false;\n    }\n\n    public static doMatch(pattern: string, text: string): boolean {\n        const _pattern = new Pattern();\n        _pattern.load(pattern);\n        return _pattern.isMatch(text);\n    }\n\n    public static wildcardToRegex(pattern: string): string {\n        if (!pattern) {\n            return pattern;\n        }\n        return \"^\" + Utils.regExEscape(pattern).replace(\"\\\\*\", \".*\").replace(\"\\\\?\", \".\") + \"$\";\n    }\n\n    public constructor(pattern?: string) {\n        if (!pattern) {\n            this.clear();\n        }\n        else {\n            this.load(pattern);\n        }\n    }\n\n    private static cleanPattern(s: string): string {\n        if (!s) {\n            return s;\n        }\n        const sb: string[] = [];\n        let lastIsStar = false;\n        for (const ch of s) {\n            if (ch === \"*\") {\n                if (!lastIsStar) {\n                    lastIsStar = true;\n                    sb.push(ch);\n                }\n            }\n            else {\n                lastIsStar = false;\n                sb.push(ch);\n            }\n        }\n        return sb.join(\"\");\n    }\n\n    public clear():void {\n        this.reg= undefined;\n        this._text = undefined;\n        this.preparedPattern1 = undefined;\n        // this.preparedPattern2 = undefined;\n        this._type = PatternType.Empty;\n    }\n\n    public isEmpty(): boolean {\n        return this._type === PatternType.Empty;\n    }\n\n    public load(pattern: string): boolean {\n        this.clear();\n        try {\n            let s = pattern;\n            this._text = pattern;\n            this._type = Pattern.getPatternType(s);\n            if (this._type === PatternType.Empty) {\n                return true;\n            }\n            if (this._type === PatternType.Value) {\n                this.preparedPattern1= s ;\n                return true;\n            }\n            if (this._type === PatternType.RegExp) {\n                if (s[0] === \"~\") {\n                    s = s.substring(1);\n                }\n                else {\n                    s = Pattern.wildcardToRegex(Pattern.cleanPattern(s));\n                }\n                this.preparedPattern1 = s;\n                this.reg = new RegExp(s, \"i\");\n                return true;\n            }\n            return false;\n        }\n        catch (e) {\n            console.log(`Pattern.Load '${pattern}' error:`, e);\n            this.clear();\n            return false;\n        }\n    }\n\n    public getTypeValueText(): string | undefined {\n        if (this.type === PatternType.Value) {\n            return this.preparedPattern1;\n        }\n        return undefined;\n    }\n\n    public getTypeRegexPattern(): string | undefined {\n        if (this.type === PatternType.RegExp) {\n            return this.preparedPattern1;\n        }\n        return undefined;\n    }\n\n    public isTypeValue(): boolean {\n        return this.type === PatternType.Value;\n    }\n\n    public isMatch(text: string): boolean {\n        text = text || \"\";\n        switch (this._type) {\n            default:\n            case PatternType.Empty:\n                return true;\n            case PatternType.Value:\n                return Utils.eqNC(text, this.preparedPattern1 || \"\");\n            case PatternType.RegExp:\n                return this.reg?.test(text) || false;\n        }\n    }\n}\n\nexport class Patterns {\n    private _text?: string;\n    private _preparedPatterns?: Pattern[];\n    private _values?: { [key: string]: true };\n    private _isEmpty: boolean;\n\n    constructor(text?: string) {\n        this.text = text;\n    }\n\n    public clear(): void {\n        this._preparedPatterns = undefined;\n        this._values = undefined;\n        this._isEmpty = true;\n    }\n\n    public get text(): string | undefined {\n        return this._text;\n    }\n\n    public set text(value: string | undefined) {\n        if (value === this._text) {\n            return;\n        }\n        this._text = value;\n        const l = Utils.split(this._text || \"\", \";\");\n        this.innerSetList(l);\n\n    }\n\n    public getTypeCount(type: PatternType): number {\n        if (!this._preparedPatterns) {\n            return 0;\n        }\n        if (type === PatternType.Value) {\n            return !!this._values ? Object.keys(this._values).length : 0;\n        }\n        let count = 0;\n        for (const pattern of this._preparedPatterns) {\n            if (pattern.type === type) {\n                count++;\n            }\n        }\n        return count;\n    }\n\n    private innerSetList(l: string[] | undefined): void {\n        this._preparedPatterns = undefined;\n        this._values = undefined;\n        this._isEmpty = true;\n\n        if (!!l) {\n            for (const s of l) {\n                if (!s) {\n                    continue;\n                }\n                const pattern = new Pattern();\n                if (pattern.load(s)) {\n                    if (!this._preparedPatterns) {\n                        this._preparedPatterns = [];\n                    }\n                    this._preparedPatterns.push(pattern);\n                }\n            }\n        }\n        if (this._preparedPatterns) {\n            const c = this._preparedPatterns.length;\n            if (c > 0) {\n                this._isEmpty = false;\n            }\n            for (let i = c - 1; i >= 0; i--) {\n                const pattern = this._preparedPatterns[i];\n                //do values\n                if (pattern.isTypeValue()) {\n                    if (!this._values) {\n                        this._values = {};\n                    }\n                    const val = pattern.getTypeValueText() || \"\";\n                    this._values[val] = true;\n                    this._preparedPatterns.splice(i, 1);\n                }\n            }\n        }\n    }\n\n    public get list(): string[] {\n        return Utils.split(this.text || \"\", \";\");\n    }\n\n    public set list(value: string[]) {\n        this.text = !!value ? value.join(\";\") : undefined;\n        this.innerSetList(value);\n    }\n\n    public setText(list: string[]): void {\n        this.list = list;\n    }\n\n    public isEmpty(): boolean {\n        return this._isEmpty;\n    }\n\n    public hasPatterns(): boolean {\n        return !this.isEmpty();\n    }\n\n    public isMatch(name: string, logdisplay?: string) {\n        if (this.isEmpty()) {\n            return true;\n        }\n\n        if (!!this._values) {\n            if (this._values[name]) {\n                if (!!logdisplay) {\n                    console.log(logdisplay, ` : the pattern '${name}' matches the value '${name}'`);\n                }\n                return true;\n            }\n        }\n\n        if (!!this._preparedPatterns) {\n            for (const pattern of this._preparedPatterns) {\n                if (!pattern) {\n                    continue;\n                }\n                if (pattern.isTypeValue()) {\n                    continue;\n                }\n                if (pattern.isMatch(name)) {\n                    if (!!logdisplay) {\n                        console.log(logdisplay, ` : the pattern '${pattern.text}' matches the value '${name}'`);\n                    }\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n}\n\n/**\n * This class is used to process \"included\" and \"excluded\" patterns typically specified in the Sinequa configuration.\n */\nexport class PatternMatcher {\n    public includedPattern: Patterns;\n    public excludedPattern: Patterns;\n\n    public get included(): string | undefined {\n        return this.includedPattern.text;\n    }\n\n    public set included(value: string | undefined) {\n        this.includedPattern.text = value;\n    }\n\n    public get excluded(): string | undefined {\n        return this.excludedPattern.text;\n    }\n\n    public set excluded(value: string | undefined) {\n        this.excludedPattern.text = value;\n    }\n\n    public set includedList(value: string[]) {\n        this.includedPattern.list = value;\n    }\n\n    public set excludedList(value: string[]) {\n        this.excludedPattern.list = value;\n    }\n\n    public includedLogDisplay?: string;\n    public excludedLogDisplay?: string;\n\n    constructor(includedLogDisplay?: string, excludedLogDisplay?: string) {\n        this.includedPattern = new Patterns();\n        this.excludedPattern = new Patterns();\n        this.includedLogDisplay = includedLogDisplay;\n        this.excludedLogDisplay = excludedLogDisplay;\n    }\n\n    public hasPatterns(): boolean {\n        return this.includedPattern.hasPatterns() || this.excludedPattern.hasPatterns();\n    }\n\n    public isExcluded(name: string): boolean {\n        return !this.isIncluded(name);\n    }\n\n    public isIncluded(name: string): boolean {\n        if (!name) {\n            return true;\n        }\n        if (this.includedPattern.hasPatterns()) {\n            if (this.excludedPattern.hasPatterns()) {\n                if (this.excludedPattern.isMatch(name, this.excludedLogDisplay)) {\n                    return false;\n                }\n            }\n            if (!this.includedPattern.isMatch(name, this.includedLogDisplay)) {\n                return false;\n            }\n            return true;\n        }\n        else if (this.excludedPattern.hasPatterns()) {\n            if (this.excludedPattern.isMatch(name, this.excludedLogDisplay)) {\n                return false;\n            }\n            return true;\n        }\n        return true;\n    }\n\n    public isExplicitlyIncluded(name: string): boolean {\n        return this.includedPattern.hasPatterns() && this.includedPattern.isMatch(name, this.includedLogDisplay);\n    }\n\n    public isExplicitlyExcluded(name: string): boolean {\n        return this.excludedPattern.hasPatterns() && this.excludedPattern.isMatch(name, this.excludedLogDisplay);\n    }\n}\n","import {Component, OnInit, Inject} from \"@angular/core\";\nimport {MODAL_MODEL, ModalRef, ModalButton, ModalResult} from \"@sinequa/core/modal\";\nimport {Basket, BasketsService, SelectBasketModel} from \"../../baskets.service\";\n\n@Component({\n    selector: \"sq-select-basket\",\n    templateUrl: \"./select-basket.html\"\n})\nexport class BsSelectBasket implements OnInit {\n    baskets: Basket[];\n    buttons: ModalButton[];\n\n    constructor(\n        @Inject(MODAL_MODEL) public model: SelectBasketModel,\n        private basketsService: BasketsService,\n        private modalRef: ModalRef) {\n        this.baskets = this.basketsService.baskets;\n\n        if (!this.baskets) {\n            this.baskets = [];\n        }\n\n        this.buttons = [\n            new ModalButton({\n                result: ModalResult.Cancel\n            })\n        ];\n    }\n\n    ngOnInit(): void {\n        if (!!this.model.basketFilter) {\n            this.baskets = this.baskets.filter(this.model.basketFilter);\n        }\n    }\n\n    activate(model) {\n        this.model = model;\n    }\n\n    select(basket: Basket) {\n        if (basket) {\n            this.model.basket = basket;\n            this.modalRef.close(ModalResult.OK);\n        }\n    }\n\n    newBasket(){\n        const model : Basket = {name : \"\"};\n        this.basketsService.createBasketModal(model)\n            .then((result) => {\n                if(result){ // The basket was created\n                    this.select(model);\n                }\n            });\n    }\n}\n","<form name=\"selectBasket\" novalidate>\n    <sq-modal [title]=\"'msg#selectBasket.title'\" [buttons]=\"buttons\">\n        <div class=\"form-group\">\n            <div class=\"list-group sq-list-group\">\n                <a *ngFor=\"let basket of baskets\" href=\"javascript:void(0)\" class=\"list-group-item list-group-item-action\" (click)=\"select(basket)\">\n                    <div>{{basket.name | sqMessage}}</div>\n                </a>\n                <a *ngIf=\"model.allowNew\" href=\"javascript:void(0)\" class=\"list-group-item list-group-item-action\" (click)=\"newBasket()\">\n                    <div><i>{{'msg#selectBasket.newBasket' | sqMessage}}</i></div>\n                </a>\n            </div>\n        </div>\n    </sq-modal>\n</form>","export * from \"./public-api\";","import {Component, OnInit, OnDestroy, Input, Output, EventEmitter, HostBinding, HostListener, ElementRef} from \"@angular/core\";\nimport {FormBuilder, FormGroup, FormControl} from \"@angular/forms\";\nimport {ValidatorFn} from \"@angular/forms\";\nimport {Subscription} from \"rxjs\";\nimport {Utils, Keys} from \"@sinequa/core/base\";\n\n@Component({\n    selector: \"sq-editable\",\n    templateUrl: \"./editable.html\",\n    styleUrls: [\"./editable.scss\"]\n})\nexport class BsEditable implements OnInit, OnDestroy {\n    @HostBinding(\"attr.tabindex\") tabindex = \"0\";\n    @Input() name: string;\n    @Input() value: string;\n    @Input() model: any;\n    @Output() valueChange: EventEmitter<string>;\n    @Input() validators: ValidatorFn[];\n    editableControl: FormControl;\n    modelControl: FormControl;\n    form: FormGroup;\n    formChanges: Subscription;\n    previousValue: string;\n    editing: boolean;\n    private focusAfterEdit: boolean;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private elementRef: ElementRef\n    ) {\n        this.valueChange = new EventEmitter<string>();\n    }\n\n    ngOnInit() {\n        this.editableControl = new FormControl(this.value, this.validators);\n        this.modelControl = new FormControl(this.model);\n        this.form = this.formBuilder.group({\n            editable: this.editableControl,\n            model: this.modelControl\n        });\n        this.formChanges = Utils.subscribe(this.form.valueChanges,\n            (value) => {\n                this.value = this.editableControl.value;\n            }\n        );\n    }\n\n    ngOnDestroy() {\n        this.valueChange.unsubscribe();\n        this.formChanges.unsubscribe();\n    }\n\n    @HostListener(\"mousedown\")\n    @HostListener(\"touchstart\")\n    startEditing() {\n        if (!this.editing) {\n            this.previousValue = this.value;\n            this.editableControl[\"_touched\"] = false; //TODO - need markAsPristine?\n            this.editableControl[\"_pristine\"] = true; //\n            this.editing = true;\n        }\n    }\n\n    stopEditing(cancel = false) {\n        if (this.editing) {\n            this.editing = false;\n            if (this.focusAfterEdit && this.elementRef) {\n                this.elementRef.nativeElement.focus();\n            }\n            this.focusAfterEdit = false;\n            if (cancel) {\n                this.value = this.previousValue;\n            }\n            this.valueChange.emit(this.value);\n        }\n    }\n\n    inputKeydown(event: KeyboardEvent) {\n        switch (event.keyCode) {\n            case Keys.enter:\n                event.stopPropagation();\n                this.stopEditing();\n                return false;\n            case Keys.esc:\n                event.stopPropagation();\n                this.stopEditing(true);\n                return false;\n        }\n        return undefined;\n    }\n\n    @HostListener(\"keydown\", [\"$event\"])\n    hostKeydown(event: KeyboardEvent) {\n        if (event.keyCode === Keys.enter) {\n            this.focusAfterEdit = true;\n            this.startEditing();\n            return false;\n        }\n        return undefined;\n    }\n}\n","<div *ngIf=\"!editing\" class=\"editable-text\">{{value}}</div>\n<form *ngIf=\"editing\" class=\"form-inline\" role=\"form\" novalidate [formGroup]=\"form\">\n    <div class=\"form-group\">\n        <!--label [hidden]=\"form.valid\" for=\"editable\">{{name | sqMessage}}</label-->\n        <label for=\"editable\" class=\"sr-only\">{{name | sqMessage}}</label>\n        <input [sqValidation]=\"form\" type=\"text\" id=\"editable\" formControlName=\"editable\" spellcheck=\"false\" class=\"form-control\" (keydown)=\"inputKeydown($event)\" sqAutofocus (blur)=\"stopEditing()\">\n    </div>\n</form>\n","import {CCColumn, EngineType, EngineTypeModifier} from \"@sinequa/core/web-services\";\n\n/**\n * @ignore\n *\n * Used internally to avoid circular references between ExprParser, AppService and FormatService.\n * Do not export from the app-utils module.\n */\nexport class AppServiceHelpers {\n    static isString(column: CCColumn | undefined): boolean {\n        if (!column) {\n            return false;\n        }\n        if (column.eType === EngineType.string) {\n            return true;\n        }\n        if (column.eType === EngineType.csv && (column.eTypeModifier & EngineTypeModifier.x) === EngineTypeModifier.x) {\n            return true;\n        }\n        return false;\n    }\n\n    static isCsv(column: CCColumn | undefined): boolean {\n        if (!column) {\n            return false;\n        }\n        if (column.eType === EngineType.csv && (column.eTypeModifier & EngineTypeModifier.x) !== EngineTypeModifier.x) {\n            return true;\n        }\n        return false;\n    }\n\n    static isTree(column: CCColumn | undefined): boolean {\n        if (!column) {\n            return false;\n        }\n        if (column.eType === EngineType.csv && (column.eTypeModifier & EngineTypeModifier.t) === EngineTypeModifier.t) {\n            return true;\n        }\n        return false;\n    }\n\n    static isEntity(column: CCColumn | undefined): boolean {\n        if (!column) {\n            return false;\n        }\n        if (column.eType === EngineType.csv && (column.eTypeModifier & (EngineTypeModifier.e | EngineTypeModifier.l)) === (EngineTypeModifier.e | EngineTypeModifier.l)) {\n            return true;\n        }\n        return false;\n    }\n\n    static isBoolean(column: CCColumn | undefined): boolean {\n        if (!column) {\n            return false;\n        }\n        if (column.eType === EngineType.bool) {\n            return true;\n        }\n        return false;\n    }\n\n    static isDate(column: CCColumn | undefined): boolean {\n        if (!column) {\n            return false;\n        }\n        if (column.eType === EngineType.date || column.eType === EngineType.dateTime || column.eType === EngineType.time) {\n            return true;\n        }\n        return false;\n    }\n\n    static isDouble(column: CCColumn | undefined): boolean {\n        if (!column) {\n            return false;\n        }\n        if (column.eType === EngineType.double || column.eType === EngineType.float) {\n            return true;\n        }\n        return false;\n    }\n\n    static isInteger(column: CCColumn | undefined): boolean {\n        if (!column) {\n            return false;\n        }\n        if (column.eType === EngineType.integer || column.eType === EngineType.unsigned) {\n            return true;\n        }\n        return false;\n    }\n\n    static isNumber(column: CCColumn | undefined): boolean {\n        return AppServiceHelpers.isInteger(column) || AppServiceHelpers.isDouble(column);\n    }\n\n    static isScalar(column: CCColumn | undefined): boolean {\n        return AppServiceHelpers.isNumber(column) || AppServiceHelpers.isDate(column) || AppServiceHelpers.isBoolean(column);\n    }\n\n    static isSortable(column: CCColumn | undefined): boolean {\n        return AppServiceHelpers.isString(column) || AppServiceHelpers.isScalar(column) ||\n            (AppServiceHelpers.isCsv(column) && !!column && ((column.eTypeModifier & EngineTypeModifier.l) === EngineTypeModifier.l));\n    }\n}\n","export * from \"./fullscreen-activator/fullscreen-activator\";\nexport * from \"./network-activity/network-activity\";\nexport * from \"./status-bar.module\";","import {Injectable, Optional, OnDestroy, Inject, InjectionToken} from \"@angular/core\";\nimport {Subject} from \"rxjs\";\nimport {UserSettingsWebService, AuditEvents} from \"@sinequa/core/web-services\";\nimport {Query} from \"@sinequa/core/app-utils\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {SearchService} from \"@sinequa/components/search\";\n\n\nexport interface RecentQuery {\n    query: Query;\n    date: Date;\n}\n\n\n// from core/models/audit\nexport const enum RecentQueryEventType {\n    Loaded = \"RecentQuery_Loaded\",\n    Patched = \"RecentQuery_Patched\",\n    Add = \"RecentQuery_Add\",\n    Update = \"RecentQuery_Update\",\n    Delete = \"RecentQuery_Delete\",\n    Search = \"Search_RecentQuery\"\n}\n\n// Types of events triggering a change event\nexport const RECENT_QUERIES_CHANGE_EVENTS = [\n    RecentQueryEventType.Add,\n    RecentQueryEventType.Update,\n    RecentQueryEventType.Delete,\n];\n\n\n// CRUD Events\nexport interface RecentQueryChangeEvent {\n    type: RecentQueryEventType;\n    recentquery?: RecentQuery;\n}\n\nexport const MAX_QUERIES = new InjectionToken(\"MAX_QUERIES\");\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class RecentQueriesService implements OnDestroy {\n\n    private readonly _events = new Subject<RecentQueryChangeEvent>();\n    private readonly _changes = new Subject<RecentQueryChangeEvent>();\n\n    constructor(\n        public userSettingsService: UserSettingsWebService,\n        public searchService: SearchService,\n        @Optional() @Inject(MAX_QUERIES) private maxQueries: number,\n    ){\n        if(!this.maxQueries){\n            this.maxQueries = 20;\n        }\n\n        // Listen to the user settings\n        this.userSettingsService.events.subscribe(event => {\n            // E.g. new login occurs\n            // ==> Revive dates\n            this.recentqueries.forEach(rq => {\n                if (Utils.isString(rq.date)) {\n                    const date = Utils.toDate(rq.date);\n                    if (date) {\n                        rq.date = date;\n                    }\n                }\n            });\n            // ==> Menus need to be rebuilt\n            this._events.next({type: RecentQueryEventType.Loaded});\n        });\n        // Listen to own events, to trigger change events\n        this._events.subscribe(event => {\n            if(RECENT_QUERIES_CHANGE_EVENTS.indexOf(event.type) !== -1){\n                this.changes.next(event);\n            }\n        });\n        // Listen to search service and store queries\n        this.searchService.queryStream.subscribe((query) => {\n                if (query) {\n                    this.addRecentQuery({query: query.copy(), date: new Date()});\n                }\n            });\n    }\n\n\n    // GETTERS\n\n    /**\n     * Returns the list of this user's recent queries.\n     * The list is stored in the user settings (this is a redirection).\n     * Using this service creates the list of recent queries if it does not already exist.\n     */\n    public get recentqueries() : RecentQuery[]{\n        if(!this.userSettingsService.userSettings)\n            this.userSettingsService.userSettings = {};\n        if(!this.userSettingsService.userSettings[\"recentQueries\"])\n            this.userSettingsService.userSettings[\"recentQueries\"] = [];\n        return this.userSettingsService.userSettings[\"recentQueries\"];\n    }\n\n    /**\n     * Triggers any event among RecentQueryChangeEvent\n     * (use for fine-grained control of recent queries workflow)\n     */\n    public get events() : Subject<RecentQueryChangeEvent> {\n        return this._events;\n    }\n\n    /**\n     * Triggers when events affect the list of recent queries\n     * (use to refresh recent queries menus)\n     * Cf. CHANGE_EVENTS list\n     */\n    public get changes() : Subject<RecentQueryChangeEvent> {\n        return this._changes;\n    }\n\n    /**\n     * @returns true if there is at least one recent query\n     */\n    public get hasRecentQuery(): boolean {\n        return this.recentqueries.length > 0;\n    }\n\n    /**\n     * @returns a recent query with the given name or undefined if it does not exist\n     * @param name\n     */\n    public recentquery(text: string): RecentQuery | undefined {\n        const i = this.recentqueryIndex(text);\n        return i>= 0? this.recentqueries[i] : undefined;\n    }\n\n    private recentqueryIndex(text: string): number {\n        for (let i = 0, ic = this.recentqueries.length; i < ic; i++) {\n            const recentquery = this.recentqueries[i];\n            if (recentquery && recentquery.query.text && recentquery.query.text.toLowerCase() === text.toLowerCase()) {\n                return i;\n            }\n        }\n        return -1;\n    }\n\n    private comparator(q1: RecentQuery, q2: RecentQuery){\n        return q2.date.getTime() - q1.date.getTime();\n    }\n\n\n    // CRUD\n\n    /**\n     * Creates a new recent query unless it already exists, in which case the existing query is updated.\n     * Emits an recentquery event.\n     * Update the data on the server.\n     * @param recentquery the recentquery to create\n     * @returns true if recentquery was created\n     */\n    public addRecentQuery(recentquery: RecentQuery) : boolean {\n\n        if(!recentquery.query || !recentquery.query.text || recentquery.query.text.trim() === ''){\n            return false;\n        }\n\n        const i = this.recentqueryIndex(recentquery.query.text); // If the query already exists\n        if(i >= 0){\n            // Ignore identical queries issued within a certain time window (1s)\n            // to avoid flooding the server. NB the request flooding mitigation in\n            // SqHttpClient will not work in this case as the request payload includes\n            // a timestamp\n            if (Math.abs(recentquery.date.getTime() - this.recentqueries[i].date.getTime()) < 1000) {\n                if (Utils.equals(this.recentqueries[i].query, recentquery.query)) {\n                    return false;\n                }\n            }\n            this.recentqueries[i].date = recentquery.date; // Update the date of the existing query\n            this.recentqueries[i].query = recentquery.query;\n            this._events.next({type : RecentQueryEventType.Update, recentquery: this.recentqueries[i]});\n        }\n        else {\n            this.recentqueries.push(recentquery);\n            this._events.next({type : RecentQueryEventType.Add, recentquery});\n        }\n\n        // Sort the list\n        this.recentqueries.sort(this.comparator);\n\n        // Truncate the list\n        if(this.maxQueries >=0 )\n            this.recentqueries.splice(this.maxQueries);\n\n        this.patchRecentQueries(); // No need to emit an \"Add\" audit event, since it is redundant with the main search API\n        return true;\n    }\n\n    /**\n     * Deletes the given RecentQuery (based on its name)\n     * Emits an RecentQuery event.\n     * Update the data on the server.\n     * @param recentquery\n     * @returns true if recent query was deleted\n     */\n    public deleteRecentQuery(recentquery: RecentQuery) : boolean {\n\n        const index = this.recentqueryIndex(recentquery.query.text || \"\");\n\n        if(index === -1)\n            return false; // Nothing to delete\n\n        this.recentqueries.splice(index, 1);\n        this._events.next({type : RecentQueryEventType.Delete, recentquery});\n        this.patchRecentQueries([\n            {\n                type: RecentQueryEventType.Delete,\n                detail: {\n                    recentquery: recentquery.query.text\n                }\n            }\n        ]);\n        return true;\n    }\n\n    /**\n     * Updates Recent Queries in User settings.\n     * @param auditEvents : Audit Events to be triggered\n     * @returns an Observable which can be used to trigger further events\n     */\n    private patchRecentQueries(auditEvents?: AuditEvents) {\n        return this.userSettingsService.patch({recentQueries: this.recentqueries}, auditEvents)\n            .subscribe(\n                next => {\n                    this._events.next({type: RecentQueryEventType.Patched});\n                },\n                error => {\n                    console.error(\"Could not patch Recent queries!\", error);\n                }\n            );\n    }\n\n\n    // EVENT HANDLERS (Menus)\n\n    /**\n     * Uses the SearchService to perform a search returning all\n     * the documents matching this recent query.\n     * @param recentquery\n     * @returns the search service promise\n     */\n    searchRecentQuery(recentquery: RecentQuery, path?: string): Promise<boolean> {\n        this.searchService.setQuery(Utils.extend(this.searchService.makeQuery(), Utils.copy(recentquery.query)));\n        this._events.next({type: RecentQueryEventType.Search, recentquery});\n        return this.searchService.search({ path: path }, {\n            type: RecentQueryEventType.Search,\n            detail: {\n                recentquery: recentquery.query.text\n            }\n        });\n    }\n\n    notifyOpenRecentQuery(recentquery: RecentQuery): void {\n        this._events.next({type: RecentQueryEventType.Search, recentquery});\n    }\n\n    ngOnDestroy() {\n        this.events.complete();\n        this.changes.complete();\n    }\n}\n","export * from \"./facet-bar/facet-bar\";\nexport * from \"./facet-card/facet-card\";\nexport * from \"./facet-filters/facet-filters\";\nexport * from \"./facet-list/facet-list\";\nexport * from \"./facet.module\";\nexport * from \"./facet-mysearch/facet-mysearch\";\nexport * from \"./facet-range/facet-range\";\nexport * from \"./facet-refine/facet-refine\";\nexport * from \"./facet-tree/facet-tree\";\nexport * from \"./facet-multi/facet-multi.component\";\nexport * from \"./facet-tag-cloud/facet-tag-cloud\";\n","import {Injectable, Inject} from \"@angular/core\";\nimport {HttpHeaders, HttpParams, HttpResponse, HttpErrorResponse} from \"@angular/common/http\";\nimport {Observable, timer, of, throwError} from \"rxjs\";\nimport {share, flatMap, map, catchError} from \"rxjs/operators\";\nimport {AuthService} from \"ng2-ui-auth\";\nimport {HttpService, START_CONFIG, StartConfig, AuditWebService} from \"@sinequa/core/web-services\";\nimport {Utils, IRef, MapOf} from \"@sinequa/core/base\";\nimport {SqHttpClient} from \"@sinequa/core/web-services\";\nimport {TokenService} from \"./token.service\";\nimport {JWTService} from \"./jwt.service\";\n\ninterface Authentication {\n    csrfToken: string;\n    headers?: MapOf<string>;    // set in http headers\n    params?: MapOf<string>;     // added to query string\n}\n\n/**\n * Describes the credentials that a user would enter manually to authenticate\n */\nexport interface Credentials {\n    userName?: string;\n    password?: string;\n}\n\nconst LEGACY_PROCESSED_CREDENTIALS_KIND = 0;\n\n/**\n * Describes the object created after successful authentication. The form of this object\n * is designed to maintain compatibility with previous SBA libraries\n */\nexport interface ProcessedCredentials {\n    /**\n     * An unused \"kind\" value - always set to 0\n     */\n    kind: number;\n    /**\n     * The user name of the authenticated user\n     */\n    userName?: string;\n    /**\n     * Additional data containing the associated CSRF token that is sent with\n     * authenticated web service requests and the provider for informational\n     * purposes only. The provider will be `Sinequa` for form-based authentication\n     * and the name of the auto-login provider in the Sinequa configuration for\n     * OAuth and SAML authentication\n     */\n    data: {\n        csrfToken: string, // the web token itself is stored in the sinequa-web-token cookie\n        provider: string\n    };\n}\n\n/**\n * Describes the object used by an administrator to authenticate as another user\n */\nexport interface UserOverride {\n    /**\n     * The user name of the user to authenticate as\n     */\n    userName: string;\n    /**\n     * The Sinequa domain name containing the user\n     */\n    domain: string;\n}\n\n/**\n * Describes a JWT object\n */\nexport interface JsonWebToken {\n    header: {\n        typ: string,\n        alg: string\n    };\n    payload: {\n        iss: string,\n        iat: string,\n        exp: string,\n        sub: string,\n        hash: string\n    };\n    signature: string;\n}\n\n/**\n * A service to authenticate a user with a Sinequa server. Authentication can be automatic (OAuth/SAML), if configured in the\n * Sinequa administration, or manual where the user name and password are entered in a modal dialog box and transmitted in\n * clear text. There is also support for the ng2-ui-auth library where the authentication process occurs in a browser popup window.\n * Successful authentication results in a JWT stored in cookie along with a CSRF token which is stored in storage so it can\n * be picked up in other browser tabs.\n *\n * The service also holds information on the status of the \"override user\" administrator function\n */\n@Injectable({\n    providedIn: \"root\"\n})\nexport class AuthenticationService extends HttpService {\n    private authentication: Authentication | undefined;\n    private storage: Storage;\n    /**\n     * A flag indicating whether an attempt to \"override user\" has failed. This is normally\n     * only set by the {@link HttpInterceptor} and tested and reset in {@link LoginService}\n     */\n    userOverrideFailed: boolean;\n\n    constructor(\n        @Inject(START_CONFIG) startConfig: StartConfig,\n        private httpClient: SqHttpClient,\n        private tokenService: TokenService,\n        private auditService: AuditWebService,\n        private jWTService: JWTService,\n        private authService: AuthService) {\n        super(startConfig);\n        this.init();\n    }\n\n    private _userOverride: UserOverride | undefined;\n    /**\n     * Get the currrent user override, if any\n     */\n    get userOverride(): UserOverride | undefined {\n        return this._userOverride;\n    }\n\n    /**\n     * Set/unset the user override. The {@link #userOverrideActive} flag\n     * is set accordingly\n     */\n    set userOverride(value: UserOverride | undefined) {\n        this._userOverride = value;\n        if (this._userOverride) {\n            this._userOverrideActive = !!this._userOverride.userName && !!this._userOverride.domain;\n        }\n        else {\n            this._userOverrideActive = false;\n        }\n    }\n\n    private _userOverrideActive: boolean;\n\n    /**\n     * A flag indicating whether the current user override is active\n     */\n    get userOverrideActive(): boolean {\n        return this._userOverrideActive;\n    }\n\n    private _processedCredentials: ProcessedCredentials | undefined;\n    private _processedCredentialsStr: string | undefined;\n\n    /**\n     * Get the current processed credentials\n     */\n    get processedCredentials(): ProcessedCredentials | undefined {\n        return this._processedCredentials;\n    }\n\n    /**\n     * Set the current processed credentials. A stringified version\n     * is stored in either local or session storage\n     */\n    set processedCredentials(value: ProcessedCredentials | undefined) {\n        this._processedCredentials = value;\n        if (value) {\n            const newProcessedCredentialsStr = Utils.toJson(this._processedCredentials);\n            if (this._processedCredentialsStr !== newProcessedCredentialsStr) {\n                this._processedCredentialsStr = newProcessedCredentialsStr;\n                this.storage.setItem(\"sinequa-credentials\", this._processedCredentialsStr);\n            }\n        }\n        else {\n            if (this._processedCredentialsStr) {\n                this._processedCredentialsStr = undefined;\n                this.storage.removeItem(\"sinequa-credentials\");\n            }\n        }\n    }\n\n    /**\n     * Returns `true` if an OAuth or SAML auto provider is configured\n     */\n    get autoLoginActive(): boolean {\n        return !!this.startConfig.autoOAuthProvider || !!this.startConfig.autoSAMLProvider;\n    }\n\n    /**\n     * Deactivate the current user override\n     */\n    deactivateUserOverride() {\n        this._userOverrideActive = false;\n    }\n\n    private loadCredentials() {\n        const sinequaCredentials = this.storage.getItem(\"sinequa-credentials\");\n        this._processedCredentialsStr = sinequaCredentials ? sinequaCredentials : undefined;\n        this._processedCredentials = this._processedCredentialsStr ? Utils.fromJson(this._processedCredentialsStr) : null;\n    }\n\n    private saveCredentials(value: ProcessedCredentials) {\n        this.processedCredentials = value;\n    }\n\n    private init() {\n        if (this.startConfig.authenticationStorage === \"local\") {\n            this.storage = window.localStorage;\n        }\n        else {\n            this.storage = window.sessionStorage;\n        }\n        this.loadCredentials();\n        window.addEventListener('storage', (event: StorageEvent) => {\n            if (event.storageArea === this.storage) {\n                if (!event.key) { // clear\n                    this.processedCredentials = undefined;\n                }\n                else if (event.key === \"sinequa-credentials\") {\n                    if (event.newValue !== this._processedCredentialsStr) {\n                        this.loadCredentials();\n                    }\n                }\n            }\n        });\n    }\n\n    /**\n     * Return `true` if `processedCredentials` exists\n     */\n    get haveCredentials(): boolean {\n        return !!this.processedCredentials;\n    }\n\n    /**\n     * Add the current authentication information to the passed `HttpHeaders` and `HttpParams`.\n     * Currently, this adds the `sinequa-csrf-token` value to the HTTP headers. Called from\n     * {@link HttpInterceptor}\n     *\n     * @param config HttpHeaders and HttpParams to be updated\n     *\n     * @returns new configuration\n     */\n    addAuthentication(config: {headers: HttpHeaders, params: HttpParams}): {headers: HttpHeaders, params: HttpParams} {\n        this.doAuthentication();\n        if (this.authentication) {\n            if (this.authentication.headers) {\n                for (const header in this.authentication.headers) {\n                    if (this.authentication.headers.hasOwnProperty(header)) {\n                        config.headers = config.headers.set(header, this.authentication.headers[header]);\n                    }\n                }\n            }\n            if (this.authentication.params) {\n                for (const param in this.authentication.params) {\n                    if (this.authentication.params.hasOwnProperty(param)) {\n                        config.params = config.params.set(param, this.authentication.params[param]);\n                    }\n                }\n            }\n        }\n        return config;\n    }\n\n    /**\n     * Update the current authentication information with information in the passed `response`.\n     * This processes the `sinequa-jwt-refresh` header which will contain an updated CSRF token\n     * to correspond to the new JWT cookie. Called from {@link HttpInterceptor}\n     *\n     * @param response An `HttpResponse`\n     */\n    updateAuthentication(response: HttpResponse<any>) {\n        const csrfToken = response.headers.get(\"sinequa-jwt-refresh\");\n        if (csrfToken) {\n            if (this.processedCredentials) {\n                if (this.processedCredentials.data.csrfToken !== csrfToken) {\n                    this.processedCredentials.data.csrfToken = csrfToken;\n                    this.saveCredentials(this.processedCredentials);\n                }\n            }\n            else {\n                this.setCsrfToken(csrfToken);\n            }\n        }\n    }\n\n    private refreshAuthentication() {\n        if (this.processedCredentials) {\n            if (!this.authentication) {\n                this.authentication = {\n                    csrfToken: this.processedCredentials.data.csrfToken\n                };\n            }\n            else {\n                this.authentication.csrfToken = this.processedCredentials.data.csrfToken;\n            }\n        }\n        else {\n            this.authentication = undefined;\n        }\n    }\n\n    private doAuthentication() {\n        this.refreshAuthentication();\n        if (this.authentication && this.authentication.csrfToken) {\n            this.authentication.headers = {\n                \"sinequa-csrf-token\": this.authentication.csrfToken\n            };\n        }\n    }\n\n    private getAuthenticateHeader(regex: RegExp, authenticationHeaders: string[], header: IRef<string>): boolean {\n        if (authenticationHeaders) {\n            for (let i = 0, ic = authenticationHeaders.length; i < ic; i++) {\n                const authenticationHeader = authenticationHeaders[i];\n                const matches = regex.exec(authenticationHeader);\n                if (matches && matches.length > 0) {\n                    const prefix = matches[0];\n                    header.value = authenticationHeader.slice(prefix.length);\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Authenticate with the Sinequa server using the passed credentials. The credentials are sent\n     * in clear text. Prior to the authentication the passed `response` is checked for a\n     * `WWW-Authenticate: Bearer` header.\n     *\n     * @param credentials The credentials to authenticate with\n     * @param response The error response the reception of which initiated the call to this method\n     */\n    authenticate(\n        credentials: Credentials,\n        response: HttpErrorResponse): Promise<ProcessedCredentials | undefined> {\n        const wwwAuthenticate = response.headers.get(\"WWW-Authenticate\");\n        if (!wwwAuthenticate) {\n            console.error(\"Missing WWW-Authenticate header\");\n            return Promise.resolve(undefined);\n        }\n        const authenticateHeaders = wwwAuthenticate.split(\", \");\n        const header: IRef<string> = {value: \"\"};\n        if (!this.getAuthenticateHeader(/^Bearer ?/, authenticateHeaders, header)) {\n            console.error(\"Unexpected WWW-Authenticate header\");\n            return Promise.resolve(undefined);\n        }\n        return this.jWTService.getToken(credentials).toPromise()\n            .then((value) => {\n                return {\n                    kind: LEGACY_PROCESSED_CREDENTIALS_KIND,\n                    userName: credentials.userName,\n                    data: {\n                        csrfToken: value,\n                        provider: \"Sinequa\"\n                    }\n                };\n            });\n    }\n\n    /**\n     * Remove all current authentication data. The JWT cookie\n     * is removed\n     */\n    logout() {\n        this.auditService.notifyLogout().subscribe(\n            _ => {\n                this.tokenService.deleteWebTokenCookie().subscribe()\n                this.authentication = undefined;\n                this.processedCredentials = undefined;\n            }\n        );\n    }\n\n    /**\n     * Add the current user override information to the passed headers.\n     *\n     * @param config An object containing the `HttpHeaders` to update\n     */\n    addUserOverride(config: {headers: HttpHeaders}): HttpHeaders {\n        if (this.userOverride && this.userOverrideActive) {\n            config.headers = config.headers.set(\"sinequa-override-user\", this.userOverride.userName);\n            config.headers = config.headers.set(\"sinequa-override-domain\", this.userOverride.domain);\n        }\n\n        return config.headers;\n    }\n\n    /**\n     * Initiate authentication using the ng2-ui-auth library. The authentication process will be performed\n     * in a browser popup window\n     *\n     * @param provider The name of the provider to use. This is the name configured in the Sinequa administration\n     * console\n     */\n    authenticateWithProvider(provider: string): Observable<any> {\n        // AuthService.authenticate opens a popup. On some platforms (Firefox) this is asynchronous\n        // so we add a delay (timer(0)) so the caller can create a promise from the returned observable\n        // without yielding\n        const observable = timer(0).pipe(flatMap((value) => {\n            const observable1 = this.authService.authenticate(provider, true).pipe(share());\n            Utils.subscribe(observable1,\n                (response) => {\n                    // NB response should be the return value from JOAuth/JSaml json methods\n                    // It can be undefined eg if the popup fails to open\n                    if (response) {\n                        this.processedCredentials = {\n                            kind: LEGACY_PROCESSED_CREDENTIALS_KIND,\n                            data: {\n                                csrfToken: response.csrfToken,\n                                provider\n                            }\n                        };\n                    }\n                });\n            return observable1;\n        }));\n        return observable;\n    }\n\n    private setCsrfToken(csrfToken: string, provider = \"Sinequa\"): boolean {\n        if (!csrfToken) {\n            return false;\n        }\n        this.processedCredentials = {\n            kind: LEGACY_PROCESSED_CREDENTIALS_KIND,\n            data: {\n                csrfToken,\n                provider\n            }\n        };\n        return true;\n    }\n\n    private initiateAutoAuthentication(): boolean {\n        if (!this.startConfig.usePopupForLogin && this.autoLoginActive) {\n            let observable: Observable<{redirectUrl: string}>;\n            if (this.startConfig.autoOAuthProvider) {\n                observable = this.httpClient.post<{redirectUrl: string}>(this.makeUrl(\"security.oauth\"),\n                    {\n                        action: \"getcode\",\n                        provider: this.startConfig.autoOAuthProvider,\n                        tokenInCookie: true,\n                        originalUrl: window.location.href\n                    },\n                    {\n                        params: this.makeParams({\n                            noUserOverride: true,\n                            noAutoAuthentication: true\n                        })\n                    });\n            }\n            else {\n                observable = this.httpClient.post<{redirectUrl: string}>(this.makeUrl(\"security.saml\"),\n                    {\n                        action: \"getresponse\",\n                        provider: this.startConfig.autoSAMLProvider,\n                        tokenInCookie: true,\n                        originalUrl: window.location.href,\n                    },\n                    {\n                        params: this.makeParams({\n                            noUserOverride: true,\n                            noAutoAuthentication: true\n                        })\n                    });\n            }\n            observable.subscribe(\n                (response) => {\n                    window.location.replace(response.redirectUrl);\n                }\n            );\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n\n    /**\n     * Initiate the auto-authentication process if an automatic OAuth or SAML provider is configured.\n     * The {@LoginService} calls this method at startup. First, an attempt is made to retrieve a CSRF token.\n     * If that works, then the token is set and authentication is complete. Otherwise, the initial OAuth or SAML\n     * call is made to the Sinequa server. The `redirectUrl` in the response to this call is then used to redirect\n     * the browser to continue the normal OAuth/SAML autentication flow. A successful authentiction will culminate\n     * in the SBA being loaded a second time, this method being called again and the attempt to retrieve a CSRF\n     * token succeeding because a valid JWT cookie will now be present.\n     *\n     * A CSRF token is always requested to allow automatic login if a valid web token cookie has previously been\n     * written via, for example, a login to the admin console.\n     *\n     * @returns An Observable of a boolean value which if `true` indicates that auto-authentication has been initiated.\n     */\n    autoAuthenticate(): Observable<boolean> {\n        return this.tokenService.getCsrfToken().pipe(\n            map((csrfToken) => {\n                // Token can be empty as getCsrfToken suppresses application errors (no cookie or cookie invalid)\n                // (We do this to avoid having errors in the console for normal situations.)\n                if (csrfToken) {\n                    this.setCsrfToken(csrfToken);\n                    return false;\n                }\n                else {\n                    this.initiateAutoAuthentication();\n                    return true;\n                }\n            }),\n            catchError((error) => {\n                // We should rarely have an error now as getCsrfToken\n                // suppresses the application-level ones\n                if (this.initiateAutoAuthentication()) {\n                    return throwError(error);\n                }\n                // Swallow the error and continue with non-auto login process\n                return of(false);\n            }));\n    }\n}\n","export * from \"./public-api\";","export default {\n    collapseButton: {\n        collapse: \"Collapse\",\n        expand: \"Expand\"\n    }\n};\n","import {Injectable, Inject, Optional, InjectionToken} from \"@angular/core\";\nimport {UserSettingsWebService, UserSettings, Suggestion,\n    Results, Aggregation, AggregationItem, TreeAggregation, TreeAggregationNode,\n    AuditEvents, EngineType, Select, CCColumn\n} from \"@sinequa/core/web-services\";\nimport {IntlService} from \"@sinequa/core/intl\";\nimport {Query, AppService, FormatService, ExprBuilder, Expr} from \"@sinequa/core/app-utils\";\nimport {FieldValue, Utils} from \"@sinequa/core/base\";\nimport {Subject, Observable} from \"rxjs\";\nimport {map} from \"rxjs/operators\";\nimport {SearchService, BreadcrumbsItem, Breadcrumbs} from \"@sinequa/components/search\";\nimport {SuggestService} from \"@sinequa/components/autocomplete\";\n\n// Facet interface (from models/UserSettings)\nexport interface FacetState {\n    name: string;\n    position: number; // eg 0 = left, 1 = right\n    expanded: boolean;\n    hidden: boolean;\n    view: string;\n}\n\n/**\n * Options for the [[FacetService.AddFilter]] and [[FacetService.AddFilterSearch]] methods\n *\n * and: If multiple items are filtered, determines whether they are filtered as AND or OR\n * not: Whether this is an exlusion of the filtered item\n * replaceCurrent: if true, the current filter is replaced\n */\nexport interface AddFilterOptions {\n    and?: boolean;\n    not?: boolean;\n    replaceCurrent?: boolean;\n}\n\n// Audit Events (from models/Audit)\nexport const enum FacetEventType {\n    Loaded = \"Facet_Loaded\",\n    Add = \"Facet_Added\",\n    AddAll = \"Facets_Added\",\n    Remove = \"Facet_Removed\",\n    RemoveAll = \"Facets_Removed\",\n\n    Patched = \"Facet_Patched\",\n    ClearFilters = \"Facet_ClearFilters\",\n    AddFilter = \"Facet_AddFilter\",\n    RemoveFilter = \"Facet_RemoveFilter\",\n    Open = \"Facet_TreeOpen\"\n}\n\n// Types of events triggering a change event\nexport const FACET_CHANGE_EVENTS = [\n    FacetEventType.Loaded,\n    FacetEventType.Add,\n    FacetEventType.Remove\n];\n\n\n// CRUD Events\nexport interface FacetChangeEvent {\n    type: FacetEventType;\n    facet?: FacetState;\n}\n\nexport const ALL_FACETS = new InjectionToken<any[]>('ALL_FACETS');\nexport const DEFAULT_FACETS = new InjectionToken<FacetState[]>('DEFAULT_FACETS');\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class FacetService {\n\n    protected readonly _events = new Subject<FacetChangeEvent>();\n    protected readonly _changes = new Subject<FacetChangeEvent>();\n\n    constructor(\n        protected userSettingsService: UserSettingsWebService,\n        protected searchService: SearchService,\n        protected suggestService: SuggestService,\n        protected appService: AppService,\n        protected intlService: IntlService,\n        protected formatService: FormatService,\n        protected exprBuilder: ExprBuilder,\n        @Optional() @Inject(ALL_FACETS) public allFacets: any[],\n        @Optional() @Inject(DEFAULT_FACETS) public defaultFacets: FacetState[]){\n\n        // Listen to the user settings\n        this.userSettingsService.events.subscribe(event => {\n            // E.g. new login occurs\n            // ==> Menus need to be rebuilt\n            this.events.next({type: FacetEventType.Loaded});\n        });\n        // Listen to own events, to trigger change events\n        this._events.subscribe(event => {\n            if(FACET_CHANGE_EVENTS.indexOf(event.type) !== -1){\n                this.changes.next(event);\n            }\n        });\n    }\n\n    // GETTERS\n\n    /**\n     * Returns the list of this user's facets.\n     * The list is stored in the user settings (this is a redirection).\n     * Using this service creates the list of facets if it does not already exist.\n     */\n    public get facets() : FacetState[] {\n        if(!this.userSettingsService.userSettings)\n            this.userSettingsService.userSettings = {};\n        if(!this.userSettingsService.userSettings[\"facets\"]) {\n            this.userSettingsService.userSettings[\"facets\"] = [];\n            if(!!this.defaultFacets){\n                this.userSettingsService.userSettings[\"facets\"].push(...this.defaultFacets);\n                this.patchFacets();\n            }\n        }\n        return this.userSettingsService.userSettings[\"facets\"];\n    }\n\n    /**\n     * @returns a facet with the given name or undefined if it does not exist\n     * @param name\n     */\n    public facet(name: string): FacetState | undefined {\n        const i = this.facetIndex(name);\n        return i>= 0? this.facets[i] : undefined;\n    }\n\n    /**\n     * Returns the list of facet config in the given container (position)\n     * @param position (default to 0 if there is a single container)\n     */\n    public getFacets(position: number = 0) : any[] {\n        if (!this.allFacets) {\n            return [];\n        }\n        return this.facets.filter(f => f.position === position)\n            .map(f => this.allFacets.find(_f => _f.name === f.name));\n    }\n\n    /**\n     * Returns true if this facet is opened (in any container)\n     * @param facetName\n     */\n    public isFacetOpened(facetName): boolean {\n        return !!this.facets.find(f => f.name === facetName);\n    }\n\n    protected facetIndex(name: string): number {\n        for (let i = 0, ic = this.facets.length; i < ic; i++) {\n            const facet = this.facets[i];\n            if (facet && facet.name === name) {\n                return i;\n            }\n        }\n        return -1;\n    }\n\n    /**\n     * Triggers any events regarding the facets\n     */\n    public get events(): Subject<FacetChangeEvent> {\n        return this._events;\n    }\n\n    /**\n     * Triggers when events affect the list of facets\n     * Cf. CHANGE_EVENTS list\n     */\n    public get changes() : Subject<FacetChangeEvent> {\n        return this._changes;\n    }\n\n\n    public addFacet(facet: FacetState){\n        this.facets.push(facet);\n        this.events.next({type : FacetEventType.Add, facet: facet});\n        this.patchFacets([{\n            type: FacetEventType.Add,\n            detail: {\n                facet: facet.name\n            }\n        }]);\n    }\n\n    public removeFacet(facet: FacetState){\n        const i = this.facetIndex(facet.name);\n        if(i !== -1){\n            this.facets.splice(i,1);\n            this.events.next({type : FacetEventType.Remove, facet: facet});\n            this.patchFacets([{\n                type: FacetEventType.Remove,\n                detail: {\n                    facet: facet.name\n                }\n            }]);\n        }\n    }\n\n    public addAllFacet() {\n        this.facets.splice(0,this.facets.length);\n        if(!!this.defaultFacets) this.facets.push(...this.defaultFacets);\n        this.events.next({type : FacetEventType.AddAll});\n        this.patchFacets([{\n            type: FacetEventType.AddAll\n        }]);\n    }\n\n    public removeAllFacet() {\n        this.facets.splice(0,this.facets.length);\n        this.events.next({type : FacetEventType.RemoveAll});\n        this.patchFacets([{\n            type: FacetEventType.RemoveAll\n        }]);\n    }\n\n    /**\n     * Updates facets in User settings.\n     * @param auditEvents : Audit Events to be triggered\n     * @returns an Observable which can be used to trigger further events\n     */\n    protected patchFacets(auditEvents?: AuditEvents) {\n        return this.userSettingsService.patch({facets: this.facets} as UserSettings, auditEvents)\n            .subscribe(\n                next => {\n                    this.events.next({type: FacetEventType.Patched});\n                },\n                error => {\n                    console.error(\"Could not patch Facets!\", error);\n            });\n    }\n\n    /**\n     * Filter/Exclude an item in a facet and launch a search.\n     * Triggers an internal event and an Audit Event\n     * @param facetName\n     * @param aggregation\n     * @param items\n     * @param options\n     */\n    public addFilterSearch(\n        facetName: string,\n        aggregation: Aggregation,\n        items: AggregationItem | AggregationItem[],\n        options: AddFilterOptions = {}): Promise<boolean> {\n\n        const success = this.addFilter(facetName, aggregation, items, options);\n        if(success) {\n            this.events.next({ type: FacetEventType.AddFilter, facet: this.facet(facetName) });\n            return this.searchService.search(undefined, {\n                type: FacetEventType.AddFilter,\n                detail: {\n                    item: <any>this.searchService.query.lastSelect(),\n                    itembox: facetName,\n                    itemcolumn: aggregation.column,\n                    isitemexclude: options.not,\n                    \"from-result-id\": this.searchService.results?.id\n                }\n            });\n        }\n        return Promise.resolve(false);\n    }\n\n\n    /**\n     * Filter/Exclude one or more item(s) in a facet (without launching a search)\n     * @param facetName\n     * @param aggregation\n     * @param items\n     * @param options\n     * @param query the query on which to add the filter (defaults to search service query)\n     * @param breadcrumbs breadcrumbs in which to look for selected items (defaults  to search service breadcrumbs)\n     */\n    public addFilter(\n        facetName: string,\n        aggregation: Aggregation,\n        items: AggregationItem | AggregationItem[],\n        options: AddFilterOptions = {},\n        query = this.searchService.query,\n        breadcrumbs = this.searchService.breadcrumbs): boolean {\n\n        if (!items) {\n            return false;\n        }\n        if (options.replaceCurrent) {\n            query.removeSelect(facetName);\n        }\n\n        if (!aggregation.isTree && breadcrumbs?.activeSelects.length && !options.replaceCurrent) {\n            const expr = breadcrumbs.findSelect(facetName);\n            const index = breadcrumbs.activeSelects.findIndex(select => select.facet === facetName && (select.expr === expr || select.expr === expr?.parent));\n            const same = (!Array.isArray(items)) ? true : (options.and ? \"AND\" : \"OR\") === (expr?.and ? \"AND\" : \"OR\") && (options.not ? \"YES\" : \"NO\") === (expr?.not ? \"YES\" : \"NO\");\n\n            if (expr && same && index !== -1){\n                let _items: AggregationItem[];\n                if (expr?.operands) {\n                    _items = this.exprToAggregationItem(expr.operands, aggregation.valuesAreExpressions).concat(items);\n                } else {\n                    // previous selection is a single value\n                    _items = this.exprToAggregationItem(expr as Expr, aggregation.valuesAreExpressions).concat(items);\n                }\n                // MUST reset $excluded property otherwise expression is misunderstood\n                _items.forEach(item => item.$excluded = undefined);\n                // overrides options settings with expression if any\n                let _expr = this.exprBuilder.makeAggregationExpr(aggregation, _items, options.and || expr.and);\n                if (options.not || expr.not) {\n                    _expr = this.exprBuilder.makeNotExpr(_expr);\n                }\n                if (_expr) {\n                    query.replaceSelect(index, {expression: _expr, facet: facetName});\n                    return true;\n                }\n            }\n        }\n        let expr = this.exprBuilder.makeAggregationExpr(aggregation, items, options.and);\n        if (options.not) {\n            expr = this.exprBuilder.makeNotExpr(expr);\n        }\n        if (expr) {\n            query.addSelect(expr, facetName);\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Clears the query from the current selection on the given facet\n     * @param facetName\n     * @param all\n     * @param query the query to clear from the facet selection (defaults to search service query)\n     */\n    public clearFilters(facetName: string, all?: boolean, query = this.searchService.query) {\n        query.removeSelect(facetName, all);\n    }\n\n    /**\n     * Clears the query from the current selection on the given facet and perform a search\n     * @param facetName\n     * @param all\n     */\n    public clearFiltersSearch(facetName: string | string[], all?: boolean): Promise<boolean> {\n        [].concat(facetName as []).forEach(name => {\n            this.clearFilters(name, all);\n            this._events.next({type: FacetEventType.ClearFilters, facet: this.facet(name)});\n        });\n\n        return this.searchService.search(undefined, {\n                type: FacetEventType.ClearFilters,\n                detail: {\n                    itembox: facetName,\n                    \"from-result-id\": this.searchService.results?.id\n                }\n            });\n    }\n\n    /**\n     * Remove a filter and update the appropriate Select if it was previously included in a selection\n     * @param facetName the facet that removes the filter\n     * @param aggregation the aggregation that contains the item to remove\n     * @param item the aggregation item to remove from the query\n     * @param query the query on which to remove the filter (defaults to search service query)\n     * @param breadcrumbs breadcrumbs in which to look for selected items (defaults  to search service breadcrumbs)\n     */\n    public removeFilter(\n        facetName: string,\n        aggregation: Aggregation,\n        item: AggregationItem,\n        query = this.searchService.query,\n        breadcrumbs = this.searchService.breadcrumbs): Select | undefined {\n\n        if (breadcrumbs) {\n            // if item is excluded, makeAggregation() should returns a NOT expression\n            const stringExpr = item.$excluded ? this.exprBuilder.makeNotExpr(this.exprBuilder.makeAggregationExpr(aggregation, item)) : this.exprBuilder.makeAggregationExpr(aggregation, item);\n            const filterExpr = this.findItemFilter(facetName, aggregation, item, breadcrumbs) || this.appService.parseExpr(stringExpr);\n            const expr = breadcrumbs.findSelect(facetName, filterExpr);\n            const i = breadcrumbs.activeSelects.findIndex(select => select.facet === facetName && (select.expr === expr || select.expr === expr?.parent));\n\n            // 'Select' can't be created when aggregation is a tree map, so, avoid aggregation tree\n            // and remove whole breadcrumbs\n            if (!aggregation.isTree && expr && expr.parent && expr.parent.operands.length > 1) {\n                // create a new Expr from parent and replaces Select by this new one\n                // so, breadcrumbs stay ordered\n                const filterByValuesAreExpression = (it: AggregationItem) => it.value.toString().replace(/ /g, \"\") !== item.value.toString().replace(/ /g, \"\");\n                const filterByValue = (it: AggregationItem) => it.value !== item.value\n                const filter = (aggregation.valuesAreExpressions) ? filterByValuesAreExpression : filterByValue;\n\n                const items: AggregationItem[] = this.exprToAggregationItem(expr.parent.operands, aggregation.valuesAreExpressions).filter(filter);\n                // MUST reset $excluded property otherwise expression is misunderstood (mainly NOT expressions)\n                items.forEach(item => item.$excluded = undefined);\n                const {not, and} = breadcrumbs.selects[i].expr || {};\n                let _expr = this.exprBuilder.makeAggregationExpr(aggregation, items, and);\n                if (not) {\n                    _expr = this.exprBuilder.makeNotExpr(_expr);\n                }\n                if (_expr) {\n                    query.replaceSelect(i, {expression: _expr, facet: facetName});\n                    return {expression: this.exprBuilder.makeAggregationExpr(aggregation, item), facet: facetName};\n                }\n            } else {\n                // filter is a single value... remove it\n                const select = query.select ? query.select[i] : undefined;\n                query.removeSelect(i);\n                return select;\n            }\n        }\n        return undefined;\n    }\n\n    /**\n     * Removes the aggregation from the search service query and refresh the search\n     * @param facetName\n     * @param aggregation\n     * @param item\n     */\n    public removeFilterSearch(facetName: string, aggregation: Aggregation, item: AggregationItem): Promise<boolean>{\n        const select = this.removeFilter(facetName, aggregation, item);\n        if(select) {\n            this._events.next({type: FacetEventType.RemoveFilter, facet: this.facet(facetName || \"\")});\n            delete this.searchService.query.queryId; // SBA-154\n            return this.searchService.search(undefined, {\n                type: FacetEventType.RemoveFilter,\n                detail: {\n                    item: {expression: select?.expression, facet: select?.facet},\n                    itembox: facetName,\n                    itemcolumn: aggregation.column,\n                    \"from-result-id\": !!this.searchService.results ? this.searchService.results.id : null\n                }\n            });\n        }\n        return Promise.resolve(false);\n    }\n\n    /**\n     * Queries the server for data for this aggregation\n     * @param aggregation\n     * @param skip\n     * @param count\n     * @param query the query to use to fetch the data (default to search service query)\n     */\n    public loadData(\n        aggregation: string,\n        skip: number = 0,\n        count: number = 10,\n        query = this.searchService.query,\n        searchInactive = true): Observable<Aggregation | undefined> {\n\n        query = Utils.copy(query);\n        query.action = \"aggregate\";\n        query.aggregations = {};\n        query.aggregations[aggregation] = {skip: skip, count: count};\n        return this.searchService.getResults(query, undefined, {searchInactive}).pipe(\n            map((results: Results) => {\n                const data = results.aggregations.find(a => Utils.eqNC(a.name, aggregation));\n                if (data) {\n                    this.setColumn(data);   // Useful for formatting and i18n\n                }\n                return data;\n            })\n        );\n    }\n\n    /**\n     * Get suggestions given a text and a field name, using the Suggest service\n     * @param text\n     * @param field\n     * @param suggestQuery\n     */\n    public suggest(text: string, field: string, suggestQuery = this.appService.suggestQueries[0]): Observable<Suggestion[]> {\n        return this.suggestService.get(suggestQuery, text, [field], this.searchService.query);\n    }\n\n    /**\n     * Format the given result item, using field formatter and/or i18n service\n     * @param item\n     */\n    formatValue(item: AggregationItem): string {\n        return this.intlService.formatMessage(\n            this.formatService.formatFieldValue(item, item.$column));\n    }\n\n    /**\n     * Returns true if this facet has at least one active selection\n     * filtering the search\n     * @param facetName\n     * @param breadcrumbs breadcrumbs in which to look for selected items (defaults to search service breadcrumbs)\n     */\n    public hasFiltered(facetName: string, breadcrumbs = this.searchService.breadcrumbs) : boolean {\n        return !!this.findFilter(facetName, breadcrumbs);\n    }\n\n    /**\n     * Returns an active selection of this facet filtering the search\n     * Returns it as an expression\n     * @param facetName\n     * @param breadcrumbs breadcrumbs in which to look for selected items (defaults to search service breadcrumbs)\n     */\n    public findFilter(facetName: string, breadcrumbs = this.searchService.breadcrumbs) : Expr | undefined {\n        return breadcrumbs?.findSelect(facetName);\n    }\n\n    /**\n     * Look for an aggregation with the given name in the search results and returns it.\n     * Takes care of initializing the aggregation items to insert their $column property.\n     * @param aggregationName\n     * @param results The search results can be provided explicitly or taken from the SearchService implicitly.\n     */\n    getAggregation(\n        aggregationName: string,\n        results = this.searchService.results,\n        treeAggregationOptions?: {\n            facetName: string,\n            levelCallback?: (nodes: TreeAggregationNode[], level: number, node: TreeAggregationNode) => void\n        }\n    ): Aggregation | TreeAggregation | undefined {\n\n        if (results?.aggregations) {\n            const aggregation = results.aggregations.find(agg => Utils.eqNC(agg.name, aggregationName))\n            if (aggregation) {\n                this.setColumn(aggregation);    // Useful for formatting and i18n\n                if (aggregation.isTree && treeAggregationOptions) {\n                    const expr = this.findFilter(treeAggregationOptions.facetName);\n                    const expandPaths = expr ? expr.getValues(aggregation.column) : [];\n                    this.initTreeNodes(treeAggregationOptions.facetName, aggregation, \"/\", aggregation.items as TreeAggregationNode[], expandPaths, treeAggregationOptions.levelCallback);\n\n                    return aggregation as TreeAggregation;\n                }\n                return aggregation;\n            }\n        }\n        return undefined;\n    }\n\n    /**\n     * Look for a Tree aggregation with the given name in the search results and returns it.\n     * Takes care of initializing the Node aggregation items to insert their properties ($column, $path, $opened, $level)\n     * @deprecated use getAggregation() instead\n     * @param facetName\n     * @param aggregationName\n     * @param results The search results can be provided explicitly or taken from the SearchService implicitly.\n     * @param levelCallback A callback method called at every level of the tree.\n     * Can be used to read or alter the properties of the nodes (opening, closing), or node list (sorting)\n     */\n    getTreeAggregation(\n        facetName: string,\n        aggregationName: string,\n        results = this.searchService.results,\n        levelCallback?: (nodes: TreeAggregationNode[], level: number, node: TreeAggregationNode) => void\n    ): TreeAggregation | undefined {\n\n        const agg = this.getAggregation(aggregationName, results);\n        if(agg?.isTree){\n            const expr = this.findFilter(facetName);\n            const expandPaths = expr ? expr.getValues(agg.column) : [];\n            this.initTreeNodes(facetName, agg, \"/\", agg.items as TreeAggregationNode[], expandPaths, levelCallback);\n\n            return agg as TreeAggregation;\n        }\n        return undefined;\n    }\n\n    /**\n     * Returns the count parameter of the given aggregation (default is 10)\n     * @param aggregationName\n     */\n    getAggregationCount(aggregationName: string) : number {\n        return this.appService.getCCAggregation(aggregationName)?.count || 10;\n    }\n\n    /**\n     * Opens a Tree node of the given tree facet by querying data from the server\n     * Takes care of initializing the Node aggregation items to insert their properties ($column, $path, $opened, $level)\n     * @param facetName\n     * @param aggregation\n     * @param item\n     * @param levelCallback A callback method called at every level of the tree.\n     * Can be used to read or alter the properties of the nodes (opening, closing), or node list (sorting)\n     */\n    open(\n        facetName: string,\n        aggregation: TreeAggregation,\n        item: TreeAggregationNode,\n        levelCallback?: (nodes: TreeAggregationNode[], level: number, node: TreeAggregationNode) => void,\n        query = this.searchService.query,\n        searchInactive = true\n    ): Observable<Results> {\n\n        const value = item.$path + \"*\";\n        query = Query.copy(query);\n        query.action = \"open\";\n        const expr = this.exprBuilder.makeExpr(aggregation.column, value);\n        query.addOpen(expr, aggregation.name);\n\n        this.events.next({type: FacetEventType.Open, facet: this.facet(facetName)});\n        return this.searchService.getResults(query, undefined, {searchInactive}).pipe(\n            map((results: Results) => {\n                if (item.$path) {\n                    const source = FacetService.getAggregationNode(results.aggregations[0].items as TreeAggregationNode[], item.$path);\n                    const target = FacetService.getAggregationNode(aggregation.items as TreeAggregationNode[], item.$path);\n                    if (source && target) {\n                        target.items = source.items;    // Insert the new data (source) into the original (target)\n                    }\n                    if (target && target.items) {\n                        this.initTreeNodes(facetName, aggregation, item.$path, target.items, undefined, levelCallback);\n                    }\n                }\n                return results;\n            })\n        );\n    }\n\n    /**\n     * Returns true if a given aggregation item is currently actively filtering the search\n     * @param facetName\n     * @param aggregation\n     * @param item\n     * @param breadcrumbs breadcrumbs in which to look for selected items (default to search service breadcrumbs)\n     */\n    itemFiltered(facetName: string, aggregation: Aggregation, item: AggregationItem, breadcrumbs = this.searchService.breadcrumbs): boolean {\n        return !!this.findItemFilter(facetName, aggregation, item, breadcrumbs);\n    }\n\n    protected findItemFilter(facetName: string, aggregation: Aggregation, item: AggregationItem, breadcrumbs: Breadcrumbs | undefined) : Expr | undefined {\n        let expr: Expr | undefined;\n        let exprText: string;\n        if (!aggregation.valuesAreExpressions) {\n            let value: string;\n            if (aggregation.isTree) {\n                value = Utils.toSqlValue((<TreeAggregationNode>item).$path + \"*\");\n            }\n            else {\n                value = Utils.toSqlValue(item.value);\n            }\n            exprText = this.exprBuilder.makeExpr(aggregation.column, value);\n        }\n        else {\n            exprText = item.value as string;\n        }\n        const ret = this.appService.parseExpr(exprText);\n        if (ret instanceof Expr) {\n            expr = <Expr>ret;\n        }\n        if (expr) {\n            const expr2 = breadcrumbs?.findSelect(facetName, expr);\n            if(!!expr2 && (!expr2.parent || !expr2.parent.parent)){\n                return expr2;\n            }\n        }\n        return undefined;\n    }\n\n    /**\n     * Initializes the nodes of a tree (private, with a callback)\n     * @param facetName\n     * @param aggregation\n     * @param root\n     * @param children\n     * @param expandPaths\n     * @param levelCallback\n     */\n    protected initTreeNodes(\n        facetName: string,\n        aggregation: Aggregation,\n        root: string,\n        children: TreeAggregationNode[],\n        expandPaths?: string[],\n        levelCallback?: (nodes: TreeAggregationNode[], level: number, node: TreeAggregationNode) => void\n    ) {\n        if (!children) {\n            return;\n        }\n        let rootLevel: number;\n        if (root) {\n            rootLevel = Utils.count(root, \"/\", false) - 1;\n        }\n        else {\n            root = \"/\";\n            rootLevel = 0;\n        }\n        const column = this.appService.getColumn(aggregation.column);\n        Utils.traverse(children, (_nodes) => {\n            if (!_nodes) {\n                return false;\n            }\n            let path = root;\n            let level = rootLevel;\n            for (const _node of _nodes) {\n                path = path + _node.value + \"/\";\n                level++;\n            }\n            // console.log(path);\n            const _node = _nodes[_nodes.length - 1];\n            _node.$path = path;\n            _node.$column = column;\n            _node.$level = level;\n            _node.$opened = false;\n            _node.$filtered = this.itemFiltered(facetName, aggregation, _node)\n            expandPaths?.forEach(expandPath => {\n                if (expandPath.indexOf(path) === 0) {\n                    const count = !!_node.items ? _node.items.length : _node.hasChildren ? -1 : 0;\n                    if (count > 0) {\n                        _node.$opened = true;\n                    }\n                }\n            });\n            if (levelCallback) {\n                levelCallback(_nodes, level, _node);\n            }\n            return false; // don't stop\n        });\n    }\n\n    protected setColumn(aggregation: Aggregation){\n        if(!aggregation.isTree && aggregation.items){\n            const column = this.appService.getColumn(aggregation.column);\n            aggregation.items.forEach((value) => value.$column = column);\n        }\n    }\n\n\n\n    // static methods\n\n    protected static splitTreepath(path: string): string[] {\n        if (!path) return [];\n        path = path.trim();\n        if (path.length > 0 && path[0] === \"/\") {\n            path = path.substr(1);\n        }\n        if (path.length > 0 && path[path.length - 1] === \"/\") {\n            path = path.substr(0, path.length - 1);\n        }\n        if (path.length === 0) {\n            return [];\n        }\n        return path.split(\"/\");\n    }\n\n\n    public static treepathLast(path: string): string {\n        const parts = FacetService.splitTreepath(path);\n        if (!parts || parts.length === 0) {\n            return \"\";\n        }\n        return parts[parts.length - 1];\n    }\n\n    protected static getAggregationNode(nodes: TreeAggregationNode[], path: string): TreeAggregationNode | undefined {\n        if (!nodes || nodes.length === 0) {\n            return undefined;\n        }\n        const names = FacetService.splitTreepath(path);\n        let node: TreeAggregationNode | undefined;\n        for (let _i = 0, _a = names; _i < _a.length; _i++) {\n            if (!nodes || nodes.length === 0) {\n                return undefined;\n            }\n            const name = _a[_i].toLocaleLowerCase();\n            node = undefined;\n            for (let _j = 0, _b = nodes; _j < _b.length; _j++) {\n                const _node = _b[_j];\n                if ((<string>_node.value).toLocaleLowerCase() === name) {\n                    node = _node;\n                    break;\n                }\n            }\n            if (!node) {\n                return undefined;\n            }\n            nodes = node.items;\n        }\n        return node;\n    }\n\n\n    /**\n     * Convert an Expression object or an Expression Array to their AggregationItem equivalent\n     *\n     * @param expr Expression object or Expression Array\n     * @param valuesAreExpressions when true values should be converted to string otherwise no\n     *\n     * @returns AggregationItem array with converted expression or an empty array\n     */\n    exprToAggregationItem(expr: Expr[] | Expr, valuesAreExpressions: boolean = false): AggregationItem[] {\n        const fn = [\n            (item: Expr) => {\n                let value: FieldValue = item.value as string;\n                if (item.column?.eType === EngineType.bool) {\n                    value = Utils.isTrue(item.value);\n                }\n                return ({count: 0, value, display: item.display, $column: item.column, $excluded: (item?.not || item?.parent?.not)} as AggregationItem);\n            },\n            (item: Expr) => ({count: 0, value: item.toString((item.value) ? true : false), display: item.display, $column: item.column, $excluded: (item?.not || item?.parent?.not)} as AggregationItem)\n        ];\n\n        const callback = valuesAreExpressions ? fn[1] : fn[0];\n        return [].concat(expr as []).map(callback) as AggregationItem[];\n    }\n\n    /**\n     * Get all Breadcrumbs items from a specific facet\n     *\n     * @param facetName facet name where to extract all breadcrumbs\n     * @param breadcrumbs breadcrumbs in which to look for selected items\n     */\n    getBreadcrumbsItems(facetName: string, breadcrumbs: Breadcrumbs | undefined): BreadcrumbsItem[] {\n        return breadcrumbs?.items.filter(item => item.facet === facetName) || [];\n    }\n\n    /**\n     * Get all Aggregation items from a facet, currently filtered\n     *\n     * @param facetName facet name where to inspect\n     * @param valuesAreExpressions when true, some transformations should be done\n     * @param breadcrumbs breadcrumbs in which to look for selected items (default to search service breadcrumbs)\n     */\n    getAggregationItemsFiltered(facetName: string, valuesAreExpressions: boolean = false, breadcrumbs = this.searchService.breadcrumbs): AggregationItem[] {\n        const items = this.getBreadcrumbsItems(facetName, breadcrumbs);\n\n        // aggregation items are constructed from nested expressions\n        const expr = [] as Expr[][];\n        for (const item of items) {\n            const value = (item.expr?.display === undefined) ? item.expr?.operands as Expr[] || item.expr : item.expr;\n            if (value) {\n                expr.push(value as Expr[]);\n            }\n        }\n        // faltten results\n        const flattenExpr = [].concat.apply([], expr);\n\n        return this.exprToAggregationItem(flattenExpr, valuesAreExpressions);\n    }\n\n    /**\n     * Convert Suggestion to AggregationItem\n     * @param suggest a Suggestion object\n     *\n     * @returns AggregationItem object with is `$column` property defined.\n     * On boolean type, convert `value` property to boolean\n     */\n    suggestionToAggregationItem(suggest: Suggestion): AggregationItem {\n        const item: AggregationItem = {\n            value: suggest.normalized || suggest.display,\n            display: suggest.display,\n            count: +(suggest.frequency || 0),\n            $column: this.appService.getColumn(suggest.category)\n        };\n        if (item.$column?.eType === EngineType.bool) {\n            item.value = Utils.isTrue(item.value);\n        }\n        return item;\n    }\n\n    /**\n     * Converts a list of suggestions into a structure of TreeAggregationNodes\n     * @param suggests Suggestions to convert\n     * @param searchTerm The searched term in the suggestions\n     * @param aggregation The tree aggregations\n     */\n    suggestionsToTreeAggregationNodes(suggests: Suggestion[], searchTerm: string, aggregation: Aggregation | undefined): TreeAggregationNode[] {\n        const suggestions: TreeAggregationNode[] = [];\n        if(suggests.length > 0) {\n            const path2node = new Map<string,TreeAggregationNode>();\n            const searchPattern = new RegExp(`\\\\b${searchTerm}`, 'i');\n            const column = this.appService.getColumn(aggregation?.column);\n            suggests.forEach(suggest => {\n                if(suggest.display.length > 1) {\n                    const match = searchPattern.exec(suggest.display);\n                    this.addNode(suggestions, path2node, \"/\", suggest.display, +(suggest.frequency || 0), 1, (match?.index || 0)+searchTerm.length, column);\n                }\n            });\n        }\n        return suggestions;\n    }\n\n    /**\n     * Utility recursive function to generate a tree aggregation structure from\n     * a list of suggestions\n     */\n    protected addNode(items: TreeAggregationNode[],\n            path2node: Map<string,TreeAggregationNode>,\n            parentPath: string,\n            path: string,\n            count: number,\n            level: number,\n            matchend: number,\n            column: CCColumn | undefined) {\n\n        const nextChild = path.indexOf(\"/\", parentPath.length); // path = /Cities/Paris/17e/   parentPath = /Cities/\n        const currentPath = path.substring(0, nextChild+1); // => currentPath = /Cities/Paris/\n        let node = path2node.get(currentPath);\n\n        if(!node) {\n            const value = path.substring(parentPath.length, nextChild);\n            node = {\n                value,\n                count,\n                items: [],\n                hasChildren: false,\n                $column: column,\n                $level: level,\n                $opened: matchend >= currentPath.length,\n                $path: currentPath\n            };\n            path2node.set(currentPath, node);\n            items.push(node);\n        }\n\n        if(currentPath.length < path.length) {\n            node.hasChildren = true;\n            this.addNode(node.items, path2node, currentPath, path, count, level+1, matchend, column);\n        }\n    }\n\n\n    /**\n     * Check if a facet contains items\n     * @param aggregation aggregation name\n     * @param results search results\n     *\n     * @returns true if the facet contains a least one item otherwise false\n     */\n    hasData(aggregation: string, results: Results): boolean {\n        // Avoid calling getAggregation() which is costly\n        return !!results.aggregations.find(agg => Utils.eqNC(agg.name, aggregation))?.items?.length;\n    }\n\n    /**\n     * Returns the index of the first element in the supplied array\n     * corresponding to `item.value` or -1 when not found.\n     * A fallback to `item.display` is done before returning -1\n     * @param item item to find\n     */\n    filteredIndex(data: Aggregation | undefined, arr: Array<AggregationItem>, item: AggregationItem): number {\n        let indx = -1;\n        // specific to Values Are Expressions where expression are not well formatted by Expression Parser\n        // eg: when values is : \"> 0\", Expression Parser returns : \">0\" without space between operator and value\n        if (data?.valuesAreExpressions) {\n            const value = this.trimAllWhitespace(item.value);\n            const normalizedArr = arr.map(item => ({...item, value: this.trimAllWhitespace(item.value)})) || [];\n            indx = normalizedArr.findIndex(it => it.value === value);\n        } else {\n            indx = this.findAggregationItemIndex(arr, item);\n        }\n        return indx;\n    }\n\n    /**\n     * Utility function to returns aggregation item's index in supplied array with fallback to `display` comparison.\n     * Otherwise -1, indicating that no element passed the test.\n     * @param arr The array findIndex() was called upon\n     * @param value The value to be test\n     */\n    public findAggregationItemIndex = (arr: Array<AggregationItem>, item: AggregationItem) => {\n        let index = arr.findIndex(it => it.value === item.value);\n        if (index === -1 && item.display) {\n            // fallback to display comparison\n            index = arr.findIndex(it => it.display === item.display);\n        }\n        return index;\n    };\n\n    private trimAllWhitespace = (value: FieldValue | undefined): FieldValue | undefined => {\n        switch (typeof value) {\n            case \"string\":\n                return value.replace(/\\s/g, '');\n            default:\n                return value;\n        }\n    };\n}\n","import {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {DragDropModule} from \"@angular/cdk/drag-drop\";\n\nimport {IntlModule} from \"@sinequa/core/intl\";\nimport {ValidationModule} from \"@sinequa/core/validation\";\n\nimport {UtilsModule} from \"@sinequa/components/utils\";\nimport {BsActionModule} from \"@sinequa/components/action\";\nimport {BsModalModule} from \"@sinequa/components/modal\";\n\nimport {ALERT_COMPONENTS, WINDOW} from \"../alerts.service\";\nimport {BsEditAlert} from \"./edit-alert/edit-alert\";\nimport {BsManageAlerts} from \"./manage-alerts/manage-alerts\";\nimport {BsAlertsMenuComponent} from \"./alerts-menu/alerts-menu.component\";\nimport {BsAlertMessageComponent} from \"./alert-message/alert-message.component\";\n\nfunction windowFactory() {\n    return window;\n}\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule, ReactiveFormsModule,\n        DragDropModule,\n\n        BsModalModule,\n\n        IntlModule,\n        ValidationModule,\n\n        UtilsModule,\n        BsActionModule\n    ],\n    declarations: [\n        BsEditAlert, BsManageAlerts, BsAlertsMenuComponent, BsAlertMessageComponent\n    ],\n    exports: [\n        BsEditAlert, BsManageAlerts, BsAlertsMenuComponent\n    ],\n    providers: [\n        {\n            provide: ALERT_COMPONENTS,\n            useValue: {\n                editAlertModal: BsEditAlert,\n                manageAlertsModal: BsManageAlerts\n            }\n        },\n        {\n            provide: WINDOW,\n            useFactory: windowFactory\n        }\n    ]\n})\nexport class BsAlertsModule {\n}\n","export * from \"./public-api\";","import {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\n\nimport {IntlModule} from \"@sinequa/core/intl\";\nimport {ValidationModule} from \"@sinequa/core/validation\";\n\nimport {UtilsModule} from \"@sinequa/components/utils\";\nimport {BsSelectionModule} from \"@sinequa/components/selection\";\nimport {BsModalModule} from \"@sinequa/components/modal\";\nimport {BsActionModule} from \"@sinequa/components/action\";\nimport {BsAutocompleteModule} from \"@sinequa/components/autocomplete\";\nimport {LabelsModule} from \"../labels.module\";\n\nimport {BsRenameLabel} from \"./rename-label/rename-label\";\nimport {BsLabelsMenuComponent} from \"./labels-menu/labels-menu.component\";\n\nimport {LABELS_COMPONENTS, LabelsComponents} from \"../labels.service\";\nimport { BsDeleteLabel } from './delete-label/delete-label';\nimport { BsAddLabel } from './add-label/add-label';\nimport { BsLabelsAutocompleteComponent } from './labels-autocomplete/labels-autocomplete.component';\nimport { BsEditLabel } from './edit-label/edit-label';\n\nexport const defaultLabelComponents: LabelsComponents = {\n    labelsAutocompleteComponent: BsLabelsAutocompleteComponent,\n    renameModal: BsRenameLabel,\n    deleteModal: BsDeleteLabel,\n    addModal: BsAddLabel,\n    editModal: BsEditLabel\n};\n\n@NgModule({\n    imports: [\n        FormsModule, ReactiveFormsModule,\n        CommonModule,\n\n        IntlModule,\n        ValidationModule,\n\n        UtilsModule,\n        BsSelectionModule,\n        BsModalModule,\n        BsAutocompleteModule,\n        BsActionModule,\n        LabelsModule\n    ],\n    declarations: [\n        BsLabelsAutocompleteComponent,\n        BsRenameLabel,\n        BsLabelsMenuComponent,\n        BsDeleteLabel,\n        BsAddLabel,\n        BsEditLabel\n    ],\n    exports: [\n        LabelsModule,\n        BsLabelsAutocompleteComponent,\n        BsRenameLabel,\n        BsLabelsMenuComponent,\n        BsDeleteLabel,\n        BsAddLabel,\n        BsEditLabel\n    ],\n    providers: [\n        {provide: LABELS_COMPONENTS, useValue: defaultLabelComponents},\n    ]\n})\nexport class BsLabelsModule {\n}\n","import {Component, Input, OnChanges, SimpleChanges, ChangeDetectorRef, NgZone, ViewChild, ElementRef} from \"@angular/core\";\nimport {DomSanitizer} from \"@angular/platform-browser\";\nimport {PreviewData} from \"@sinequa/core/web-services\";\nimport {PreviewDocument} from \"./preview-document\";\nimport {Action} from \"@sinequa/components/action\";\n\n@Component({\n    selector: \"sq-preview-tooltip\",\n    templateUrl: \"./preview-tooltip.component.html\"\n})\nexport class PreviewTooltip implements OnChanges {\n\n    @Input() previewDocument: PreviewDocument;\n    @Input() previewData: PreviewData;\n    @Input() entityActions: Action[] = [];\n    @Input() entityNavActions: boolean = true;\n    @Input() selectedTextActions: Action[] = [];\n    @Input() scalingFactor = 1.0;\n    @ViewChild('tooltip', {static: false}) tooltip : ElementRef;\n\n    // Selected text mode\n    selectedText: string = \"\";\n\n    // Entity hover mode\n    entityType: string = \"\";\n    entityValue: string;\n    entityDisplay: string;\n    entityLabel: string;\n    entityCount: number;\n    entityIdx: number;\n\n    // Tooltip fixed positioning\n    bottom: string = \"0px\";\n    left: string = \"0px\";\n    leftPin; // position of the tooltip pin relative to left\n    isBottom: boolean = false;\n\n    constructor(\n        private zone: NgZone,\n        private changeDetectorRef: ChangeDetectorRef,\n        private sanitizer: DomSanitizer){\n\n        }\n\n    /**\n     * Add mouse listeners to a new preview document in order to display the tooltip\n     * in response to specific hover of click events\n     * @param changes\n     */\n    ngOnChanges(changes: SimpleChanges){\n        if(changes[\"previewDocument\"] && !!this.previewDocument){\n\n            if (typeof this.previewDocument.document.addEventListener !== undefined) {\n                this.document.addEventListener(\"mouseup\", this.handleMouseUp, false);\n                this.document.addEventListener(\"mousedown\", this.handleMouseDown, false);\n                this.document.addEventListener(\"mousemove\", this.handleMouseMove, false);\n                this.window.addEventListener(\"scroll\", this.handleScroll, false);\n            }\n\n        }\n\n        if(changes[\"scalingFactor\"] && this.previewDocument) {\n            setTimeout(() => this.handleMouseUp());\n        }\n    }\n\n    /**\n     * Shortcut to the preview document\n     */\n    private get document(): Document{\n        return this.previewDocument.document;\n    }\n\n    /**\n     * Shortcut to the preview Window\n     */\n    private get window(): Window {\n        return this.previewDocument.getContentWindow();\n    }\n\n    /**\n     * Control the visibility of the tooltip\n     */\n    get visibility() : \"visible\" | \"hidden\" {\n        return (this.selectedText !== \"\" || this.entityType !== \"\")? \"visible\" : \"hidden\";\n    }\n\n    /**\n     * Position the tooltip above a bounding box\n     */\n    positionTooltipAbove(box: DOMRect | ClientRect){\n        this.zone.run(() => {   // Necessary to compute the right size of the tooltip when updating the text\n            const tooltipWidth = this.tooltip.nativeElement.getBoundingClientRect().width;\n            const tooltipHeight = this.tooltip.nativeElement.getBoundingClientRect().height;\n            let left = this.scalingFactor*(box.left + 0.5*box.width) - 0.5*tooltipWidth\n            left = Math.min(Math.max(left, 0), this.scalingFactor*this.document.body.clientWidth - tooltipWidth); // Avoid tooltip overflow\n            this.left = Math.round(left)+\"px\";\n\n            const leftPin = Math.round(100 * (this.scalingFactor*(box.left + 0.5*box.width) - left) / tooltipWidth);\n            this.leftPin = this.sanitizer.bypassSecurityTrustStyle(`${leftPin}%`);\n            //absolute top positioning\n            //this.bottom = Math.round(box.top-tooltipHeight-5+this.window.scrollY)+\"px\";\n            //absolute bottom positioning\n            //this.bottom = Math.round(this.document.documentElement.clientHeight - this.window.scrollY - box.top + 5)+\"px\";\n            //fixed bottom positioning\n            if (Math.round(box.top - 5 - tooltipHeight) > 0) {\n              this.isBottom = false;\n              this.bottom = Math.round(this.scalingFactor* (this.window.innerHeight - box.top) + 5)+\"px\";\n            } else {\n              this.isBottom = true;\n              this.bottom = Math.round(this.scalingFactor* (this.window.innerHeight - box.top - box.height) - tooltipHeight - 5)+\"px\";\n            }\n            this.changeDetectorRef.detectChanges();\n        });\n    }\n\n    /**\n     * Handle mouse button down: reinitilizes selection\n     */\n    handleMouseDown = (event: MouseEvent) => {\n        //if(event.target !== this.tooltip)\n        this.selectedText = \"\";\n        //this.changeDetectorRef.detectChanges();\n    }\n\n    /**\n     * Handle mouse button up: get the selected text and display a tooltip above it\n     */\n    handleMouseUp = () => {\n        const selection = this.document.getSelection();\n        this.selectedText = selection ? selection.toString().trim() : \"\";\n        if(selection && this.selectedText){\n            const range = selection.getRangeAt(0);\n            //console.log(\"Selected text: \", text);\n            //console.log(event);\n            //console.log(range.getBoundingClientRect());\n            this.changeDetectorRef.detectChanges(); // Refresh size of tooltip\n            this.positionTooltipAbove(range.getBoundingClientRect());\n        }\n        this.changeDetectorRef.detectChanges();\n    }\n\n    private _inTime: number = 0;\n    /**\n     * Handle mouse movements. If hovering an entity and no text is selected, will display a tooltip for this entity\n     */\n    handleMouseMove = (event: MouseEvent) => {\n        if(!this.selectedText && event[\"path\"]){\n            const path = <Element[]> event[\"path\"];\n            if(path.length>0){\n                const element = path[0];\n                if(element.nodeType === 1 && element.nodeName === \"SPAN\" && (element.attributes[\"data-entity-basic\"] || element.attributes[\"data-entity-display\"])){\n                    if(this.entityType !== element.className.split(\" \")[0] || this.entityDisplay !== element.textContent){  // Tooltip not already displayed\n                        this.entityType = element.className.split(\" \")[0];    // Update text (and visibility)\n                        this.entityDisplay = element.textContent || \"\";   // Tooltip content\n                        const value = element.attributes[\"data-entity-basic\"] || element.attributes[\"data-entity-display\"];\n                        this.entityValue = value.value;\n                        const highlights = this.previewData.highlightsPerCategory[this.entityType].values\n                            .find(v => v.value === value.value);\n                        this.entityCount = highlights ? highlights.locations.length : 0;\n                        this.entityLabel = this.previewData.highlightsPerCategory[this.entityType].categoryDisplayLabel;\n\n                        const idsplt = element.id.split(\"_\");\n                        const idx = parseInt(idsplt[idsplt.length-1], 10);\n                        const entity = this.findEntity(this.entityType, this.entityValue, (_, idIndex) => idIndex === idx);\n                        this.entityIdx = entity ? entity.valueIndex : 0;\n\n                        this.changeDetectorRef.detectChanges(); // Refresh size of tooltip\n                        this.positionTooltipAbove(element.getBoundingClientRect());\n                    }\n                    this._inTime = Date.now(); // Reset the timer over an entity\n                    return;\n                }\n            }\n        }\n        // We are not hovering an entity\n        if(this.entityType){    // If still displaying the tooltip...\n            const isOverTooltip = !!event[\"path\"].find(el => el.localName === \"sq-preview-tooltip\");\n            if(!isOverTooltip) {\n                if(Date.now() - this._inTime > 200){ // 200 ms tolerance before closing tooltip\n                    this.entityType = \"\";\n                    this.entityValue = \"\";\n                    this.entityDisplay = \"\";\n                    this.entityLabel = \"\";\n                    this.entityCount = 0;\n                    this.entityIdx = 0;\n                    this.changeDetectorRef.detectChanges(); // Turn off tooltip\n                }\n            }\n            else{\n                this._inTime = Date.now(); // Reset the timer over the tooltip\n            }\n        }\n    }\n\n    /**\n     * Handle scroll events\n     */\n    handleScroll = (event) => {\n        if(this.selectedText !== \"\"){\n            this.handleMouseUp(); // Reposition tooltip above selected text\n        }\n        else if(this.entityType !== \"\"){\n            this.entityType = \"\";\n            this.entityValue = \"\";\n            this.changeDetectorRef.detectChanges(); // Turn off tooltip\n        }\n    }\n\n    /**\n     * Move to the previous entity if possible\n     * @param event\n     */\n    previousEntity(event: Event){\n        event.stopPropagation(); // stop the propagation to avoid triggering the tooltip listeners\n        if(this.entityIdx > 1){\n            // Find the index of the previous entity\n            const entity = this.findEntity(this.entityType, this.entityValue, (valueIdx,_) => valueIdx === this.entityIdx-1);\n            if (entity) {\n                const idx = entity.idIndex;\n                this.previewDocument.selectHighlight(this.entityType, idx);\n            }\n        }\n    }\n\n    /**\n     * Move to the next entity if possible\n     * @param event\n     */\n    nextEntity(event: Event){\n        event.stopPropagation(); // stop the propagation to avoid triggering the tooltip listeners\n        if(this.entityIdx < this.entityCount){\n            // Find the index of the next entity\n            const entity = this.findEntity(this.entityType, this.entityValue, (valueIdx,_) => valueIdx === this.entityIdx+1);\n            if (entity) {\n                const idx = entity.idIndex;\n                this.previewDocument.selectHighlight(this.entityType, idx);\n            }\n        }\n    }\n\n    /**\n     * Executes a clicked action button in the context of a tooltip for hovered entities\n     * @param action\n     * @param event\n     */\n    entityAction(action: Action, event: Event){\n        event.stopPropagation(); // stop the propagation to avoid triggering the tooltip listeners\n        this.zone.run(() => {\n            if(action.action) {\n                action.action(action, <any> {type: this.entityType, idx: this.entityIdx, value: this.entityValue, display: this.entityDisplay});\n            }\n        });\n    }\n\n    /**\n     * Executes a clicked action button in the context of a tooltip for text selection\n     * @param action the action to execute\n     * @param event\n     */\n    selectedTextAction(action: Action, event: Event){\n        event.stopPropagation(); // stop the propagation to avoid triggering the tooltip listeners\n        this.zone.run(() => {\n            if(action.action) {\n                action.action(action, <any> {text: this.selectedText});\n            }\n        });\n    }\n\n    /**\n     * Helper function to find the indexes of a specific entity *occurrence*. Returns both the index within all\n     * of its own occurrences: valueIndex (eg. BILL GATES 3/14) AND the index corresponding to the\n     * entity id inside the document: idIndex (eg. id=\"person_32\").\n     * @param category eg. person\n     * @param value eg. BILL GATES\n     * @param predicate function testing whether it is the entity occurrence of interest\n     * @returns an object with both indexes\n     */\n    private findEntity(entityType: string, entityValue: string, predicate: (index: number, idIndex: number) => boolean)\n            : {valueIndex: number, idIndex: number} | undefined {\n        let currentIdx = 0;\n        // For each highlight in the doc\n        for(let i=0; i<this.previewData.highlightsPerLocation['length']; i++) {\n            const highlight = this.previewData.highlightsPerLocation[i];\n            const categories = Object.keys(highlight.positionInCategories);\n            // For each value of the highlight\n            for(let j=0; j<categories.length; j++){\n                // If this is the right entity type and value\n                if(categories[j] === entityType && highlight.values[j] === entityValue) {\n                    // Increase the counter\n                    currentIdx++;\n                    // If this is the idx we are looking for, return\n                    if(predicate(currentIdx, highlight.positionInCategories[entityType])){\n                        return {valueIndex: currentIdx, idIndex: highlight.positionInCategories[entityType]};\n                    }\n                }\n            }\n        }\n        return undefined;\n    }\n\n}\n","<div #tooltip\n    class=\"sq-selection-tooltip\" [ngClass]=\"isBottom ? 'sq-bottom-tooltip' : 'sq-top-tooltip'\"\n    [style.--left]=\"leftPin\" [ngStyle]=\"{'visibility' : visibility, 'bottom' : bottom, 'left' : left}\"\n    [style.--factor]=\"1.0/scalingFactor\">\n\n    <ng-container *ngIf=\"entityType && !selectedText\">\n        <span class=\"display\">{{ entityDisplay }} </span> <span class=\"label\">({{ entityLabel | sqMessage }}) </span>\n        <span class=\"index\">{{ entityIdx }} </span>/<span class=\"count\"> {{ entityCount }} </span>\n        <ng-container *ngIf=\"entityNavActions\">\n            <span class=\"nav-btn previous\" (click)=\"previousEntity($event)\" [ngClass]=\"{disabled: entityIdx <= 1}\" title=\"{{ 'msg#preview.previousHighlightButtonAltText' | sqMessage }}\">❬</span>\n            <span class=\"nav-btn next\" (click)=\"nextEntity($event)\" [ngClass]=\"{disabled: entityIdx >= entityCount}\" title=\"{{ 'msg#preview.nextHighlightButtonAltText' | sqMessage }}\">❭</span>\n        </ng-container>\n        <div class=\"btn-list\">\n            <button *ngFor=\"let action of entityActions\" (click)=\"entityAction(action, $event)\" [disabled]=\"action.disabled\" [hidden]=\"action.hidden\" title=\"{{ (action.title || '') | sqMessage:{values: {type: entityType, value: entityValue, display: entityDisplay} } }}\">\n                <span *ngIf=\"action.icon\" class=\"{{action.icon}}\"></span>\n                <span *ngIf=\"action.text\">{{ action.text | sqMessage:{values: {type: entityType, value: entityValue, display: entityDisplay} } }}</span>\n                <span *ngIf=\"action.iconAfter\" class=\"{{action.iconAfter}}\"></span>\n            </button>\n        </div>\n    </ng-container>\n\n\n    <ng-container *ngIf=\"selectedText\">\n        <ng-container *ngFor=\"let action of selectedTextActions\">\n            <button (click)=\"selectedTextAction(action, $event)\" [disabled]=\"action.disabled\" [hidden]=\"action.hidden\" title=\"{{ (action.title || '') | sqMessage:{values: {text: selectedText.slice(0,50)} } }}\">\n                <span *ngIf=\"action.icon\" class=\"{{action.icon}}\"></span> <span *ngIf=\"action.text\">{{ action.text | sqMessage:{values: {text: selectedText.slice(0,50)} } }}</span> <span *ngIf=\"action.iconAfter\" class=\"{{action.iconAfter}}\"></span>\n            </button>\n        </ng-container>\n    </ng-container>\n</div>\n","import { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { Utils } from '@sinequa/core/base';\nimport { UIService } from '../ui.service';\n\n@Component({\n    selector: '[sqSticky]',\n    template: `\n<div [ngStyle]=\"{'margin-top.px': marginTop}\"></div>\n<div #container class=\"sticky-container\" [ngStyle]=\"{'top.px': top, 'bottom.px': bottom}\">\n    <ng-content></ng-content>\n</div>\n`,\n    styles: [`\n.sticky-container {\n    position: sticky;\n    position: -webkit-sticky;\n}\n    `],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StickyComponent implements OnInit, AfterViewInit, OnDestroy{\n    @Input(\"sqSticky\") offsets?: {top: number, bottom: number};\n    @ViewChild(\"container\") container: ElementRef;\n\n    top?: number;\n    bottom?: number;\n    scrollY: number;\n    marginTop = 0;\n    \n    private listener;\n    \n    constructor(\n        protected ui: UIService,\n        protected cdRef: ChangeDetectorRef){\n    }\n\n    onScroll(forceScrollDown = false) {\n        const scrollDelta = window.pageYOffset - this.scrollY;\n        this.scrollY = window.pageYOffset;\n\n        const offsets = this.offsets || {top: 0, bottom: 0};\n        const componentHeight = this.container.nativeElement.getBoundingClientRect().height;\n        // Scrolling down (OR top of page OR forced after a scroll up OR component height small than screen height)\n        if(scrollDelta >= 0 || this.scrollY === 0 || forceScrollDown || componentHeight + offsets.top + offsets.bottom < window.innerHeight) {\n            this.marginTop = Math.min(this.scrollY, this.marginTop);\n            this.bottom = undefined;\n            this.top = Math.min(window.innerHeight - componentHeight - offsets.bottom, offsets.top);\n        }\n        // Scrolling up\n        else {\n            this.marginTop = Math.max(this.scrollY + window.innerHeight - componentHeight -offsets.bottom - offsets.top, this.marginTop);\n            this.bottom = window.innerHeight - offsets.top - componentHeight;\n            this.top = undefined;\n            if(this.scrollY <= this.marginTop) {\n                this.postScrollUp();\n            }\n        }\n        this.cdRef.markForCheck();\n    }\n\n    postScrollUp = Utils.debounce(() => {\n        this.onScroll(true);\n    }, 250);\n\n    ngOnInit() {\n        if(CSS.supports(\"position\", \"sticky\") || CSS.supports(\"position\", \"-webkit-sticky\")) {            \n            this.scrollY = window.pageYOffset;\n            this.top = (this.offsets?.top || 0);\n        }\n    }\n\n    ngAfterViewInit() {\n        // position: sticky is not supported in Internet Explorer. A workaround could be to rely on position: relative and position: fixed, with additional logic.\n        if(CSS.supports(\"position\", \"sticky\") || CSS.supports(\"position\", \"-webkit-sticky\")) {\n            this.listener = () => this.onScroll();\n            window.addEventListener('scroll', this.listener);\n            window.addEventListener('resize', this.listener);\n            this.ui.addElementResizeListener(this.container.nativeElement, this.listener);\n        }\n    }\n\n    ngOnDestroy() {\n        if(this.listener) {\n            window.removeEventListener('scroll', this.listener);\n            window.removeEventListener('resize', this.listener);\n            this.ui.removeElementResizeListener(this.container.nativeElement, this.listener);\n        }\n    }\n\n}\n","export default {\n    \"validation\": {\n        \"min\": \"The value must be at least {min}\",\n        \"max\": \"The value can be no more than {max}\",\n        \"required\": \"This field is required\",\n        \"requiredTrue\": \"This field must be set\",\n        \"email\": \"A valid email address is required\",\n        \"minLength\": \"The value must have at least {requiredLength, plural, one {# character} other {# characters}}\",\n        \"maxLength\": \"The value can have no more than {requiredLength, plural, one {# character} other {# characters}}\",\n        \"pattern\": \"The value is invalid\",\n        \"unique\": \"This field must be unique\",\n        \"integer\": \"The value must be an integer\",\n        \"number\": \"The value must be a number\",\n        \"date\": \"\",\n        \"range\": \"The first value must be less than or equal to the second\"\n    }\n};\n","const LOGIN_MODULE_PROVIDERS = [];\n\nexport {LOGIN_MODULE_PROVIDERS};\n","import {Utils} from \"@sinequa/core/base\";\nimport {enSearch, frSearch, deSearch} from \"@sinequa/components/search\";\nimport {enModal, frModal, deModal} from \"@sinequa/components/modal\";\nimport _enLabels from \"./en\";\nimport _frLabels from \"./fr\";\nimport _deLabels from \"./de\";\n\nconst enLabels = Utils.merge({}, _enLabels, enSearch, enModal);\nconst frLabels = Utils.merge({}, _frLabels, frSearch, frModal);\nconst deLabels = Utils.merge({}, _deLabels, deSearch, deModal);\n\nexport { enLabels, frLabels, deLabels };\n","export * from \"./public-api\";","export default {\n    \"modal\": {\n        \"buttons\": {\n            \"ok\": \"OK\",\n            \"cancel\": \"Cancel\",\n            \"yes\": \"Yes\",\n            \"no\": \"No\",\n            \"abort\": \"Abort\",\n            \"retry\": \"Retry\",\n            \"ignore\": \"Ignore\"\n        },\n\n        \"confirm\": {\n            \"title\": \"Confirm\"\n        },\n\n        \"prompt\": {\n            \"title\": \"Enter a value\"\n        }\n    }\n};\n","import {NgModule, ModuleWithProviders} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\n\nimport {IntlModule} from \"@sinequa/core/intl\";\nimport {LoadComponentModule} from \"@sinequa/core/load-component\";\nimport {ValidationModule} from \"@sinequa/core/validation\";\n\nimport {UtilsModule} from \"@sinequa/components/utils\";\nimport {BsActionModule} from \"@sinequa/components/action\";\nimport {BsSelectionModule} from \"@sinequa/components/selection\";\n\nimport {RESULTS_VIEWS, DEFAULT_VIEW, ResultsView} from \"../results-view.service\";\n\nimport {BsResultsViewSelector} from \"./results-view-selector/results-view-selector\";\nimport {BsResultsGridView} from \"./results-grid-view/results-grid-view\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n\n        LoadComponentModule,\n        IntlModule,\n        ValidationModule,\n\n        UtilsModule,\n        BsActionModule,\n        BsSelectionModule\n    ],\n    declarations: [\n        BsResultsViewSelector,\n        BsResultsGridView,\n    ],\n    exports: [\n        BsResultsViewSelector,\n        BsResultsGridView,\n    ],\n})\nexport class BsResultsViewModule {\n    public static forRoot(resultsViews: ResultsView[], defaultView: ResultsView): ModuleWithProviders<BsResultsViewModule> {\n        return {\n            ngModule: BsResultsViewModule,\n            providers: [\n                {\n                    provide: RESULTS_VIEWS,\n                    useValue: resultsViews\n                },\n                {\n                    provide: DEFAULT_VIEW,\n                    useValue: defaultView\n                }\n            ]\n        };\n    }\n}\n","import {Directive, Input, TemplateRef, ViewContainerRef, OnDestroy, ChangeDetectorRef} from '@angular/core';\nimport {ɵMatchMedia, BreakPointRegistry} from '@angular/flex-layout';\nimport {Subject, throwError} from \"rxjs\";\nimport {startWith, switchMap, map} from \"rxjs/operators\";\n\n// Adapted from https://github.com/angular/flex-layout/issues/142#issuecomment-379465022\n// Change ɵMatchMedia => MatchMedia when we move to angular 8\n@Directive({\n    selector: \"[sqMediaIf]\",\n})\nexport class MediaIf implements OnDestroy {\n    private hasView = false;\n    private matcher = new Subject<string>();\n    private subscription = this.matcher\n        .pipe(\n            map(alias => {\n                const breakpoint = this.breakpoints.findByAlias(alias);\n                if (!breakpoint) {\n                    throwError(`breakpoint not found for ${alias}`);\n                    return \"\";\n                }\n                else {\n                    return breakpoint.mediaQuery;\n                }\n            }),\n            switchMap(mq => {\n                //console.log(\"MediaIf:\", mq);\n                return this.matchMedia.observe([mq], true)\n                    .pipe(\n                        map(result => {\n                            //console.log(\"MediaChange:\", result);\n                            return result.matches;\n                        }),\n                        startWith(this.matchMedia.isActive(mq)));\n            }))\n        .subscribe(matches => matches ? this.createView() : this.destroyView());\n\n    @Input()\n    set sqMediaIf(value: string) {\n        this.matcher.next(value);\n    }\n\n    constructor(\n        private template: TemplateRef<any>,\n        private viewContainer: ViewContainerRef,\n        private breakpoints: BreakPointRegistry,\n        private matchMedia: ɵMatchMedia,\n        private changeDetectorRef: ChangeDetectorRef) {\n    }\n\n    ngOnDestroy() {\n        this.subscription.unsubscribe();\n    }\n\n    private createView() {\n        if (!this.hasView) {\n            this.viewContainer.createEmbeddedView(this.template);\n            this.changeDetectorRef.markForCheck();\n            this.hasView = true;\n        }\n    }\n\n    private destroyView() {\n        if (this.hasView) {\n            this.viewContainer.clear();\n            this.hasView = false;\n        }\n    }\n}","import {Component, Inject, HostBinding} from \"@angular/core\";\nimport {MODAL_MODEL, ModalRef, ConfirmOptions, ConfirmType} from \"@sinequa/core/modal\";\n\n@Component({\n    selector: \"sq-confirm\",\n    templateUrl: \"./confirm.component.html\"\n})\nexport class BsConfirm {\n    @HostBinding(\"class.sq-confirm\") true;\n\n    constructor(\n        @Inject(MODAL_MODEL) public model: ConfirmOptions,\n        protected modalRef: ModalRef) {\n    }\n\n    get title(): string {\n        return this.model.title ? this.model.title : \"msg#modal.confirm.title\";\n    }\n\n    public getMessageClass(confirmType): string {\n        switch (confirmType) {\n            case ConfirmType.Info:\n                return \"alert-info\";\n            case ConfirmType.Success:\n                return \"alert-sucess\";\n            case ConfirmType.Warning:\n                return \"alert-warning\";\n            case ConfirmType.Error:\n                return \"alert-danger\";\n            default:\n                return \"\";\n        }\n    }\n}","<sq-modal\n    [title]=\"title\"\n    [buttons]=\"model.buttons\">\n    <div class=\"alert {{getMessageClass(model.confirmType)}}\">{{model.message | sqMessage:model.messageParams}}</div>\n</sq-modal>\n","import {\n    Component,\n    ElementRef,\n    EventEmitter,\n    Output,\n    Input,\n    OnChanges,\n    SimpleChanges,\n} from \"@angular/core\";\nimport { Keys } from \"@sinequa/core/base\";\nimport { AutocompleteItem } from \"@sinequa/components/autocomplete\";\n\n/**\n * Component containing a form and autocomplete to search\n * through the list labels according to a specific type (public/private) and select one(s) of them\n *\n * The component can be used as custom component in the Action\n * menu's modals.\n */\n\n@Component({\n    selector: \"sq-labels-autocomplete\",\n    templateUrl: \"./labels-autocomplete.component.html\",\n    styles: [\n        `\n            .sq-dropdown-form {\n                min-width: 13rem;\n                display: inline;\n            }\n            .disabled {\n                cursor: not-allowed;\n            }\n            :host ::ng-deep .sq-autocomplete-list {\n                width: 50% !important;\n            }\n            .clickable {\n                cursor: pointer;\n            }\n            .clickable:hover {\n                opacity: 85%;\n            }\n            .label-public {\n                background-color: #4fc3f7;\n                margin: 2px;\n            }\n            .label-private {\n                background-color: #7283a7;\n                margin: 2px;\n            }\n\n            :host div {\n                width: 100%;\n                display: flex;\n                flex-wrap: wrap;\n                align-items: center;\n                height: unset !important;\n            }\n            :host input {\n                border: none;\n                flex-grow: 1;\n                flex-basis: 100px;\n                min-width: 100px;\n            }\n            :host input:focus {\n                outline: none;\n            }\n        `,\n    ],\n})\nexport class BsLabelsAutocompleteComponent implements OnChanges {\n    /** Event synchronizing the list of selected labels and label's type in the parent component */\n    @Output() labelsUpdate = new EventEmitter<string[]>();\n\n    @Input() public: boolean; /** Whether labels are public/private */\n    @Input() disableAutocomplete: boolean = false /** Whether the autocomplete input is disabled or not */;\n    @Input() allowNewLabels: boolean; /** Whether enable adding new labels or not */\n    @Input() allowManagePublicLabels: boolean; /** Define the right of adding new labels */\n    @Input() initLabels: string[] = []; /** Initial labels to be displayed in the labelsAutocomplete input*/\n\n    labelsItems: AutocompleteItem[] = []; /** List of assigned labels to selected record(s) */\n\n    constructor(private elementRef: ElementRef) {}\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.public) {\n            this.labelsItems = [];\n        }\n        if (changes.initLabels) {\n            this.labelsItems = this.initLabels.map((label) => {\n                return {\n                    display: label,\n                    category: \"\",\n                };\n            });\n        }\n    }\n\n    removeItem(item: AutocompleteItem) {\n        this.labelsItems.splice(this.labelsItems.indexOf(item), 1);\n        this.labelsItems = [\n            ...this.labelsItems,\n        ]; /** Need to programmatically update this.labelsItems object in order to fire ngOnChanges hook in sqAutocompleteLabels */\n        this.labelsUpdate.next(this.labelsItems.map((item) => item.display));\n    }\n\n    onLabelsItemsChanged(labelsItems: AutocompleteItem[]) {\n        this.labelsItems = labelsItems; /** Need to Programmatically update this.labelsItems to catch updates happening in the sqAutocompleteLabels  */\n        this.labelsUpdate.next(labelsItems.map((item) => item.display));\n    }\n\n    private getDropdownItem(): HTMLElement | null {\n        if (this.elementRef) {\n            let current: HTMLElement | null = this.elementRef\n                .nativeElement as HTMLElement;\n            while (current && !current.classList.contains(\"dropdown-item\")) {\n                current = current.parentElement;\n            }\n            return current;\n        }\n        return null;\n    }\n\n    keydown(event: KeyboardEvent) {\n        // Intercept tab and set focus to surrounding dropdown-item\n        if (event.keyCode === Keys.tab) {\n            const dropdownItem = this.getDropdownItem();\n            if (dropdownItem) {\n                dropdownItem.focus();\n                event.preventDefault();\n                return false;\n            }\n        }\n        return undefined;\n    }\n\n    keypress(event: KeyboardEvent) {\n        if (event.keyCode === Keys.enter) {\n            // Stop click event firing on surrounding anchor (Firefox)\n            event.preventDefault();\n            return false;\n        }\n        return undefined;\n    }\n}\n","<form name=\"labelsForm\" class=\"d-inline\">\n    <section class=\"sq-dropdown-form\">\n        <div class=\"form-control\">\n            <span\n                *ngFor=\"let item of labelsItems\"\n                class=\"badge badge-pill badge-info align-self-center\"\n                [ngClass]=\"{'label-public': public, 'label-private': !public}\">\n                {{ item.display }}\n                <span class=\"fas fa-times-circle clickable\" (click)=\"removeItem(item)\"></span>\n            </span>\n            <input type=\"text\"\n                class=\"input-autocomplete flex-grow-1\"\n                name=\"labelName\"\n                spellcheck=\"false\"\n                autocomplete=\"off\"\n                sqAutocompleteLabels\n                [public]=\"public\"\n                [placeholder]=\"'msg#labels.selectLabel' | sqMessage\"\n                [dropdown]=\"dropdown\"\n                [allowNewLabels]=\"allowNewLabels\"\n                [allowManagePublicLabels]=\"allowManagePublicLabels\"\n                (keydown)=\"keydown($event)\"\n                (keypress)=\"keypress($event)\"\n                (itemsUpdate)=\"onLabelsItemsChanged($event)\"\n                [disabled]=\"disableAutocomplete\"\n                [off]=\"disableAutocomplete\"\n                [class.disabled]=\"disableAutocomplete\"\n                [labelsItems]=\"labelsItems\">\n        </div>\n        <sq-autocomplete-list #dropdown>\n            <ng-template #itemTpl let-item>\n                <div class=\"autocomplete-item p-2\">{{item.display}}\n                </div>\n            </ng-template>\n        </sq-autocomplete-list>\n    </section>\n</form>\n\n\n","import { Component, OnInit, OnChanges, Input, Optional, Inject, InjectionToken, OnDestroy, ChangeDetectorRef, NgZone} from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { Location } from \"@angular/common\";\nimport { ActivatedRoute, Router, NavigationEnd, RouterEvent } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { filter} from 'rxjs/operators';\n\nimport { LoginService } from '@sinequa/core/login';\nimport { PreviewData, Results } from '@sinequa/core/web-services';\nimport { Query } from '@sinequa/core/app-utils';\nimport { Action } from '@sinequa/components/action';\nimport { PreviewService, PreviewDocument } from '@sinequa/components/preview';\nimport { SearchService } from '@sinequa/components/search';\nimport { MODAL_MODEL } from '@sinequa/core/modal';\nimport { IntlService } from '@sinequa/core/intl';\nimport { UIService } from '@sinequa/components/utils';\nimport { UserPreferences } from '@sinequa/components/user-settings';\n\nexport interface PreviewConfig {\n  initialCollapsedPanel?: boolean;\n  homeRoute?: string;\n  showBackButton?: boolean;\n  subpanels?: string[];\n  defaultSubpanel?: string;\n  previewSearchable?: boolean;\n}\n\nexport interface PreviewInput {\n  config?: PreviewConfig;\n  id: string;\n  query: Query;\n}\n\nexport interface EntitiesState {\n  count: number;\n  sortFreq: boolean;\n  hidden: Map<string,boolean>;\n  nav: Map<string,number>;\n  category: string;\n}\n\nexport const PREVIEW_CONFIG = new InjectionToken<PreviewConfig>(\"PREVIEW_CONFIG\");\n\n@Component({\n  selector: 'app-preview',\n  templateUrl: './preview.component.html',\n  styleUrls: ['./preview.component.scss']\n})\nexport class PreviewComponent implements OnInit, OnChanges, OnDestroy {\n  // Inputs can be passed via binding or the URL + deps injection (defaults are initialized below)\n  @Input() id?: string;\n  @Input() query?: Query;\n  @Input() previewConfig?: PreviewConfig;\n\n  // Set when the preview service responds\n  previewData?: PreviewData;\n  downloadUrl?: string;\n  currentUrl?: string;\n  sandbox?: string | null;\n\n  // Set when the preview has finished loading and initializing\n  previewDocument?: PreviewDocument;\n\n  // State of the preview\n  collapsedPanel= true;\n  homeRoute = \"/home\";\n  showBackButton = true;\n  subpanels = [\"extracts\", \"entities\"];\n  subpanel = 'extracts';\n  previewSearchable = true;\n\n  // Page management for splitted documents\n  pagesResults: Results;\n\n  // Subscriptions\n  private loginSubscription: Subscription;\n  private routerSubscription: Subscription;\n\n  // Preview Tooltip\n  tooltipEntityActions: Action[] = [];\n  tooltipTextActions: Action[] = [];\n\n  private readonly scaleFactorThreshold = 0.05;\n  scaleFactor = 1.0;\n\n  constructor(\n    @Optional() @Inject(PREVIEW_CONFIG) previewConfig: PreviewConfig,\n    @Optional() @Inject(MODAL_MODEL) previewInput: PreviewInput,\n    private cdr: ChangeDetectorRef,\n    protected router: Router,\n    protected route: ActivatedRoute,\n    protected titleService: Title,\n    protected _location: Location,\n    public loginService: LoginService,\n    protected intlService: IntlService,\n    protected previewService: PreviewService,\n    protected searchService: SearchService,\n    public prefs: UserPreferences,\n    public ui: UIService,\n    protected activatedRoute: ActivatedRoute,\n    private zone: NgZone\n    ) {\n\n    // If the page is refreshed login needs to happen again, then we can get the preview data\n    this.loginSubscription = this.loginService.events.subscribe({\n      next: (event) => {\n        if (event.type === \"session-changed\") {\n          this.getPreviewData();\n        }\n      }\n    });\n\n    // The URL can be changed when searching within the page\n    this.routerSubscription = this.router.events\n      .pipe(\n        filter(event => event instanceof RouterEvent && event.url !== this.homeRoute)\n      ).subscribe({\n      next: (event) => {\n        if (event instanceof NavigationEnd) {\n          this.getPreviewDataFromUrl();\n        }\n      }\n    });\n\n    // In case the component is loaded in a modal\n    if(previewInput){\n      if(previewInput.config){\n        previewConfig = previewInput.config;\n      }\n      this.id = previewInput.id;\n      this.query = previewInput.query;\n    }\n\n    // Configuration may be injected by the root app (or as above by the modal)\n    if(previewConfig){\n      this.previewConfig = previewConfig;\n    }\n\n    this.tooltipTextActions.push(new Action({\n      text: \"msg#searchForm.search\",\n      title: \"msg#preview.searchText\",\n      icon: \"sq-preview-search-icon\",\n      action: (action, event) => {\n        if (this.query) {\n          this.query.text = event['text'].slice(0, 50);\n          this.router.navigate([], {\n            relativeTo: this.route,\n            queryParams: {query: this.query.toJsonForQueryString()},\n            queryParamsHandling: 'merge',\n            state: {}\n          });\n        }\n      }\n    }));\n\n    titleService.setTitle(this.intlService.formatMessage(\"msg#preview.pageTitle\"));\n\n  }\n\n  /**\n   * Loads the preview data in the case where id and query are provided as inputs\n   * (eg. the component is inserted in a parent rather than as a route)\n   */\n  ngOnChanges() {\n    this.getPreviewData();\n  }\n\n  /**\n   * Initializes the configuration and potentially loads the preview data from the URL\n   * (in the case where the id and query are not provided via the Input bindings)\n   */\n  ngOnInit() {\n\n    if(!this.id || !this.query) { // do nothing if the parameters are already here\n      this.getPreviewDataFromUrl();\n    }\n\n    if(this.previewConfig){\n      if(this.previewConfig.initialCollapsedPanel !== undefined){\n        this.collapsedPanel = this.previewConfig.initialCollapsedPanel;\n      }\n      if(this.previewConfig.homeRoute !== undefined){\n        this.homeRoute = this.previewConfig.homeRoute;\n      }\n      if(this.previewConfig.showBackButton !== undefined){\n        this.showBackButton = this.previewConfig.showBackButton;\n      }\n      if(this.previewConfig.subpanels !== undefined){\n        this.subpanels = this.previewConfig.subpanels;\n      }\n      if(this.previewConfig.defaultSubpanel !== undefined){\n        this.subpanel = this.previewConfig.defaultSubpanel;\n      }\n      if(this.previewConfig.previewSearchable !== undefined){\n        this.previewSearchable = this.previewConfig.previewSearchable;\n      }\n    }\n  }\n\n  ngOnDestroy(){\n    this.loginSubscription.unsubscribe();\n    this.routerSubscription.unsubscribe();\n  }\n\n  /**\n   * Extracts id and query from the URL and request the preview data from the preview service\n   */\n  private getPreviewDataFromUrl() {\n    const map = this.route.snapshot.queryParamMap;\n    this.id = map.get(\"id\") || undefined;\n    this.query = this.searchService.makeQuery();\n    this.query.fromJson(map.get(\"query\") || \"{}\");\n    this.getPreviewData();\n  }\n\n  /**\n   * Performs a call to the preview service. Update the search form with the searched query text (page refresh or navigation)\n   */\n  private getPreviewData() {\n    if(!!this.id && !!this.query && this.loginService.complete) {\n      this.previewService.getPreviewData(this.id, this.query).subscribe(\n        previewData => {\n          this.previewData = previewData;\n          const url = previewData?.documentCachedContentUrl;\n          // Manage splitted documents\n          const pageNumber = this.previewService.getPageNumber(previewData.record);\n          if(pageNumber) {\n            this.previewService.fetchPages(previewData.record.containerid!, this.query!)\n              .subscribe(results => this.pagesResults = results);\n          }\n          this.currentUrl = url;\n          this.downloadUrl = url ? this.previewService.makeDownloadUrl(url) : undefined;\n          this.sandbox = [\"xlsx\",\"xls\"].includes(previewData.record.docformat) ? null : undefined;\n          this.titleService.setTitle(this.intlService.formatMessage(\"msg#preview.pageTitle\", {title: previewData?.record?.title || \"\"}));\n        }\n      );\n    }\n  }\n\n  /**\n   * Called when the HTML of the preview finishes loading in the iframe\n   * @param previewDocument\n   */\n  onPreviewReady(previewDocument: PreviewDocument){\n    if(this.previewData) {\n      // uses preferences to uncheck highlighted entities\n      const uncheckedEntities = this.entitiesStartUnchecked;\n      Object.keys(uncheckedEntities)\n        .map(key => ({entity: key, value: uncheckedEntities[key]}))\n        .filter(item => item.value === true)\n        .map(item => previewDocument.toggleHighlight(item.entity, false));\n\n      this.previewDocument = previewDocument;\n      this.previewDocument.selectHighlight(\"matchlocations\", 0); // Scroll to first match\n    }\n  }\n\n  onPreviewPageChange(event: string | PreviewDocument) {\n    if (event instanceof PreviewDocument) {\n      this.previewDocument = event;\n    } else {\n      this.currentUrl = event;\n      this.previewDocument = undefined;\n    }\n    this.cdr.detectChanges();\n  }\n\n  /**\n   * Back button (navigating back to search)\n   */\n  back(){\n    this._location.back();\n  }\n\n  /**\n   * Notification for the audit service\n   */\n  openOriginalDoc(){\n    if (this.previewData) {\n      this.searchService.notifyOpenOriginalDocument(this.previewData.record);\n    }\n  }\n\n  /**\n   * Navigate to another page of this document\n   * @param id\n   */\n  gotoPage(page: number) {\n    const containerid = this.previewData?.record.containerid;\n    if(containerid) {\n      const id = `${containerid}/#${page}#`;\n      \n      // we needs surround router.navigate() as we navigate outside Angular\n      // if an error occurs, this allow page navigation, broken otherwise\n      this.zone.run(() => {\n        this.router.navigate([], {\n          relativeTo: this.activatedRoute,\n          queryParams: { id }, // Assumes that we can keep the same query(!)\n          queryParamsHandling: 'merge'\n        });\n      })\n    }\n  }\n\n  /**\n   * Search for new text within the same document\n   * @param text\n   */\n  searchText(text: string) {\n    if(this.query && this.query.text !== text) {\n      this.query.text = text;\n      this.router.navigate([], {\n        relativeTo: this.route,\n        queryParams: {query: this.query.toJsonForQueryString()},\n        queryParamsHandling: 'merge',\n        state: {}\n      });\n    }\n  }\n\n  /**\n   * Whether the UI is in dark or light mode\n   */\n  isDark(): boolean {\n    return document.body.classList.contains(\"dark\");\n  }\n\n  // User preferences\n\n  /**\n   * Entity facets state\n   */\n  get entitiesStartUnchecked(): {[entity: string]: boolean} {\n    return this.prefs.get(\"preview-entities-checked\") || {};\n  }\n\n  entitiesChecked(event: {entity: string, checked: boolean}) {\n    const startUnchecked = this.entitiesStartUnchecked;\n    startUnchecked[event.entity] = !event.checked;\n    this.prefs.set(\"preview-entities-checked\", startUnchecked);\n  }\n\n  increaseScaleFactor() {\n    this.scaleFactor = this.scaleFactor + this.scaleFactorThreshold;\n    return false;\n  }\n\n  decreaseScaleFactor() {\n    this.scaleFactor = Math.round(Math.max(0.1, this.scaleFactor - this.scaleFactorThreshold) * 100) / 100;\n    return false;\n  }\n\n  shouldDisableMinimize() {\n    return this.scaleFactor <= 0.1;\n  }\n\n  leftPanelTooltipPlacement() {\n    return this.collapsedPanel ? 'right' : 'bottom'\n  }\n}\n","<div class=\"d-flex flex-row align-items-stretch m-0 h-100\">\n\n    <!-- Left panel (navigation, extracts and entities) -->\n    <div class=\"d-flex flex-column align-items-stretch border-right p-0\"\n        [ngClass]=\"{'col-sm-5 col-md-4 col-lg-3': !collapsedPanel}\"\n        *ngIf=\"ui.screenSizeIsGreater('xs')\">\n\n        <!-- Navigation buttons/links (template below) -->\n        <ng-container *ngTemplateOutlet=\"nav\"></ng-container>\n\n        <div class=\"border-top border-bottom p-2\" *ngIf=\"!collapsedPanel\">\n            <!-- Search form allowing the search preview -->\n            <sq-preview-search-form *ngIf=\"previewSearchable\" [query]=\"query\" (searchText)=\"searchText($event)\"></sq-preview-search-form>\n\n            <!-- Page form allowing to go to an arbitrary page number (when the document is splitted)-->\n            <sq-preview-page-form [pageNumber]=\"previewData?.record?.$page\" (gotopage)=\"gotoPage($event)\"></sq-preview-page-form>\n\n            <!-- Navigation between the active sub panels -->\n            <ul class=\"nav nav-pills justify-content-center mb-1\">\n                <li class=\"nav-item\" *ngFor=\"let panel of subpanels\">\n                    <a class=\"nav-link\" href=\"#\" [ngClass]=\"{active: subpanel === panel}\" (click)=\"subpanel = panel; false\">\n                        {{ ('msg#preview.'+panel) | sqMessage }}\n                    </a>\n                </li>\n            </ul>\n        </div>\n\n        <!-- Expanded panel different subpanels available -->\n        <!-- Extracts/Pages panel -->\n        <sq-preview-extracts-panel *ngIf=\"subpanel === 'extracts' && !pagesResults && !collapsedPanel\"\n            class=\"d-flex flex-column flex-grow-1\" [previewData]=\"previewData\" [downloadUrl]=\"currentUrl\"\n            [previewDocument]=\"previewDocument\" [style]=\"isDark()? 'dark' : 'light'\">\n        </sq-preview-extracts-panel>\n\n        <sq-preview-pages-panel *ngIf=\"subpanel === 'extracts' && pagesResults && !collapsedPanel\"\n            class=\"overflow-auto\"\n            [previewData]=\"previewData\"\n            [previewDocument]=\"previewDocument\"\n            [pages]=\"pagesResults\"\n            [style]=\"isDark()? 'dark' : 'light'\"\n            (gotopage)=\"gotoPage($event)\">\n        </sq-preview-pages-panel>\n\n        <div *ngIf=\"subpanel !== 'extracts' && !collapsedPanel\" class=\"overflow-auto\">\n\n            <!-- Legacy preview highlights -->\n            <sq-preview-highlights *ngIf=\"subpanel === 'highlights' && !!previewData\" class=\"my-2\"\n                [previewData]=\"previewData\" [previewDocument]=\"previewDocument\">\n            </sq-preview-highlights>\n\n            <!-- Entities panel -->\n            <div *ngIf=\"subpanel === 'entities'\" class=\"p-2\">\n                <sq-preview-entity-panel\n                    [previewData]=\"previewData\"\n                    [previewDocument]=\"previewDocument\"\n                    [style]=\"isDark()? 'dark' : 'light'\"\n                    [startUnchecked]=\"entitiesStartUnchecked\"\n                    (facetChecked)=\"entitiesChecked($event)\">\n                </sq-preview-entity-panel>\n            </div>\n        </div>\n\n    </div>\n\n    <!-- Right panel (iframe with preview HTML) -->\n    <div class=\"d-flex flex-shrink-1 flex-grow-1 flex-column preview-bg\">\n        <div *ngIf=\"previewData\" class=\"p-2\">\n            <h1>{{ previewData?.record.title }}</h1>\n            <!-- Link to the original document -->\n            <a title=\"Original document\" target=\"_blank\" href=\"{{previewData?.record.url1}}\" (click)=\"openOriginalDoc()\">{{previewData?.record.url1}}</a>\n        </div>\n        <div class=\"flex-grow-1 flex-shrink-1 overflow-hidden\">\n            <sq-preview-document-iframe \n                [scalingFactor]=\"scaleFactor\"\n                [downloadUrl]=\"downloadUrl\"\n                [sandbox]=\"sandbox\"\n                (onPreviewReady)=\"onPreviewReady($event)\"\n                (pageChange)=\"onPreviewPageChange($event)\">\n\n                <!-- Tooltip injected in the preview -->\n                <sq-preview-tooltip #tooltip [previewDocument]=\"previewDocument\" [previewData]=\"previewData\" \n                    [entityActions]=\"tooltipEntityActions\" [selectedTextActions]=\"tooltipTextActions\"\n                    [scalingFactor]=\"scaleFactor\">\n                </sq-preview-tooltip>\n\n            </sq-preview-document-iframe>\n        </div>\n    </div>\n\n</div>\n\n<ng-template #nav>\n    <div class=\"align-self-stretch d-flex justify-content-between align-items-center p-1\" [ngClass]=\"{'flex-column flex-grow-1': collapsedPanel}\">\n        <div [ngClass]=\"{'btn-group': !collapsedPanel, 'btn-group-vertical':collapsedPanel}\">\n            \n            <!-- Toggles the left panel collapsed/expanded state -->\n            <button class=\"btn btn-lg btn-primary\" [placement]=\"leftPanelTooltipPlacement()\" sqTooltip=\"Expand\" (click)=\"collapsedPanel = !collapsedPanel\">\n                <i class=\"fas fa-bars\"></i>\n            </button>\n\n            <!-- Back button (go back to /search route) -->\n            <button class=\"btn btn-lg btn-light\" [placement]=\"leftPanelTooltipPlacement()\" sqTooltip=\"Back\" (click)=\"back()\" *ngIf=\"showBackButton\">\n                <i class=\"fas fa-arrow-left\"></i>\n            </button>\n\n            <!-- Home page link -->\n            <a [routerLink]=\"[homeRoute]\" class=\"btn btn-lg btn-light\" [placement]=\"leftPanelTooltipPlacement()\" sqTooltip=\"Home\" *ngIf=\"homeRoute\">\n                <i class=\"fas fa-home\"></i>\n            </a>\n\n            <button class=\"btn btn-lg btn-light\" [placement]=\"leftPanelTooltipPlacement()\" sqTooltip=\"{{'msg#facet.preview.minimize' | sqMessage }}\" (click)=\"decreaseScaleFactor()\" [disabled]=\"shouldDisableMinimize()\">\n                <i class=\"fas fa-search-minus\"></i>\n            </button>\n            <button class=\"btn btn-lg btn-light\" [placement]=\"leftPanelTooltipPlacement()\" sqTooltip=\"{{'msg#facet.preview.maximize' | sqMessage }}\" (click)=\"increaseScaleFactor()\">\n                <i class=\"fas fa-search-plus\"></i>\n            </button>\n        </div>\n        <img id=\"logo\" src=\"{{ isDark() ? 'assets/sinequa-logo-dark-sm.png' : 'assets/sinequa-logo-light-sm.png'}}\" alt=\"Sinequa logo\" title=\"Sinequa\">\n    </div>\n</ng-template>","import {Component, Input, HostBinding, ViewEncapsulation} from \"@angular/core\";\nimport {ModalButton} from \"@sinequa/core/modal\";\n\n@Component({\n    selector: \"sq-modal\",\n    templateUrl: \"./modal.component.html\",\n    styleUrls: [\"./modal.component.scss\"],\n    encapsulation: ViewEncapsulation.None\n})\nexport class BsModal {\n    @Input() title: string;\n    @Input() buttons: ModalButton[];\n    @Input() showHeader = true;\n    @Input() showFooter = true;\n    @Input() isProcessingState = false;\n    @HostBinding(\"class.sq-modal\") true;\n}\n","<div class=\"modal-dialog\" cdkTrapFocus [cdkTrapFocusAutoCapture]=\"true\">\n    <div class=\"modal-content\">\n        <sq-modal-header *ngIf=\"showHeader\" [title]=\"title\">\n            <ng-content select=\"[header]\"></ng-content>\n        </sq-modal-header>\n        <div class=\"modal-body\">\n            <ng-content></ng-content>\n        </div>\n        <sq-modal-footer *ngIf=\"showFooter\" [buttons]=\"buttons\" [isProcessingState]=\"isProcessingState\">\n            <ng-content select=\"[footer]\"></ng-content>\n        </sq-modal-footer>\n    </div>\n</div>\n","import {Component, Input, OnChanges, SimpleChanges} from \"@angular/core\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {AppService, FormatService} from \"@sinequa/core/app-utils\";\nimport {CCColumn, Results} from \"@sinequa/core/web-services\";\nimport {SelectionService} from \"@sinequa/components/selection\";\nimport {SearchService} from \"@sinequa/components/search\";\nimport {ResultsView} from \"../../results-view.service\";\n\nexport interface GridView extends ResultsView {\n    columns: Column[];\n}\n\nexport interface Column {\n    active: boolean;\n    title: string;\n    field: string;\n    sortable: boolean;\n    renderAsHtml: boolean;\n}\n\nexport interface ColumnData {\n    config: Column;\n    column: CCColumn | undefined;\n    // Sorting data\n    sortIndex?: number;\n    ascending?: boolean;\n    sortIcon?: string;\n    sortIndicator?: string;\n}\n\n@Component({\n    selector: \"sq-results-grid-view\",\n    templateUrl: \"./results-grid-view.html\"\n})\nexport class BsResultsGridView implements OnChanges {\n    @Input() results: Results;\n    @Input() view: GridView;\n    private orderBy: string | undefined;\n    columnsData: ColumnData[] | undefined;\n\n    constructor(\n        public appService: AppService,\n        public searchService: SearchService,\n        public formatService: FormatService,\n        private selectionService: SelectionService) {\n    }\n\n    observeQueryFields() {\n        this.initSorts();\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (!this.columnsData) {\n            if (!!this.view.columns) {\n                this.columnsData = this.view.columns.filter(config => config.active).map(config => ({\n                    config: config,\n                    column: this.appService.getColumn(config.field)\n                }));\n                this.clearSorts();\n            }\n            else {\n                this.columnsData = [];\n            }\n        }\n        if (!!changes[\"query\"]) {\n            this.observeQueryFields();\n        }\n    }\n\n\n    toggleSelectedRecords() {\n        this.selectionService.toggleSelectedRecords();\n    }\n\n    get haveSelectedRecords(){\n        return this.selectionService.haveSelectedRecords;\n    }\n\n    getSortIndicator(columnData: ColumnData): string | undefined {\n        if (columnData.sortIndex === -1) {\n            return undefined;\n        }\n        if (this.maxSortIndex === 0) {\n            return undefined;\n        }\n        switch (columnData.sortIndex || -1 + 1) {\n            case 1: return \"\\u00B9\";\n            case 2: return \"\\u00B2\";\n            case 3: return \"\\u00B3\";\n            case 4: return \"\\u2074\";\n            case 5: return \"\\u2075\";\n            case 6: return \"\\u2076\";\n            case 7: return \"\\u2077\";\n            case 8: return \"\\u2078\";\n            case 9: return \"\\u2079\";\n            default: return \"\\u207A\";\n        }\n    }\n\n    ascendingFirst(column: Column): boolean {\n        //return this.appService.isNumber(column.field);\n        return false;\n    }\n\n    get maxSortIndex(): number {\n        let sortIndex = -1;\n        if (this.columnsData) {\n            for (const columnData of this.columnsData) {\n                if (columnData.sortIndex !== undefined && columnData.sortIndex > sortIndex) {\n                    sortIndex = columnData.sortIndex;\n                }\n            }\n        }\n        return sortIndex;\n    }\n\n    _setSort(columnData: ColumnData, ascending: boolean) {\n        const previousSortIndex = columnData.sortIndex;\n        if (previousSortIndex === -1) {\n            columnData.sortIndex = this.maxSortIndex + 1;\n        }\n        columnData.ascending = ascending;\n        columnData.sortIcon = columnData.ascending ? \"fas fa-caret-up\" : \"fas fa-caret-down\";\n        columnData.sortIndicator = this.getSortIndicator(columnData);\n        if (previousSortIndex === -1) {\n            if (this.columnsData) {\n                for (const columnData1 of this.columnsData) {\n                    columnData1.sortIndicator = this.getSortIndicator(columnData1);\n                }\n            }\n        }\n    }\n\n    _clearSort(columnData: ColumnData) {\n        const previousSortIndex = columnData.sortIndex || -1;\n        columnData.sortIndex = -1;\n        columnData.ascending = false;\n        columnData.sortIcon = \"fas fa-sort\";\n        columnData.sortIndicator = undefined;\n        if (previousSortIndex !== -1) {\n            if (this.columnsData) {\n                for (const columnData1 of this.columnsData) {\n                    if (columnData1.sortIndex !== undefined && columnData1.sortIndex > previousSortIndex) {\n                        columnData1.sortIndex--;\n                    }\n                    columnData1.sortIndicator = this.getSortIndicator(columnData1);\n                }\n            }\n        }\n    }\n\n    clearSorts() {\n        if (this.columnsData) {\n            for (const columnData of this.columnsData) {\n                this._clearSort(columnData);\n            }\n        }\n    }\n\n    isSortable(columnData: ColumnData): boolean {\n        return !!columnData && columnData.config.sortable && this.appService.isSortable(columnData.config.field);\n    }\n\n    initSorts() {\n        if (this.searchService.query.orderBy === this.orderBy) {\n            return;\n        }\n        this.orderBy = this.searchService.query.orderBy;\n        this.clearSorts();\n        if (!!this.orderBy) {\n            const parts = Utils.split(this.orderBy, \",\");\n            for (const part of parts) {\n                const tokens = Utils.split(part, \" \");\n                if (tokens.length > 0) {\n                    const field = tokens[0];\n                    if (this.columnsData) {\n                        const columnData = this.columnsData.find(value => Utils.eqNC(field, value.config.field));\n                        if (columnData && this.isSortable(columnData)) {\n                            this._setSort(columnData, tokens.length > 1 ? Utils.eqNC(tokens[1], \"asc\") : true);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    setSort(columnData: ColumnData) {\n        if (this.isSortable(columnData)) {\n            if (columnData.sortIndex !== -1) {\n                if (this.ascendingFirst(columnData.config)) {\n                    if (columnData.ascending) {\n                        this._setSort(columnData, false);\n                    }\n                    else {\n                        this._clearSort(columnData);\n                    }\n                }\n                else {\n                    if (columnData.ascending) {\n                        this._clearSort(columnData);\n                    }\n                    else {\n                        this._setSort(columnData, true);\n                    }\n                }\n            }\n            else {\n                this._setSort(columnData, this.ascendingFirst(columnData.config));\n            }\n            const orderBy: string[] = [];\n            if (this.columnsData) {\n                for (let sortIndex = 0; ; sortIndex++) {\n                    const columnData = this.columnsData.find(columnData => columnData.sortIndex === sortIndex);\n                    if (!columnData) {\n                        break;\n                    }\n                    if (orderBy.length !== 0) {\n                        orderBy.push(\",\");\n                    }\n                    orderBy.push(columnData.config.field);\n                    if (!columnData.ascending) {\n                        orderBy.push(\" desc\");\n                    }\n                }\n            }\n            if (orderBy.length === 0) {\n                this.searchService.query.orderBy = this.orderBy = undefined;\n            }\n            else {\n                this.searchService.query.orderBy = this.orderBy = orderBy.join(\"\");\n            }\n            this.searchService.search();\n        }\n    }\n\n}","<table class=\"sq-results-grid-view\">\n    <thead>\n        <tr>\n            <th class=\"sq-grid-view-checkbox\">\n                <label class=\"custom-control custom-checkbox\" title=\"{{(haveSelectedRecords ? 'msg#results.resultsGridView.unselectDocuments' : 'msg#results.resultsGridView.selectDocuments') | sqMessage}}\">\n                    <input class=\"custom-control-input\" type=\"checkbox\" [checked]=\"haveSelectedRecords\" (change)=\"toggleSelectedRecords()\">\n                    <span class=\"custom-control-label\">&#8203;</span>\n                </label>            \n            </th>\n            <th *ngFor=\"let columnData of columnsData\" scope=\"col\" [ngClass]=\"{'sq-clickable': isSortable(columnData)}\" (click)=\"setSort(columnData)\">{{columnData.config.title | sqMessage}}{{columnData.sortIndicator}}<span *ngIf=\"isSortable(columnData)\" class=\"{{columnData.sortIcon}}\"></span></th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let record of results.records\">\n            <td class=\"sq-grid-view-checkbox\">\n                <sq-result-selector [record]=\"record\"></sq-result-selector>\n            </td>\n            <ng-container *ngFor=\"let columnData of columnsData; let $index = index\">\n                <td *ngIf=\"columnData.config.renderAsHtml\" [attr.scope]=\"$index === 0 ? 'row' : null\" [innerHTML]=\"record[columnData.config.field] | sqValue:columnData.column\"></td>\n                <td *ngIf=\"!columnData.config.renderAsHtml\" [attr.scope]=\"$index === 0 ? 'row' : null\">{{record[columnData.config.field] | sqValue:columnData.column}}</td>\n            </ng-container>\n        </tr>\n    </tbody>\n</table>","import {Component, Input, Output, EventEmitter} from \"@angular/core\";\nimport {trigger, state, animate, transition, style, AnimationTriggerMetadata} from '@angular/animations';\n\nexport function collapseButtonAnimations(timings: number | string): AnimationTriggerMetadata[] {\n    return [\n        trigger('toggleCollapsed', [\n            state('0', style({transform: 'rotate(0deg)'})),\n            state('1', style({transform: 'rotate(-180deg)'})),\n            transition('0 <=> 1', [\n                animate(timings)\n            ])\n        ]),\n    ];\n}\n\n@Component({\n    selector: \"sq-collapse-button\",\n    templateUrl: \"./collapse-button.component.html\",\n    animations: collapseButtonAnimations(\".15s ease-in-out\")\n})\nexport class CollapseButton {\n    @Input() collapsed: boolean;\n    @Input() icon: string;\n    @Input() text: string;\n    @Output() state: EventEmitter<boolean>;\n\n    constructor() {\n        this.state = new EventEmitter<boolean>();\n        this.collapsed = true;\n    }\n\n    toggleCollapsed() {\n        this.collapsed = !this.collapsed;\n        this.state.emit(this.collapsed);\n    }\n}","<ng-container *ngIf=\"!!icon\"><span class=\"{{icon}}\"></span><ng-container *ngIf=\"!!text\"> </ng-container></ng-container><!--\n--><span *ngIf=\"!!text\" (click)=\"toggleCollapsed()\">{{text | sqMessage}}</span><!--\n--><span class=\"fas fa-chevron-up fa-fw\" role=\"button\" (click)=\"toggleCollapsed()\" [@toggleCollapsed]=\"collapsed\" title=\"{{(collapsed ? 'msg#collapseButton.expand' : 'msg#collapseButton.collapse') | sqMessage}}\"></span>","import {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {BaseModule} from \"@sinequa/core/base\";\n\nimport {LoadComponentDirective} from \"./load-component.directive\";\nimport {LOAD_COMPONENT_MODULE_PROVIDERS} from \"./module.providers\";\n\n/**\n * This module provides functionality for the dynamic loading of components based on the\n * techniques described in the [angular documentation]{@link https://angular.io/guide/dynamic-component-loader}\n */\n// @dynamic\n@NgModule({\n    imports: [\n        CommonModule,\n        BaseModule\n    ],\n    declarations: [\n        LoadComponentDirective\n    ],\n    exports: [\n        LoadComponentDirective\n    ],\n    providers: [\n        ...LOAD_COMPONENT_MODULE_PROVIDERS\n    ]\n})\nexport class LoadComponentModule {\n}\n","export * from \"./public-api\";","export default {\n    \"baskets\": {\n        \"baskets\": \"Ablagekörbe\",\n        \"addToBasket\": \"Zum Ablagekorb hinzufügen\",\n        \"removeFromBasket\": \"Aus dem Ablagekorb entfernen\",\n        \"removeFromAllBaskets\": \"Von allen Ablagekörben entfernen\",\n        \"removeFromAllBasketsConfirmation\": \"Möchten Sie dieses Eregbnis wirklich von diesen Ablagekörben entfernen: {baskets}?\",\n        \"basketAlreadyExists\": \"Es existiert bereits ein Ablagekorb mit diesem Namen. Möchten Sie ihn ersetzen?\",\n        \"noBasket\": \"Sie haben noch kein Dokument zu einem Ablagekorb hinzugefügt...\",\n        \"createBasket\": \"Ablagekorb erstellen\",\n        \"manageBaskets\": \"Ablagekörbe verwalten\",\n        \"delete\": \"Diesen Ablagekorb löschen\"\n    },\n\n    \"editBasket\": {\n        \"title\": \"Ablagekorb\",\n        \"name\": \"Name\"\n    },\n\n    \"manageBaskets\": {\n        \"title\": \"Ablagekörbe verwalten\",\n        \"edit\": \"Bearbeiten\",\n        \"reorder\": \"Neu sortieren\",\n        \"remove\": \"Entfernen\",\n        \"removeAll\": \"Alle entfernen\",\n        \"name\": \"Name\"\n    },\n\n    \"selectBasket\": {\n        \"title\": \"Ablagekorb auswählen\",\n        \"newBasket\": \"Neuer Ablagekorb...\"\n    },\n\n};\n","export * from \"./bootstrap/index\";\nexport * from \"./messages/index\";","export default {\n    \"facet\": {\n        \"showFacetTextView\": \"Afficher le texte\",\n        \"showFacetChartView\": \"Afficher le graphique\",\n        \"itemExclude\": \"Exclure\",\n        \"applyFilters\": \"{selections, plural, one {Appliquer le filtre} other {Appliquer les filtres}}\",\n        \"clearFilters\": \"{selected, plural, one {Effacer le filtre} other {Effacer les filtres}}\",\n        \"loadMore\": \"Charger plus\",\n        \"showMore\": \"Afficher plus\",\n        \"showLess\": \"Afficher moins\",\n        \"displayed\": \"Affiché\",\n        \"removeAll\": \"Supprimer tout\",\n        \"searchPlaceholder\": \"Rechercher...\",\n        \"itemSelect\": \"Sélectionner cette valeur\",\n        \"itemUnselect\": \"Désélectionner cette valeur\",\n        \"filterItem\": \"Garder les documents qui contiennent {terme}\",\n        \"filterItems\" : \"Garder les documents qui contiennent n'importe lequel de ces termes\",\n        \"filterItemsAnd\": \"Garder les documents qui contiennent tous ces termes\",\n        \"excludeItems\" : \"Exclure les documents contenant un de ces termes\",\n        \"clearSelects\" : \"Enlever les filtres\",\n        \"searchItems\" : \"Rechercher une valeur dans cette liste\",\n        \"searchNoResult\": \"Pas de résultat\",\n        \"openItem\": \"Ouvrir\",\n        \"closeItem\": \"Refermer\",\n        \"authors\": {\n            \"title\": \"Auteurs\"\n        },\n        \"concepts\": {\n            \"title\": \"Concepts\"\n        },\n        \"company\": {\n            \"title\": \"Sociétés\"\n        },\n        \"docformat\": {\n            \"title\": \"Formats\"\n        },\n        \"doctype\": {\n            \"title\": \"Types de document\"\n        },\n        \"documentlanguages\": {\n            \"title\": \"Langues\"\n        },\n        \"fileext\": {\n            \"title\": \"Extensions de fichiers\"\n        },\n        \"filename\": {\n            \"title\": \"Noms de fichiers\"\n        },\n        \"geo\": {\n            \"title\": \"Lieux\"\n        },\n        \"matchingpartnames\": {\n            \"title\": \"Partnames\"\n        },\n        \"modified\": {\n            \"title\": \"Dates\"\n        },\n        \"person\": {\n            \"title\": \"Personnes\"\n        },\n        \"refine\": {\n            \"title\": \"Affiner la recherche\",\n            \"input\": {\n                \"label\": \"Affiner\",\n                \"buttonTitle\": \"Affiner\",\n                \"placeholder\": \"Affiner par ...\"\n            }\n        },\n        \"size\": {\n            \"title\": \"Tailles\"\n        },\n        \"tagcloud\": {\n            \"title\": \"Nuage de mots\"\n        },\n        \"title\": {\n            \"title\": \"Titres\"\n        },\n        \"treepath\": {\n            \"title\": \"Sources\"\n        },\n        \"recentQueries\": {\n            \"title\": \"Requêtes récentes\"\n        },\n        \"recentQueriesPublic\": {\n            \"title\": \"Requêtes publiques récentes\"\n        },\n        \"mySearch\": {\n            \"title\": \"Ma recherche\",\n            \"itemRemove\": \"Supprimer\"\n        },\n        \"search\": {\n            \"label\": \"Rechercher\",\n            \"buttonTitle\": \"Rechercher\",\n            \"placeholder\": \"Rechercher ...\",\n            \"showSearchForm\": \"Afficher le formulaire de recherche\",\n            \"hideSearchForm\": \"Masquer le formulaire de recherche\"\n        },\n        \"range\": {\n            \"year\": \"{date, date, sqYear}\",\n            \"monthYear\": \"{date, date, sqMonthYear}\",\n            \"weekYear\": \"s{week, number, sqWeek} {weekYear, number, sqYear}\",\n            \"apply\": \"Appliquer\",\n            \"clear\": \"Effacer\",\n            \"unavailable\": \"Aucune plage disponible\"\n        },\n\n        \"filters\":{\n            \"add\":\"Ajouter la facette\",\n            \"addAll\": \"Ajouter toutes les facettes\",\n            \"remove\":\"Retirer la facette\",\n            \"removeAll\": \"Retirer toutes les facettes\",\n            \"clear\":\"Réinitialiser\",\n            \"moreFilters\":\"\",\n            \"showFilters\":\"Montrer les filtres\",\n            \"hideFilters\":\"Cacher les filtres\",\n\n            \"back\": \"Retour aux filtres\",\n            \"selectedFilters\": \"Ce filtre est utilisé dans la recherche actuelle\",\n\n            \"customizeFacets\": \"Sélectionnez les facettes à montrer ou cacher\"\n        },\n\n        \"selectedValue\": \"Cette valeur est sélectionnée dans la recherche actuelle\",\n        \"previous\": \"Précédent\",\n        \"next\": \"Suivant\",\n        \"filterItemCountTooltip\": \"{count} valeurs possibles pour ce filtre\",\n    },\n\n    \"facetCard\": {\n        \"expand\": \"Déplier\",\n        \"collapse\": \"Replier\",\n        \"enlarge\": \"Agrandir\",\n        \"reduce\": \"Réduire\",\n        \"openSettings\": \"Ouvrir les paramètres\",\n        \"saveSettings\": \"Enregistrer les paramètres\"\n    }\n};\n","export * from \"./action\";\nexport * from \"./bootstrap/index\";\n","import {Component, Input, OnInit, OnDestroy} from \"@angular/core\";\nimport {FormGroup} from \"@angular/forms\";\nimport {AppService, ValueItem} from \"@sinequa/core/app-utils\";\nimport {CCColumn, Aggregation, AggregationItem} from \"@sinequa/core/web-services\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {Subscription} from \"rxjs\";\nimport {FirstPageService} from \"@sinequa/components/search\";\n\n@Component({\n    selector: \"sq-advanced-form-select\",\n    templateUrl: \"./advanced-form-select.html\",\n})\nexport class BsAdvancedFormSelect implements OnInit, OnDestroy {\n    @Input() form: FormGroup;\n    @Input() field: string;\n    /** Optional label: the component looks for the label in the Query web service configuration for the given field */\n    @Input() label: string;\n    /** Whether the component supports multiple selection */\n    @Input() multiple: boolean;\n    /** Optional input. The component automatically looks for an aggregation with the name equal to the field */\n    @Input() aggregation: string;\n\n    column: CCColumn | undefined;\n    items: ValueItem[];\n\n    private _valueChangesSubscription: Subscription;\n\n    constructor(\n        private appService: AppService,\n        private firstPageService: FirstPageService) {\n    }\n\n    ngOnInit() {\n        const control = this.form.get(this.field);\n        if(!control) {\n            throw new Error(\"No control in search-form named \"+this.field);\n        }\n        this.column = this.appService.getColumn(this.field);\n        this.items = this.getItems();\n        if(this.label === undefined) {\n            if(this.multiple) {\n                this.label = this.appService.getPluralLabel(this.field);\n            }\n            else {\n                this.label = this.appService.getLabel(this.field);\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._valueChangesSubscription) {\n            this._valueChangesSubscription.unsubscribe();\n        }\n    }\n\n    private getItems(): ValueItem[] {\n        const firstPage = this.firstPageService.firstPage;\n        if (firstPage) {\n            // Find aggregation for field\n            const condition = (this.aggregation) ?\n                (aggr: Aggregation) => Utils.eqNC(aggr.name, this.aggregation) :\n                (aggr: Aggregation) => this.column && Utils.eqNC(aggr.column, this.column.name);\n            const aggregation = firstPage.aggregations.find(condition);\n\n            if (aggregation && aggregation.items) {\n                return aggregation.items\n                .filter(\n                    (item) => !Utils.isArray(item.value) && !!item.value\n                )\n                .map(\n                    (item: AggregationItem) => (\n                        {\n                            value: item.value,\n                            display: item.display ? item.display : item.value.toString()\n                        }\n                    )\n                );\n            }\n        }\n        return [];\n    }\n}\n","<div class=\"form-group\" [formGroup]=\"form\">\n    <label for=\"{{field}}\">{{label | sqMessage}}</label>\n    <sq-select\n        [items]=\"items\"\n        [multiple]=\"multiple\"\n        [formControlName]=\"field\"\n        [id]=\"field\"\n        sqAdvancedFormValidation\n        [field]=\"field\"\n        [validationForm]=\"form\">\n    </sq-select>\n</div>\n","export default {\n    \"notification\": {\n        \"title\": \"Notifications\",\n        \"showNotifications\": \"Show notifications\",\n        \"hideNotifications\": \"Hide notifications\",\n        \"clearNotifications\": \"Clear notifications\",\n    }\n};\n","import { Component, Input, Output, OnChanges, SimpleChanges, EventEmitter, ViewChildren, ElementRef, QueryList } from \"@angular/core\";\nimport { PreviewDocument } from \"../../preview-document\";\nimport { PreviewService } from \"../../preview.service\";\nimport { PreviewData, Results, Record } from \"@sinequa/core/web-services\";\n\n@Component({\n    selector: 'sq-preview-pages-panel',\n    templateUrl: './preview-pages-panel.component.html'\n})\nexport class BsPreviewPagesPanelComponent implements OnChanges {\n    @Input() pages: Results;\n    @Input() previewData: PreviewData;\n    @Input() previewDocument: PreviewDocument;\n    @Input() style: \"light\"|\"dark\" = \"light\";\n    @Output() gotopage = new EventEmitter<number>();\n\n    @ViewChildren('currentPageEl', {read: ElementRef}) currentPageEl: QueryList<ElementRef>;\n\n    sortedPages: Record[];\n\n    containerid: string;\n    currentPage: number;\n\n    hasFirst: boolean;\n    hasPrevious: boolean;\n    hasNext: boolean;\n\n    _pendingPreviewDocument: boolean = true;\n    _pendingPages: boolean = true;\n    _pendingPage?: number;\n\n    constructor(public previewService: PreviewService) {\n\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n\n        // PreviewData should change first, which triggers the new previewDocument and pages\n        if(changes[\"previewData\"]) {\n            this._pendingPreviewDocument = true;\n            this._pendingPages = true;\n        }\n\n        if(changes[\"previewDocument\"]) {\n            this._pendingPreviewDocument = false;\n        }\n\n        if(changes[\"pages\"]) {\n            this._pendingPages = false;\n        }\n\n        // ngOnChanges is called multiple times due to async updates of the Inputs()\n        // The _pending variables let us wait for all these inputs to come in before apply the changes\n        if(!this._pendingPreviewDocument && !this._pendingPages) {\n            this._pendingPage = undefined;\n\n            if(this.previewData) {\n                this.currentPage = this.previewData.record.$page!;\n                this.containerid = this.previewData.record.containerid!;\n            }\n    \n            if(this.pages && this.currentPage && this.containerid) {\n\n                this.sortedPages = this.pages.records;\n    \n                // Parse the page number from each record id\n                this.sortedPages.forEach(record => {\n                    this.previewService.getPageNumber(record);\n                    if(!record.$page) {\n                        throw new Error(\"Record is not page... \"+ record.id);\n                    }\n                });\n    \n                // Insert current page if missing (possible when navigating to previous/next page)\n                if(!this.sortedPages.find(page => page.$page === this.currentPage)) {\n                    this.sortedPages.push(this.previewData.record);\n                }\n    \n                // Sort the pages\n                this.sortedPages.sort((a,b) => a.$page! - b.$page!);\n    \n                // Update current page neighbours\n                this.hasFirst = !!this.sortedPages.find(page => page.$page! === 1 || this.currentPage === 2 ); // include 2nd page, because is covered by the previous page below\n                this.hasPrevious = this.currentPage === 1 || !!this.sortedPages.find(page => page.$page === this.currentPage - 1);\n                this.hasNext = !!this.sortedPages.find(page => page.$page === this.currentPage + 1);\n            }\n\n            // SetTimeout is needed to scroll only after the DOM changes\n            setTimeout(() => {\n                this.currentPageEl?.first?.nativeElement.scrollIntoView({behaviour: \"smooth\", block: \"start\"});\n            });\n        }\n\n    }\n\n    selectPage(page: number) {\n        this.gotopage.next(page);\n        this._pendingPage = page;\n        return false;\n    }\n\n    selectPrevious() {\n        return this.selectPage(this.currentPage-1);\n    }\n\n    selectNext() {\n        return this.selectPage(this.currentPage+1);\n    }\n}","<div class=\"list-group\" *ngIf=\"sortedPages\">\n\n    <!-- First page link if needed-->\n    <a href=\"#\" class=\"card my-1 list-group-item-action\"\n        (click)=\"selectPage(1)\"\n        *ngIf=\"!hasFirst\">\n        <div class=\"card-body\">\n            <span class=\"small text-muted\">{{ 'msg#preview.page' | sqMessage:{values:{page: 1} } }}</span>\n            <div class=\"text-center my-3\" *ngIf=\"_pendingPage === 1\">\n                <div class=\"spinner-grow\" role=\"status\"></div>\n            </div>\n        </div>\n    </a>\n\n    <!-- For each page in the document -->\n    <ng-container *ngFor=\"let page of sortedPages\">\n\n        <!-- Link to page other than current -->\n        <a href=\"#\" class=\"card my-1 list-group-item-action\"\n            (click)=\"selectPage(page.$page)\"\n            *ngIf=\"currentPage !== page.$page\">\n            <div class=\"card-body\" >\n                <span class=\"small text-muted\">{{ 'msg#preview.page' | sqMessage:{values:{page: page.$page} } }}</span>\n                <p [innerHTML]=\"page.relevantExtracts\" *ngIf=\"_pendingPage !== page.$page\"></p>\n                <div class=\"text-center my-3\" *ngIf=\"_pendingPage === page.$page\">\n                    <div class=\"spinner-grow\" role=\"status\"></div>\n                </div>\n            </div>\n        </a>\n\n        <!-- For current page we display extracts -->\n        <ng-container *ngIf=\"currentPage === page.$page\">\n            <a href=\"#\" class=\"card my-1 list-group-item-action\"\n                *ngIf=\"!hasPrevious\"\n                (click)=\"selectPrevious()\">\n                <div class=\"card-body\">\n                    <span class=\"small text-muted\">{{ 'msg#preview.page' | sqMessage:{values:{page: currentPage - 1} } }} ({{ 'msg#preview.previousDocument' | sqMessage }})</span>\n                    <div class=\"text-center my-3\" *ngIf=\"_pendingPage === currentPage - 1\">\n                        <div class=\"spinner-grow\" role=\"status\"></div>\n                    </div>\n                </div>\n            </a>\n            <div class=\"card my-1\" #currentPageEl>\n                <div class=\"card-body m-0\">\n                    <span class=\"small font-weight-bold mb-1\">{{ 'msg#preview.page' | sqMessage:{values:{page: currentPage} } }} ({{ 'msg#preview.current' | sqMessage }})</span>\n                    <sq-preview-extracts-panel \n                        *ngIf=\"!_pendingPreviewDocument\" \n                        class=\"d-flex flex-column\"\n                        style=\"height: 300px;\"\n                        [previewData]=\"previewData\"\n                        [previewDocument]=\"previewDocument\"\n                        [style]=\"style\">\n                    </sq-preview-extracts-panel>\n                </div>\n            </div>\n            <a href=\"#\" class=\"card my-1 list-group-item-action\"\n                *ngIf=\"!hasNext\"\n                (click)=\"selectNext()\">\n                <div class=\"card-body\">\n                    <span class=\"small text-muted\">{{ 'msg#preview.page' | sqMessage:{values:{page: currentPage + 1} } }} ({{ 'msg#preview.nextDocument' | sqMessage }})</span>\n                    <div class=\"text-center my-3\" *ngIf=\"_pendingPage === currentPage + 1\">\n                        <div class=\"spinner-grow\" role=\"status\"></div>\n                    </div>\n                </div>\n            </a>\n        </ng-container>\n\n    </ng-container>\n</div>","import {Injectable, Inject, InjectionToken, Optional} from \"@angular/core\";\nimport {\n    HttpInterceptor, HttpRequest, HttpHandler,\n    HttpEvent, HttpErrorResponse, HttpParams, HttpResponse\n} from \"@angular/common/http\";\nimport {from, Observable, throwError} from \"rxjs\";\nimport {catchError, map, switchMap} from \"rxjs/operators\";\nimport {Utils, SqError, SqErrorCode} from \"@sinequa/core/base\";\nimport {START_CONFIG, StartConfig} from \"@sinequa/core/web-services\";\nimport {NotificationsService} from \"@sinequa/core/notification\";\nimport {LoginService} from \"./login.service\";\nimport {AuthenticationService} from \"./authentication.service\";\n\nexport type HttpRequestInitializer = (request: HttpRequest<any>) => boolean;\nexport const HTTP_REQUEST_INITIALIZERS = new InjectionToken<HttpRequestInitializer[]>(\"HTTP_REQUEST_INITIALIZERS\");\n\ntype Options = {noAutoAuthentication: boolean, noUserOverride: boolean, hadCredentials: boolean, userOverrideActive: boolean};\n\n/**\n * An `HttpInterceptor` to handle `HTTP 401 unauthorized` error responses by calling\n * [LoginService.getCredentials]{@link LoginService#getCredentials}. It also handles\n * the `sinequa-jwt-refresh` header set when auto refreshing of JWT is configured in\n * the Sinequa administration console.\n */\n@Injectable({\n    providedIn: \"root\"\n})\nexport class LoginInterceptor implements HttpInterceptor {\n\n    constructor(\n        @Inject(START_CONFIG) private startConfig: StartConfig,\n        @Optional() @Inject(HTTP_REQUEST_INITIALIZERS) private requestInitializers: HttpRequestInitializer[],\n        private notificationsService: NotificationsService,\n        private loginService: LoginService,\n        private authService: AuthenticationService) {}\n\n    private processRequestInitializers(request: HttpRequest<any>) {\n        if (this.requestInitializers) {\n            for (const requestInitializer of this.requestInitializers) {\n                if (!requestInitializer(request)) {\n                    break;\n                }\n            }\n        }\n    }\n\n    private isJsonable(obj): boolean {\n        return (Utils.isObject(obj) || Utils.isArray(obj)) && !Utils.isArrayBuffer(obj) && !Utils.isBlob(obj) &&\n            !Utils.isString(obj) && !(obj instanceof HttpParams);\n    }\n\n    private shouldIntercept(url: string): boolean {\n        return Utils.startsWith(url, this.startConfig.apiPath!);\n    }\n\n    private notifyError(error: any) {\n        let message;\n        const title = \"msg#error.serverError\";\n        if (error instanceof HttpErrorResponse) {\n            const response = error;\n            try {\n                let data = response.error;\n                if (Utils.isString(data)) {\n                    try {\n                        data = JSON.parse(data);\n                    }\n                    catch (exception) {\n                    }\n                }\n                if (data && data.errorMessage) {\n                    message = data.errorMessage;\n                    if (data.errorCodeText) {\n                        message = `${message} (${data.errorCodeText})`;\n                    }\n                    else if (data.errorCode) {\n                        message = `${message} (${data.errorCode})`;\n                    }\n                }\n            }\n            catch (exception) {\n            }\n            if (!message) {\n                if (response.status === 200) {\n                    message = \"msg#error.responseLoadFailure\";\n                }\n                else if (response.statusText) {\n                    message = `${response.statusText} (${response.status})`;\n                }\n                else {\n                    message = `HTTP error: ${response.status}`;\n                }\n            }\n        }\n        else if (SqError.is(error)) {\n            message = error.message;\n        }\n        else {\n            message = (error + \"\") || \"msg#error.unknownError\";\n        }\n        this.notificationsService.error(message, undefined, title);\n    }\n\n    private getCredentials(response: HttpErrorResponse, acceptCurrent: boolean): Promise<void> {\n        return this.loginService.getCredentials(response, acceptCurrent)\n            .catch((error) => {\n                if (SqError.is(error, SqErrorCode.processedCredentialsError)) {\n                    return this.getCredentials(response, acceptCurrent);\n                }\n                throw error;\n            });\n    }\n\n    /**\n     * Handles `HTTP 401 unauthorized errors responses by calling\n     * [LoginService.getCredentials]{@link LoginService#getCredentials}. It also handles auto\n     * refreshing of JWT by processing the `sinequa-jwt-refresh` header. The JWT cookie itself\n     * is updated by a `Set-Cookie` header in the response. There are a number of flags that\n     * can be set in the request parameters which will be removed before the request is actually\n     * sent:\n     * * `noAutoAuthentication` - set to bypass the `HTTP 401` handling\n     * * `noUserOverride` - set to not add the current user override to the request\n     * * `noNotify` - set to not notify errors using the {@link NotificationService}\n     *\n     * @param request The intercepted request\n     * @param next The next interceptor in the chain\n     */\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        if (!this.shouldIntercept(request.url) || request.params.has(\"noIntercept\")) {\n            return next.handle(request);\n        }\n\n        let config = {headers: request.headers, params: request.params};\n\n        const options: Options = {\n            noAutoAuthentication: Utils.isTrue(config.params.get(\"noAutoAuthentication\")) || false,\n            noUserOverride: Utils.isTrue(config.params.get(\"noUserOverride\")) || false,\n            hadCredentials: this.authService.haveCredentials,\n            userOverrideActive: false\n        }\n\n        const noNotify = Utils.isTrue(config.params.get(\"noNotify\")) || false;\n\n        config.params = config.params.delete(\"noAutoAuthentication\");\n        config.params = config.params.delete(\"noUserOverride\");\n        config.params = config.params.delete(\"noNotify\");\n\n        config = this.authService.addAuthentication(config);\n\n        if (this.authService.userOverrideActive && !options.noUserOverride) {\n            options.userOverrideActive = true;\n            config.headers = this.authService.addUserOverride(config);\n        }\n\n        config.headers = config.headers.set(\"sinequa-force-camel-case\", \"true\");\n\n        if (this.isJsonable(request.body)) {\n            this.processRequestInitializers(request);\n        }\n\n        this.notificationsService.enter(\"network\");\n        \n        const _request = request.clone({\n            headers: config.headers,\n            params: config.params,\n            body: request.body,\n            withCredentials: true\n        });\n\n        return next.handle(_request).pipe(\n            catchError((error, caught) => {\n                this.notificationsService.leave(\"network\");\n                if (error instanceof HttpErrorResponse) {\n                    switch (error.status) {\n                        case 401: {\n                            return this.handle401Error(error, _request, next, options, caught);\n                        }\n                    }\n                }\n                if (!noNotify) {\n                    this.notifyError(error);\n                }\n                return throwError(error);\n            }),\n            map((event) => {\n                if (event instanceof HttpResponse) {\n                    this.notificationsService.leave(\"network\");\n                    this.authService.updateAuthentication(event);\n                }\n                return event;\n            })\n        );\n    }\n\n    private handle401Error(err: HttpErrorResponse, req: HttpRequest<any>, next: HttpHandler, options: Options, caught: Observable<HttpEvent<any>>): Observable<HttpEvent<any>> {\n        if (!options.noAutoAuthentication) {\n            if (options.userOverrideActive) {\n                if (this.authService.userOverrideActive) {\n                    this.authService.deactivateUserOverride();\n                    this.authService.userOverrideFailed = true;\n                    this.notificationsService.error(\"msg#error.userOverrideFailure\");\n                }\n                return throwError(err);\n            }\n\n            return from(this.getCredentials(err, !options.hadCredentials))\n                .pipe(\n                    switchMap(value => {\n                        const {headers} = this.authService.addAuthentication(req);\n                        return next.handle(req.clone({headers}));\n                    }),\n                    catchError(err => \n                        // in case of an Http error, 'caught' must be returned to be catched by the interceptor\n                        err instanceof HttpErrorResponse ? caught : throwError(err)\n                    ));\n        }\n\n        return throwError(err);\n    }\n}\n","const APP_UTILS_MODULE_PROVIDERS = [];\n\nexport {APP_UTILS_MODULE_PROVIDERS};\n","export default {\n    \"search\": {\n        \"emptySearchNotification\": \"Bitte geben Sie einige Suchbegriffe ein, um eine Suche durchzuführen\",\n        \"alreadyFiltered\": \"bereits ausgewählt\"\n    },\n\n    \"breadcrumbs\": {\n        \"emptySearch\": \"<Suche ohne Suchbegriff>\",\n        \"itemRemove\": \"Entfernen\"\n    },\n\n    \"didYouMean\": {\n        \"dymonlyBeforeCorrected\": \"Meinten Sie: \",\n        \"dymonlyAfterCorrected\": \"?\",\n        \"correctBeforeCorrected\": \"Zeige Ergebnisse für [\",\n        \"correctBeforeOriginal\": \"]. Zeige stattdessen Ergebnisse für [\",\n        \"correctAfterOriginal\": \"]\",\n        \"smartBeforeOriginal\": \"Zeige Ergebnisse für [\",\n        \"smartBeforeCorrected\": \"] und [\",\n        \"smartAfterCorrected\": \"]\"\n    },\n\n    \"pageSizeSelector\": {\n        \"pageSizeChoice\": \"{size, number} pro Seite\",\n        \"defaultPageSize\": \"Standard ({size, number})\",\n        \"defaultPageSizeChoice\": \"{size, number} pro Seite (standard)\"\n    },\n\n    \"pager\": {\n        \"pageNumberTitle\": \"Seite {page, number}\",\n        \"firstPage\": \"Erste Seite\",\n        \"nextPage\": \"Nächste Seite\",\n        \"previousPage\": \"Vorherige Seite\",\n        \"lastPage\": \"Letzte Seite\"\n    },\n\n    \"sortSelector\": {\n        \"sortByTitle\": \"Sortieren nach: {text}\",\n        \"sortOther\": \"<Andere>\"\n    },\n\n    \"sort\": {\n        \"relevance\": \"Relevanz\",\n        \"date\": \"Datum\",\n        \"filename\": \"Dateiname\",\n        \"title\": \"Titel\"\n    },\n\n    \"queryIntent\": {\n        \"externalServiceTimeoutError\": \"Diese Ergebnisseite ist aufgrund eines internen Zeitlimits unvollständig. Bitte versuchen Sie es später noch einmal.\"\n    }\n};\n","import {\n    Component,\n    OnInit,\n    OnDestroy,\n    Inject,\n    ChangeDetectorRef,\n} from \"@angular/core\";\nimport {\n    FormBuilder,\n    FormGroup,\n    FormControl,\n    Validators,\n} from \"@angular/forms\";\nimport { Subscription } from \"rxjs\";\nimport {\n    ModalButton,\n    ModalResult,\n    MODAL_MODEL,\n    ModalRef,\n} from \"@sinequa/core/modal\";\nimport { Utils } from \"@sinequa/core/base\";\nimport { ModalProperties, LabelsService } from \"../../labels.service\";\n\n@Component({\n    selector: \"sq-rename-label\",\n    templateUrl: \"./rename-label.html\",\n    styles: [\n        `\n            .clickable {\n                cursor: pointer;\n            }\n            .clickable:hover {\n                opacity: 85%;\n            }\n        `,\n    ],\n})\nexport class BsRenameLabel implements OnInit, OnDestroy {\n    public labelControl: FormControl;\n    public form: FormGroup;\n    public formChanges: Subscription;\n    public buttons: ModalButton[];\n    public isProcessing: boolean = false;\n\n    constructor(\n        @Inject(MODAL_MODEL)\n        public model: {\n            oldValues: string[],\n            newValue: string,\n            properties: ModalProperties\n        },\n        private formBuilder: FormBuilder,\n        private labelsService: LabelsService,\n        private changeDetectorRef: ChangeDetectorRef,\n        private modalRef: ModalRef\n    ) {}\n\n    ngOnInit() {\n        this.labelControl = new FormControl(\n            this.model.newValue,\n            Validators.required\n        );\n        this.form = this.formBuilder.group({\n            label: this.labelControl,\n        });\n        this.formChanges = Utils.subscribe(this.form.valueChanges, () => {\n            this.model.newValue = this.labelControl.value;\n        });\n\n        this.buttons = [\n            new ModalButton({\n                text: \"msg#renameLabel.btnRename\",\n                primary: true,\n                validation: this.form,\n                result: ModalResult.Custom,\n                anchor: true,\n                action: () => {\n                    const observable = this.labelsService.renameLabels(\n                        this.model.oldValues,\n                        this.model.newValue,\n                        this.model.properties.public\n                    );\n                    if (observable) {\n                        this.isProcessing = true;\n                        this.changeDetectorRef.markForCheck();\n                        Utils.subscribe(\n                            observable,\n                            () => {},\n                            (error) => {\n                                this.modalRef.close(error);\n                            },\n                            () => {\n                                this.isProcessing = false;\n                                this.modalRef.close(ModalResult.OK);\n                            }\n                        );\n                    }\n                },\n            }),\n            new ModalButton({\n                result: ModalResult.Cancel,\n            }),\n        ];\n    }\n\n    ngOnDestroy() {\n        this.formChanges.unsubscribe();\n    }\n\n    updateLabelsNature(nature: boolean) {\n        this.model.properties.public = nature;\n    }\n\n    onLabelsChanged(values: string[]) {\n        this.model.oldValues = values;\n    }\n}\n","<form name=\"renameLabel\" novalidate [formGroup]=\"form\">\n    <sq-modal [title]=\"'msg#renameLabel.title'\" [buttons]=\"buttons\" [isProcessingState]=\"isProcessing\">\n        <div class=\"form-group sq-form-group\">\n            <div class=\"alert alert-danger\" role=\"alert\">\n                {{'msg#renameLabel.alertText' | sqMessage}}\n            </div>\n            <section>\n                <div *ngFor=\"let item of model.properties.radioButtons\" class=\"custom-control custom-radio custom-control-inline\">\n                    <input type=\"radio\" class=\"custom-control-input\" id=\"{{item.id}}\" name=\"nature\" value=\"{{item.value}}\"\n                        [checked]=\"item.checked\" [disabled]=\"item.disabled\" (click)=\"updateLabelsNature(item.value)\" [ngClass]=\"{'disabled': item.disabled, 'clickable': !item.disabled}\">\n                    <label class=\"custom-control-label\" for=\"{{item.id}}\">{{ item.name | sqMessage }}</label>\n                </div>\n            </section>\n            <b><label for=\"label\">{{'msg#renameLabel.oldLabels' | sqMessage}}</label></b>\n            <sq-labels-autocomplete\n                (labelsUpdate)=\"onLabelsChanged($event)\"\n                [public]=\"model.properties.public\"\n                [disableAutocomplete]=\"model.properties.disableAutocomplete\"\n                [allowNewLabels]=\"model.properties.allowNewLabels\"\n                [allowManagePublicLabels]=\"model.properties.allowManagePublicLabels\">\n            </sq-labels-autocomplete>\n            <b><label for=\"label\">{{'msg#renameLabel.newLabel' | sqMessage}}</label></b>\n            <input\n                [sqValidation]=\"form\"\n                type=\"text\"\n                class=\"form-control\"\n                id=\"label\"\n                formControlName=\"label\"\n                autocomplete=\"off\"\n                spellcheck=\"off\"\n                placeholder=\"{{'msg#renameLabel.newLabel' | sqMessage}}\">\n        </div>\n    </sq-modal>\n</form>\n","export default {\n    \"validation\": {\n        \"min\": \"La valeur doit être supérieure ou égale à {min}\",\n        \"max\": \"La valeur ne peut pas être supérieure à {max}\",\n        \"required\": \"Ce champ est obligatoire\",\n        \"requiredTrue\": \"Ce champ doit être positionné\",\n        \"email\": \"Une adresse e-mail valide est exigée\",\n        \"minLength\": \"La valeur doit comporter au moins {requiredLength, plural, one {# caractère} autre que {# caractère}}\",\n        \"maxLength\": \"La valeur ne peut comporter plus de {requiredLength, plural, one {# caractère} autre que {# caractères}}\",\n        \"pattern\": \"La valeur est invalide\",\n        \"unique\": \"Ce champ doit être unique\",\n        \"integer\": \"La valeur doit être un entier\",\n        \"number\": \"La valeur doit être un nombre\",\n        \"date\": \"\",\n        \"range\": \"La première valeur doit être inférieure ou égale à la seconde\"\n    }\n};\n","import {LocaleData} from \"@sinequa/core/intl\";\nimport d3Format from \"d3-format/locale/en-US.json\";\nimport d3Time from \"d3-time-format/locale/en-US.json\";\nimport {enCore} from \"@sinequa/core\";\nimport appMessages from \"./messages/en.json\";\nimport \"intl/locale-data/jsonp/en-US\"; // Safari\nimport {Utils} from \"@sinequa/core/base\";\nimport {enUtils} from \"@sinequa/components/utils\";\nimport {enAdvanced} from \"@sinequa/components/advanced\";\nimport {enAlerts} from \"@sinequa/components/alerts\";\nimport {enBaskets} from \"@sinequa/components/baskets\";\nimport {enFacet} from \"@sinequa/components/facet\";\nimport {enFeedback} from \"@sinequa/components/feedback\";\nimport {enHeatmap} from \"@sinequa/analytics/heatmap\";\nimport {enLabels} from \"@sinequa/components/labels\";\nimport {enMetadata} from \"@sinequa/components/metadata\";\nimport {enNotification} from \"@sinequa/components/notification\";\nimport {enPreview} from \"@sinequa/components/preview\";\nimport {enResult} from \"@sinequa/components/result\";\nimport {enResultsView} from \"@sinequa/components/results-view\";\nimport {enSavedQueries} from \"@sinequa/components/saved-queries\";\nimport {enSelection} from \"@sinequa/components/selection\";\nimport {enSearch} from \"@sinequa/components/search\";\nimport {enStatusBar} from \"@sinequa/components/status-bar\";\nimport {enUserSettings} from \"@sinequa/components/user-settings\";\n\nconst messages = Utils.merge({}, enCore, enUtils, enAdvanced, enAlerts, enBaskets, enFacet, enFeedback, enHeatmap, enLabels, enMetadata,\n    enNotification, enPreview, enResult, enResultsView, enSavedQueries, enSelection, enSearch, enStatusBar, enUserSettings, appMessages);\n\nexport default <LocaleData>{\n    intl: {\n        locale: \"en-US\"\n    },\n    d3: {\n        locale: \"en-US\",\n        format: d3Format,\n        time: d3Time\n    },\n    messages: messages\n};","import { Component, Input, OnChanges, ChangeDetectorRef } from \"@angular/core\";\nimport { Record, SimilarDocumentsWebService } from \"@sinequa/core/web-services\";\nimport { Query } from \"@sinequa/core/app-utils\";\nimport { PreviewService } from \"../../preview.service\";\n\n@Component({\n    selector: \"sq-similar-documents\",\n    templateUrl: \"./similar-documents.html\"\n})\nexport class BsSimilarDocuments implements OnChanges {\n    @Input() private sourceDocumentId: string;\n    @Input() private query: Query;\n    private documentList: Record[];\n\n    public get documents(): Record[] {\n        return this.documentList;\n    }\n\n    public constructor(\n        private similarDocumentsService: SimilarDocumentsWebService,\n        private previewService: PreviewService,\n        private changeDetectorRef: ChangeDetectorRef) {\n    }\n\n    public ngOnChanges(): void {\n        if (this.sourceDocumentId == null) {\n            this.documentList = [];\n            return;\n        }\n        this.similarDocumentsService.get(this.sourceDocumentId, this.query.name).subscribe(\n            (results) => {\n                this.documentList = results;\n                this.changeDetectorRef.markForCheck();\n            }\n        );\n    }\n\n    public documentIconClass(document: Record): string {\n        const documentFormat = document.fileext;\n        if (!documentFormat) {\n            return \"far fa-file\";\n        }\n        return \"far fa-file sq-icon-file-\" + document.fileext;\n    }\n\n    public onLinkClick(document: Record): void {\n        this.previewService.openNewWindow(document, this.query);\n    }\n}\n","<sq-facet-card *ngIf=\"documents != null && documents.length > 0\" [title]=\"'msg#preview.similarDocumentsTitle'\">\n    <div class=\"card-body collapse show\" id=\"similarDocumentsBody\">\n        <ng-container *ngFor=\"let document of documents\">\n            <ng-container *ngIf=\"document\">\n                <div class=\"similarDocument\" (click)=\"onLinkClick(document)\" >\n                    <div class=\"similarDocumentIcon {{documentIconClass(document)}}\"></div>\n                    <a class=\"similarDocumentTitle\" href=\"javascript:void(0)\" >{{ document.title }}</a>\n                </div>\n            </ng-container>\n        </ng-container>\n    </div>\n</sq-facet-card>","import {Injectable, Inject, OnDestroy} from \"@angular/core\";\nimport {Observable, Subject} from \"rxjs\";\nimport {map} from \"rxjs/operators\";\nimport {Utils, MapOf, PatternMatcher} from \"@sinequa/core/base\";\nimport {IntlService} from \"@sinequa/core/intl\";\nimport {FormatService} from \"./format.service\";\nimport {AppWebService, AuditEvents, START_CONFIG, StartConfig,\n    CCApp, CCQuery, CCLabels, CCAutocomplete, CCColumn, CCIndex, CCWebService, CCConfig, CCList, CCAggregation,\n    EngineType, EngineTypeModifier, MINIMUM_COMPATIBLE_SERVER_API_VERSION} from \"@sinequa/core/web-services\";\nimport {ExprParser, ExprParserOptions, Expr} from \"./query/expr-parser\";\nimport {AppServiceHelpers} from \"./app-service-helpers\";\n\n/**\n * A base event from which all events that can be issued by the {@link AppService} are derived\n */\nexport interface AppEvent {\n    type: \"query-changed\";\n}\n\n/**\n * This event is fired each time the [ccquery]{@link AppService#ccquery} member is modified.\n */\nexport interface QueryChangedEvent extends AppEvent {\n    type: \"query-changed\";\n    current?: CCQuery;\n    previous?: CCQuery;\n}\n\n/**\n * A union of the different events that the {@link AppService} can generate\n */\nexport type AppEvents = QueryChangedEvent;\n\n/**\n * A service to manage the Sinequa SBA configuration\n */\n@Injectable({\n    providedIn: \"root\"\n})\nexport class AppService implements OnDestroy {\n    // Should match AdditionalQueryableColumns in Engine.cs\n    private static extraColumns: MapOf<CCColumn> = {\n        id: AppService.makeColumn(\"id\", \"string\"),\n        text: AppService.makeColumn(\"text\", \"varchar\"),\n        documentlanguages: AppService.makeColumn(\"documentlanguages\", \"csv\", \"ci\"),\n        databasealias: AppService.makeColumn(\"databasealias\", \"varchar\"),\n        globalrelevance: AppService.makeColumn(\"globalrelevance\", \"double\"),\n        matchingpartnames: AppService.makeColumn(\"matchingpartnames\", \"csv\"),\n        matchlocations: AppService.makeColumn(\"matchlocations\", \"csv\"),\n        matchlocationsperpartname: AppService.makeColumn(\"matchlocationsperpartname\", \"varchar\"), // json\n        extracts: AppService.makeColumn(\"extracts\", \"csv\"),\n        extractsperpartname: AppService.makeColumn(\"extractsperpartname\", \"varchar\"), // json\n        extractslocations: AppService.makeColumn(\"extractslocations\", \"csv\"),\n        documentweight: AppService.makeColumn(\"documentweight\", \"varchar\"),\n        groupcount: AppService.makeColumn(\"groupcount\", \"integer\"),\n        accesslists: AppService.makeColumn(\"accesslists\", \"varchar\", undefined, [\"accessLists\"]) // json\n    };\n\n    /**\n     * The app configuration\n     */\n    app?: CCApp;\n    /**\n     * The labels configuration\n     */\n    cclabels?: CCLabels;\n    /**\n     * The autocomplete configuration\n     */\n    ccautocomplete?: CCAutocomplete;\n    /**\n     * The suggest queries configured on the application\n     */\n    suggestQueries: string[];\n    private columnsByQuery: MapOf<MapOf<CCColumn>>;\n    private columnsByIndex: MapOf<MapOf<CCColumn>>;\n    private fieldsByQuery: MapOf<string[]>;\n    private _defaultCCQuery?: CCQuery;\n    private _ccquery?: CCQuery;\n\n    protected _events = new Subject<AppEvents>();\n\n    private static toEngineType(type: string): EngineType {\n        if (!type) {\n            return EngineType.none;\n        }\n        switch (Utils.toLowerCase(type)) {\n            case \"bool\"     :\n            case \"boolean\"  : return EngineType.bool;\n            case \"date\"     : return EngineType.date;\n            case \"datetime\" : return EngineType.dateTime;\n            case \"time\"     : return EngineType.time;\n            case \"unsigned\" : return EngineType.unsigned;\n            case \"integer\"  : return EngineType.integer;\n            case \"float\"    : return EngineType.float;\n            case \"double\"   : return EngineType.double;\n            case \"dates\"    : return EngineType.dates;\n            case \"datetimes\": return EngineType.dateTimes;\n            case \"times\"    : return EngineType.times;\n            case \"varchar\"  : return EngineType.varchar;\n            case \"binary\"   : return EngineType.binary;\n            case \"string\"   : return EngineType.string;\n            case \"csv\"      : return EngineType.csv;\n            default         : return EngineType.none;\n        }\n    }\n\n    private static toEngineTypeModifierSimple(c: string): EngineTypeModifier {\n        switch (c) {\n            case 'a': return EngineTypeModifier.a;\n            case 'c': return EngineTypeModifier.c;\n            case 'd': return EngineTypeModifier.d;\n            case 'e': return EngineTypeModifier.e;\n            case 'i': return EngineTypeModifier.i;\n            case 'l': return EngineTypeModifier.l;\n            case 'n': return EngineTypeModifier.n;\n            case 't': return EngineTypeModifier.t;\n            case 'x': return EngineTypeModifier.x;\n            case 'z': return EngineTypeModifier.z;\n            default : return EngineTypeModifier.none;\n        }\n    }\n\n    private static toEngineTypeModifier(eType: EngineType, typeModifier: string): EngineTypeModifier {\n        let etm = EngineTypeModifier.none;\n        if (typeModifier) {\n            for (const c of typeModifier) {\n                etm |= AppService.toEngineTypeModifierSimple(c);\n            }\n        }\n        return etm;\n    }\n\n    private static makeColumn(name: string, type: string, typeModifier?: string, aliases?: string[]) {\n        const eType = AppService.toEngineType(type);\n        const eTypeModifier = AppService.toEngineTypeModifier(eType, typeModifier || \"\");\n        return {\n            name,\n            type,\n            typeModifier,\n            eType,\n            eTypeModifier,\n            aliases\n        };\n    }\n\n    /**\n     * Return `true` if a `column` is a string\n     */\n    static isString(column: CCColumn | undefined): boolean {\n        return AppServiceHelpers.isString(column);\n    }\n\n    /**\n     * Return `true` if a `column` is a csv\n     */\n    static isCsv(column: CCColumn | undefined): boolean {\n        return AppServiceHelpers.isCsv(column);\n    }\n\n    /**\n     * Return `true` if a `column` is a tree\n     */\n    static isTree(column: CCColumn | undefined): boolean {\n        return AppServiceHelpers.isTree(column);\n    }\n\n    /**\n     * Return `true` if a `column` is an entity\n     */\n    static isEntity(column: CCColumn | undefined): boolean {\n        return AppServiceHelpers.isEntity(column);\n    }\n\n    /**\n     * Return `true` if a `column` is a boolean\n     */\n    static isBoolean(column: CCColumn | undefined): boolean {\n        return AppServiceHelpers.isBoolean(column);\n    }\n\n    /**\n     * Return `true` if a `column` is a date\n     */\n    static isDate(column: CCColumn | undefined): boolean {\n        return AppServiceHelpers.isDate(column);\n    }\n\n    /**\n     * Return `true` if a `column` is a double\n     */\n    static isDouble(column: CCColumn | undefined): boolean {\n        return AppServiceHelpers.isDouble(column);\n    }\n\n    /**\n     * Return `true` if a `column` is an integer\n     */\n    static isInteger(column: CCColumn | undefined): boolean {\n        return AppServiceHelpers.isInteger(column);\n    }\n\n    /**\n     * Return `true` if a `column` is a number (integer or double)\n     */\n    static isNumber(column: CCColumn | undefined): boolean {\n        return AppServiceHelpers.isNumber(column);\n    }\n\n    /**\n     * Return `true` if a `column` is a scalar\n     */\n    static isScalar(column: CCColumn | undefined): boolean {\n        return AppServiceHelpers.isScalar(column);\n    }\n\n    /**\n     * Return `true` if a `column` is sortable\n     */\n    static isSortable(column: CCColumn | undefined): boolean {\n        return AppServiceHelpers.isSortable(column);\n    }\n\n    constructor(\n        @Inject(START_CONFIG) public startConfig: StartConfig,\n        public appWebService: AppWebService,\n        public intlService: IntlService,\n        public formatService: FormatService) {\n\n        if (!this.appName) {\n            console.error(\"Missing app name!\");\n        }\n    }\n\n    ngOnDestroy() {\n        this._events.complete();\n    }\n\n    /**\n     * Return an `Observable` stream of the events that the `AppService` can generate\n     */\n    get events(): Observable<AppEvents> {\n        return this._events;\n    }\n\n    /**\n     * Return the name of the SBA\n     */\n    get appName(): string {\n        return this.startConfig.app!;\n    }\n\n    /**\n     * Return the origin of the Sinequa server\n     */\n    get origin(): string {\n        return this.startConfig.origin!;\n    }\n\n    private initDefaultQuery() {\n        if (!this.app) {\n            console.warn(\"No app configured\");\n            return;\n        }\n        // If not set explicitly, the default query is the first in the list\n        const defaultQueryName = this.app.defaultQueryName || Utils.split(this.app.queryNames, \",\")[0];\n        this._defaultCCQuery = Utils.getField<CCQuery>(this.app.queries, defaultQueryName);\n        if (!this._defaultCCQuery) {\n            console.warn(`Query not configured for app: ${this.appName}`);\n        }\n        this.ccquery = this._defaultCCQuery;\n    }\n\n    private setApp(app: CCApp) {\n        this.app = app;\n        this.verifyServerApiVersionCompatibility(app);\n        this.cclabels = this.getWebService<CCLabels>(this.app.labels);\n        this.ccautocomplete = this.getWebService<CCAutocomplete>(this.app.autocomplete);\n        this.initDefaultQuery();\n        this.makeMaps();\n        this.suggestQueries = Utils.split(this.ccautocomplete ? this.ccautocomplete.suggestQueries : \"\", \",\");\n    }\n\n    private verifyServerApiVersionCompatibility(app: CCApp): void {\n        if (!app) {\n            console.warn('Unexpected empty app configuration.');\n            return;\n        }\n        if (!app.apiVersion) {\n            console.error(`The App config '${app.name}' is not of 'Angular Workspace application' type.`);\n        } else if (app.apiVersion !== MINIMUM_COMPATIBLE_SERVER_API_VERSION) {\n            console.warn(`This SBA is not compatible with the REST API of Sinequa Server.\\n` +\n                `The SBA expects the server API version to be at least '${MINIMUM_COMPATIBLE_SERVER_API_VERSION}',` +\n                ` whereas the server API version is '${app.apiVersion}'.`);\n        }\n    }\n\n    /**\n     * Initialize this service by retrieving the current application\n     * configuration from the Sinequa server and using it to set up the data structures\n     * on which the service relies\n     */\n    init(): Observable<CCApp> {\n        return this.appWebService.get().pipe(\n            map(app => {\n                this.setApp(app);\n                return app;\n            }\n        ));\n    }\n\n    /**\n     * Initialize this service from an application configuration object. This is typically\n     * used for supporting mutiple concurrent queries within the same application by providing\n     * component level instances of this service.\n     */\n    initFromApp(app: CCApp) {\n        if (app) {\n            this.setApp(app);\n        }\n    }\n\n    /**\n     * Refresh the application configuration, reinitializing the service if it has changed\n     *\n     * @param auditEvents Any associated audit events that should be stored\n     */\n    refresh(auditEvents?: AuditEvents): Observable<CCApp | undefined> {\n        const observable = this.appWebService.refresh(this.app ? this.app.versionId : \"\", auditEvents);\n        observable.subscribe(\n            response => {\n                if (!response.upToDate && response.app) {\n                    this.setApp(response.app);\n                }\n                return response;\n            }\n        );\n        return observable.pipe(map((value) => {\n            return this.app;\n        }));\n    }\n\n    /**\n     * Clear the data associated with the service. Typically used when processing a user logout\n     */\n    clear() {\n        this.app = undefined;\n        this.cclabels = undefined;\n        this._defaultCCQuery = undefined;\n        this.ccquery = undefined;\n        this.clearMaps();\n    }\n\n    private indexIsNormal(ccindex: CCIndex): boolean {\n        return !!ccindex && (!ccindex.indexType || Utils.startsWith(ccindex.indexType, \"normal\"));\n    }\n\n    private getIndexForQuery(ccquery: CCQuery): CCIndex | undefined {\n        if (!ccquery) {\n            return undefined;\n        }\n        const indexes = Utils.split(ccquery.searchIndexes, [\",\"]);\n        if (indexes.length === 0) {\n            return this.app ? this.app.indexes._ : undefined;\n        }\n        else {\n            const ccindex = this.getIndex(indexes[0]);\n            if (ccindex && this.indexIsNormal(ccindex)) {\n                return this.app ? this.app.indexes._ : undefined;\n            }\n            return ccindex;\n        }\n    }\n\n    private _makeColumnMapForIndex(columnMap: MapOf<CCColumn>, ccindex: CCIndex) {\n        if (!ccindex || !ccindex.columns) {\n            return;\n        }\n        for (const columnName of Object.keys(ccindex.columns)) {\n            const column = ccindex.columns[columnName];\n            columnMap[Utils.toLowerCase(column.name)] = column;\n            if (column.aliases) {\n                for (const alias of column.aliases) {\n                    columnMap[Utils.toLowerCase(alias)] = column;\n                }\n            }\n        }\n    }\n\n    private _makeColumnMapForQuery(columnMap: MapOf<CCColumn>, ccquery: CCQuery) {\n        if (!ccquery || !ccquery.columnsInfo || !ccquery.columnsInfo.columns) {\n            return;\n        }\n        const ccindex = this.getIndexForQuery(ccquery);\n        if (!ccindex || !ccindex.columns) {\n            return;\n        }\n        for (const columnInfo of ccquery.columnsInfo.columns) {\n            if (columnInfo.name) {\n                const columnName = Utils.toLowerCase(columnInfo.name);\n                let column = ccindex.columns[columnName];\n                if (!column) {\n                    column = AppService.extraColumns[columnName];\n                }\n                if (column) {\n                    // Copy column so we can add the query specific aliases and labels\n                    column = Utils.copy(column);\n                    columnMap[columnName] = column;\n                    if (columnInfo.aliases) {\n                        column.aliases = Utils.split(columnInfo.aliases, [\",\", \";\"]);\n                        for (const alias of column.aliases) {\n                            columnMap[Utils.toLowerCase(alias)] = column;\n                        }\n                    }\n                    // Overwrite labels if defined on the query\n                    if (columnInfo.label) {\n                        column.label = columnInfo.label;\n                    }\n                    if (columnInfo.labelPlural) {\n                        column.labelPlural = columnInfo.labelPlural;\n                    }\n                    if (columnInfo.formatter) {\n                        column.formatter = columnInfo.formatter;\n                    }\n                    if (columnInfo.transforms) {\n                        column.transforms = columnInfo.transforms;\n                    }\n                    if (columnInfo.parser) {\n                        column.parser = columnInfo.parser;\n                    }\n                    if (columnInfo.description) {\n                        column.description = columnInfo.description;\n                    }\n                }\n            }\n        }\n    }\n\n    protected makeMaps() {\n        this.columnsByQuery = {};\n        this.columnsByIndex = {};\n        this.fieldsByQuery = {};\n        if (!this.app) {\n            return;\n        }\n        let columnMap: MapOf<CCColumn>;\n\n        // Queries\n        if (this.app.queries) {\n            for (const queryName of Object.keys(this.app.queries)) {\n                const ccquery = this.app.queries[queryName];\n                if (ccquery) {\n                    ccquery.$columnFieldsPattern = new PatternMatcher(\"included column fields\", \"excluded column fields\");\n                    ccquery.$columnFieldsPattern.includedPattern.setText(ccquery.columnFieldsIncluded);\n                    ccquery.$columnFieldsPattern.excludedPattern.setText(ccquery.columnFieldsExcluded);\n                    ccquery.$partnameFieldsPattern = new PatternMatcher(\"included part name fields\", \"excluded part name fields\");\n                    ccquery.$partnameFieldsPattern.includedPattern.setText(ccquery.partnameFieldsIncluded);\n                    ccquery.$partnameFieldsPattern.excludedPattern.setText(ccquery.partnameFieldsExcluded);\n                    if (ccquery.columnsInfo) {\n                        columnMap = {};\n                        this.columnsByQuery[Utils.toLowerCase(ccquery.name)] = columnMap;\n                        this._makeColumnMapForQuery(columnMap, ccquery);\n                    }\n                }\n            }\n        }\n\n        // Indexes\n        if (this.app.indexes) {\n            // Special normal index\n            const ccindex = this.app.indexes._;\n            if (ccindex) {\n                columnMap = {};\n                this.columnsByIndex._ = columnMap;\n                this._makeColumnMapForIndex(columnMap, ccindex);\n\n            }\n            for (const indexName of Object.keys(this.app.indexes)) {\n                const ccindex1 = this.app.indexes[Utils.toLowerCase(indexName)];\n                if (ccindex1) {\n                    if (this.indexIsNormal(ccindex1)) {\n                        if (ccindex1.name !== \"_\") {\n                            this.columnsByIndex[Utils.toLowerCase(ccindex1.name)] = this.columnsByIndex._;\n                        }\n                    }\n                    else {\n                        columnMap = {};\n                        this.columnsByIndex[Utils.toLowerCase(ccindex1.name)] = columnMap;\n                        this._makeColumnMapForIndex(columnMap, ccindex1);\n                    }\n                }\n            }\n        }\n\n        // Fields per query (contains aliases for default query and globally defined aliases)\n        const globalFields = new Map<string, string>();\n        const columns = this.columnsByIndex._;\n        if (columns) {\n            for (const key of Object.keys(columns)) {\n                const column = columns[key];\n                if (column.aliases && column.aliases.length > 0) {\n                    const alias = column.aliases[0];\n                    if (alias) {\n                        globalFields.set(alias, alias);\n                    }\n                }\n            }\n        }\n        for (const queryName of Object.keys(this.columnsByQuery)) {\n            const queryFields = new Map<string, string>(globalFields);\n            const columns1 = this.columnsByQuery[Utils.toLowerCase(this.defaultCCQuery ? this.defaultCCQuery.name : \"\")];\n            if (columns1) {\n                for (const key of Object.keys(columns1)) {\n                    const column = columns1[key];\n                    if (column.aliases && column.aliases.length > 0) {\n                        const alias = column.aliases[0];\n                        if (alias) {\n                            queryFields.set(alias, alias);\n                        }\n                    }\n                }\n                this.fieldsByQuery[queryName] = Array.from(queryFields.keys());\n            }\n        }\n    }\n\n    protected clearMaps() {\n        this.columnsByQuery = {};\n        this.columnsByIndex = {};\n        this.fieldsByQuery = {};\n    }\n\n    /**\n     * Get the configuration of the web service with the passed name\n     */\n    getWebService<T extends CCWebService>(name: string): T | undefined {\n        if (!this.app) {\n            return undefined;\n        }\n        return Utils.getField<CCConfig>(this.app.webServices, name) as T;\n    }\n\n    /**\n     * Get the list configuration with the passed name\n     */\n    getList(name: string): CCList | undefined {\n        if (!this.app) {\n            return undefined;\n        }\n        return this.app.lists[name];\n    }\n\n    /**\n     * Return the default {@link CCQuery}\n     */\n    get defaultCCQuery(): CCQuery | undefined {\n        return this._defaultCCQuery;\n    }\n\n    /**\n     * Return the current {@link CCQuery}\n     */\n    get ccquery(): CCQuery | undefined {\n        if (!!this._ccquery) {\n            return this._ccquery;\n        }\n        return this._defaultCCQuery;\n    }\n\n    /**\n     * Set the current {@link CCQuery}\n     */\n    set ccquery(value: CCQuery | undefined) {\n        if (value !== this._ccquery) {\n            const previous = this._ccquery;\n            this._ccquery = value;\n            this._events.next({type: \"query-changed\", current: this._ccquery, previous: previous});\n        }\n    }\n\n    /**\n     * Get the {@link CCQuery} with the passed name\n     */\n    getCCQuery(name: string): CCQuery | undefined {\n        return this.app ? this.app.queries[Utils.toLowerCase(name)] : undefined;\n    }\n\n    /**\n     * Set the current {@link CCQuery} to that with the passed name\n     */\n    setCCQuery(name?: string): boolean {\n        const ccquery = !name ? this.defaultCCQuery : this.getCCQuery(name);\n        if (ccquery) {\n            this.ccquery = ccquery;\n            return true;\n        }\n        else {\n            console.warn(`AppService.setCCQuery - query '${name}' does not exist`);\n            return false;\n        }\n    }\n\n    /**\n     * Return the fields defined on the current {@link CCQuery}\n     */\n    get fields(): string[] {\n        if (!this.ccquery) {\n            return [];\n        }\n        return this.fieldsByQuery[Utils.toLowerCase(this.ccquery.name)] || [];\n    }\n\n    /**\n     * Get the {@link CCAggregation} with the passed name\n     */\n    getCCAggregation(name: string): CCAggregation | undefined {\n        if (!this.ccquery || !this.ccquery.aggregations) {\n            return undefined;\n        }\n        return this.ccquery.aggregations.find((value) => Utils.eqNC(name, value.name));\n    }\n\n    /**\n     * Get the {@link CCIndex} with the passed name\n     */\n    getIndex(name: string): CCIndex | undefined {\n        if (!this.app) {\n            return undefined;\n        }\n        return Utils.getField<CCIndex>(this.app.indexes, name);\n    }\n\n    /**\n     * Get the {@link CCColumn} with the passed name. Aliases are resolved\n     */\n    getColumn(name: string | null | undefined): CCColumn | undefined {\n        if (!name) {\n            return undefined;\n        }\n        if (!this.ccquery) {\n            return undefined;\n        }\n        // First, CCQuery specific aliases\n        let column: CCColumn;\n        let columnAliases = this.columnsByQuery[Utils.toLowerCase(this.ccquery.name)];\n        if (columnAliases) {\n            column = columnAliases[Utils.toLowerCase(name)];\n            if (column) {\n                return column;\n            }\n        }\n        // Second, aliases by index\n        const indexes = Utils.split(this.ccquery.searchIndexes, [\",\"]);\n        const firstIndex = indexes.length === 0 ? undefined : this.getIndex(indexes[0]);\n        if (indexes.length === 0 || (!!firstIndex && this.indexIsNormal(firstIndex))) {\n            columnAliases = this.columnsByIndex._;\n            if (columnAliases) {\n                column = columnAliases[Utils.toLowerCase(name)];\n                if (column) {\n                    return column;\n                }\n            }\n        }\n        else {\n            for (const index of indexes) {\n                columnAliases = this.columnsByIndex[Utils.toLowerCase(index)];\n                if (columnAliases) {\n                    column = columnAliases[Utils.toLowerCase(name)];\n                    if (column) {\n                        return column;\n                    }\n                }\n            }\n        }\n        // Third, extra columns\n        column = AppService.extraColumns[Utils.toLowerCase(name)];\n        if (column) {\n            return column;\n        }\n        return undefined;\n    }\n\n    /**\n     * Get the default alias a column\n     *\n     * @param column The column\n     * @return The default alias or `null` if no alias is defined\n     */\n    getColumnDefaultAlias(column?: CCColumn): string {\n        if (column) {\n            if (column.aliases && column.aliases.length > 0) {\n                return column.aliases[0];\n            }\n        }\n        return \"\";\n    }\n\n    /**\n     * Get the name of a column\n     *\n     * @param column The column\n     * @param _default A default name to return if `column` is empty\n     */\n    private getColumnName(column?: CCColumn, _default = \"\"): string {\n        if (column) {\n            return column.name;\n        }\n        return _default;\n    }\n\n    /**\n     * Get the default alias for a column\n     *\n     * @param column The column\n     * @param _default A default alias name to return if the `column` is empty or no alias is defined\n     */\n    getColumnAlias(column?: CCColumn, _default = \"\"): string {\n        if (column) {\n            const alias = this.getColumnDefaultAlias(column);\n            if (alias) {\n                return alias;\n            }\n        }\n        return _default;\n    }\n\n    /**\n     * Return a column name from a name which can be an alias\n     */\n    resolveColumnName(name: string | null | undefined): string {\n        const column = this.getColumn(name);\n        return this.getColumnName(column, name || \"\");\n    }\n\n    /**\n     * Return a column alias from a name which can be an alias\n     */\n    resolveColumnAlias(name: string | null | undefined): string {\n        const column = this.getColumn(name);\n        return this.getColumnAlias(column, name || \"\");\n    }\n\n    /**\n     * Parse a fielded search expression\n     *\n     * @param text The expression\n     * @param options Options for the parsing\n     * @return The parsed {@link Expr} or an error message\n     */\n    parseExpr(text: string, options?: ExprParserOptions): Expr | string {\n        return ExprParser.parse(text, {appService: this, formatService: this.formatService, intlService: this.intlService}, options);\n    }\n\n    /**\n     * Escape a value for fielded search if necessary. `Date` objects are converted to\n     * Sinequa system date strings and non-scalars fields are escaped\n     * @param field The value's field\n     * @param value The value\n     */\n    escapeFieldValue(field: string, value: string | number | Date | boolean | undefined): string {\n        if (Utils.isDate(value)) {\n            return Utils.toSysDateStr(value);\n        }\n        value = value + \"\";\n        const column = this.getColumn(field);\n        if (column && !AppService.isScalar(column)) {\n            // escaoe columns that might contain search operators in them (treating negative numbers as an ignorable edge case)\n            return ExprParser.escape(value);\n        }\n        return value;\n    }\n\n    /**\n     * Get the label of a column. The plural label is returned for csv-type columns.\n     *\n     * @param name The name of the column which can be an alias\n     * @param _default The default label to return if no label is defined\n     */\n    getLabel(name: string, _default?: string): string {\n        const column = this.getColumn(name);\n        if (column) {\n            const label = AppService.isCsv(column) ? column.labelPlural : column.label;\n            if (label) {\n                return label;\n            }\n        }\n        if (!Utils.isUndefined(_default)) {\n            return _default;\n        }\n        return name;\n    }\n\n    /**\n     * Get the singular label of a column\n     *\n     * @param name The name of the column which can be an alias\n     * @param _default The default label to return if no label is defined\n     */\n    getSingularLabel(name: string, _default?: string): string {\n        const column = this.getColumn(name);\n        if (column && column.label) {\n            return column.label;\n        }\n        if (!Utils.isUndefined(_default)) {\n            return _default;\n        }\n        return name;\n    }\n\n    /**\n     * Get the plural label of a column\n     *\n     * @param name The name of the column which can be an alias\n     * @param _default The default label to return if no label is defined\n     */\n    getPluralLabel(name: string, _default?: string): string {\n        const column = this.getColumn(name);\n        if (column && column.labelPlural) {\n            return column.labelPlural;\n        }\n        if (!Utils.isUndefined(_default)) {\n            return _default;\n        }\n        return name;\n    }\n\n    /**\n     * Return `true` if a column with the passed name or alias is a string\n     */\n    isString(name: string): boolean {\n        const column = this.getColumn(name);\n        return !!column && AppService.isString(column);\n    }\n\n    /**\n     * Return `true` if a column with the passed name or alias is a csv\n     */\n    isCsv(name: string): boolean {\n        const column = this.getColumn(name);\n        return !!column && AppService.isCsv(column);\n    }\n\n    /**\n     * Return `true` if a column with the passed name or alias is a tree\n     */\n    isTree(name: string): boolean {\n        const column = this.getColumn(name);\n        return !!column && AppService.isTree(column);\n    }\n\n    /**\n     * Return `true` if a column with the passed name or alias is an entity\n     */\n    isEntity(name: string): boolean {\n        const column = this.getColumn(name);\n        return !!column && AppService.isEntity(column);\n    }\n\n    /**\n     * Return `true` if a column with the passed name or alias is a boolean\n     */\n    isBoolean(name: string): boolean {\n        const column = this.getColumn(name);\n        return !!column && AppService.isBoolean(column);\n    }\n\n    /**\n     * Return `true` if a column with the passed name or alias is a date\n     */\n    isDate(name: string): boolean {\n        const column = this.getColumn(name);\n        return !!column && AppService.isDate(column);\n    }\n\n    /**\n     * Return `true` if a column with the passed name or alias is a double\n     */\n    isDouble(name: string): boolean {\n        const column = this.getColumn(name);\n        return !!column && AppService.isDouble(column);\n    }\n\n    /**\n     * Return `true` if a column with the passed name or alias is an integer\n     */\n    isInteger(name: string): boolean {\n        const column = this.getColumn(name);\n        return !!column && AppService.isInteger(column);\n    }\n\n    /**\n     * Return `true` if a column with the passed name or alias is a number (integer or double)\n     */\n    isNumber(name: string): boolean {\n        return this.isInteger(name) || this.isDouble(name);\n    }\n\n    /**\n     * Return `true` if a column with the passed name or alias is a scalar\n     */\n    isScalar(name: string): boolean {\n        const column = this.getColumn(name);\n        return !!column && AppService.isScalar(column);\n    }\n\n    /**\n     * Return `true` if a column with the passed name or alias is sortable\n     */\n    isSortable(name: string): boolean {\n        const column = this.getColumn(name);\n        return !!column && AppService.isSortable(column);\n    }\n\n    /**\n     * If the passed url is relative and CORS is active then\n     * prepend it with the Sinequa server origin\n     */\n    updateUrlForCors(url: string): string {\n        if (this.startConfig.corsActive && !!url && !Utils.isUrlAbsolute(url)) {\n            url = Utils.addUrl(this.origin, url);\n        }\n        return url;\n    }\n\n    /**\n     * Return the url to the Sinequa administration console\n     */\n    get adminUrl(): string {\n        return this.updateUrlForCors(Utils.addUrl(this.startConfig.applicationPath!, \"admin\"));\n    }\n}","import {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\n\nimport {IntlModule} from \"@sinequa/core/intl\";\nimport {LoadComponentModule} from \"@sinequa/core/load-component\";\nimport {UtilsModule} from \"@sinequa/components/utils\";\n\nimport {BsActionButtons} from \"./action-buttons/action-buttons\";\nimport {BsActionItemContent} from \"./action-item-content/action-item-content\";\nimport {BsActionItem} from \"./action-item/action-item\";\nimport {BsActionMenu} from \"./action-menu/action-menu\";\nimport {BsDropdownMenu} from \"./dropdown-menu/dropdown-menu\";\nimport {BsDropdownDirective} from \"./dropdown.directive\";\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        IntlModule,\n        LoadComponentModule,\n        UtilsModule\n    ],\n    declarations: [\n        BsActionButtons,\n        BsActionItemContent,\n        BsActionItem,\n        BsActionMenu,\n        BsDropdownMenu,\n        BsDropdownDirective\n    ],\n    exports: [\n        BsActionButtons,\n        BsActionMenu,\n        BsActionItem,\n        BsDropdownDirective\n    ]\n})\nexport class BsActionModule {\n}","import {Component, OnInit, Input, ChangeDetectorRef} from \"@angular/core\";\nimport {Record, CCRating, UserRatingsWebService, UserRatingResponse} from \"@sinequa/core/web-services\";\n\n@Component({\n    selector: \"sq-user-rating\",\n    templateUrl: \"./user-rating.html\",\n    styleUrls: [\"./user-rating.css\"]\n})\nexport class UserRating implements OnInit {\n    @Input() record: Record;\n    @Input() ratingsColumn: string;\n    @Input() averageColumn: string;\n    @Input() updateDocWeight: boolean;\n    @Input() count: number;\n    @Input() values: string;\n    @Input() titles: string;\n    @Input() caption: string;\n    @Input() showAverage: boolean;\n    userRatingIndex: number;\n    averageRatingIndex: number;\n    ratingValues: string[];\n\n    constructor(\n        private userRatingService: UserRatingsWebService,\n        private changeDetector: ChangeDetectorRef) {\n    }\n\n    ngOnInit() {\n        this.ensureRatingValues();\n        this.handleResponse(this.userRatingService.getRecordRating(this.record, this.getCCRating()));\n    }\n\n    getCCRating(): CCRating {\n        return {\n            ratingsColumn: this.ratingsColumn,\n            averageColumn: this.averageColumn,\n            updateDocWeight: this.updateDocWeight,\n            ratingsDistribution: this.ratingValues\n        };\n    }\n\n    get messageParams() {\n        return {\n            values: {\n                average: this.getAverageRating()\n            }\n        };\n    }\n\n    getTitle(ratingIndex: number): string {\n        if (this.titles) {\n            return this.titles.split(\";\")[ratingIndex] || \"\";\n        }\n        else {\n            return \"\";\n        }\n    }\n\n    getRating(ratingIndex: number): string {\n        return this.ratingValues[ratingIndex];\n    }\n\n    getAverageRating(): string {\n        if (this.averageRatingIndex < 0) {\n            return \"\";\n        }\n        else {\n            return this.ratingValues[this.averageRatingIndex];\n        }\n    }\n\n    select(selectedRatingIndex: number) {\n        //If selected rating was already selected, remove the rating\n        if (this.userRatingIndex === selectedRatingIndex) {\n            this.userRatingService.deleteRating(this.record, this.getCCRating()).subscribe(this.handleResponse);\n        }\n        else {\n            this.userRatingService.setRating(this.record, selectedRatingIndex, this.getCCRating()).subscribe(this.handleResponse);\n        }\n    }\n\n    private ensureRatingValues() {\n        if (!this.ratingValues) {\n            const count = this.count || 0;\n\n            //Work out rating value range\n            if (this.values) {\n                //Use predefined values\n                this.ratingValues = this.values.split(\";\");\n\n                //Initialize missing values - so that ratingValues.length matches config.count\n                for (let i = this.ratingValues.length; i < count; i++) {\n                    this.ratingValues.push((i + 1).toString());\n                }\n            }\n            else {\n                //Generates [1, ... config.count]\n                this.ratingValues = Array(count).fill(0).map((_, i) => (i + 1).toString());\n            }\n        }\n    }\n\n    private handleResponse = (response: UserRatingResponse) => {\n        this.userRatingIndex    = response.rating;\n        this.averageRatingIndex = response.averagerating;\n\n        this.changeDetector.markForCheck();\n    }\n}\n","<ul class=\"sq-user-rating-stars\">\n    <!-- caption -->\n    <li *ngIf=\"caption\" class=\"sq-user-rating-caption\">\n        <span>{{caption|sqMessage}}</span>\n    </li>\n    <!-- rating stars -->\n    <li *ngFor=\"let r of ratingValues; let i = index\" class=\"sq-user-rating-item\">\n        <a class=\"sq-user-rating-star\" title=\"{{getTitle(i)}}\" href=\"javascript:void(0)\" (click)=\"select(i)\">\n            <span class=\"{{(i <= userRatingIndex) ? 'fas fa-star' : 'far fa-star'}}\"></span>\n        </a>\n    </li>\n    <!-- average rating -->\n    <li *ngIf=\"showAverage && getAverageRating() !== undefined && getAverageRating() !== ''\" class=\"sq-user-rating-average\">\n        <span>{{'msg#userRatings.average'|sqMessage:messageParams}}</span>\n    </li>\n</ul>\n","import { Component, Input, SimpleChanges, OnChanges } from \"@angular/core\";\nimport { AbstractFacet } from \"../../abstract-facet\";\nimport {\n    Results,\n    AggregationItem,\n    Aggregation,\n} from \"@sinequa/core/web-services\";\nimport { Action } from \"@sinequa/components/action\";\nimport { FacetService } from \"../../facet.service\";\nimport { Utils } from \"@sinequa/core/base\";\n\nexport interface TagCloudItem {\n    aggregation: Aggregation;\n    item: AggregationItem;\n    weight: number;\n}\n\n@Component({\n    selector: \"sq-facet-tag-cloud\",\n    templateUrl: \"./facet-tag-cloud.html\",\n    styleUrls: [\"./facet-tag-cloud.scss\"],\n})\nexport class BsFacetTagCloud extends AbstractFacet implements OnChanges {\n    /** search results */\n    @Input() results: Results;\n    /** list of aggregations to be considered in collecting tag-cloud data */\n    @Input() aggregations: string | string[];\n    /** maximum number of data to be displayed in tag-cloud */\n    @Input() limit = 50;\n    /** the way data are collected from given aggregations: equal repartition between them or most relevant among all of them */\n    @Input() uniformRepartition = false;\n    /** show/hide number of occurrences of each item*/\n    @Input() showCount = false;\n    /** define the size of each displayed item: common size for all or proportional size based on their count */\n    @Input() proportionalWeight = true;\n    /** lowest count under which items will not be taken into account in tag-cloud data */\n    @Input() countThreshold = 0;\n    /** wether data are rendered following their count sorting or randomly */\n    @Input() shuffleData = false;\n    /** Isolate filtering results from other facets available in the app */\n    @Input() isolateFacetFilters = false;\n\n    aggregationsData: Aggregation[] = [];\n    tagCloudData: TagCloudItem[] = [];\n    private filtered: AggregationItem[] = [];\n\n    // Actions enabled within the facet\n    private readonly clearFilters: Action;\n    // Default weight to be applied if proportionalWeight = false\n    private readonly defaultWeight = 2;\n    // Prefix for tag-cloud facet name to be used if isolateFacetFilters = true\n    private readonly tagCloudFacetPrefix = \"tag-cloud_\";\n\n    constructor(private facetService: FacetService) {\n        super();\n\n        // Clear the current filters\n        this.clearFilters = new Action({\n            icon: \"far fa-minus-square\",\n            title: \"msg#facet.clearSelects\",\n            action: () => {\n                if (Utils.isArray(this.aggregations)) {\n                    for (const aggregation of this.aggregations) this.facetService.clearFiltersSearch(this.getName(aggregation), true);\n                } else { \n                    this.facetService.clearFiltersSearch(this.getName(this.aggregations), true);\n                }\n            },\n        });\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (!!changes[\"results\"]) {\n            /* reset filtered items */\n            this.filtered = [];\n\n            /* update tag-cloud data */\n            this.tagCloudData = this.getTagCloudData();\n        }\n    }\n\n    /**\n     * Defines the tag-cloud data according to given inputs\n     */\n    getTagCloudData(): TagCloudItem[] {\n        const aggregationsData = this.getAggregationsData();\n\n        if (aggregationsData.length === 0) {\n            return [];\n        } else {\n            let tmp: TagCloudItem[] = [];\n\n            if (this.uniformRepartition) {\n                aggregationsData.forEach((data: Aggregation) => {\n                    const end = Math.floor(this.limit / aggregationsData.length);\n                    // Firstly, take filtered items\n                    tmp.push(\n                        ...data\n                            .items!.filter((item) => item.$filtered)\n                            .sort((a, b) => b.count - a.count)\n                            .slice(0, end)\n                            .map(\n                                (item: AggregationItem) =>\n                                    ({\n                                        aggregation: data,\n                                        item: item,\n                                        weight: this.proportionalWeight\n                                            ? item.count\n                                            : this.defaultWeight,\n                                    } as TagCloudItem)\n                            )\n                    );\n                    // add most relevant items if threshold not attenuated\n                    if (tmp.length < end) {\n                        tmp.push(\n                            ...data\n                                .items!.filter(\n                                    (item) => item.count > this.countThreshold && !item.$filtered\n                                )\n                                .sort((a, b) => b.count - a.count)\n                                .slice(0, end - tmp.length)\n                                .map(\n                                    (item: AggregationItem) =>\n                                        ({\n                                            aggregation: data,\n                                            item: item,\n                                            weight: this.proportionalWeight\n                                                ? item.count\n                                                : this.defaultWeight,\n                                        } as TagCloudItem)\n                                )\n                        );\n                    }\n                });\n                tmp = tmp.sort((a, b) => b.item.count - a.item.count);\n            } else {\n                aggregationsData.forEach((data: Aggregation) => {\n                    tmp.push(\n                        ...data\n                            .items!.filter(\n                                (item) =>\n                                    item.count > this.countThreshold || item.$filtered\n                            )\n                            .map(\n                                (item: AggregationItem) =>\n                                    ({\n                                        aggregation: data,\n                                        item: item,\n                                        weight: this.proportionalWeight\n                                            ? item.count\n                                            : this.defaultWeight,\n                                    } as TagCloudItem)\n                            )\n                    );\n                });\n                const filtered = tmp.filter((elem) => elem.item.$filtered);\n                if (filtered.length < this.limit) {\n                    const notFiltered = tmp\n                        .filter((elem) => !elem.item.$filtered)\n                        .sort((a, b) => b.item.count - a.item.count);\n                    tmp = [...filtered];\n                    tmp.push(\n                        ...notFiltered.slice(0, this.limit - filtered.length)\n                    );\n                } else {\n                    tmp = filtered.slice(0, this.limit);\n                }\n            }\n\n            // By default, sort the whole array with respect to its counts and update its elements weight value\n            tmp = tmp\n                .sort((a, b) => b.item.count - a.item.count)\n                .map(\n                    (elem: TagCloudItem) =>\n                        ({\n                            ...elem,\n                            weight: this.proportionalWeight\n                                ? this.scaleItemWeight(tmp, elem.item.count)\n                                : this.defaultWeight,\n                        } as TagCloudItem)\n                );\n\n            // Shuffle the array\n            if (this.shuffleData) {\n                tmp = this.shuffle(tmp);\n            }\n\n            return tmp;\n        }\n    }\n\n    /**\n     * Invoked on click on an item in order to update the query\n     * @param tagCloudItem\n     * @param event\n     */\n    filterItem(tagCloudItem: TagCloudItem, event) {\n        const name = this.getName(tagCloudItem.aggregation.name);\n        const aggregation = tagCloudItem.aggregation;\n        const item = tagCloudItem.item;\n        if (!this.isFiltered(aggregation, item)) {\n            this.facetService.addFilterSearch(name, aggregation, item);\n        } else {\n            this.facetService.removeFilterSearch(name, aggregation, item);\n        }\n        event.preventDefault();\n    }\n\n    /**\n     * Define the possible actions according to the actual context\n     */\n    get actions(): Action[] {\n        const actions: Action[] = [];\n        if(this.isFiltering()) {\n            actions.push(this.clearFilters);\n        }\n        return actions;\n    }\n\n    /**\n     * Map the initial aggregations names to a list of Aggregation\n     */\n    protected getAggregationsData(): Aggregation[] {\n        return []\n            .concat(this.aggregations as [])\n            .filter((agg: string) =>\n                this.facetService.hasData(agg, this.results)\n            )\n            .map(\n                (agg: string) =>\n                    this.facetService.getAggregation(\n                        agg,\n                        this.results\n                    ) as Aggregation\n            )\n            .map((data: Aggregation) => this.refreshFiltered(data));\n    }\n\n    /**\n     * Update aggregation's data with respect to active filters in the query & breadcrumbs\n     * @param data\n     */\n    protected refreshFiltered(data: Aggregation): Aggregation {\n        const facetName = this.getName(data.name);\n        if (this.facetService.hasFiltered(facetName)) {\n            // refresh filters from breadcrumbs\n            const items = this.facetService.getAggregationItemsFiltered(facetName, data.valuesAreExpressions);\n            items.forEach((item) => {\n                if (!this.isFiltered(data, item)) {\n                    item.$filtered = true;\n                    this.filtered.push(item);\n                }\n            });\n\n            // double check filters from query and breadcrumb\n            data.items!.forEach((item) => {\n                const indx = this.facetService.filteredIndex(data, this.filtered, item);\n                if (this.facetService.itemFiltered(facetName, data, item)) {\n                    item.$filtered = true;\n                    if (!this.isFiltered(data, item)) {\n                        this.filtered.push(item);\n                    }\n                } else if (indx !== -1) {\n                    // sometime facetService.itemFiltered() could returns false but item is present in breadcrumbs\n                    item.$filtered = true;\n                }\n            });\n        }\n        return data;\n    }\n\n    /**\n     * Returns facets names to be used according to @input() isolateFacetFilters\n     * @param aggregationName\n     */\n    private getName(aggregationName: string): string {\n        if (!this.isolateFacetFilters) {\n            return aggregationName;\n        }\n        return this.tagCloudFacetPrefix + aggregationName;\n    }\n\n    /**\n     * Linearly map the original weight to a discrete scale from 1 to 10\n     * @param weight original weight\n     */\n    private scaleItemWeight(tagCloudData: TagCloudItem[], weight: number): number {\n        return (\n            Math.round(\n                ((weight - tagCloudData[tagCloudData.length - 1].weight) /\n                    (tagCloudData[0].weight -\n                        tagCloudData[tagCloudData.length - 1].weight)) *\n                    9.0\n            ) + 1\n        );\n    }\n\n    /**\n     * Returns true if the supplied item within the given aggregation is filtering the query\n     * @param data\n     * @param item\n     */\n    private isFiltered(data: Aggregation, item: AggregationItem): boolean {\n        return this.facetService.filteredIndex(data, this.filtered, item) !== -1;\n    }\n\n    /**\n     * Shuffle items of the supplied array\n     * @param arr\n     */\n    private shuffle(arr: TagCloudItem[]): TagCloudItem[] {\n        for (let i = arr.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * i);\n            const aux = arr[i];\n            arr[i] = arr[j];\n            arr[j] = aux;\n        }\n        return arr;\n    }\n\n    /**\n     * Returns true if there is at least one active filter in the tag-cloud facet\n     */\n    private isFiltering(): boolean {\n        return []\n                .concat(this.aggregations as [])\n                .some((aggregationName: string) =>\n                    this.facetService.hasFiltered(this.getName(aggregationName))\n                );\n    }\n}\n","<ul class=\"cloud\" [attr.data-show-count]=\"showCount ? '' : null\">\n    <li *ngFor=\"let data of tagCloudData\">\n        <a\n            href=\"#\"\n            [attr.data-count]=\"data.item.count\"\n            [attr.data-weight]=\"proportionalWeight ? data.weight : null\"\n            class=\"sq-metadata-color-{{data.aggregation.column}}\"\n            (click)=\"filterItem(data, $event)\">\n            <i class=\"far fa-check-circle filtered\" *ngIf=\"data.item.$filtered\"></i>\n            {{data.item | sqValue:data.item.$column}}\n        </a>\n    </li>\n</ul>\n","import {Component, Input, AfterViewInit, ContentChild, TemplateRef} from \"@angular/core\";\nimport {trigger, state, animate, transition, style, AnimationTriggerMetadata} from '@angular/animations';\n\nexport function collapseAnimations(timings: number | string): AnimationTriggerMetadata[] {\n    return [\n        trigger('show', [\n            state('void', style({height: 0})),\n            transition('void <=> 1', [\n                animate(timings)\n            ])\n        ])\n    ];\n}\n\n@Component({\n    selector: \"sq-collapse\",\n    template: `\n        <div *ngIf=\"!collapsed\" class=\"sq-collapse\" [@show]=\"!collapsed && afterViewInit\">\n            <ng-container [ngTemplateOutlet]=\"template\"></ng-container>\n        </div>\n    `,\n    styles: [\".sq-collapse.ng-animating { overflow: hidden; }\"],\n    animations: collapseAnimations(\".15s ease-in-out\")\n})\nexport class Collapse implements AfterViewInit {\n    @Input() collapsed: boolean;\n    afterViewInit: boolean; // This allows to only trigger the animation after the view initialization\n    @ContentChild(TemplateRef, {static: false}) template: TemplateRef<any>;\n\n    constructor() {\n        this.collapsed = true;\n    }\n\n    ngAfterViewInit() {\n        setTimeout(() => this.afterViewInit = true, 0); // Value can switch synchronously => this can cause \"Expression has changed\" error\n    }\n}","import { Component, EventEmitter, Output, ChangeDetectorRef } from '@angular/core';\nimport { AutocompleteItem } from '../autocomplete.directive';\nimport { FieldSearchItemsContainer } from '../autocomplete-field-search.directive';\n\n@Component({\n    selector: \"sq-field-search-items\",\n    template: `\n<span *ngFor=\"let item of items\" class=\"badge badge-pill badge-info align-self-center mr-1\" [ngClass]=\"item.category\">\n    {{item.display}} <span class=\"fas fa-times-circle clickable\" (click)=\"removeItem(item)\"></span>\n</span>\n`,\n    styles: [`\n:host {\n    display: flex;\n}\n.clickable {\n    cursor: pointer;\n}\n.clickable:hover {\n    opacity: 85%;\n}\n`]\n})\nexport class BsFieldSearchItemsComponent implements FieldSearchItemsContainer {\n    @Output() itemRemoved = new EventEmitter<AutocompleteItem>();\n\n    items: AutocompleteItem[] = [];\n\n    constructor(protected changeDetectorRef: ChangeDetectorRef) {\n    }\n\n    update(items: AutocompleteItem[]): void {\n        this.items = items;\n        this.changeDetectorRef.markForCheck();\n    }\n\n    removeItem(item: AutocompleteItem) {\n        this.itemRemoved.next(item);\n        this.changeDetectorRef.markForCheck();\n    }\n\n}\n","import {Utils} from \"@sinequa/core/base\";\nimport {enSearch, frSearch, deSearch} from \"@sinequa/components/search\";\nimport {enCollapse, frCollapse, deCollapse} from \"@sinequa/components/collapse\";\nimport {enMetadata, frMetadata, deMetadata} from \"@sinequa/components/metadata\";\nimport {enModal, frModal, deModal} from \"@sinequa/components/modal\";\nimport {enFacet, frFacet, deFacet} from \"@sinequa/components/facet\";\nimport {enResult, frResult, deResult} from \"@sinequa/components/result\";\n\nimport _enPreview from \"./en\";\nimport _frPreview from \"./fr\";\nimport _dePreview from \"./de\";\n\nconst enPreview = Utils.merge({}, _enPreview, enSearch, enCollapse, enMetadata, enModal, enFacet, enResult);\nconst frPreview = Utils.merge({}, _frPreview, frSearch, frCollapse, frMetadata, frModal, frFacet, frResult);\nconst dePreview = Utils.merge({}, _dePreview, deSearch, deCollapse, deMetadata, deModal, deFacet, deResult);\n\nexport { enPreview, frPreview, dePreview };\n","export * from \"./facet.service\";\nexport * from \"./abstract-facet\";\nexport * from \"./bootstrap/index\";\nexport * from \"./messages/index\";","export default {\n    \"help\": {\n        \"title\": \"Online-Hilfe\"\n    },\n\n    \"overrideUser\": {\n        \"title\": \"Benutzer wechseln\",\n        \"userName\": \"Benutzername\",\n        \"domain\": \"Domäne\"\n    },\n\n    \"btnClose\": {\n        \"text\": \"Schließen\"\n    }\n};\n","import { Component, Input, Output, ViewChild, ElementRef, EventEmitter, ContentChild, OnChanges, SimpleChanges, AfterViewInit, ChangeDetectorRef, OnInit, OnDestroy, ChangeDetectionStrategy } from \"@angular/core\";\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\nimport { Utils } from \"@sinequa/core/base\";\nimport { PreviewDocument } from \"./preview-document\";\n\n\n/**\n * This component manages the iframe containing the document's preview.\n * The main input is the URL of the document's preview.\n * The main output is an event emitter providing an instance of PreviewDocument.\n *\n * PreviewDocument is a wrapper around the HTML Document, allowing to interact with\n * the HTML of the preview (for example to highlight some entities)\n *\n * It is possible to insert a tooltip in the preview via transclusion.\n * Example:\n    <sq-preview-document-iframe\n        [downloadUrl]=\"downloadUrl\"\n        (onPreviewReady)=\"onPreviewReady($event)\">\n        <sq-preview-tooltip #tooltip\n            [previewDocument]=\"previewDocument\"\n            [previewData]=\"previewDocument\">\n        </sq-preview-tooltip>\n    </sq-preview-document-iframe>\n */\n@Component({\n    selector: \"sq-preview-document-iframe\",\n    template: `\n                <iframe #documentFrame\n                    [attr.sandbox]=\"_sandbox\"\n                    [src]=\"sanitizedUrlSrc\"\n                    [style.--factor]=\"scalingFactor\"\n                    [ngStyle]=\"{'-ms-zoom': scalingFactor, '-moz-transform': 'scale(var(--factor))', '-o-transform': 'scale(var(--factor))', '-webkit-transform': 'scale(var(--factor))'}\">\n                </iframe>`,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    styles: [`\n:host{\n    flex: 1;\n}\n\n\niframe {\n    background-color: white;\n    flex: 1;\n    position: relative;\n    display: block;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    height: calc(100% / var(--factor));\n    width: calc(100% / var(--factor));\n    border: 0;\n\n    -moz-transform-origin: 0 0;\n    -o-transform-origin: 0 0;\n    -webkit-transform-origin: 0 0;\n}\n\n.spinner-grow {\n    width: 3rem;\n    height: 3rem\n}\n    `]\n})\nexport class PreviewDocumentIframe implements OnChanges, OnInit, OnDestroy, AfterViewInit {\n    defaultSandbox: string = \"allow-forms allow-modals allow-orientation-lock allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-presentation allow-same-origin allow-scripts\";\n    @Input() sandbox: string | null | undefined;\n    @Input() downloadUrl: string;\n    @Input() scalingFactor: number = 1.0;\n    @Output() onPreviewReady = new EventEmitter<PreviewDocument>();\n    \n    // page could change when location.href change or when user click on a tab (sheet case)\n    // when URL a string is sent otherwise a PreviewDocument\n    @Output() pageChange = new EventEmitter<string | PreviewDocument>();\n    @ViewChild('documentFrame', {static: true}) documentFrame: ElementRef;  // Reference to the preview HTML in the iframe\n    @ContentChild('tooltip', {read: ElementRef, static: false}) tooltip: ElementRef; // see https://stackoverflow.com/questions/45343810/how-to-access-the-nativeelement-of-a-component-in-angular4\n\n    public sanitizedUrlSrc: SafeResourceUrl;\n    // Must be undefined by default, because if a default value is set, \n    // if we set it to undefined in the future, this new (undefined) value \n    // is not used by the iFrame as if it used the previous value\n    public _sandbox: string | null | undefined;\n    \n    private previewDocument: PreviewDocument;\n    readonly previewDocLoadHandler;\n\n    constructor(\n        private cdr: ChangeDetectorRef,\n        private sanitizer: DomSanitizer) {\n            this.previewDocLoadHandler = this.onPreviewDocLoad.bind(this);\n    }\n\n    public onPreviewDocLoad() {\n        \n        if(this.downloadUrl === undefined) return;\n        // previewDocument must be created here when document is fully loaded\n        // because in case of sheet, PreviewDocument constructor change.\n        this.previewDocument = new PreviewDocument(this.documentFrame);\n        \n        // SVG highlight:\n        //   background rectangle (highlight) were added to the SVG by the HTML generator (C#), but html generation is\n        //   not able to know the geometry of the text. It is up to the browser to compute the position and size of the\n        //   background. That needs to be done now that the iFrame is loaded.\n        try {\n            this.previewDocument.setSvgBackgroundPositionAndSize();\n        } catch (error) {\n            console.error(error);\n        }\n\n        /* To catch tab's sheet changes\n         * Sheet structure:\n         * <iframe #preview>\n         *      #document\n         *          ...\n         *          <frameset>\n         *              <iframe name=\"frSheet\"> // current sheet displayed\n         *              <iframe name=\"frTabs\">  // contains all sheet's tabs\n         *          </frameset>\n         *          ...\n         * </iframe>\n         */ \n        const sheetFrame = this.documentFrame.nativeElement.contentDocument.getElementsByName(\"frSheet\");\n        if(sheetFrame.length > 0) {\n            sheetFrame[0].removeEventListener(\"load\", () => {});\n            sheetFrame[0].addEventListener(\"load\", () => {\n                this.previewDocument = new PreviewDocument(this.documentFrame);\n                this.pageChange.next(this.previewDocument);\n                this.cdr.markForCheck();\n            }, true);\n        }\n\n        if (this.tooltip)\n            this.addTooltip(this.previewDocument);\n\n        // Let upstream component know document is now ready\n        this.onPreviewReady.next(this.previewDocument);\n        this.cdr.markForCheck();\n    }\n\n    addTooltip(previewDocument: PreviewDocument) {\n        previewDocument.insertComponent(this.tooltip.nativeElement);\n    }\n\n    ngOnInit() {\n        this.documentFrame.nativeElement.addEventListener(\"load\", this.previewDocLoadHandler, true);\n    }\n\n    ngOnDestroy() {\n        this.documentFrame.nativeElement.removeEventListener(\"load\", this.previewDocLoadHandler);\n    }\n\n    ngOnChanges(simpleChanges: SimpleChanges) {\n        if (simpleChanges.scalingFactor && !simpleChanges.scalingFactor.firstChange) {\n            return;\n        }\n\n        this.resetContent();\n        if (simpleChanges.downloadUrl && simpleChanges.downloadUrl.currentValue !== undefined) {\n            // set sandbox attribute only when downloadUrl is defined, so iframe is created without sandbox attribute\n            // if sandbox is null, keep sandbox attribute to undefined\n            // otherwise put sanbox value in the sanbox attribute or default sandbox value\n            this._sandbox = (this.sandbox === null) ? undefined : Utils.isString(this.sandbox) ? this.sandbox : this.defaultSandbox;\n            this.sanitizedUrlSrc = this.sanitizer.bypassSecurityTrustResourceUrl(this.downloadUrl);\n        }\n    }\n\n    ngAfterViewInit() {\n        this.resetContent();\n        this.iframeURLChange(this.documentFrame.nativeElement, (newURL: string) => {\n            this.previewDocument = new PreviewDocument(this.documentFrame);\n            this.pageChange.next(newURL);\n        });\n    }\n\n    iframeURLChange(iframe, callback) {\n        let lastDispatched = null;\n\n        const dispatchChange = function () {\n            if (iframe.contentWindow) {\n                const newHref = iframe.contentWindow.location.href;\n                if (newHref === \"about:blank\") return;\n                if (newHref !== lastDispatched) {\n                    callback(newHref);\n                    lastDispatched = newHref;\n                }\n            }\n        };\n\n        const unloadHandler = function (e: Event) {\n            setTimeout(dispatchChange, 0);\n        };\n\n        function attachUnload() {\n            // Remove the unloadHandler in case it was already attached.\n            // Otherwise, there will be two handlers, which is unnecessary.\n            if (iframe.contentWindow) {\n                iframe.contentWindow.removeEventListener(\"unload\", unloadHandler);\n                iframe.contentWindow.addEventListener(\"unload\", unloadHandler);\n            }\n        }\n\n        iframe.addEventListener(\"load\", function () {\n\n            attachUnload();\n\n            // Just in case the change wasn't dispatched during the unload event...\n            dispatchChange();\n        });\n\n        attachUnload();\n    }\n\n    resetContent() {\n        this.sanitizedUrlSrc = this.sanitizer.bypassSecurityTrustResourceUrl('about:blank');\n    }\n}\n","import {Injectable, Inject, Type, Injector, InjectionToken} from \"@angular/core\";\nimport {FormGroup, ValidatorFn} from \"@angular/forms\";\nimport {Overlay, OverlayConfig, OverlayRef} from '@angular/cdk/overlay';\nimport {ComponentPortal} from '@angular/cdk/portal';\nimport {Utils, Keys} from \"@sinequa/core/base\";\nimport {MessageParams} from \"@sinequa/core/intl\"; // Dependency to INTL !\nimport {ModalRef, IModalRef} from \"./modal-ref\";\n\n/** Describes the configuration object that can be passed when opening\n * a modal with the {@link ModalService}.\n */\nexport interface ModalConfig {\n    /**\n     * Classes that should be added to the `Overlay` pane.\n     */\n    panelClass?: string | string[];\n    /**\n     * Indicates whether a backdrop should be added when opening the modal.\n     */\n    hasBackdrop?: boolean;\n    /**\n     * Classes that should be added to the backdrop.\n     */\n    backdropClass?: string | string[];\n    /**\n     * The data model that the modal will operate on.\n     */\n    model?: any;\n    /**\n     * The CSS width of the modal.\n     */\n    width?: string;\n    /**\n     * The CSS height of the modal.\n     */\n    height?: string;\n    /**\n     * Indicates whether the modal should occupy the screen width and height. In this case\n     * `width` and `height` are set to `100%` and the `sq-modal-fullscreen` class is added\n     * to `panelClass`\n     */\n    fullscreen?: boolean;\n    /**\n     * Indicates whether a click on the backdrop should close the modal. The default value\n     * is `true`.\n     */\n    closeOnBackdropClick?: boolean;\n}\n\nconst DEFAULT_CONFIG: ModalConfig = {\n    hasBackdrop: true,\n    backdropClass: [\"cdk-overlay-dark-backdrop\", \"sq-modal-backdrop\"],\n    panelClass: \"sq-modal-pane\",\n    model: null,\n    closeOnBackdropClick: true\n};\n\n/**\n * The `MODAL_MODEL` injection token can be used to access the modal's model in\n * the the modal component. The value is `provided` from the value set in the\n * {@link ModalConfig} options when the modal is opened.\n */\nexport const MODAL_MODEL = new InjectionToken<any>('MODAL_MODEL');\n\n/**\n * The possible result values that can be set when a modal is closed. Buttons in a modal\n * have an associated `ModalResult` value. All buttons except those with a `Custom` result\n * value will close the modal when they are clicked.\n */\nexport const enum ModalResult {\n    OK = -1,\n    Cancel = -2,\n    Yes = -3,\n    No = -4,\n    Abort = -5,\n    Retry = -6,\n    Ignore = -7,\n    Custom = 0\n}\n\n/**\n * An enumeration of the types of confirm modals. The type of the confirm modal\n * can be reflected in the icon and/or colors used.\n */\nexport const enum ConfirmType {\n    Success,\n    Info,\n    Warning,\n    Error\n}\n\n/**\n * Describes the options that can be passed to the [ModalService.confirm]{@link ModalService#confirm}\n * method.\n */\nexport interface ConfirmOptions {\n    /**\n     * The title of the confirm modal.\n     */\n    title?: string;\n    /**\n     * The message dispayed in the confirm modal.\n     */\n    message: string;\n    /**\n     * Any parameters for the `message`.\n     */\n    messageParams?: MessageParams;\n    /**\n     * The type of the confirm modal.\n     */\n    confirmType?: ConfirmType;\n    /**\n     * The buttons to display in the confirm modal.\n     */\n    buttons: ModalButton[];\n}\n\n/**\n * Describes the options that can be passed to the [ModalService.prompt]{@link ModalService#prompt}\n * method.\n */\nexport interface PromptOptions extends ConfirmOptions {\n    /**\n     * text written by the user in the prompt input\n     */\n    output: string;\n    /**\n     * List of validators for the input form control\n     */\n    validators?: ValidatorFn[];\n    /**\n     * If omitted, a single-line input is displayed. If specified, a textarea with the\n     * given number of rows is displayed\n     */    \n    rowCount?: number;\n}\n\n/**\n * Describes the options that can be used when creating an instance of a {@link ModalButton}.\n */\nexport interface IModalButton {\n    /**\n     * The result associated with the button.\n     */\n    result: ModalResult;\n    /**\n     * Indicates whether this button is the primary button amongst a set of buttons.\n     */\n    primary?: boolean;\n    /**\n     * The button text.\n     */\n    text?: string;\n    /**\n     * Indicates whether the button is currently visible.\n     */\n    visible?: boolean;\n    /**\n     * The validation `FormGroup` that should be tested when the button is clicked.\n     * The button will only perform its `action` when the validation is `valid`.\n     */\n    validation?: FormGroup;\n    /**\n     * Indicats whether the button should be rendered with an `<a>` tag rather than\n     * a `<button>` tag.\n     */\n    anchor?: boolean;\n\n    /**\n     * The action to perform when the button is clicked. Buttons with `result` values other\n     * than `Custom` also close the modal.\n     */\n    action?: (button: ModalButton) => void;\n}\n\n/**\n * A class representing a button displayed in a modal.\n */\nexport class ModalButton implements IModalButton {\n    /**\n     * The result associated with the button.\n     */\n    result: ModalResult;\n    /**\n     * Indicates whether this button is the primary button amongst a set of buttons.\n     */\n    primary: boolean;\n    /**\n     * The button text.\n     */\n    text: string;\n    /**\n     * Indicates whether the button is currently visible.\n     */\n    visible: boolean;\n    /**\n     * The validation `FormGroup` that should be tested when the button is clicked.\n     * The button will only perform its `action` when the validation is `valid`.\n     */\n    validation: FormGroup;\n    /**\n     * Indicats whether the button should be rendered with an `<a>` tag rather than\n     * a `<button>` tag.\n     */\n    anchor: boolean;\n\n    /**\n     * The action to perform when the button is clicked. Buttons with `result` values other\n     * than `Custom` also close the modal.\n     */\n    action: (button: ModalButton) => void;\n\n    constructor(options: IModalButton) {\n        Utils.extend(this, {visible: true, anchor: false}, options);\n    }\n\n    /**\n     * Get the button text. Buttons with non-custom result types\n     * have default text depending on their result type -\n     * `msg#modal.buttons.ok`, `msg#modal.buttons.cancel` etc\n     */\n    getText() {\n        if (this.text) {\n            return this.text;\n        }\n        switch (this.result) {\n            case ModalResult.OK:\n                return \"msg#modal.buttons.ok\";\n            case ModalResult.Cancel:\n                return \"msg#modal.buttons.cancel\";\n            case ModalResult.Yes:\n                return \"msg#modal.buttons.yes\";\n            case ModalResult.No:\n                return \"msg#modal.buttons.no\";\n            case ModalResult.Abort:\n                return \"msg#modal.buttons.abort\";\n            case ModalResult.Retry:\n                return \"msg#modal.buttons.retry\";\n            case ModalResult.Ignore:\n                return \"msg#modal.buttons.ignore\";\n            default:\n                return \"\";\n        }\n    }\n\n    /**\n     * Perform a click on a button. The button's explicit action is performed if set and\n     * the modal closed with the button's modal result if the `result` type is non-`Custom`.\n     * If the validation status not `valid` this method returns without performing any action.\n     *\n     * @param closer An object with a `close` method. If the result type is non-custom then\n     * the `close` method of this object is called.\n     */\n    click(closer: {close(result: any): void}) {\n        if (this.validation && !this.validation.valid) {\n            return;\n        }\n        if (this.action) {\n            this.action(this);\n        }\n        if (this.result !== ModalResult.Custom) {\n            closer.close(this.result);\n        }\n    }\n}\n\n/**\n * An injection token to set the component to use for the `confirm` modal displayed\n * by the [ModalService.confirm]{@link ModalService#confirm} method.\n */\nexport const MODAL_CONFIRM = new InjectionToken<Type<any>>('MODAL_CONFIRM');\n\n/**\n * An injection token to set the component to use for the `prompt` modal displayed\n * by the [ModalService.prompt]{@link ModalService#confirm} method.\n */\nexport const MODAL_PROMPT = new InjectionToken<Type<any>>('MODAL_PROMPT');\n\n/**\n * A service to open modal dialogs.\n */\n@Injectable({\n    providedIn: \"root\"\n})\nexport class ModalService {\n    constructor(\n        protected injector: Injector,\n        protected overlay: Overlay,\n        @Inject(MODAL_CONFIRM) protected confirmModal: Type<any>,\n        @Inject(MODAL_PROMPT) protected promptModal: Type<any>\n    ) {\n    }\n\n    /**\n     * Open a modal dialog using the passed configuration options.\n     *\n     * @param component The type of the component to use for the modal.\n     * @param config Configuration options for the modal.\n     * @retuns An `IModalRef` object that can be used to close the modal.\n     */\n    openRef(component: Type<any>, config: ModalConfig = {}): IModalRef {\n        // Override default configuration\n        const modalConfig = { ...DEFAULT_CONFIG, ...config };\n        if (modalConfig.fullscreen) {\n            modalConfig.width = \"100%\";\n            modalConfig.height = \"100%\";\n            if (Utils.isString(modalConfig.panelClass)) {\n                modalConfig.panelClass = [modalConfig.panelClass, \"sq-modal-fullscreen\"];\n            }\n            else if (modalConfig.panelClass) {\n                modalConfig.panelClass.push(\"sq-modal-fullscreen\");\n            }\n            else {\n                modalConfig.panelClass = \"sq-modal-fullscreen\";\n            }\n        }\n        // Returns an OverlayRef which is a PortalHost\n        const overlayRef = this.createOverlay(modalConfig);\n        // Instantiate remote control\n        const modalRef = new ModalRef(overlayRef);\n        const overlayComponent = this.attachDialogContainer(component, overlayRef, modalConfig, modalRef);\n        modalRef.componentInstance = overlayComponent;\n        overlayRef.hostElement.classList.add(\"sq-modal-host\");\n        if (modalConfig.closeOnBackdropClick) {\n            // NB backdropClick will not fire if pointer-events are enabled on modal-host\n            overlayRef.backdropClick().subscribe(() => modalRef.close());\n            // Provide support for a scrollable sq-modal-host (overlay wrapper)\n            // The standard cdk styling disables pointer-events at this level which means that scrolling\n            // won't work. We can enable pointer-events in css but then the backdrop will not receive the\n            // click event. So, we handle the click event directly on sq-modal-host also and if the\n            // click target === sq-modal-host then we initiate modal closing here\n            overlayRef.hostElement.addEventListener(\"click\", (event) => {\n                if (event.target === overlayRef.hostElement) {\n                    modalRef.close();\n                }\n            });\n        }\n        overlayRef.keydownEvents().subscribe((event) => {\n            if (event.keyCode === Keys.esc) {\n                modalRef.close();\n            }\n        });\n        modalRef.disableSubmit();\n        return modalRef;\n    }\n\n    /**\n     * A wrapper around the {@link #openRef} method which returns a `Promise` that resolves\n     * with the `ModalResult` when the modal is closed.\n     *\n     * @param component The type of the component to use for the modal.\n     * @param config Configuration options for the modal.\n     * @retuns The `ModalResult` when the modal is closed.\n     */\n    open(component: Type<any>, config: ModalConfig = {}): Promise<ModalResult> {\n        const modalRef = this.openRef(component, config);\n        return modalRef.afterClosed().toPromise();\n    }\n\n    private createOverlay(config: ModalConfig): OverlayRef {\n        const overlayConfig = this.getOverlayConfig(config);\n        return this.overlay.create(overlayConfig);\n    }\n\n    private attachDialogContainer(component: Type<any>, overlayRef: OverlayRef, config: ModalConfig, modalRef: ModalRef) {\n        // PortalInjector() is deprecated\n        const injector = Injector.create({\n            providers:[\n                {provide: ModalRef, useValue: modalRef},\n                {provide: MODAL_MODEL, useValue: config.model}\n            ], \n            parent:this.injector\n        });\n        const containerPortal = new ComponentPortal(component, null, injector);\n        const containerRef = overlayRef.attach<Type<any>>(containerPortal);\n\n        return containerRef.instance;\n    }\n\n    private getOverlayConfig(config: ModalConfig): OverlayConfig {\n        const positionStrategy = this.overlay.position()\n            .global()\n            .centerHorizontally()\n            .centerVertically();\n\n        const overlayConfig = new OverlayConfig({\n            hasBackdrop: config.hasBackdrop,\n            backdropClass: config.backdropClass,\n            panelClass: config.panelClass,\n            scrollStrategy: this.overlay.scrollStrategies.block(),\n            positionStrategy\n        });\n\n        return overlayConfig;\n    }\n\n    /**\n     * Open a confirmation modal dialog displaying a message and a set buttons. This is similar to the Javacsript\n     * `Window.alert` method but renders a modal.\n     *\n     * @param options The options used to open the confirm modal. These are set as the `MODAL_MODEL`  of the modal.\n     */\n    confirm(options: ConfirmOptions): Promise<ModalResult> {\n        return this.open(this.confirmModal, {model: options});\n    }\n\n    /**\n     * Open a prompt modal dialog displaying a message, an input and OK/Cancel buttons.\n     *\n     * @param options The options used to open the prompt modal. These are set as the `MODAL_MODEL`  of the modal.\n     */\n    prompt(options: PromptOptions): Promise<ModalResult> {\n        return this.open(this.promptModal, {model: options});\n    }\n\n    /**\n     * Open a confirm modal that has an `OK` button.\n     *\n     * @param message The message to display in the modal.\n     * @param messageParams The parameters for the message.\n     * @param title The confirm modal's title.\n     * @param confirmType The type of the confirm modal.\n     */\n    oK(\n        message: string,\n        messageParams?: MessageParams,\n        title?: string,\n        confirmType = ConfirmType.Success): Promise<ModalResult> {\n        return this.confirm({\n            title,\n            message,\n            messageParams,\n            confirmType,\n            buttons: [\n                new ModalButton({ visible: true, result: ModalResult.OK, primary: true })\n            ]\n        });\n    }\n\n    /**\n     * Open a confirm modal that has `OK` and `Cancel` buttons.\n     *\n     * @param message The message to display in the modal.\n     * @param messageParams The parameters for the message.\n     * @param title The confirm modal's title.\n     * @param confirmType The type of the confirm modal.\n     * @param primaryButton The result type of the button which should be primary.\n     */\n    oKCancel(\n        message: string,\n        messageParams?: MessageParams,\n        title?: string,\n        confirmType = ConfirmType.Info,\n        primaryButton = ModalResult.OK): Promise<ModalResult> {\n        return this.confirm({\n            title,\n            message,\n            messageParams,\n            confirmType,\n            buttons: [\n                new ModalButton({ visible: true, result: ModalResult.OK, primary: primaryButton === ModalResult.OK }),\n                new ModalButton({ visible: true, result: ModalResult.Cancel, primary: primaryButton === ModalResult.Cancel })\n            ]\n        });\n    }\n\n    /**\n     * Open a confirm modal that has `Yes` and `No` buttons.\n     *\n     * @param message The message to display in the modal.\n     * @param messageParams The parameters for the message.\n     * @param title The confirm modal's title.\n     * @param confirmType The type of the confirm modal.\n     * @param primaryButton The result type of the button which should be primary.\n     */\n    yesNo(\n        message: string,\n        messageParams?: MessageParams,\n        title?: string,\n        confirmType = ConfirmType.Info,\n        primaryButton = ModalResult.Yes): Promise<ModalResult> {\n        return this.confirm({\n            title,\n            message,\n            messageParams,\n            confirmType,\n            buttons: [\n                new ModalButton({ visible: true, result: ModalResult.Yes, primary: primaryButton === ModalResult.Yes }),\n                new ModalButton({ visible: true, result: ModalResult.No, primary: primaryButton === ModalResult.No })\n            ]\n        });\n    }\n}\n","const INTL_MODULE_PROVIDERS = [];\n\nexport {INTL_MODULE_PROVIDERS};\n","import enSearch from \"./en\";\nimport frSearch from \"./fr\";\nimport deSearch from \"./de\";\n\nexport { enSearch, frSearch, deSearch };\n","import { Component, Input, OnChanges, SimpleChanges, ChangeDetectorRef } from \"@angular/core\";\nimport { SafeResourceUrl } from '@angular/platform-browser';\nimport { PreviewData } from \"@sinequa/core/web-services\";\nimport { Query } from \"@sinequa/core/app-utils\";\nimport { PreviewService } from \"../../preview.service\";\nimport { PreviewDocument } from \"../../preview-document\";\n\n\n@Component({\n    selector: \"sq-preview-panel\",\n    templateUrl: \"./preview-panel.html\",\n    styleUrls: [\"./preview-panel.scss\"]\n})\nexport class BsPreviewPanel implements OnChanges {\n    @Input() query: Query;\n    @Input() previewData: PreviewData;\n    @Input() sandbox: string;\n    @Input() displaySimilarDocuments: boolean;\n    @Input() metadata: string[];\n    @Input() leftPaneAdditionalClasses: string;\n\n    downloadUrl?: SafeResourceUrl;\n    previewDocument: PreviewDocument;\n\n    constructor(\n        private previewService: PreviewService,\n        private changeDetectorRef: ChangeDetectorRef) {\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes[\"previewData\"]) {\n            this.downloadUrl = this.previewData ? this.previewService.makeDownloadUrl(this.previewData.documentCachedContentUrl) : undefined;\n        }\n    }\n\n    onPreviewReady(previewDocument: PreviewDocument){\n        this.previewDocument = previewDocument;\n        this.changeDetectorRef.markForCheck();\n    }\n}","<div *ngIf=\"!!previewData\" class=\"container-fluid sq-preview\">\n    <div class=\"row sq-row\">\n        <div class=\"col-lg-3 sq-col {{leftPaneAdditionalClasses}}\">\n            <div class=\"sq-preview-bar\">\n                <sq-preview-links class=\"d-block mb-3\"\n                    [record]=\"previewData.record\" \n                    [resultId]=\"previewData.resultId\">\n                </sq-preview-links>\n                <sq-preview-highlights class=\"d-block mb-3\"\n                    [previewDocument]=\"previewDocument\"\n                    [previewData]=\"previewData\">\n                </sq-preview-highlights>\n                <sq-facet-card [title]=\"'msg#preview.documentPropertiesTitle'\" class=\"d-block mb-3\">\n                    <div class=\"card-body collapse show\" id=\"documentPropertiesBody\">\n                        <sq-metadata *ngIf=\"previewData.record\" [record]=\"previewData.record\" [items]=\"metadata\" [showTitles]=\"false\" [showIcons]=\"true\" [clickable]=\"false\">\n                        </sq-metadata>\n                    </div>\n                </sq-facet-card>\n                <sq-similar-documents *ngIf=\"displaySimilarDocuments\" class=\"d-block mb-3\"\n                    [sourceDocumentId]=\"previewData.record.id\" [query]=\"query\">\n                </sq-similar-documents>\n            </div>\n        </div>\n        <div class=\"col-lg-9 sq-col d-flex flex-column\">\n            <sq-preview-document-iframe \n                [sandbox] = \"sandbox\" \n                [downloadUrl]=\"downloadUrl\" \n                (onPreviewReady)=\"onPreviewReady($event)\">\n                <sq-preview-tooltip #tooltip\n                    [previewDocument]=\"previewDocument\"\n                    [previewData]=\"previewDocument\">\n                </sq-preview-tooltip>\n            </sq-preview-document-iframe>\n        </div>\n    </div>\n</div>","import {Utils} from \"@sinequa/core/base\";\nimport {enSearch, frSearch, deSearch} from \"@sinequa/components/search\";\nimport {enSelection, frSelection, deSelection} from \"@sinequa/components/selection\";\nimport {enModal, frModal, deModal} from \"@sinequa/components/modal\";\n\nimport _enSavedQueries from \"./en\";\nimport _frSavedQueries from \"./fr\";\nimport _deSavedQueries from \"./de\";\n\nconst enSavedQueries = Utils.merge({}, _enSavedQueries, enSearch, enSelection, enModal);\nconst frSavedQueries = Utils.merge({}, _frSavedQueries, frSearch, frSelection, frModal);\nconst deSavedQueries = Utils.merge({}, _deSavedQueries, deSearch, deSelection, deModal);\n\nexport { enSavedQueries, frSavedQueries, deSavedQueries };\n","import {HttpParams, HttpParameterCodec} from \"@angular/common/http\";\nimport {Observable, Subscription} from \"rxjs\";\nimport moment from \"moment\";\nimport {remove as removeDiacritics} from \"diacritics\";\nimport jsSHA from \"jssha\";\nimport {MapOf} from \"./map-of\";\nimport {FieldValue} from \"./field-value\";\nimport kebabCase from \"lodash/kebabCase\";\nimport snakeCase from \"lodash/snakeCase\";\nimport camelCase from \"lodash/camelCase\";\nimport escape from \"lodash/escape\";\nimport unescape from \"lodash/unescape\";\nimport isEqual from \"lodash/isEqual\";\n\n// Because of: https://github.com/angular/angular/issues/18261\nclass SqHttpParameterCodec implements HttpParameterCodec {\n    encodeKey(key: string): string {\n        return encodeURIComponent(key);\n    }\n\n    encodeValue(value: string): string {\n        return encodeURIComponent(value);\n    }\n\n    decodeKey(key: string): string {\n        return decodeURIComponent(key);\n    }\n\n    decodeValue(value: string): string {\n        return decodeURIComponent(value);\n    }\n}\n\n/**\n * Describes options for the [Utils.toJson]{@link Utils#toJson} method\n */\nexport interface ToJsonOptions {\n    /**\n     * If `true` then spacing is added to the output string\n     */\n    pretty?: boolean;\n}\n\n/**\n * Describes options for the [Utils.fromJson]{@link Utils#fromJson} method\n */\nexport interface FromJsonOptions {\n    /**\n     * If `true` then strings containing either ISO8601 or Sinequa \"system\" dates (`yyyy-mm-dd [hh:mm:ss]`) are\n     * converted to Javascript `Date` objects\n     */\n    reviveDates?: boolean;\n}\n\n/**\n * Describes options for the [Utils.throttle]{@link Utils#throttle} method\n */\nexport interface ThrottleSettings {\n    /**\n     * Set to `false` to disable the initial call to the callback function\n     */\n    leading?: boolean;\n    /**\n     * Set to `false` to disable the final call to the callback function\n     */\n    trailing?: boolean;\n}\n\nclass FrameTask {\n    constructor(\n        public callback: (...params) => any,\n        public params: any[]) {\n    }\n\n    call(): any {\n        return this.callback(...this.params);\n    }\n}\n\n/**\n * A utility class to log execution durations\n */\nexport class Timer {\n    /**\n     * Contains the timestamp of when the `Timer` object was instantiated\n     */\n    readonly start = performance.now();\n    /**\n     * Contains the current durartion in milliseconds of the `Timer` object\n     */\n    duration = 0;\n\n    constructor(private readonly name: string) {\n    }\n\n    /**\n     * Updates the `duration` of the `Timer` object\n     */\n    stop() {\n        this.duration = performance.now() - this.start;\n        console.log(`Timer: ${this.name} finished in ${Math.round(this.duration)} ms`);\n    }\n}\n\n/**\n * A generic interface for tree nodes\n */\nexport interface TreeNode {\n    /**\n     * Children elements of this tree node\n     */\n    items?: TreeNode[];\n}\n\n/**\n * A utility class containing a variety of static methods and properties\n */\n// @dynamic\nexport class Utils {\n    /**\n     * The number of milliseconds in one day\n     */\n    static readonly oneDay = 86400000;\n    /**\n     * The number of milliseconds in one hour\n     */\n    static readonly oneHour = 3600000;\n    /**\n     * The number of milliseconds in one minute\n     */\n    static readonly oneMinute = 60000;\n    /**\n     * The number of milliseconds in one second\n     */\n    static readonly oneSecond = 1000;\n\n    private static baseExtend(dst, objs, deep?: boolean, sort?: boolean | ((a: string, b: string) => number)) {\n        for (let i = 0, ii = objs.length; i < ii; ++i) {\n            const obj = objs[i];\n            if (!Utils.isObject(obj) && !Utils.isFunction(obj)) {\n                continue;\n            }\n            let keys = Object.keys(obj);\n            if (sort) {\n                if (Utils.isFunction(sort)) {\n                    keys = keys.sort(sort);\n                }\n                else {\n                    keys = keys.sort();\n                }\n            }\n            for (let j = 0, jj = keys.length; j < jj; j++) {\n                const key = keys[j];\n                const src = obj[key];\n                if (deep && Utils.isObject(src)) {\n                    if (Utils.isDate(src)) {\n                        dst[key] = new Date(src.valueOf());\n                    }\n                    else if (Utils.isRegExp(src)) {\n                        dst[key] = new RegExp(src);\n                    }\n                    else if (src.nodeName) {\n                        dst[key] = src.cloneNode(true);\n                    }\n                    else {\n                        if (!Utils.isObject(dst[key])) {\n                            dst[key] = Utils.isArray(src) ? [] : {};\n                        }\n                        Utils.baseExtend(dst[key], [src], true);\n                    }\n                }\n                else {\n                    dst[key] = src;\n                }\n            }\n        }\n        return dst;\n    }\n\n    /**\n     * Shallowly copy the properties in the source objects to the destination object.\n     * Any nested objects or arrays will be copied by reference, not duplicated.\n     * The source objects are treated in order so properties in later\n     * objects will override properties in earlier ones.\n     *\n     * @param destination The object to which properties are copied\n     * @param sources Objects from which properties are copied\n     * @return the destination object\n     */\n    static extend(destination: any, ...sources: any[]): any {\n        return Utils.baseExtend(destination, sources, false);\n    }\n\n    /**\n     * Deeply copy the properties in the source objects to the destination object.\n     * Any nested objects or arrays will be duplicated.\n     * The source objects are treated in order so properties in later\n     * objects will override properties in earlier ones.\n     *\n     * @param destination The object to which properties are copied\n     * @param sources Objects from which properties are copied\n     * @return the destination object\n     */\n    static merge(destination: any, ...sources: any[]): any {\n        return Utils.baseExtend(destination, sources, true);\n    }\n\n    /**\n     * Deeply copy the properties in the source objects to the destination object.\n     * Any nested objects or arrays will be duplicated.\n     * The source objects are treated in order so properties in later\n     * objects will override properties in earlier ones.\n     * The properties of the source objects are sorted in ascending, ASCII character order\n     * before they are copied to ensure a consistent insertion order in the destination\n     * object.\n     *\n     * @param destination The object to which properties are copied\n     * @param sources Objects from which properties are copied\n     * @return the destination object\n     */\n    static mergeAndSort(destination: any, ...sources: any[]): any {\n        return Utils.baseExtend(destination, sources, true, true);\n    }\n\n    private static forEach(obj, iterator, context?) {\n        let key, length;\n        if (obj) {\n            if (Utils.isFunction(obj)) {\n                for (key in obj) {\n                    // Need to check if hasOwnProperty exists,\n                    // as on IE8 the result of querySelectorAll is an object without a hasOwnProperty function\n                    if (key !== 'prototype' && key !== 'length' && key !== 'name' && (!obj.hasOwnProperty || obj.hasOwnProperty(key))) {\n                    iterator.call(context, obj[key], key, obj);\n                    }\n                }\n            } else if (Utils.isArray(obj) || Utils.isArrayLike(obj)) {\n                const isPrimitive = typeof obj !== 'object';\n                for (key = 0, length = obj.length; key < length; key++) {\n                    if (isPrimitive || key in obj) {\n                        iterator.call(context, obj[key], key, obj);\n                    }\n                }\n            } else if (obj.forEach && obj.forEach !== Utils.forEach) {\n                obj.forEach(iterator, context, obj);\n            } else if (Utils.isBlankObject(obj)) {\n                // createMap() fast path --- Safe to avoid hasOwnProperty check because prototype chain is empty\n                for (key in obj) {\n                    iterator.call(context, obj[key], key, obj);\n                }\n            } else if (typeof obj.hasOwnProperty === 'function') {\n                // Slow path for objects inheriting Object.prototype, hasOwnProperty check needed\n                for (key in obj) {\n                    if (obj.hasOwnProperty(key)) {\n                    iterator.call(context, obj[key], key, obj);\n                    }\n                }\n            } else {\n            // Slow path for objects which do not have a method `hasOwnProperty`\n            for (key in obj) {\n                if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                    iterator.call(context, obj[key], key, obj);\n                }\n            }\n            }\n        }\n        return obj;\n    }\n\n    /**\n     * Makes a deep copy of the passed object or array and returns it.\n     * Copies of source objects of the following types: `TypedArray`, `Date`, `RegExp` `Node` are\n     * made using the appropriate constructor. Arrays are created using `[]`. Other objects are created\n     * using `Object.create` passing the source object's protptype, if any.\n     *\n     * @param source The source item to copy (`Object`, `Array`, `TypedArray`, `Date`, `RegExp`, `Node`)\n     * @param destination An optional item to use as the destination. If passed, the item is cleared\n     * before the source is copied to it. The destination cannot be a `TypedArray` and cannot be the same\n     * as the source\n     * @return The copied item\n     */\n    static copy<T extends object>(source: T, destination?: T): T {\n        const stackSource: object[] = [];\n        const stackDest: object[] = [];\n\n        if (destination) {\n            if (Utils.isTypedArray(destination)) {\n                throw new Error(\"Can't copy! TypedArray destination cannot be mutated.\");\n            }\n            if (source === destination) {\n                throw new Error(\"Can't copy! Source and destination are identical.\");\n            }\n\n            // Empty the destination object\n            if (Utils.isArray(destination)) {\n                (destination as Array<any>).length = 0;\n            }\n            else {\n                Utils.forEach(destination, (value, key) => {\n                    if (!source.hasOwnProperty(key)) {\n                        delete destination[key];\n                    }\n                });\n            }\n\n            stackSource.push(source);\n            stackDest.push(destination);\n            return copyRecurse(source, destination);\n        }\n\n        return copyElement(source);\n\n        function copyRecurse(source, destination) {\n            let key;\n            if (Utils.isArray(source)) {\n                for (let i = 0, ii = source.length; i < ii; i++) {\n                    destination.push(copyElement(source[i]));\n                }\n            } else if (Utils.isBlankObject(source)) {\n                // createMap() fast path --- Safe to avoid hasOwnProperty check because prototype chain is empty\n                for (key in source) {\n                    destination[key] = copyElement(source[key]);\n                }\n            } else if (source && typeof source.hasOwnProperty === 'function') {\n                // Slow path, which must rely on hasOwnProperty\n                for (key in source) {\n                    if (source.hasOwnProperty(key)) {\n                        destination[key] = copyElement(source[key]);\n                    }\n                }\n            } else {\n                // Slowest path --- hasOwnProperty can't be called as a method\n                for (key in source) {\n                    if (Object.prototype.hasOwnProperty.call(source, key)) {\n                        destination[key] = copyElement(source[key]);\n                    }\n                }\n            }\n            return destination;\n        }\n\n        function copyElement(source) {\n            // Simple values\n            if (!Utils.isObject(source)) {\n                return source;\n            }\n\n            // Already copied values\n            const index = stackSource.indexOf(source);\n            if (index !== -1) {\n                return stackDest[index];\n            }\n\n            if (Utils.isWindow(source)) {\n                throw new Error(\"Can't copy! Making copies of Window instances is not supported.\");\n            }\n\n            let needsRecurse = false;\n            let destination;\n\n            if (Utils.isArray(source)) {\n                destination = [];\n                needsRecurse = true;\n            } else if (Utils.isTypedArray(source)) {\n                destination = new source.constructor(source);\n            } else if (Utils.isDate(source)) {\n                destination = new Date(source.getTime());\n            } else if (Utils.isRegExp(source)) {\n                const matches = source.toString().match(/[^\\/]*$/);\n                destination = new RegExp(source.source, matches ? matches[0] : \"\");\n                destination.lastIndex = source.lastIndex;\n            } else if (Utils.isFunction(source.cloneNode)) {\n                destination = source.cloneNode(true);\n            } else {\n                destination = Object.create(Object.getPrototypeOf(source));\n                needsRecurse = true;\n            }\n\n            stackSource.push(source);\n            stackDest.push(destination);\n\n            return needsRecurse ? copyRecurse(source, destination) : destination;\n        }\n    }\n\n    // Not currently used\n    private static copyWithoutNullOrEmpty(dst: MapOf<any>, src: MapOf<any>): MapOf<any> {\n        const keys = Object.keys(src);\n        for (let j = 0, jj = keys.length; j < jj; j++) {\n            const key = keys[j];\n            const value = src[key];\n            if (value === null || Utils.isEmpty(null)) {\n                continue;\n            }\n            else if (Utils.isObject(value)) {\n                if (Utils.isDate(value)) {\n                    dst[key] = new Date(value.valueOf());\n                }\n                else if (Utils.isRegExp(value)) {\n                    dst[key] = new RegExp(value);\n                }\n                else {\n                    if (!Utils.isObject(dst[key])) {\n                        dst[key] = Utils.isArray(value) ? [] : {};\n                    }\n                    dst[key] = Utils.copyWithoutNullOrEmpty(dst[key], value);\n                }\n            }\n            else {\n                dst[key] = value;\n            }\n        }\n        return dst;\n    }\n\n    /**\n     * Makes a shallow copy of the passed object. Empty string values are removed from the copied object.\n     * A string value containing `\"\"` is copied as an empty string.\n     *\n     * @param defaults The object to copy\n     * @return The copied object\n     */\n    static copyDefaults(defaults: {}): {} {\n        const _defaults = Utils.copy(defaults);\n        if (_defaults) {\n            Object.keys(_defaults).forEach(key => {\n                // Unset parameters will come through as empty strings (regardless of type)\n                // Filter these out (to not hide defaults on the server) and accept \"\" as a way of explicitly\n                // setting a parameter to be an empty string\n                const value = _defaults[key];\n                if (value === \"\") {\n                    delete _defaults[key];\n                }\n                if (value === \"\\\"\\\"\") {\n                    _defaults[key] = \"\";\n                }\n            });\n        }\n        return _defaults;\n    }\n\n    /**\n     * Performs an optimized deep comparison between two objects to determine if they should be considered equal\n     * @param o1 The first object to be compared\n     * @param o2 The second object to be compared\n     */\n    static equals(o1: any, o2:any): boolean {\n        return isEqual(o1, o2);\n    }\n\n    /**\n     * Converts a string to an integer value using `parseInt` with radix = 10.\n     * If the string cannot be converted or contains additional characters then the\n     * passed default value is returned\n     * @param str The string to convert\n     * @param _default The default value to use if the string cannot be converted\n     */\n    static toInt(str: string, _default: number = 0): number {\n        let value = parseInt(str, 10);\n        if (isNaN(value) || (value + \"\" !== str)) {\n            value = _default;\n        }\n        return value;\n    }\n\n    /**\n     * Converts a string to a floating point value using `parseFloat`.\n     * If the string cannot be converted then the passed default value is returned\n     * @param str The string to convert\n     * @param _default The default value to use if the string cannot be converted\n     */\n    static toNumber(str: string, _default: number = 0): number {\n        let value = parseFloat(str);\n        if (isNaN(value)) {\n            value = _default;\n        }\n        return value;\n    }\n\n    /**\n     * Converts a string to a `Date` using `Date.parse`.\n     * The date is returned in UTC. If the string cannot be converted then `undefined` is returned\n     * @param str The string to convert\n     * @return The converted `Date` in UTC or `undefined`\n     */\n    static toDate(str: string): Date | undefined {\n        const ms = Date.parse(str);\n        if (!ms && ms !== 0) {\n            return undefined;\n        }\n        return new Date(ms + new Date(ms).getTimezoneOffset() * 60000); // get date in UTC\n    }\n\n    /**\n     * Get the time component of a `Date` in milliseconds\n     *\n     * @param date The date\n     * @return The time in milliseconds\n     */\n    static getTime(date: Date): number {\n        if (!date) {\n            return 0;\n        }\n        return (date.getHours() * 60 * 60 + date.getMinutes() * 60 + date.getSeconds()) * 1000 + date.getMilliseconds();\n    }\n\n    /**\n     * Return the current date and time\n     */\n    static get now(): Date {\n        return new Date();\n    }\n\n    /**\n     * Converts a `Date` to a Sinequa system date string (`dd-mm-yyyy[ hh:mm:ss]`)\n     * If the time component of the date is 0 then only the date portion of the string is included\n     *\n     * @param date The `Date` to convert\n     */\n    static toSysDateStr(date: Date): string {\n        if (!date)  {\n            return \"\";\n        }\n        const m = moment(date);\n        if (Utils.getTime(date) === 0) {\n            return m.format(\"YYYY-MM-DD\");\n        }\n        else {\n            return m.format(\"YYYY-MM-DD HH:mm:ss\");\n        }\n    }\n\n    /**\n     * Converts a Sinequa system date string (`dd-mm-yyyy[ hh:mm:ss]`) to a `Date`\n     * If the string cannot be converted then `undefined` is returned\n     *\n     * @param date The Sinequa system date string to convert\n     */\n    static fromSysDateStr(value: string): Date | undefined {\n        const m = moment(value, \"YYYY-MM-DD HH:mm:ss\");\n        if (m.isValid()) {\n            return m.toDate();\n        }\n        return undefined;\n    }\n\n    private static rxSysDateTime = /^\\d{4}-(?:0[1-9]|1[012])-(?:0[1-9]|[12][0-9]|3[01])(?: (?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d)?$/;\n    // private static rxISO8601 = /^([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24\\:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$/;\n    // ISO8601 combined date and time\n    private static rxISO8601DateTime = /^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*))(?:Z|(\\+|-)([\\d|:]*))?$/;\n\n    private static isSysDateTime(str: string): boolean {\n        return Utils.rxSysDateTime.test(str);\n    }\n\n    private static isISO8601DateTime(str: string): boolean {\n        return Utils.rxISO8601DateTime.test(str);\n    }\n\n    /**\n     * Converts a Javascript value to a JSON string using `JSON.stringify`.\n     * Date objects are converted to Sinequa system strings\n     *\n     * @param value The value to convert\n     * @param options Options for the conversion. The default is `{pretty: false}`\n     */\n    static toJson(value: any, options: ToJsonOptions = {pretty: false}): string {\n        return JSON.stringify(value,\n            function(key: string, value: any): any  {\n                if (key && Utils.isDate(this[key])) {\n                    const str = Utils.toSysDateStr(this[key]);\n                    return str;\n                }\n                return value;\n            }, options.pretty ? 2 : 0);\n    }\n\n    /**\n     * Converts a string to an object using `JSON.parse`.\n     * Strings that are either in Sinequa system date or ISO8601 format are converted to\n     * `Date` objects if the `reviveDates` option is specified.\n     *\n     * @param str The string to convert\n     * @param options Options for the conversion. The default is `{reviveDates: false}`\n     */\n    static fromJson(str: string, options: FromJsonOptions = {reviveDates: false}): any {\n        if (!str || typeof str !== \"string\") {\n            return {};\n        }\n        try {\n            return JSON.parse(str, options.reviveDates ?\n                (key, value) => {\n                    if (options.reviveDates && typeof value === \"string\") {\n                        if (Utils.isSysDateTime(value)) {\n                            const m = moment(value, \"YYYY-MM-DD HH:mm:ss\");\n                            if (m.isValid()) {\n                                return m.toDate();\n                            }\n                        }\n                        else if (Utils.isISO8601DateTime(value)) {\n                            const m = moment(value, moment.ISO_8601);\n                            if (m.isValid()) {\n                                return m.toDate();\n                            }\n                        }\n                    }\n                    return value;\n                } : undefined);\n        }\n        catch (exception) {\n            console.log(\"Utils.fromJson exception:\", exception);\n            return null;\n        }\n    }\n\n    /**\n     * Converts a `FieldValue` value to a string compatible with Sinequa's SQL syntax.\n     * String and `Date` values are enclosed in single quotes if the quote parameter is `true`\n     *\n     * @param value The value to convert\n     * @param quote If set, the returned string will be enclosed in single quotes for string and `Date` values\n     */\n    static toSqlValue(value: FieldValue, quote?: boolean): string {\n        if (Utils.isNumber(value)) {\n            return value + \"\";\n        }\n        if (Utils.isDate(value)) {\n            if (quote) {\n                return \"'\" + Utils.toSysDateStr(value) + \"'\";\n            }\n            else {\n                return Utils.toSysDateStr(value);\n            }\n        }\n        if (Utils.isBoolean(value)) {\n            return value ? \"true\" : \"false\";\n        }\n        if (Utils.isArray(value)) {\n            const ret: string[] = [];\n            value.forEach(v => {\n                if (ret.length > 0) {\n                    ret.push(\",\");\n                }\n                if (!v) {\n                    ret.push(\"null\");\n                }\n                else if (Utils.isString(v)) {\n                    ret.push(v);\n                }\n                else {\n                    ret.push(v.display || v.value || \"\");\n                }\n            });\n            ret.splice(0, 0, \"[\");\n            ret.push(\"]\");\n            return ret.join(\"\");\n        }\n        if (quote) {\n            return \"'\" + value + \"'\";\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * Clean a string so it is compatible with values stored in a Sinequa tree type-column.\n     * The following operations are performed:\n     * * ensure that the string starts and ends with forward slashes\n     * * replace tab characters with spaces\n     * * replace semi-colons with commas\n     * * replace back slashes with forward slashes\n     *\n     * @param s The string to clean\n     */\n    static treeClean(s: string): string {\n        if (Utils.isEmpty(s)) {\n            return s;\n        }\n        return Utils.addUrl(\"/\", Utils.replace(Utils.replace(Utils.replace(s, \"\\t\", \" \"), \";\", \",\"), \"\\\\\", \"/\"), \"/\");\n    }\n\n    /**\n     * Return the first node of a Sinequa tree value enclosed in forward slashes\n     *\n     * @param s A Sinequa tree value\n     */\n    static treeFirst(s: string): string {\n        const parts = Utils.split(s, \"/\");\n        return parts.length === 0 ? \"\" : `/${parts[0]}/`;\n    }\n\n    /**\n     * Return the first node of a Sinequa tree value\n     *\n     * @param s A Sinequa tree value\n     */\n    static treeFirstNode(s: string): string {\n        const parts = Utils.split(s, \"/\");\n        return parts[0];\n    }\n\n    /**\n     * Return the last node of a Sinequa tree value enclosed in forward slashes\n     *\n     * @param s A Sinequa tree value\n     */\n    static treeLast(s: string): string {\n        const parts = Utils.split(s, \"/\");\n        return parts.length === 0 ? \"\" : `/${parts[parts.length - 1]}/`;\n    }\n\n    /**\n     * Return the last node of a Sinequa tree value\n     *\n     * @param s A Sinequa tree value\n     */\n    static treeLastNode(s: string): string {\n        const parts = Utils.split(s, \"/\");\n        return parts[parts.length - 1];\n    }\n\n    /**\n     * Return the nodes making up a Sinequa tree value\n     *\n     * @param s A Sinequa tree value\n     */\n    static treeNodes(s: string): string[] {\n        return Utils.split(s, \"/\");\n    }\n\n    /**\n     * Return a Sinequa tree value, removing enclosing forward slash characters\n     *\n     * @param s A Sinequa tree value\n     */\n    static treeDisplay(s: string): string {\n        if (!!s) {\n            if (s[0] === \"/\") {\n                s = s.substr(1);\n            }\n            if (s[s.length - 1] === \"/\") {\n                s = s.substr(0, s.length - 1);\n            }\n        }\n        return s;\n    }\n\n    /**\n     * Return the node count of a Sinequa tree value\n     *\n     * @param s A Sinequa tree value\n     */\n    static treeCount(s: string): number {\n        const count = Utils.count(s, \"/\");\n        return count > 0 ? count - 1 : 0;\n    }\n\n    /**\n     * Traverses a tree structure, executing a callback function at every node\n     * @param nodes the nodes to traverse\n     * @param callback the callback function\n     */\n    public static traverse<T extends TreeNode>(nodes: T[], callback: (lineage: T[] | undefined) => boolean): boolean {\n        if (!nodes || nodes.length === 0) {\n            return false;\n        }\n        if (!callback) {\n            return false;\n        }\n        const lineage: T[] = [];\n        const stack: (T | undefined)[] = [];\n        let _i = nodes.length;\n        while (_i--) {\n            stack.push(nodes[_i]);\n        }\n        while (stack.length) {\n            const node = stack.pop();\n            if (!node) {\n                lineage.pop();\n                callback(undefined);\n            }\n            else {\n                lineage.push(node);\n                if (callback(lineage)) {\n                    return true;\n                }\n                stack.push(undefined);\n                if (node.items && node.items.length > 0) {\n                    _i = node.items.length;\n                    while (_i--) {\n                        stack.push(node.items[_i] as T);\n                    }\n                }\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Return a pseudo-GUID value using `Math.random`\n     *\n     * @param withHyphens If set, the returned GUID includes hyphen separators\n     */\n    static guid(withHyphens = true): string {\n        let d = Date.now();\n        const guid = (withHyphens ?\n            'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx' : 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx').replace(/[xy]/g, (c) => {\n                const r = (d + Math.random() * 16) % 16 | 0;\n                d = Math.floor(d / 16);\n                return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n            });\n        return guid;\n    }\n\n    /**\n     * Return `true` if the passed value is `undefined`\n     */\n    static isUndefined(value): value is undefined {\n        return typeof value === 'undefined';\n    }\n\n    /**\n     * Return `true` if the passed value is an `object`\n     */\n    static isObject(value): value is any {\n        return value !== null && typeof value === 'object';\n    }\n\n    /**\n     * Return `true` if the passed value is a `string`\n     */\n    static isString(value): value is string {\n        return typeof value === 'string';\n    }\n\n    /**\n     * Return `true` if the passed value is a `number`\n     */\n    static isNumber(value): value is number {\n        return typeof value === 'number';\n    }\n\n    /**\n     * Return `true` if the passed value is a `boolean`\n     */\n    static isBoolean(value): value is boolean {\n        return typeof value === 'boolean';\n    }\n\n    /**\n     * Return `true` if the passed value is a `Date`\n     */\n    static isDate(value): value is Date {\n        return Object.prototype.toString.call(value) === '[object Date]';\n    }\n\n    /**\n     * Return `true` if the passed value is a scalar (`number`, `boolean` or `Date`)\n     */\n    static isScalar(value): value is number | boolean | Date {\n        return Utils.isNumber(value) || Utils.isBoolean(value) || Utils.isDate(value);\n    }\n\n    /**\n     * Return `true` if the passed value is an `Array`\n     */\n    static isArray(value): value is Array<any> {\n        return Array.isArray(value);\n    }\n\n    /**\n     * Return `true` if the passed value is iterable\n     */\n    static isIterable(value): value is Array<any> {\n        if (value === null || value === undefined) {\n            return false;\n        }\n        return typeof value[Symbol.iterator] === \"function\";\n    }\n\n    /**\n     * Return `true` if the passed value is a `Map`\n     */\n    static isMap(value): value is Map<any, any> {\n        return Object.prototype.toString.call(value) === '[object Map]';\n    }\n\n    /**\n     * Return `true` if the passed value is a `Function`\n     */\n    static isFunction(value): value is Function {\n        return typeof value === 'function';\n    }\n\n    /**\n     * Return `true` if the passed value is a `RegExp`\n     */\n    static isRegExp(value): value is RegExp {\n        return Object.prototype.toString.call(value) === '[object RegExp]';\n    }\n\n    /**\n     * Return `true` if the passed value is a `Window`\n     */\n    static isWindow(value): value is Window {\n        return value && value.window === value;\n    }\n\n    /**\n     * Return `true` if the passed value is a `File`\n     */\n    static isFile(value: any): value is File {\n        return Utils.isObject(value) && Object.prototype.toString.call(value) === \"[object File]\";\n    }\n\n    /**\n     * Return `true` if the passed value is a `FormData`\n     */\n    static isFormData(value: any): value is FormData {\n        return Utils.isObject(value) && Object.prototype.toString.call(value) === \"[object FormData]\";\n    }\n\n    /**\n     * Return `true` if the passed value is a `Blob`\n     */\n    static isBlob(value: any): value is Blob {\n        return Utils.isObject(value) && Object.prototype.toString.call(value) === \"[object Blob]\";\n    }\n\n    /**\n     * Return `true` if the passed value is an `ArrayBuffer`\n     */\n    static isArrayBuffer(value: any): value is ArrayBuffer {\n        return Utils.isObject(value) && Object.prototype.toString.call(value) === \"[object ArrayBuffer]\";\n    }\n\n    private static isArrayLike(obj): boolean {\n        // `null`, `undefined` and `window` are not array-like\n        if (obj == null || Utils.isWindow(obj)) return false;\n\n        // arrays, strings and jQuery/jqLite objects are array like\n        // * jqLite is either the jQuery or jqLite constructor function\n        // * we have to check the existance of jqLite first as this method is called\n        //   via the forEach method when constructing the jqLite object in the first place\n        if (Utils.isArray(obj) || Utils.isString(obj) /*|| (jqLite && obj instanceof jqLite)*/) return true;\n\n        // Support: iOS 8.2 (not reproducible in simulator)\n        // \"length\" in obj used to prevent JIT error (gh-11508)\n        const length = \"length\" in Object(obj) && obj.length;\n\n        // NodeList objects (with `item` method) and\n        // other objects with suitable length characteristics are array-like\n        return Utils.isNumber(length) &&\n            (length >= 0 && (length - 1) in obj || typeof obj.item === 'function');\n    }\n\n    /**\n     * Return `true` if the passed value is an `object` without a prototype\n     */\n    static isBlankObject(value): value is object {\n        return value !== null && typeof value === 'object' && !Object.getPrototypeOf(value);\n    }\n\n    private static TYPED_ARRAY_REGEXP = /^\\[object (?:Uint8|Uint8Clamped|Uint16|Uint32|Int8|Int16|Int32|Float32|Float64)Array\\]$/;\n    /**\n     * Return true if the passed value is a `TypedArray`\n     */\n    static isTypedArray(value) {\n        return value && Utils.isNumber(value.length) && Utils.TYPED_ARRAY_REGEXP.test(Object.prototype.toString.call(value));\n    }\n\n    /**\n     * Return a promise that is a resolved after a specified amount of time\n     *\n     * @param ms The time to delay in milliseconds\n     */\n    static delay(ms: number = 0): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            window.setTimeout(() => {\n                resolve();\n            }, ms);\n        });\n    }\n\n    /**\n     *\n     * @param value\n     * @param _default\n     */\n    static isTrue(\n        value,\n        _default?: boolean): boolean {\n        if (typeof (value) === 'string') {\n            value = value.toLowerCase();\n        }\n        switch (value) {\n            case true:\n            case \"true\":\n            case 1:\n            case \"1\":\n            case \"on\":\n            case \"yes\":\n                return true;\n            case \"\":\n            case undefined:\n                return !!_default;\n            default:\n                return false;\n        }\n    }\n\n    /**\n     * Compares two strings using the current locale. The return value is negative\n     * if `a` comes before `b` and positive if `a` comes after `b`. If the values\n     * are equal then `0` is returned\n     *\n     * @param a The first string\n     * @param b The second string\n     * @param ignoreCase If set, do a case-insensitive comparison\n     */\n    static compare(a: string, b: string, ignoreCase: boolean = true): number {\n        a = a || '';\n        b = b || '';\n        if (ignoreCase) {\n            a = a.toLocaleUpperCase();\n            b = b.toLocaleUpperCase();\n        }\n        return a.localeCompare(b);\n    }\n\n    /**\n     * Return `true` if two strings are equal, respecting case\n     *\n     * @param a The first string\n     * @param b The second string\n     */\n    static eq(a: string, b: string): boolean {\n        return Utils.compare(a, b, false) === 0;\n    }\n\n    /**\n     * Return `true` if two strings are equal, ignoring case\n     *\n     * @param a The first string\n     * @param b The second string\n     */\n    static eqNC(a: string, b: string): boolean {\n        return Utils.compare(a, b, true) === 0;\n    }\n\n    /**\n     * Return `true` if a number of strings are equal, ignoring case\n     *\n     * @param a The first string\n     * @param b Remaining strings\n     */\n    static eqNCN(a: string, ...b: string[]) {\n        if (!b) {\n            return false;\n        }\n        for (const s of b) {\n            if (Utils.eqNC(a, s)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Return the length of a string. If the string is empty (`null` or `undefined`)\n     * @param s A string\n     */\n    static len(s: string) {\n        return (s || '').length;\n    }\n\n    /**\n     * Return `true` if a string starts with another\n     *\n     * @param a The string to test\n     * @param b The prefix\n     * @param ignoreCase If `true` then ignore case\n     */\n    static startsWith(a: string, b: string, ignoreCase: boolean = true): boolean {\n        a = a || '';\n        b = b || '';\n        if (ignoreCase) {\n            a = a.toLocaleUpperCase();\n            b = b.toLocaleUpperCase();\n        }\n        return a.startsWith(b);\n    }\n\n    /**\n     * Return `true` if a string ends with another\n     *\n     * @param a The string to test\n     * @param b The postfix\n     * @param ignoreCase If `true` then ignore case\n     */\n    static endsWith(a: string, b: string, ignoreCase: boolean = true): boolean {\n        a = a || '';\n        b = b || '';\n        if (ignoreCase) {\n            a = a.toLocaleUpperCase();\n            b = b.toLocaleUpperCase();\n        }\n        return a.endsWith(b);\n    }\n\n    /**\n     * Return `true` if a string is a substring of another\n     * @param a The string to test\n     * @param b The substring\n     * @param ignoreCase If `true` then ignore case\n     */\n    static includes(a: string, b: string, ignoreCase: boolean = true): boolean {\n        a = a || '';\n        b = b || '';\n        if (ignoreCase) {\n            a = a.toLocaleUpperCase();\n            b = b.toLocaleUpperCase();\n        }\n        return a.includes(b);\n    }\n\n    /**\n     * Return the upper case value of a string using the current locale\n     */\n    static toUpperCase(s: string): string {\n        if (s) {\n            return s.toLocaleUpperCase();\n        }\n        return \"\";\n    }\n\n    /**\n     * Return a string with the first character converted to upper case using the current locale\n     */\n    static toUpperFirst(s: string): string {\n        if (s) {\n            return s[0].toLocaleUpperCase() + s.substr(1);\n        }\n        return \"\";\n    }\n\n    /**\n     * Return the lower case value of a string using the current locale\n     */\n    static toLowerCase(s: string): string {\n        if (s) {\n            return s.toLocaleLowerCase();\n        }\n        return \"\";\n    }\n\n    /**\n     * Return a string with the first character converted to lower case using the current locale\n     */\n    static toLowerFirst(s: string): string {\n        if (s) {\n            return s[0].toLocaleLowerCase() + s.substr(1);\n        }\n        return \"\";\n    }\n\n    /**\n     * Return a string where the first character of each space separated word is converted to upper case.\n     * However, if a word contains a full stop character the first character is left unchanged\n     */\n    static toStartCase(text: string): string {\n        if (text) {\n            const words = text.split(/[\\s]+/);\n            return words.map(value => !value.includes(\".\") ? Utils.toUpperFirst(value) : value).join(\" \");\n        }\n        return \"\";\n    }\n\n    /**\n     * Return a string where any leading and trailing whitespace characters are removed\n     */\n    static trim(s: string): string {\n        if (s) {\n            return s.trim();\n        }\n        return \"\";\n    }\n\n    /**\n     * Return a string where any leading whitespace characters are removed\n     */\n    static trimStart(s: string): string {\n        if (s) {\n            return s.trimStart();\n        }\n        return \"\";\n    }\n\n    /**\n     * Return a string where any trailing whitespace characters are removed\n     */\n    static trimEnd(s: string): string {\n        if (s) {\n            return s.trimEnd();\n        }\n        return \"\";\n    }\n\n    /**\n     * Return a string truncated to a maximum length. If the length of the string is greater than `maxLength`\n     * then it is truncated to `maxLength and a `suffix` appended. Otherwise the string is returned unchanged\n     *\n     * @param s The string to truncate\n     * @param maxLength The maximum length\n     * @param suffix The value to append if the string is truncated. The default is `...`\n     */\n    static truncate(s: string, maxLength: number, suffix?: string): string {\n        if (!s) {\n            return \"\";\n        }\n        suffix = suffix || \"...\";\n        if (s.length <= maxLength) {\n            return s;\n        }\n        return s.substring(0, maxLength - suffix.length) + suffix;\n    }\n\n    private static regExEscapeRegEx = /[-\\/\\\\^$*+?.()|[\\]{}]/g;\n\n    /**\n     * Return a string where any regular expresion operators are escaped\n     */\n    static regExEscape(s: string): string {\n        if (!s) {\n            return \"\";\n        }\n        return s.replace(Utils.regExEscapeRegEx, \"\\\\$&\");\n    }\n\n    /**\n     * Replaces patterns in a string with a replacement string. The pattern can either a string\n     * or a `RegExp`.\n     *\n     * @param s The string in which to search for a pattern\n     * @param pattern The pattern\n     * @param replacement The replacement string to replace any occurrences of the pattern in the string\n     */\n    static replace(s: string, pattern: string | RegExp, replacement: string): string {\n        if (!s || !pattern) {\n            return \"\";\n        }\n        if (Utils.isRegExp(pattern)) {\n            return s.replace(pattern, replacement);\n        }\n        else {\n            return s.replace(new RegExp(Utils.regExEscape(pattern), \"g\"), replacement);\n        }\n    }\n\n    /**\n     * Split a string into an array of substrings using the passed separators\n     *\n     * @param s The string to split\n     * @param separators One or more separators\n     * @param trim If `true` trim any leading and trailing spaces from the substrings\n     * @param removeEmpty If `true` exclude any empty strings from the array of substrings\n     */\n    static split(s: string, separators: string | string[], trim = true, removeEmpty = true): string[] {\n        if (!s) {\n            return [];\n        }\n        if (!separators) {\n            return [s];\n        }\n        let split: string[];\n        if (typeof separators === \"string\") {\n            split = s.split(separators);\n            if (trim) {\n                split = split.map(value => value.trim());\n            }\n        }\n        else {\n            let rxs = separators.map((value) => Utils.regExEscape(value)).join(\"|\");\n            if (trim) {\n                rxs = \"(?:^\\\\s*)|(?:\\\\s*(?:\" + rxs + \")\\\\s*)|(?:\\\\s*$)\";\n            }\n            split = s.split(new RegExp(rxs));\n        }\n        if (removeEmpty) {\n            split = split.filter((value) => {\n                return !Utils.isEmpty(value);\n            });\n        }\n        return split;\n    }\n\n    /**\n     * Return a string in kebab case (`CatDog => cat-dog`)\n     */\n    static toKebabCase(text: string): string {\n        return kebabCase(text);\n    }\n\n    /**\n     * Return a string in snake case (`CatDog => cat_dog`)\n     */\n    static toSnakeCase(text: string): string {\n        return snakeCase(text);\n    }\n\n    /**\n     * Return a string in camel case (`CatDog => catDog`)\n     */\n    static toCamelCase(text: string): string {\n        return camelCase(text);\n    }\n\n    /**\n     * Return a string with any diacritics removed\n     */\n    static removeAccents(text: string): string {\n        if (!text) {\n            return \"\";\n        }\n        return removeDiacritics(text);\n    }\n\n    /**\n     * Return a string in normalized form which can be used to match entity values. A normalized value\n     * has any diacritics removed and is converted to upper case\n     */\n    static normalize(text: string | null | undefined): string {\n        if (!text) {\n            return \"\";\n        }\n        return Utils.removeAccents(text).toUpperCase();\n    }\n\n    /**\n     * Return `true` if a string is valid as a simple value for the Sinequa admininistration\n     */\n    static isValidSimpleName(name: string): boolean {\n        return /^[a-zA-Z_][a-zA-Z0-9_]*$/.test(name);\n    }\n\n    /**\n     * Return `true` if a string is valid as a scoped (`.` separated) simple value for the Sinequa admininistration\n     */\n    static isValidScopedSimpleName(name: string): boolean {\n        return /^[a-zA-Z_]([\\.]?[a-zA-Z0-9_]+)*$/.test(name);\n    }\n\n    /**\n     * Return `true` if a value is `null`, `undefined` or `\"\"`\n     */\n    static isEmpty(value: any): boolean {\n        if (value === \"\") {\n            return true;\n        }\n        if (value === null) {\n            return true;\n        }\n        if (Utils.isUndefined(value)) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Return the number of occurrences of a substring in a string\n     *\n     * @param text The text to test\n     * @param sub The substring\n     * @param ignoreCase If `true` don't respect case when matching the substring\n     */\n    static count(text: string, sub: string, ignoreCase = true): number {\n        if (!text || !sub) {\n            return 0;\n        }\n        if (ignoreCase) {\n            text = text.toLocaleUpperCase();\n            sub = sub.toLocaleUpperCase();\n        }\n        let pos = -1;\n        let count = 0;\n        while (true) {\n            pos = text.indexOf(sub, pos + 1);\n            if (pos === -1) {\n                break;\n            }\n            count++;\n        }\n        return count;\n    }\n\n    /**\n     * Return a string converted to base64\n     */\n    static toBase64(value: string): string {\n        return btoa(encodeURIComponent(value).replace(/%([0-9A-F]{2})/g, (match, hex) => String.fromCharCode(parseInt(hex, 16))));\n    }\n\n    /**\n     * Return a string converted from base64\n     */\n    static fromBase64(value: string): string {\n        return decodeURIComponent(atob(value).split('').map((c) => '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2)).join(''));\n    }\n\n    /**\n     * Return the SHA256 hash value of string\n     */\n    static sha256(value: string): string {\n        const sha = new jsSHA(\"SHA-256\", \"TEXT\");\n        sha.update(value);\n        return sha.getHash(\"B64\");\n    }\n\n    /**\n     * Return the SHA512 hash value of string\n     */\n    static sha512(value: string): string {\n        const sha = new jsSHA(\"SHA-512\", \"TEXT\");\n        sha.update(value);\n        return sha.getHash(\"B64\");\n    }\n\n    /**\n     * Return a string where any HTML special characters are percent encoded\n     */\n    static encodeHTML(value: string): string {\n        return escape(value);\n    }\n\n    /**\n     * Return a string where any percent encoded characters are replaced by their corresponding unencoded characters\n     */\n    static decodeHTML(value: string): string {\n        return unescape(value);\n    }\n\n    /**\n     * Get a field with passed name from an object. The field name is matched insensitive of case\n     */\n    static getField<T>(obj: MapOf<T>, name: string): T | undefined {\n        if (!Utils.isObject(obj) || Utils.isEmpty(name)) {\n            return undefined;\n        }\n        const keys = Object.keys(obj).filter(key => Utils.eqNC(key, name));\n        if (keys.length === 0) {\n            return undefined;\n        }\n        return obj[keys[0]];\n    }\n\n    /**\n     * Clear fields from an object. If the `_delete` parameter is `false` then\n     * array or map fields are emptied and other fields are set to `undefined`.\n     * If the `_delete` parameter is `true` then fields are deleted\n     */\n    static clearObject(obj: {}, _delete: boolean = false): {} {\n        for (const prop in obj) {\n            if (obj.hasOwnProperty(prop)) {\n                if (_delete) {\n                    delete obj[prop];\n                }\n                else {\n                    if (Utils.isArray(obj[prop])) {\n                        obj[prop].length = 0;\n                    }\n                    else if (Utils.isMap(obj[prop])) {\n                        obj[prop].clear();\n                    }\n                    else {\n                        obj[prop] = undefined;\n                    }\n                }\n            }\n        }\n        return obj;\n    }\n\n    /**\n     * Return the non-empty fields in the `override` object that that are different to fields of the same name\n     * in the `template` object\n     * @param template The object to compare against\n     * @param override The object defining the fields and values to be compared\n     * @param ret An optional return object. If not set a new object is created\n     */\n    static deltas(template: {}, override: {}, ret?: {}): {} {\n        if (!ret) {\n            ret = {};\n        }\n        for (const name of Object.keys(override)) {\n            if (name in template) {\n                if (Utils.isObject(override[name]) && !Utils.isArray(override[name])) {\n                    const diff = Utils.deltas(template[name], override[name]);\n                    if (!Utils.equals(diff, {})) {\n                        ret[name] = diff;\n                    }\n                }\n                else if (!Utils.equals(template[name], override[name])) {\n                    if (!Utils.isEmpty(override[name])) {\n                        ret[name] = override[name];\n                    }\n                }\n            }\n            else {\n                if (!Utils.isEmpty(override[name])) {\n                    ret[name] = override[name];\n                }\n            }\n        }\n        return ret;\n    }\n\n    /**\n     * Returns an object containing the fields in a source object whose names match one of the passed keys. The keys can either be\n     * an array of strings or a callback function that is called for each field in the source object and returns `true` if a field\n     * should be \"picked\".\n     *\n     * @param obj The source object\n     * @param keys An array of keys or a callback function\n     */\n    static pick(obj: {}, keys: string[] | ((value: any, key: string, obj: object) => boolean)): {} {\n        const ret = {};\n        if (!!obj) {\n            if (Utils.isFunction(keys)) {\n                Object.keys(obj).forEach(key => {\n                    if (keys(obj[key], key, obj)) {\n                        ret[key] = obj[key];\n                    }\n                });\n            }\n            else {\n                for (const key of keys) {\n                    if (obj.hasOwnProperty(key)) {\n                        ret[key] = obj[key];\n                    }\n                }\n            }\n        }\n        return ret;\n    }\n\n    /**\n     * Create a debounce function that delays invoking `func` until after `wait` millseconds have elapsed since the previous invocation.\n     *\n     * @param func The function to debounce\n     * @param wait The delay in milliseconds to wait before calling `func`\n     * @param immediate If `true` then make an initial call to `func`\n     * @param every An optional callback to call without debouncing\n     */\n    static debounce(func: (...params) => any, wait = 0, immediate = false, every?: (...params) => any): (...params) => any {\n        let timeout, args, context, timestamp, result;\n\n        const later = function() {\n            const last = Date.now() - timestamp;\n\n            if (last < wait && last >= 0) {\n                timeout = setTimeout(later, wait - last);\n            }\n            else {\n                timeout = null;\n                if (!immediate) {\n                    result = func.apply(context, args);\n                    if (!timeout) {\n                        context = args = null;\n                    }\n                }\n            }\n        };\n\n        return function(this: any) {\n            context = this;\n            args = arguments;\n            if (every) {\n                every.apply(context, args);\n            }\n            timestamp = Date.now();\n            const callNow = immediate && !timeout;\n            if (!timeout) {\n                timeout = setTimeout(later, wait);\n            }\n            if (callNow) {\n                result = func.apply(context, args);\n                context = args = null;\n            }\n\n            return result;\n        };\n    }\n\n    /**\n     * Create a throttled function that only invokes func at most once per every `wait` milliseconds.\n     *\n     * @param func The function to throttle\n     * @param wait The number of milliseconds to throttle invocations to\n     * @param options Options to control the throttling behaviour\n     */\n    static throttle(func: (...params) => any, wait: number, options: ThrottleSettings = {}): (...pararms) => any {\n        let timeout, context, args, result;\n        let previous = 0;\n\n        const later = function() {\n            previous = options.leading === false ? 0 : Date.now();\n            timeout = null;\n            result = func.apply(context, args);\n            if (!timeout) context = args = null;\n        };\n\n        const throttled = function(this: any) {\n            const now = Date.now();\n            if (!previous && options.leading === false) previous = now;\n            const remaining = wait - (now - previous);\n            context = this;\n            args = arguments;\n            if (remaining <= 0 || remaining > wait) {\n                if (timeout) {\n                    clearTimeout(timeout);\n                    timeout = null;\n                }\n                previous = now;\n                result = func.apply(context, args);\n                if (!timeout) context = args = null;\n            }\n            else if (!timeout && options.trailing !== false) {\n                timeout = setTimeout(later, remaining);\n            }\n            return result;\n        };\n\n        throttled[\"cancel\"] = function() {\n            clearTimeout(timeout);\n            previous = 0;\n            timeout = context = args = null;\n        };\n\n        return throttled;\n    }\n\n    private static frameTasks: Map<(...params) => any, FrameTask> = new Map<(...params) => any, FrameTask>();\n\n    /**\n     * Create a function that calls `callback` the next time the browser next repaints\n     */\n    static frame(callback: (...params) => any): (...params) => any {\n        return (...params) => {\n            if (Utils.frameTasks.size === 0) {\n                requestAnimationFrame((timestamp) => {\n                    Utils.frameTasks.forEach((task, key, map) => {\n                        task.call();\n                    });\n                    Utils.frameTasks.clear();\n                });\n            }\n            const task = Utils.frameTasks.get(callback);\n            if (task) {\n                // Update params\n                task.params = params;\n            }\n            else {\n                // Add new task\n                Utils.frameTasks.set(callback, new FrameTask(callback, params));\n            }\n        };\n    }\n\n    /**\n     * Create a URL object from a `url` string. If the string is a relative url then\n     * `base` specifies the base to use\n     */\n    static makeURL(url: string, base?: string): URL {\n        if (!base) {\n            base = \"http://x.y.z\"; // Firefox and IOS need this\n        }\n        return new URL(url, base);\n    }\n\n    /**\n     * Add query string parameters to a url\n     *\n     * @param url The url to which to add the parameters\n     * @param params An object whose fields should be added as parameters\n     */\n    static addSearchParams(url: string, params: MapOf<any>): string {\n        if (!url || !params) {\n            return url;\n        }\n        const urlObj = Utils.makeURL(url);\n        for (const param in params) {\n            if (params.hasOwnProperty(param)) {\n                urlObj.searchParams.set(param, params[param]);\n            }\n        }\n        const index = url.indexOf(\"?\");\n        if (index !== -1) {\n            url = url.substr(0, index);\n        }\n        url += \"?\" + urlObj.searchParams.toString();\n        return url;\n    }\n\n    private static _addUrl(url: string, path: string): string {\n        if (!path) {\n            return url;\n        }\n        if (!url) {\n            return path;\n        }\n        if (url[url.length - 1] === \"/\") {\n            if (path[0] === \"/\") {\n                return url + path.substr(1);\n            }\n            else {\n                return url + path;\n            }\n        }\n        else {\n            if (path[0] === \"/\") {\n                return url + path;\n            }\n            else {\n                return url + \"/\" + path;\n            }\n        }\n    }\n\n    /**\n     * Add paths to a url adding path separators as necessary\n     *\n     * @param url The url\n     * @param paths One or more paths to add to the url\n     */\n    static addUrl(url: string, ...paths: string[]): string {\n        let _url = url;\n        for (const path of paths) {\n            _url = Utils._addUrl(_url, path);\n        }\n        return _url;\n    }\n\n    /**\n     * Return `true` if a url is absolute\n     */\n    static isUrlAbsolute(url: string): boolean {\n        return /^(?:[a-zA-Z][a-zA-Z\\d+.-]*:|\\/\\/)/.test(url);\n    }\n\n    /**\n     * Return an `HttpParams` object containing the fields in the passed object\n     */\n    static makeHttpParams(params: MapOf<string | boolean | number | Date | object | undefined>): HttpParams {\n        let httpParams = new HttpParams({encoder: new SqHttpParameterCodec()});\n        if (params) {\n            for (const param in params) {\n                if (params.hasOwnProperty(param)) {\n                    const _value = params[param];\n                    let value = \"\";\n                    if (Utils.isString(_value)) {\n                        value = _value;\n                    }\n                    else if (Utils.isBoolean(_value) || Utils.isNumber(_value)) {\n                        value = _value.toString();\n                    }\n                    else if (Utils.isDate(_value)) {\n                        value = Utils.toSysDateStr(_value);\n                    }\n                    else {\n                        value = Utils.toJson(_value);\n                    }\n                    httpParams = httpParams.set(param, value);\n                }\n            }\n        }\n        return httpParams;\n    }\n\n    private static escapeDiv: HTMLElement;\n\n    /**\n     * Return a string with HTML special characters escaped\n     *\n     * @param html The string to escape\n     */\n    static escapeHtml(html: string): string {\n        if (!html) {\n            return html;\n        }\n        if (!Utils.escapeDiv) {\n            Utils.escapeDiv = document.createElement(\"div\");\n        }\n        const textNode = Utils.escapeDiv.appendChild(document.createTextNode(html));\n        const escapedHtml = Utils.escapeDiv.innerHTML;\n        Utils.escapeDiv.removeChild(textNode);\n        return escapedHtml;\n    }\n\n    /**\n     * Move an element in an array\n     *\n     * @param array The array containing the element to move\n     * @param from The index of the element to move\n     * @param to The index that the element should be moved to\n     */\n    static arrayMove(array: any[], from: number, to: number): void {\n        if (to === from ) {\n            return;\n        }\n        array.splice(to, 0, array.splice(from, 1)[0]);\n    }\n\n    /**\n     * Set the contents of a target array to the contents of a source array\n     *\n     * @param target The target array\n     * @param source The source array\n     */\n    static arraySet(target: any[], source: any[]): any[] {\n        return target.splice.apply(target, [0, target.length].concat(source));\n    }\n\n    private static genericNext(value) {\n    }\n\n    private static genericError(error: any) {\n    }\n\n    private static genericComplete() {\n    }\n\n    /**\n     * A simple wrapped around `Observable.subscribe`\n     */\n    static subscribe<T>(\n        observable: Observable<T>,\n        next: (value: T) => void, error?: (err: any) => void, complete?: () => void): Subscription {\n        if (!next) {\n            next = Utils.genericNext;\n        }\n        if (!error) {\n            error = Utils.genericError;\n        }\n        if (!complete) {\n            complete = Utils.genericComplete;\n        }\n        return observable.subscribe(next, error, complete);\n    }\n\n    /**\n     * Return a value as a `Date` converting as necessary. If the value\n     * cannot be converted then `undefined` is returned\n     */\n    static asDate(value: any): Date | undefined {\n        if (!value) {\n            return undefined;\n        }\n\n        if (Utils.isDate(value)) {\n            return value as Date;\n        }\n\n        if (Utils.isString(value)) {\n            return Utils.toDate(value as string);\n        }\n\n        return undefined;\n    }\n\n    /**\n     * Return a value as a `number` converting as necessary. If the value\n     * cannot be converted then `undefined` is returned.\n     */\n    static asNumber(value: any): number | undefined {\n        if (!value && value !== 0) {\n            return undefined;\n        }\n        if (Utils.isNumber(value)) {\n            return value;\n        }\n        if (Utils.isString(value)) {\n            if (Utils.testInteger(value)) {\n                return Utils.toInt(value);\n            }\n            if (Utils.testFloat(value)) {\n                return Utils.toNumber(value);\n            }\n        }\n        return undefined;\n    }\n\n    /**\n     * Return a value as a `string` converting as necessary\n     */\n    static asString(value: any): string | undefined {\n        if (!value && value !== \"\") {\n            return undefined;\n        }\n\n        if (Utils.isString(value)) {\n            return value as string;\n        }\n\n        return value.toString();\n    }\n\n    /**\n     * Return `true` if a string represents an integer\n     */\n    static testInteger(str: string): boolean {\n        return /^(\\-|\\+)?([0-9]+)$/.test(str);\n    }\n\n    /**\n     * Return `true` if a string represents a floating point number\n     */\n    static testFloat(str: string): boolean {\n        return /^[-+]?[0-9]*\\.?[0-9]+([eE][-+]?[0-9]+)?$/.test(str);\n    }\n\n    /**\n     * Round the passed number away from zero: 4.5 => 5, -4.5 => -5\n     */\n    static roundAway(num: number): number {\n        return num >= 0 ? Math.round(num) : Math.sign(num) * Math.round(Math.abs(num));\n    }\n\n    private static matchSuffix(str: string, factor: number, ...suffixes: string[]): {str: string, factor: number} | undefined {\n        for (const suffix of suffixes) {\n            if (Utils.endsWith(str, suffix)) {\n                return {\n                    str: Utils.trimEnd(str.substr(0, str.length - suffix.length)),\n                    factor\n                };\n            }\n        }\n        return undefined;\n    }\n\n    /**\n     * Convert a size in string form to a number in bytes.\n     *\n     * The following units are supported: `b`, `kb`, `mb`, `gb`, `tb`, `pb`\n     *\n     * For example `2.5 gb` will return `2621440`.\n     */\n    static toSize(str: string, _default = 0): number {\n        str = Utils.trim(str);\n        if (!str) {\n            return _default;\n        }\n        let factor = 1;\n        let ret = Utils.matchSuffix(str, 1024 * 1024 * 1024 * 1024 * 1024, \"PB\", \"PO\");\n        if (ret === undefined) {\n            ret = Utils.matchSuffix(str, 1024 * 1024 * 1024 * 1024, \"TB\", \"TO\");\n        }\n        if (ret === undefined) {\n            ret = Utils.matchSuffix(str, 1024 * 1024 * 1024, \"GB\", \"GO\");\n        }\n        if (ret === undefined) {\n            ret = Utils.matchSuffix(str, 1024 * 1024, \"MB\", \"MO\");\n        }\n        if (ret === undefined) {\n            ret = Utils.matchSuffix(str, 1024, \"KB\", \"KO\");\n        }\n        if (ret === undefined) {\n            ret = Utils.matchSuffix(str, 1, \"B\", \"O\");\n        }\n        if (ret !== undefined) {\n            str = ret.str;\n            factor = ret.factor;\n        }\n        if (!Utils.testFloat(str)) {\n            return _default;\n        }\n        const value = Utils.toNumber(str, _default) * factor;\n        return Math.round(value);\n    }\n\n    private static calculateDuration(current: number, unit: string): number {\n        switch (Utils.toLowerCase(unit)) {\n            case \"d\":    case \"j\":\n            case \"days\": case \"jours\":\n            case \"day\":  case \"jour\":\n                return current * Utils.oneDay;\n            case \"h\":\n            case \"hours\": case \"heures\":\n            case \"hour\":  case \"heure\":\n                return current * Utils.oneHour;\n            case \"m\":\n            case \"minutes\": case \"minute\":\n            case \"mins\":    case \"min\":\n                return current * Utils.oneMinute;\n            case \"s\":\n            case \"seconds\":  case \"secondes\":\n            case \"second\":   case \"seconde\":\n            case \"secs\": case \"sec\":\n                return current * Utils.oneSecond;\n                break;\n            case \"ms\":\n            case \"milliseconds\": case \"miliseconds\":  case \"millisecondes\": case \"milisecondes\":\n            case \"millisecond\":  case \"milliseconde\": case \"milisecond\":    case \"miliseconde\":\n                return current;\n            default:\n                return 0;\n        }\n    }\n\n    /**\n     * Convert a duration in string form to a number in milliseconds.\n     *\n     * These units are supported: `days`, `hours`, `minutes`, `seconds`, `milliseconds` (abbreviations are also supported)\n     *\n     * For example `3 h 2mins 4s => 10924000`\n     *\n     * @param defaultUnit The unit to use if no units are in the string. The default value is `ms`\n     */\n    static toDuration(str: string, defaultUnit = \"ms\"): number {\n        let total = 0;\n        if (str) {\n            let current = 0;\n            const tokens = str.match(/[0-9\\.,]+|[a-zA-Z]+/g) || [];\n            for (const token of tokens) {\n                if (/[a-zA-Z]/.test(token)) {\n                    total += Utils.calculateDuration(current, token);\n                    current = 0;\n                }\n                else {\n                    if (current) {\n                        total += Utils.calculateDuration(current, defaultUnit);\n                    }\n                    current = Utils.toNumber(token);\n                }\n            }\n            if (current) {\n                total += Utils.calculateDuration(current, defaultUnit);\n            }\n        }\n        return total;\n    }\n}\n","import {Component, Input, OnChanges} from \"@angular/core\";\nimport {Record} from \"@sinequa/core/web-services\";\nimport {SearchService} from \"@sinequa/components/search\";\n\n@Component({\n    selector: \"sq-preview-links\",\n    // For highlight buttons...\n    // http://stackoverflow.com/questions/21245541/min-and-max-width-mess-up-text-align-center\n    templateUrl: \"./preview-links.html\",\n    styleUrls: [\"./preview-links.css\"]\n})\nexport class BsPreviewLinks implements OnChanges {\n    @Input() record: Record;\n    @Input() resultId: string;\n    originalDocumentUrl: string;\n\n    constructor(\n        private searchService: SearchService) {\n    }\n\n    public ngOnChanges() {\n        this.originalDocumentUrl = this.record.url1;\n    }\n\n    click() {\n        this.searchService.notifyOpenOriginalDocument(this.record, this.resultId);\n    }\n}","<div *ngIf=\"!!originalDocumentUrl\" class=\"card sq-facet\">\n    <div class=\"card-body\">\n        <nav>\n            <ul class=\"nav nav-pills nav-stacked\">\n                <li class=\"nav-item\">\n                    <a href=\"{{originalDocumentUrl}}\" (click)=\"click()\" class=\"nav-link originalDocumentLink\" target=\"_blank\">\n                        <span class=\"far fa-file sq-icon-file-{{record.fileext}}\"></span> {{'msg#preview.originalDocument' | sqMessage}}\n                    </a>\n                </li>\n            </ul>\n        </nav>\n    </div>\n</div>","export default {\n    \"heatmap\": {\n        \"name\": \"Carte de chaleur\",\n        \"nodata\": \"Pas de données à afficher\",\n        \"maxX\": \"Nombre maximum d'éléments sur l'axe X\",\n        \"maxY\": \"Nombre maximum d'éléments sur l'axe Y\",\n        \"rescale\": \"Redimensionner les axes\",\n        \"colors\": \"Jeu de couleurs\",\n        \"blue\": \"Bleu\",\n        \"red\": \"Rouge\",\n        \"green\": \"Vert\",\n        \"diverging\": \"Divergent\",\n        \"spectral\": \"Spectre\",\n        \"cool\": \"Froid\",\n        \"defaults\": \"Valeurs par défaut\",\n        \"showing\": \"{shown, number} sur {total, number} éléments affichés\",\n        \"tooltip\": \"{count, plural, one {# élément} other {# éléments}}\"\n    }\n};\n","export * from \"./bootstrap/index\";\nexport * from \"./messages/index\";","import {Component, Inject, OnInit} from \"@angular/core\";\nimport {ValidatorFn} from \"@angular/forms\";\nimport {CdkDragDrop} from \"@angular/cdk/drag-drop\";\nimport {MODAL_MODEL, ModalButton, ModalResult} from \"@sinequa/core/modal\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {AuditEvent, AuditEventType} from \"@sinequa/core/web-services\";\nimport {AlertsService, Alert, AlertEventType, ManageAlertsModel} from \"../../alerts.service\";\n\n@Component({\n    selector: \"sq-manage-alerts\",\n    templateUrl: \"./manage-alerts.html\",\n    styleUrls: [\"./manage-alerts.scss\"]\n})\nexport class BsManageAlerts implements OnInit {\n    reordering: boolean;\n    buttons: ModalButton[];\n    removeAllButton: ModalButton;\n    nameValidators: ValidatorFn[];\n    showDirtyMessage = false;\n\n    constructor(\n        @Inject(MODAL_MODEL) public model: ManageAlertsModel,\n        public alertsService: AlertsService) {\n        this.reordering = false;\n    }\n\n    ngOnInit() {\n        this.createButtons();\n    }\n\n    addAuditEvent(auditEvent: AuditEvent) {\n        if (!this.model.auditEvents) {\n            this.model.auditEvents = [];\n        }\n        this.model.auditEvents.push(auditEvent);\n    }\n\n    reorder() {\n        this.reordering = !this.reordering;\n    }\n\n    remove(alert: Alert, index: number) {\n        this.model.alerts.splice(index, 1);\n        this.removeAllButton.visible = this.model.alerts.length > 0;\n        this.addAuditEvent({\n            type: AuditEventType.Alert_Delete,\n            detail: {\n                alert: alert.name\n            }\n        });\n        return false;\n    }\n\n    editAlert(alert: Alert) {\n        if (!this.reordering) {\n            const alert1 = Utils.copy(alert);\n            this.alertsService.editAlertModal(alert1, true, this.model.searchRoute)\n                .then(result => {\n                    if (result) {\n                        Utils.copy(alert1, alert);\n                        this.addAuditEvent({\n                            type: AuditEventType.Alert_Edit,\n                            detail: {\n                                alert: alert.name\n                            }\n                        });\n                    }\n                });\n        }\n        return false;\n    }\n\n    dropped(drop: CdkDragDrop<Alert[]>) {\n        Utils.arrayMove(this.model.alerts, drop.previousIndex, drop.currentIndex);\n    }\n    \n    private createButtons() {\n        this.buttons = [\n            this.removeAllButton = new ModalButton({\n                text: \"msg#manageAlerts.removeAll\",\n                result: ModalResult.Custom,\n                action: (button) => {\n                    this.model.alerts.splice(0);\n                    button.visible = false;\n                    this.addAuditEvent({\n                        type: AlertEventType.DeleteAll\n                    });\n                },\n                visible: this.model.alerts.length > 0\n            }),\n            new ModalButton({\n                result: ModalResult.OK,\n                primary: true\n            }),\n            new ModalButton({\n                result: ModalResult.Cancel,\n                action: (button) => {\n                    if (this.model.auditEvents && this.model.auditEvents?.length > 0) {\n                        button.result = ModalResult.Custom;\n                        this.showDirtyMessage = true;\n                        this.createYesNoButtons();\n                    }\n                }\n            })\n        ];\n    }\n    \n    private createYesNoButtons() {\n        this.buttons = [\n            new ModalButton({\n                result: ModalResult.Yes,\n                primary: true,\n            }),\n            new ModalButton({\n                result: ModalResult.No,\n                action: (button) => {\n                    button.result = ModalResult.Custom;\n                    this.showDirtyMessage = false;\n                    this.createButtons();\n                }\n            })\n        ];\n    }\n}\n","<form name=\"manageAlerts\" novalidate>\n    <sq-modal [title]=\"'msg#manageAlerts.title'\" [buttons]=\"buttons\">\n        <div *ngIf=\"model.alerts.length\" class=\"form-group clearfix\">\n            <button type=\"button\" class=\"btn btn-secondary float-right\" (click)=\"reorder()\">{{(reordering ? \"msg#manageAlerts.edit\" : \"msg#manageAlerts.reorder\") | sqMessage}}</button>\n        </div>\n        <div class=\"form-group\">\n            <div class=\"list-group\" cdkDropList [cdkDropListData]=\"model.alerts\" [cdkDropListDisabled]=\"!reordering\" (cdkDropListDropped)=\"dropped($event)\">\n                <a *ngFor=\"let alert of model.alerts; let $index = index\" href=\"#\" (click)=\"editAlert(alert)\" cdkDrag \n                    [ngClass]=\"['list-group-item list-group-item-action d-flex w-auto-unimportant', reordering ? 'cursor-move': '']\">\n                    <div [ngClass]=\"{'sq-active': !reordering, 'sq-alert-text': true}\">{{alert.name}}</div>\n                    <div class=\"ml-auto\">\n                        <a *ngIf=\"!reordering\" class=\"ml-2\" href=\"#\" (click)=\"remove(alert, $index)\" title=\"{{'msg#manageAlerts.remove' | sqMessage}}\">\n                            <span class=\"fas fa-times sq-remove\"></span>\n                        </a>\n                        <span *ngIf=\"reordering\" class=\"ml-2 fas fa-bars sq-move\"></span>\n                    </div>\n                </a>\n            </div>\n        </div>\n        <sq-alert-message footer [message]=\"'msg#editAlert.lossDataMessage' | sqMessage\" *ngIf=\"showDirtyMessage\"></sq-alert-message>\n    </sq-modal>\n</form>\n","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport { Action } from '@sinequa/components/action';\nimport { LoginService } from '@sinequa/core/login';\nimport { SearchService } from '@sinequa/components/search';\nimport { SavedQueriesService } from '../../saved-queries.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'sq-saved-queries-menu',\n  templateUrl: './saved-queries-menu.component.html'\n})\nexport class BsSavedQueriesMenuComponent implements OnInit, OnDestroy {\n  @Input() searchRoute: string = \"/search\";\n  @Input() icon: string = \"far fa-save\";\n  @Input() autoAdjust: boolean = true;\n  @Input() autoAdjustBreakpoint: string = 'xl';\n  @Input() collapseBreakpoint: string = 'sm';\n  @Input() size: string;\n\n  menu: Action | undefined;\n\n  // Saved queries actions\n  manageAction: Action;\n  saveAction: Action;\n\n  constructor(\n    public loginService: LoginService,\n    public savedQueriesService: SavedQueriesService,\n    public searchService: SearchService) {\n\n    this.saveAction = new Action({\n      text: \"msg#savedQueries.saveCurrentQuery\",\n      title: \"msg#savedQueries.saveCurrentQuery\",\n      action: () => { this.savedQueriesService.createSavedQueryModal(); }\n    });\n\n    this.manageAction = new Action({\n      text: \"msg#savedQueries.manageSavedQueries\",\n      title: \"msg#savedQueries.manageSavedQueries\",\n      action: () => { this.savedQueriesService.manageSavedQueriesModal(); }\n    });\n\n  }\n\n  ngOnInit() {\n    this.updateMenu();\n    this._savedQueriesSubscription = this.savedQueriesService.changes.subscribe({\n      next: () => { this.updateMenu(); }\n    });\n    this._loginSubscription = this.loginService.events.subscribe(event => {\n      if(event.type === \"session-changed\"){\n        this.updateMenu();\n      }\n    });\n    this._searchSubscription = this.searchService.resultsStream.subscribe(results => {\n      this.updateMenu();\n    });\n  }\n\n  private _savedQueriesSubscription: Subscription;\n  private _loginSubscription: Subscription;\n  private _searchSubscription: Subscription;\n  ngOnDestroy(){\n    if(this._savedQueriesSubscription){\n      this._savedQueriesSubscription.unsubscribe();\n    }\n    if(this._loginSubscription){\n      this._loginSubscription.unsubscribe();\n    }\n    if(this._searchSubscription){\n      this._searchSubscription.unsubscribe();\n    }\n  }\n\n  updateMenu() {\n\n    if (!this.loginService.complete) {\n      this.menu = undefined;\n      return;\n    }\n\n    const savedQueriesActions: Action[] = [];\n\n    if (this.savedQueriesService.hasSavedQuery) {\n        const scrollGroup = new Action({\n            scrollGroup: true,\n            children: this.savedQueriesService.savedqueries.map(savedQuery => new Action({\n              text: savedQuery.name,\n              title: savedQuery.name,\n              data: savedQuery,\n              action: item => this.savedQueriesService.searchSavedQuery(item.data, this.searchRoute)\n          }))\n        });\n        savedQueriesActions.push(scrollGroup);\n    }\n\n    if (!!this.searchService.results) {\n      savedQueriesActions.push(this.saveAction);\n    }\n\n    if (this.savedQueriesService.hasSavedQuery) {\n      savedQueriesActions.push(this.manageAction);\n    }\n\n    this.menu = new Action({\n        icon: this.icon,\n        text: \"msg#savedQueries.savedQueries\",\n        children: savedQueriesActions\n    });\n  }\n}\n","<li *ngIf=\"!!menu && !menu.hidden\" class=\"nav-item dropdown\" \n    [sq-action-item]=\"{item: menu, size: size, autoAdjust: autoAdjust, autoAdjustBreakpoint: autoAdjustBreakpoint, inMenu: true}\"\n    [collapseBreakpoint]=\"collapseBreakpoint\"\n></li>","export * from \"./public-api\";","import {MapOf, JsonObject, PatternMatcher} from \"@sinequa/core/base\";\n\n/**\n * Describes the fields available in all configuration objects. By convention, configuration object\n * interfaces are prefixed by `CC`.\n */\nexport interface CCConfig {\n    /**\n     * The name of the configuration object\n     */\n    name: string;\n    /**\n     * An optional description of the configuration object\n     */\n    description?: string;\n}\n\n/**\n * Describes the fields available in all web service configuration objects\n */\nexport interface CCWebService extends CCConfig {\n    webServiceType: \"Query\" | \"sponsoredlinks\" | \"queryexport\" | \"Preview\" | \"Labels\" | \"Autocomplete\" | \"DataSet\";\n}\n\n/**\n * Describes the fields available in the index configuration object\n */\nexport interface CCIndex extends CCConfig {\n    /**\n     * The type of the index\n     */\n    indexType: string;\n    /**\n     * The columns in the index\n     */\n    columns?: MapOf<CCColumn>;\n}\n\n/**\n * Describes the fields available in a list item configuration object\n */\nexport interface CCListItem {\n    /**\n     * The name is used to display an item\n     */\n    name: string;\n    /**\n     * The value holds the underlying value of the item\n     */\n    value: string;\n}\n\n/**\n * Describes a list configuration object. Lists can be created in `App Dependencies/Lists` in the admin interface.\n */\nexport interface CCList extends CCConfig {\n    /**\n     * The name of the list\n     */\n    name: string;\n    /**\n     * The items in the list\n     */\n    items: CCListItem[];\n}\n\n/**\n * Describes an RFM action configuration object\n */\nexport interface CCRFMAction {\n    name: string;\n    enabled: boolean;\n    actionEnabled: boolean;\n    noMenu: boolean;\n    displayUnrated: boolean;\n    negAvailable: boolean;\n}\n\n/**\n * Describes an RFM configuration object\n */\nexport interface CCRFM {\n    name: string;\n    click: CCRFMAction;\n    like: CCRFMAction;\n    important: CCRFMAction;\n}\n\n/**\n * Describes an aggregation configuration object\n */\nexport interface CCAggregation {\n    /**\n     * The name of the aggregation\n     */\n    name: string;\n    /**\n     * The underlying column in the aggregation\n     */\n    column: string;\n    /**\n     * Determines whether this aggregation should be included in a regular search\n     */\n    includeInStandardSearch: boolean;\n    /**\n     * The maximum number of values to retrieve\n     */\n    count: number;\n    /**\n     * The value of the `order` clause\n     */\n    order: string;\n    /**\n     * The value of the `mask` clause\n     */\n    mask: string;\n    /**\n     * The name of an associated distribution configuration object\n     */\n    distribution: string;\n    /**\n     * Determines whether the aggregation is requested in the context of the currently selected tab or globally.\n     * The default is to respect the [CCTabSearch.loadAggregationsForSelectedTab]{@link CCTabSearch#loadAggregationsForSelectedTab} setting\n     */\n    tabBehavior: \"\" | \"Default\" | \"LoadForSelectedTab\" | \"LoadForAllTabs\";\n    /**\n     * The separator used for crossed aggregations\n     */\n    keySeparator: string;\n    /**\n     * The display separator used for crossed aggregations\n     */\n    displayKeySeparator: string;\n}\n\n/**\n * Describes the fields for a tab configuration object\n */\nexport interface CCTab {\n    /**\n     * The name of the tab\n     */\n    name: string;\n    /**\n     * The display value of the tab\n     */\n    display: string;\n    /**\n     * The values in the tab distribution that contribute to this tab\n     */\n    value: string;\n    /**\n     * Set if this tab is the default to be used when no tab is specified in a query\n     */\n    isDefault: boolean;\n    /**\n     * Indexes to exclude when executing a query with this tab selected\n     */\n    excludedIndices: string;\n    /**\n     * Aggregations to exclude when executing a query with this tab selected\n     */\n    excludedAggregations: string;\n    /**\n     * Results sorting options that should be available when executing a query with this tab selected\n     */\n    sortingChoices: CCSortingChoice[];\n}\n\n/**\n * Describes the fields for the tab search configuration in a query. A tab search defines a special distribution which is evaluated\n * as a part of query to group the results by a set of tab items. The distribution gives the count of documents\n * associated with each tab item. The values associated with a tab item are used to filter a query when a tab item is selected.\n */\nexport interface CCTabSearch {\n    /**\n     * Determines whether this tab search is used in a query\n     */\n    isActive: boolean;\n    /**\n     * Defines the column to be used in the tab distribution and for filtering results by a selected tab item\n     */\n    column: string;\n    /**\n     * `true` if the associated column is a tree\n     */\n    columnIsTree: boolean;\n    /**\n     * Determines whether the overall document total should be calculated from the per-tab item documents totals\n     */\n    totalIsSumOfTabTotals: boolean;\n    /**\n     * Determines whether configured aggregations should be evaluated in the context of the selected tab or not.\n     * This setting can be overridden at the tab item level using [CCTab.excludedAggregations]{@link CCTab#excludedAggregations}\n     */\n    loadAggregationsForSelectedTab: boolean;\n    /**\n     * Determines the `minlevel` value to use when evaluating the tab distribution for a tree column\n     */\n    valueLevels: number;\n    /**\n     * Determines whether `post-group-by=true` should be used in the tab distribution\n     */\n    postGroupBy: boolean;\n    /**\n     * Determines whether 'merge-groups=true` should be used in the tab distribution. This is only used if `postGroupBy` is set to `true`\n     */\n    mergeGroups: boolean;\n    /**\n     * The set of configured tab items\n     */\n    tabs: CCTab[];\n}\n\n/**\n * Describes a sorting choice which can be selected for a query\n */\nexport interface CCSortingChoice {\n    /**\n     * The name of this sorting choice\n     */\n    name: string;\n    /**\n     * The description of this sorting choice\n     */\n    description: string;\n    /**\n     * The display value to use when rendering this sorting choice\n     */\n    display: string;\n    /**\n     * The `ORDER BY` clause to use when this sorting choice is selected\n     */\n    orderByClause: string;\n    /**\n     * Determines whether this sorting choice should be used as the default when\n     * the query has no `text contains` clause\n     */\n    isDefaultNoRelevance: boolean;\n    /**\n     * Determines whether this sorting choice should be used as the default when\n     * the query has a `text contains` clause\n     */\n    isDefaultWithRelevance: boolean;\n}\n\n/**\n * Describes a scope configuration object. A scope defines a set of conditions which\n * will be added to the query `where clause` when the scope is selected\n */\nexport interface CCScope {\n    /**\n     * The name of the scope\n     */\n    name: string;\n    /**\n     * The description of the scope\n     */\n    description: string;\n    /**\n     * The display value to be used when rendering the scope\n     */\n    display: string;\n    /**\n     * Determines whether the scope is active or not\n     */\n    isActive: boolean;\n    /**\n     * Determines whether the scope should be considered the default scope\n     * when a scope is not specified in a query\n     */\n    isDefault: boolean;\n}\n\n/**\n * Defines different precision operators that can be automatically added to a `text contains` clause\n * when no precision operators are present.\n *\n * `Default` - no operators are added\n *\n * `ExactExpression` - text surrounded by `\"...\"`\n *\n * `InTheSamePhrase` - text surrounded by `[...]`\n *\n * `EveryWord` - text surrounded by `+(...)`\n */\nexport type QueryPrecision  = \"Default\" | \"ExactExpression\" | \"InTheSamePhrase\" | \"EveryWord\";\n\n/**\n * Defines strategies that can used in the query search parameters. Each strategy defines a pair of word weight (`ww`) and meaning\n * weight (`mw`) values to be used.\n *\n * `Default` - no `ww` and `mw` parameters used\n *\n * `WordsOnly` - `ww=1;mw=0`\n *\n * `WordsFirst` - `ww=0.8;mw=0.2`\n *\n * `WordsAndMeaning` - `ww=0.6;mw=0.4`\n *\n * `MeaningFirst` - `ww=0.3;mw=0.7`\n *\n * `MeaningOnly` - `ww=0;mw=1`\n */\nexport type QueryStrategy = \"Default\" | \"WordsOnly\" | \"WordsFirst\" | \"WordsAndMeaning\" | \"MeaningFirst\" | \"MeaningOnly\";\n\n/**\n * Defines modes for the spelling correction of search terms and did-you-mean functionality. Corrections\n * are based on edit and phonetic distance and exist among the searched documents\n *\n * `default | classic` - corrections are sought for terms that are not present in any documents. The original terms\n * and corrections are included in the query\n *\n * `smart` - corrections are sought for terms that are present in less than 10 documents and where the correction\n * is 20 times more frequent than the original term. Only the best corrections are kept. The original terms and corrections\n * are included in the query. The [Results.didYouMean]{@link Results#didYouMean] member is populated allowing for a \"We included\n * results for these terms...\" feedback to be displayed\n *\n * `correct` - corrections are sought for terms that are present in less than 10 documents and where the correction is\n * 20 times more frequent than the original term. Only the best corrections are kept. The original terms that have corrections\n * are not included in the query. The [Results.didYouMean]{@link Results#didYouMean] member is populated allowing for a \"Your query\n * has been corrected to...\" feedback to be displayed\n *\n * `dymonly` - corrections are sought for terms that are present in less than 10 documents and where the correction is\n * 20 times more frequent than the original term. The actual query is unaffected but the\n * [Results.didYouMean]{@link Results#didYouMean] member will be populated allowing for a \"Did you mean...\" feedback to be\n * displayed\n *\n * `force` - corrections are sought for all terms. All terms and corrections are included in the query\n *\n * `false` - no spelling correction processing occurs\n */\nexport type SpellingCorrectionMode = \"default\" | \"classic\" | \"smart\" | \"correct\" | \"dymonly\" | \"force\" | \"false\";\n\n/**\n * Describes the query web service configuration object\n */\nexport interface CCQuery extends CCWebService {\n    /**\n     * Defines the number of records or documents to request when executing the query\n     */\n    pageSize: number;\n    /**\n     * Defines the aggregations that should be included in the query\n     */\n    aggregations: CCAggregation[];\n    /**\n     * Defines configuration information for the columns in the indexes\n     */\n    columnsInfo: CCColumnsInfo;\n    /**\n     * Defines the sorting choices that can be used\n     */\n    sortingChoices: CCSortingChoice[];\n    /**\n     * Defines the scopes that can be used\n     */\n    scopes: CCScope[];\n    /**\n     * Defines whether scopes processing is activated for this query\n     */\n    scopesActive: boolean;\n    /**\n     * Defines the spelling correction mode for this query\n     */\n    sCMode: SpellingCorrectionMode;\n    /**\n     * Defines the distance to use for the `NEAR` operator when no value is specified\n     */\n    defaultNearValue: number;\n    /**\n     * Defines the tab search configuration for this query\n     */\n    tabSearch: CCTabSearch;\n    /**\n     * Defines the name of the [CCRFM]{@link CCRFM} configuration for this query\n     */\n    rFM: string;\n    /**\n     * Defines the default language to use when parsing the query text\n     */\n    questionLanguage: string;\n    /**\n     * Defines the default precision to use for this query\n     */\n    questionPrecision: QueryPrecision;\n    /**\n     * Defines the default strategy to use for this query\n     */\n    questionStrategy: QueryStrategy;\n    /**\n     * Defines the indexes that the query selects from\n     */\n    searchIndexes: string;\n    /**\n     * Determines whether filter-less queries are permitted\n     */\n    allowEmptySearch: boolean;\n    /**\n     * Defines the patterns to control which column fields are allowed\n     * in fielded search expressions.\n     */\n    columnFieldsIncluded: string[];\n    /**\n     * Defines the patterns to control which column fields are disallowed\n     * in fielded search expressions.\n     */\n    columnFieldsExcluded: string[];\n    /**\n     * The `PatternMatcher` instance created on the client using the `columnFieldsIncluded` and `columnFieldsExcluded` values.\n     */\n    $columnFieldsPattern: PatternMatcher;\n    /**\n     * Defines the patterns to control which part name fields are allowed\n     * in fielded search expressions.\n     */\n    partnameFieldsIncluded: string[];\n    /**\n     * Defines the patterns to control which part name fields are disallowed\n     * in fielded search expressions.\n     */\n    partnameFieldsExcluded: string[];\n    /**\n     * The `PatternMatcher` instance created on the client using the `partnameFieldsIncluded` and `partnameFieldsExcluded` values.\n     */\n    $partnameFieldsPattern: PatternMatcher;\n}\n\n/**\n * Defines configuration parameters for a column\n */\nexport interface CCColumnInfo {\n    /**\n     * The column name\n     */\n    name: string;\n    /**\n     * A description of the column\n     */\n    description: string;\n    /**\n     * A comma-separated list of aliases for the column\n     */\n    aliases: string;\n    /**\n     * A display label for the column\n     */\n    label: string;\n    /**\n     * A plural form display label for the column\n     */\n    labelPlural: string;\n    /**\n     * The name of a formatter function that produces a formatted string value from the column value. See {@link FormatService}\n     */\n    formatter: string;\n    /**\n     * A set of transform functions that are applied to the a formatted string value. See {@link FormatService}\n     */\n    transforms: string;\n    /**\n     * The name of a parser function that produces a column value from a formatted string value. See {@link FormatService}\n     */\n    parser: string;\n}\n\n/**\n * Describes a set of `CCColumnInfo` objects\n */\nexport interface CCColumnsInfo {\n    columns: CCColumnInfo[];\n}\n\n/**\n * Defines the range of column types for a column\n */\nexport const enum EngineType {\n    none = 0,\n    bool = 1,\n    date = 2,\n    dateTime = 3,\n    time = 4,\n    unsigned = 5,\n    integer = 6,\n    float = 7,\n    double = 8,\n    dates = 9,\n    dateTimes = 10,\n    times = 11,\n    varchar = 12,\n    binary = 13,\n    string = 14,\n    csv = 15\n}\n\n/**\n * Defines the type modifiers that can be used for a column\n */\nexport const enum EngineTypeModifier {\n    none  = 0x0000000,\n    a     = 0x0000805, // a -> lc\n    // b  = 0x0000002,\n    c     = 0x0000004,\n    d     = 0x0000008,\n    e     = 0x0000814, // e -> lc\n    // f  = 0x0000020,\n    // g  = 0x0000040,\n    // h  = 0x0000080,\n    i     = 0x0000100,\n    // j  = 0x0000200,\n    // k  = 0x0000400,\n    l     = 0x0000804, // l -> c\n    // m  = 0x0001000,\n    n     = 0x0002000,\n    // o  = 0x0004000,\n    // p  = 0x0008000,\n    // q  = 0x0010000,\n    // r  = 0x0020000,\n    // s  = 0x0040000,\n    t     = 0x0080004, // t -> c\n    // u  = 0x0100000,\n    // v  = 0x0200000,\n    // w  = 0x0400000,\n    x     = 0x0800000,\n    // y  = 0x1000000,\n    z     = 0x2000000,\n\n    f_ordinal    = 0x0002000, //             n\n    f_multidates = 0x0002000, //             n\n    f_varchar    = 0x2000000, //                   z\n    f_binary     = 0x2002000, //             n     z\n    f_string     = 0x2002108, //     d   i   n     z\n    f_csv        = 0x288291d, // a c d e i l n t x z\n\n    f_overridable= 0x2000108  //     d   i         z\n}\n\n/**\n * Defines the fields for a column configuration object defined in an index. See {@link CCIndex}\n */\nexport interface CCColumn {\n    name: string;\n    description?: string;\n    type: string;\n    typeModifier?: string;\n    eType: EngineType;\n    eTypeModifier: EngineTypeModifier;\n    aliases?: string[];\n    label?: string;\n    labelPlural?: string;\n    formatter?: string;\n    transforms?: string;\n    parser?: string;\n}\n\n/**\n * Enum representing supported export source.\n */\nexport enum ExportSourceType {\n    None = 0,\n    Result = 1,\n    Selection = 2,\n    SavedQuery = 4\n}\n\n/**\n * Enum representing supported export format.\n */\nexport enum ExportOutputFormat {\n    None = 0,\n    Csv = 1,\n    Xlsx = 2,\n    Json = 4\n}\n\n/**\n * Data model of the Export dialog.\n */\nexport interface ExportDialogModel {\n    format: ExportOutputFormat;\n    export: ExportSourceType;\n    webService: string;\n    maxCount?: number;\n    queryName?: string;\n}\n\n/**\n * Describes the fields in the labels web service configuration object\n */\nexport interface CCLabels extends CCWebService {\n    /**\n     * The the index column to use for public labels\n     */\n    publicLabelsField: string;\n    /**\n     * A semi-colon separated list of predefined public labels\n     */\n    defaultPublicLabels: string;\n    /**\n     * Determines whether new public labels can be created by users\n     */\n    allowPublicLabelsCreation: boolean;\n    /**\n     * A list of principal ids identifying users and groups that can create public labels\n     */\n    publicLabelsCreationPrincipalIds: string;\n    /**\n     * Determines whether existing public labels can be modified by users\n     */\n    allowPublicLabelsModification: boolean;\n    /**\n     * A list of principal ids identifying users and groups that can modify existing public labels\n     */\n    publicLabelsModificationPrincipalIds: string;\n\n    /**\n     * The the index column to use for private labels\n     */\n    privateLabelsField: string;\n\n    /**\n     * The maximum number of labels to return when listing labels using the [LabelsWebService.list]{@link LabelsWebService#list} api\n     */\n    labelsAutoSuggestMaxCount: number;\n\n    /**\n     * The wildcard character to recognise when listing labels using the [LabelsWebService.list]{@link LabelsWebService#list} api\n     */\n    labelsAutoSuggestWildcard: string;\n}\n\n/**\n * Describes the fields in the autocomplete web service configuration object\n */\nexport interface CCAutocomplete extends CCWebService {\n    /**\n     * Defines whether this autocomplete service is enabled\n     */\n    enabled: boolean;\n    /**\n     * Contains a comma-separated list of suggest queries for this service\n     */\n    suggestQueries: string;\n    /**\n     * Defines the minimum number of characters that must be entered before presenting\n     * suggestions\n     */\n    inputLengthTrigger: number;\n    /**\n     * Defines whether suggestions should be grouped into categories when they are displayed\n     */\n    groupSuggestionsByCategory: boolean;\n    /**\n     * Defines whether fielded search should be used when processing suggestions\n     */\n    useFieldedSearch: boolean;\n    /**\n     * Defines the number of items per category to display when a category is not collapsed\n     */\n    uncollapsedItemsPerCategory: number;\n}\n\n/**\n * Describes the fields in the application configuration object\n */\nexport interface CCApp extends CCConfig {\n    /**\n     * Identifies the version of the application configuration. This field can be passed\n     * to the [AppWebService.refresh]{@link AppWebService#refresh} api to update the application\n     * configuration if the version now available on the server is different.\n     */\n    versionId: string;\n    /**\n     * Defines the queries configured on the application\n     */\n    queries: MapOf<CCQuery>;\n    /**\n     * Defines the RFM objects configured on the application\n     */\n    rfms: MapOf<CCRFM>;\n    /**\n     * Defines the indexes configured on the application\n     */\n    indexes: MapOf<CCIndex>;\n    /**\n     * Defines the lists configured on the application\n     */\n    lists: MapOf<CCList>;\n    /**\n     * Defines the web services configured on the application\n     */\n    webServices: MapOf<CCWebService>;\n    /**\n     * A comma-separated list of the names of the queries configured on the application\n     */\n    queryNames: string;\n    /**\n     * The name of the labels web service configured on the application\n     */\n    labels: string;\n    /**\n     * The name of the preview web service configured on the application\n     */\n    preview: string;\n    /**\n     * The name of the autocomplete web service configured on the application\n     */\n    autocomplete: string;\n    /**\n     * The name of the sponsored links web service configured on the application\n     */\n    sponsoredLinks: string;\n    /**\n     * The name of the query export web service configured on the application\n     */\n    queryExport: string;\n    /**\n     * Determines whether RSS feeds are available on saved queries\n     */\n    queryRssEnabled: boolean;\n    /**\n     * Custom JSON configuration (see App Customization tab in Sinequa admin)\n     */\n    data: JsonObject;\n    /**\n     * The version of the server API.\n     * This field is used to compare with [MINIMUM_COMPATIBLE_SERVER_API_VERSION]{@link MINIMUM_COMPATIBLE_SERVER_API_VERSION}\n     */\n    apiVersion: string;\n    /**\n     * The workspace associated with this app\n     */\n    workspaceApp: string;\n    /**\n     * The name of the default query\n     */\n    defaultQueryName: string;\n}\n\n/**\n * The minimum server api version that compatible with this version of SBA.\n */\nexport const MINIMUM_COMPATIBLE_SERVER_API_VERSION = '1.0';\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { Action } from '@sinequa/components/action';\nimport { FacetConfig } from '@sinequa/components/facet';\nimport { PreviewDocument, PreviewService } from '@sinequa/components/preview';\nimport { SearchService } from '@sinequa/components/search';\nimport { SelectionService } from '@sinequa/components/selection';\nimport { UIService } from '@sinequa/components/utils';\nimport { AppService } from '@sinequa/core/app-utils';\nimport { IntlService } from '@sinequa/core/intl';\nimport { LoginService } from '@sinequa/core/login';\nimport { AuditWebService, Record } from '@sinequa/core/web-services';\nimport { Subscription } from 'rxjs';\nimport { FACETS, FEATURES, METADATA } from '../../config';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss']\n})\nexport class SearchComponent implements OnInit, OnDestroy {\n\n  // Dynamic display of facets titles/icons in the multi-facet component\n  public multiFacetIcon? = \"fas fa-filter fa-fw\";\n  public multiFacetTitle = \"msg#facet.filters.title\";\n\n  // Document \"opened\" via a click (opens the preview facet)\n  public openedDoc?: Record;\n\n  // Custom action for the preview facet (open the preview route)\n  public previewCustomActions: Action[];\n\n  // Whether the left facet bar is shown\n  public _showFilters = this.ui.screenSizeIsEqual('md');\n  // Whether the menu is shown on small screens\n  public _showMenu = false;\n\n  private _searchServiceSubscription: Subscription;\n\n  constructor(\n    private previewService: PreviewService,\n    private titleService: Title,\n    private intlService: IntlService,\n    private appService: AppService,\n    public searchService: SearchService,\n    public selectionService: SelectionService,\n    public loginService: LoginService,\n    public auditService: AuditWebService,\n    public ui: UIService,\n  ) {\n\n    // Initialize the facet preview action (opens the preview route)\n    const expandPreviewAction = new Action({\n      icon: \"fas fa-expand-alt\",\n      title: \"msg#facet.preview.expandTitle\",\n      action: () => {\n        if (this.openedDoc) {\n          this.previewService.openRoute(this.openedDoc, this.searchService.query);\n        }\n      }\n    });\n\n    this.previewCustomActions = [ expandPreviewAction ];\n  }\n\n  /**\n   * Initialize the page title\n   */\n  ngOnInit() {\n    this.titleService.setTitle(this.intlService.formatMessage(\"msg#search.pageTitle\", {search: \"\"}));\n\n    this._searchServiceSubscription = this.searchService.resultsStream\n      .subscribe(results => {\n        this.titleService.setTitle(this.intlService.formatMessage(\"msg#search.pageTitle\", {search: this.searchService.query.text || \"\"}));\n        if (!this.showResults) {\n          this.openedDoc = undefined;\n          this._showFilters = false;\n        }\n      });\n  }\n\n  /**\n   * Unsubscribe from the search service\n   */\n  ngOnDestroy(){\n    this._searchServiceSubscription.unsubscribe();\n  }\n\n  /**\n   * Returns the configuration of the facets displayed in the facet-multi component.\n   * The configuration from the config.ts file can be overriden by configuration from\n   * the app configuration on the server\n   */\n  public get facets(): FacetConfig[] {\n    return this.appService.app?.data?.facets as any as FacetConfig[] || FACETS;\n  }\n\n  /**\n   * Returns the list of features activated in the top right menus.\n   * The configuration from the config.ts file can be overriden by configuration from\n   * the app configuration on the server\n   */\n  public get features(): string[] {\n    return this.appService.app?.data?.features as string[] || FEATURES;\n  }\n\n  /**\n   * Returns the configuration of the metadata displayed in the facet-preview component.\n   * The configuration from the config.ts file can be overriden by configuration from\n   * the app configuration on the server\n   */\n  public get metadata(): string[] {\n    return this.appService.app?.data?.metadata as string[] || METADATA;\n  }\n\n  /**\n   * Responds to a change of facet in the multi facet\n   * @param facet\n   */\n  facetChanged(facet: FacetConfig){\n    if(!facet) {\n      this.multiFacetIcon = \"fas fa-filter fa-fw\";\n      this.multiFacetTitle = \"msg#facet.filters.title\";\n    }\n    else {\n      this.multiFacetIcon = facet.icon;\n      this.multiFacetTitle = facet.title;\n    }\n  }\n\n  /**\n   * Responds to a click on a document (setting openedDoc will open the preview facet)\n   * @param record\n   * @param event\n   */\n  onDocumentClicked(record: Record, event: Event) {\n    if(!this.isClickAction(event)){\n      this.openedDoc = record;\n      if(this.ui.screenSizeIsLessOrEqual('md')){\n        this._showFilters = false; // Hide filters on small screens if a document gets opened\n      }\n    }\n  }\n\n  /**\n   * Open the preview when this record has no url1\n   * @param record\n   * @param isLink\n   */\n  openPreviewIfNoUrl(record: Record, isLink: boolean) {\n    if(!isLink){\n      this.previewService.openRoute(record, this.searchService.query);\n    }\n  }\n\n  /**\n   * Responds to the preview facet being closed by a user action\n   */\n  closeDocument(){\n    if(this.openedDoc){\n      this.auditService.notify({\n        type: \"Preview.close\",\n        detail: this.previewService.getAuditPreviewDetail(this.openedDoc.id, this.searchService.query, this.openedDoc, this.searchService.results?.id)\n      });\n      this.openedDoc = undefined;\n      if(this.ui.screenSizeIsEqual('md')){\n        this._showFilters = true; // Show filters on medium screen when document is closed\n      }\n    }\n  }\n\n  /**\n   * Document is loaded and displayed on screen. It could be manipulated easily.\n   *\n   * eg: scroll to a specific location\n   * document.getContentWindow().scrollTo(0, 3000);\n   * @param document the document currently in preview\n   */\n  previewReady(document: PreviewDocument) {\n    // document.getContentWindow().scrollTo(0, Math.random() * 4000);\n  }\n\n  // VERY SPECIFIC TO THIS APP:\n  // Make sure the click is not meant to trigger an action (from sq-result-source or sq-result-title)\n  private isClickAction(event: Event): boolean {\n    if (event.type !== 'click') {\n      return true;\n    }\n    const target = event.target as HTMLElement;\n    if (!target) {\n      return false;\n    }\n    return event.type !== 'click' ||\n      target.tagName === \"A\" ||\n      target.tagName === \"INPUT\" ||\n      target.matches(\"sq-result-selector *, .sq-result-title, sq-result-source *, sq-labels *\");\n  }\n\n\n  /**\n   * Controls visibility of filters (small screen sizes)\n   */\n  get showFilters(): boolean {\n    return this.ui.screenSizeIsGreaterOrEqual('lg') || this._showFilters;\n  }\n\n  /**\n   * Show or hide the left facet bar (small screen sizes)\n   */\n  toggleFilters(){\n    this._showFilters = !this._showFilters;\n    if(this._showFilters){ // Close document if filters are displayed\n      this.openedDoc = undefined;\n    }\n  }\n\n  /**\n   * Controls visibility of menu (small screen sizes)\n   */\n  get showMenu(): boolean {\n    return this.ui.screenSizeIsGreaterOrEqual('sm') || (this._showMenu && !this._showFilters);\n  }\n\n  /**\n   * Show or hide the user menus (small screen sizes)\n   */\n  toggleMenu(){\n    this._showMenu = !this._showMenu;\n  }\n\n  /**\n   * Determine whether to show or hide results\n   */\n  get showResults(): boolean {\n    if(this.ui.screenSizeIsLessOrEqual('sm')){\n      return !this.showFilters && !this.openedDoc;\n    }\n    return true;\n  }\n\n  /**\n   * On small screens only show the search form when the facets are displayed\n   */\n  get showForm(): boolean {\n    return this.ui.screenSizeIsGreaterOrEqual('sm') || this.showFilters;\n  }\n\n  /**\n   * Whether the UI is in dark or light mode\n   */\n  isDark(): boolean {\n    return document.body.classList.contains(\"dark\");\n  }\n}\n","<div class=\"nav-wrapper\">\n    <!-- Navbar with app icon, search form, and menus -->\n    <nav class=\"navbar navbar-expand-sm\" [ngClass]=\"{'navbar-light bg-light': !isDark(), 'navbar-dark bg-dark': isDark()}\">\n        <div class=\"container-xl\">\n\n            <!-- Application logo -->\n            <a [routerLink]=\"['/home']\" title=\"Home\">\n                <img id=\"logo\" src=\"assets/sinequa-logo-light-lg.png\" alt=\"sinequa logo\" width=\"180px\" *ngIf=\"!isDark() && ui.screenSizeIsGreater('md')\">\n                <img id=\"logo\" src=\"assets/sinequa-logo-light-sm.png\" alt=\"sinequa logo\" width=\"30px\" *ngIf=\"!isDark() && ui.screenSizeIsLessOrEqual('md')\">\n                <img id=\"logo\" src=\"assets/sinequa-logo-dark-lg.png\" alt=\"sinequa logo\" width=\"150px\" *ngIf=\"isDark() && ui.screenSizeIsGreater('md')\">\n                <img id=\"logo\" src=\"assets/sinequa-logo-dark-sm.png\" alt=\"sinequa logo\" width=\"30px\" *ngIf=\"isDark() && ui.screenSizeIsLessOrEqual('md')\">\n            </a>\n\n            <!-- Button to toggle the visibility of facets on small screens -->\n            <button *ngIf=\"ui.screenSizeIsLessOrEqual('md')\" class=\"ml-2 btn btn-lg btn-{{isDark()? 'dark' : 'light'}}\" title=\"{{ 'msg#search.showFilters' | sqMessage }}\"\n                (click)=\"toggleFilters()\">\n                <i class=\"fas fa-filter text-muted\"></i>\n            </button>\n\n            <!-- Search form -->\n            <app-search-form class=\"flex-grow-1 flex-basis-0 mx-3\" *ngIf=\"showForm\"></app-search-form>\n\n            <!-- User menu which visibility can be toggled with a button on small screens -->\n            <button *ngIf=\"ui.screenSizeIsLess('sm') && !showFilters\" class=\"btn btn-lg btn-{{isDark()? 'dark' : 'light'}}\" title=\"{{ 'msg#search.showMenu' | sqMessage }}\"\n                (click)=\"toggleMenu()\">\n                <i class=\"fas fa-bars text-muted\"></i>\n            </button>\n            <ul class=\"navbar-nav navbar-right\" *ngIf=\"showMenu\" [ngClass]=\"{'full-width': ui.screenSizeIsLess('sm')}\">\n                <ng-container *ngFor=\"let feature of features\" [ngSwitch]=\"feature\">\n                    <sq-baskets-menu *ngSwitchCase=\"'baskets'\" [icon]=\"'fas fa-inbox'\"></sq-baskets-menu>\n                    <sq-saved-queries-menu *ngSwitchCase=\"'saved-queries'\"></sq-saved-queries-menu>\n                    <sq-alerts-menu *ngSwitchCase=\"'alerts'\"></sq-alerts-menu>\n                    <sq-labels-menu *ngSwitchCase=\"'labels'\" [results]=\"searchService.resultsStream | async\"></sq-labels-menu>\n                </ng-container>\n                <sq-user-menu></sq-user-menu>\n            </ul>\n\n            <sq-feedback-menu [style]=\"'primary'\" [rightAligned]=\"true\" class=\"ml-1\" *ngIf=\"loginService.complete\">\n            </sq-feedback-menu>\n\n        </div>\n    </nav>\n\n    <!-- Loading bar (Manages its own state and visibility via the search service) -->\n    <sq-loading-bar></sq-loading-bar>\n</div>\n\n<!-- Main interface -->\n<div class=\"container-xl main\" *ngIf=\"loginService.complete\">\n    <div class=\"row\" *ngIf=\"searchService.resultsStream | async; let results\">\n\n        <!-- Left facet bar -->\n        <div class=\"col-md-4 col-lg-3 col-xl-2\" *ngIf=\"showFilters\" [sqSticky]=\"{top: 70, bottom: 80}\">\n            <sq-facet-card [title]=\"'msg#facet.treepath.title'\" [icon]=\"'fas fa-sitemap'\" [collapsible]=\"false\" [buttonsStyle]=\"isDark()? 'dark' : 'light'\">\n                <sq-facet-tree #facet [results]=\"results\" [aggregation]=\"'Treepath'\"></sq-facet-tree>\n            </sq-facet-card>\n            <sq-facet-card [title]=\"multiFacetTitle\" [icon]=\"multiFacetIcon\" [collapsible]=\"false\" [buttonsStyle]=\"isDark()? 'dark' : 'light'\" class=\"d-block mt-3\">\n                <sq-facet-multi #facet [results]=\"results\" [facets]=\"facets\" [showProgressBar]=\"false\" (events)=\"facetChanged($event)\"></sq-facet-multi>\n            </sq-facet-card>\n        </div>\n\n        <!-- Result selection toolbar -->\n        <div class=\"card text-white bg-primary position-fixed action-bar\" *ngIf=\"ui.screenSizeIsGreater('sm')\">\n            <div class=\"card-header\">\n                <sq-results-selector [style]=\"isDark()? 'dark' : 'primary'\"></sq-results-selector>\n            </div>\n        </div>\n\n        <!-- Results -->\n        <div class=\"col-lg-5\" [ngClass]=\"{'col-md-7': !showFilters, 'col-md-8': showFilters}\" *ngIf=\"showResults\">\n\n            <!-- Tabs -->\n            <sq-tabs [results]=\"results\"></sq-tabs>\n\n            <!-- Toolbar -->\n            <div class=\"d-flex\">\n                <sq-facet-mysearch [results]=\"results\" [allowDeletion]=\"true\" class=\"flex-grow-1 flex-basis-0\"></sq-facet-mysearch>\n                <sq-results-counter [rowCount]=\"searchService.rowCount\" class=\"mx-2\"></sq-results-counter>\n                <sq-sort-selector [results]=\"results\" [rightAligned]=\"true\" [style]=\"isDark()? 'dark' : 'light'\"></sq-sort-selector>\n            </div>\n\n            <!-- Did you mean -->\n            <sq-did-you-mean [results]=\"results\"></sq-did-you-mean>\n\n            <!-- Sponsored links -->\n            <sq-sponsored-results [query]=\"searchService.query\"></sq-sponsored-results>\n\n            <!-- List of documents (for loop) -->\n            <div *ngFor=\"let record of results.records\" class=\"record d-flex\"\n                (click)=\"onDocumentClicked(record, $event)\"\n                [ngClass]=\"{'selected': record.$selected || record === openedDoc}\">\n                <div class=\"flex-grow-1 overflow-hidden\">\n                    <div class=\"d-flex align-items-center\">\n                        <sq-result-selector *ngIf=\"ui.screenSizeIsGreaterOrEqual('md')\" [record]=\"record\" class=\"ml-1\"></sq-result-selector>\n                        <sq-result-title [record]=\"record\" (titleClicked)=\"openPreviewIfNoUrl(record, $event)\"></sq-result-title>\n                    </div>\n                    <sq-result-source [record]=\"record\" [displayTreepath]=\"true\"></sq-result-source>\n                    <sq-result-extracts [record]=\"record\"></sq-result-extracts>\n                    <sq-result-missing-terms [record]=\"record\"></sq-result-missing-terms>\n                    <div class=\"d-inline\">\n                        <sq-labels [record]=\"record\" [public]=\"true\" class=\"d-inline\"></sq-labels>\n                        <sq-labels [record]=\"record\" [public]=\"false\" class=\"d-inline\"></sq-labels>\n                    </div>\n                </div>\n                <sq-result-thumbnail [record]=\"record\" [thumbnailColumn]=\"'sourcevarchar4'\" [linkBehavior]=\"'action'\"\n                    *ngIf=\"ui.screenSizeIsGreater('xs')\" class=\"align-self-center\">\n                </sq-result-thumbnail>\n            </div>\n\n            <!-- Infinite scroll -->\n            <sq-scroller></sq-scroller>\n\n            <!-- Pagination -->\n            <!-- <sq-pager [results]=\"results\" class=\"d-flex flex-column align-items-center mt-3\"></sq-pager> -->\n        </div>\n\n        <!-- Right part-->\n        <div class=\"col-md-5 col-lg-4 col-xl-5\" [sqSticky]=\"{top: 70, bottom: 30}\">\n\n            <!-- Scaled-down preview -->\n            <sq-facet-card *ngIf=\"openedDoc\" [collapsible]=\"false\" class=\"d-block mb-3 facet-preview\"\n                [buttonsStyle]=\"isDark()? 'dark' : 'light'\"\n                [actionsSize]=\"''\">\n                <sq-facet-preview-2 #facet\n                    [record]=\"openedDoc\"\n                    [query]=\"searchService.query\"\n                    [height]=\"750\"\n                    [metadata]=\"metadata\"\n                    [expandModal]=\"false\"\n                    [customActions]=\"previewCustomActions\"\n                    (recordClosed)=\"closeDocument()\"\n                    (previewLoaded)=\"previewReady($event)\">\n                </sq-facet-preview-2>\n            </sq-facet-card>\n\n        </div>\n\n    </div>\n</div>\n","export * from \"./notifications.service\";\nexport * from \"./notifications.interceptor\";\nexport * from \"./notification.module\";\n","export * from \"./public-api\";","export default {\n    \"savedQueries\": {\n        \"savedQueries\": \"Saved Queries\",\n        \"saveCurrentQuery\": \"Save Current Query\",\n        \"manageSavedQueries\": \"Manage Saved Queries\",\n        \"savedQueryAlreadyExists\": \"A saved query with that name already exists. Would you like to replace it?\",\n        \"noSavedQuery\": \"You have not yet saved a search query...\",\n        \"delete\": \"Delete this saved query\"\n    },\n\n    \"recentQueries\": {\n        \"noRecentQuery\": \"You have not yet searched for something...\",\n        \"delete\": \"Delete this recent query\",\n        \"save\": \"Save this query\"\n    },\n\n    \"recentDocuments\": {\n        \"recentDocuments\": \"Recent documents\",\n        \"noRecentDocument\": \"You have not yet opened a document...\",\n        \"delete\": \"Delete this recent document\"\n    },\n\n    \"editSavedQuery\": {\n        \"title\": \"Saved Query\",\n        \"name\": \"Name\"\n    },\n\n    \"exportQuery\": {\n        \"dialogTitle\": \"Export\",\n        \"dialogOutputFormat\": \"Output format\",\n        \"dialogMaxCount\": \"Max rows\",\n        \"dialogSourceType\": \"Export from\",\n        \"dialogResult\": \"Current result\",\n        \"dialogSelection\": \"Current selection\",\n        \"btnTitle\": \"Export results\",\n        \"exportResult\": \"Export result as {type}\",\n        \"exportSelection\": \"Export selection as {type}\",\n        \"btnDownload\": \"Download\",\n        \"btnClose\": \"Close\",\n        \"successNotification\": \"Download complete\",\n        \"exportedColumns\": \"Columns to export\",\n        \"exportedColumnsLabelTooltip\": \"Select the columns that you want to export, an empty selection means exporting all columns\",\n        \"dialogMaxCountTooltip\": \"By default, the number of results is limited to {count}\"\n    },\n\n    \"manageSavedQueries\": {\n        \"title\": \"Manage Saved Queries\",\n        \"edit\": \"Edit\",\n        \"reorder\": \"Reorder\",\n        \"remove\": \"Remove\",\n        \"removeAll\": \"Remove all\",\n        \"export\": \"Export\",\n        \"name\": \"Name\",\n        \"rss\": \"RSS Feed\"\n    },\n\n};\n","import {\r\n  ComponentRef,\r\n  Directive,\r\n  ElementRef,\r\n  HostListener,\r\n  Input,\r\n  OnDestroy\r\n} from \"@angular/core\";\r\nimport {\r\n  ConnectedPosition,\r\n  Overlay,\r\n  OverlayPositionBuilder,\r\n  OverlayRef\r\n} from \"@angular/cdk/overlay\";\r\nimport {ComponentPortal} from \"@angular/cdk/portal\";\r\n\r\nimport {TooltipComponent} from \"./tooltip.component\";\r\n\r\n@Directive({selector: \"[sqTooltip]\"})\r\nexport class TooltipDirective implements OnDestroy {\r\n  @Input(\"sqTooltip\") text = \"\";\r\n  @Input() placement: \"top\" | \"bottom\" | \"right\" | \"left\" = \"bottom\";\r\n  @Input() delay = 300;\r\n\r\n  private overlayRef: OverlayRef;\r\n  private timeoutId;\r\n\r\n  constructor(\r\n    private overlay: Overlay,\r\n    private overlayPositionBuilder: OverlayPositionBuilder,\r\n    private elementRef: ElementRef\r\n  ) {}\r\n\r\n  ngOnDestroy() {\r\n    if(this.overlayRef){\r\n      this.overlayRef.detach();\r\n    }\r\n  }\r\n\r\n  @HostListener(\"mouseenter\", ['$event'])\r\n  show(event: MouseEvent) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    this.clearTimer();\r\n\r\n    this.timeoutId = setTimeout(() => {          \r\n      if(this.overlayRef) {\r\n          this.overlayRef.detach();\r\n      }\r\n\r\n      if (this.text.trim().length === 0) {\r\n        return;\r\n      }\r\n\r\n      const positionStrategy = this.overlayPositionBuilder\r\n      .flexibleConnectedTo(this.elementRef)\r\n      .withPositions([this.position()]);\r\n      \r\n      const scrollStrategy = this.overlay.scrollStrategies.close();\r\n      this.overlayRef = this.overlay.create({positionStrategy, scrollStrategy});\r\n      \r\n      const tooltipRef: ComponentRef<TooltipComponent> = this.overlayRef.attach(new ComponentPortal(TooltipComponent));\r\n      tooltipRef.instance.text = this.text;\r\n    }, this.delay);\r\n  }\r\n\r\n  @HostListener(\"mousedown\", ['$event'])\r\n  mouseClick(event: MouseEvent) {\r\n    event.preventDefault()\r\n    event.stopPropagation();\r\n    this.clearTimer();\r\n  }\r\n\r\n  @HostListener(\"mouseleave\")\r\n  hide() {\r\n    this.clearTimer();\r\n  }\r\n\r\n  position(): ConnectedPosition {\r\n    switch (this.placement) {\r\n      case \"bottom\":\r\n        return {\r\n          originX: \"center\",\r\n          originY: \"bottom\",\r\n          overlayX: \"center\",\r\n          overlayY: \"top\",\r\n          offsetY: 8\r\n        };\r\n      case \"right\":\r\n        return {\r\n          originX: \"end\",\r\n          originY: \"center\",\r\n          overlayX: \"start\",\r\n          overlayY: \"center\",\r\n          offsetX: 8\r\n        };\r\n      case \"left\":\r\n        return {\r\n          originX: \"start\",\r\n          originY: \"center\",\r\n          overlayX: \"end\",\r\n          overlayY: \"center\",\r\n          offsetX: -8\r\n        };\r\n      default:\r\n        return {\r\n          originX: \"center\",\r\n          originY: \"top\",\r\n          overlayX: \"center\",\r\n          overlayY: \"bottom\",\r\n          offsetY: -8\r\n        };\r\n    }\r\n  }\r\n\r\n  private clearTimer() {\r\n    if(this.timeoutId) {\r\n      clearTimeout(this.timeoutId);\r\n    }\r\n\r\n    if (this.overlayRef) {\r\n      this.overlayRef.detach();\r\n    }\r\n  }\r\n}","export * from \"./public-api\";","import {Component, OnInit, Inject} from \"@angular/core\";\nimport {Validators, AbstractControl} from \"@angular/forms\";\nimport {ValidatorFn} from \"@angular/forms\";\nimport {CdkDragDrop} from \"@angular/cdk/drag-drop\";\nimport {MODAL_MODEL, ModalButton, ModalResult} from \"@sinequa/core/modal\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {AuditEvent} from \"@sinequa/core/web-services\";\nimport {Basket, BasketEventType, ManageBasketsModel} from \"../../baskets.service\";\n\n@Component({\n    selector: \"sq-manage-baskets\",\n    templateUrl: \"./manage-baskets.html\",\n    styleUrls: [\"./manage-baskets.scss\"]\n})\nexport class BsManageBaskets implements OnInit {\n    reordering: boolean;\n    buttons: ModalButton[];\n    removeAllButton: ModalButton;\n    nameValidators: ValidatorFn[];\n\n    constructor(\n        @Inject(MODAL_MODEL) public model: ManageBasketsModel) {\n        this.reordering = false;\n\n        this.nameValidators = [\n            Validators.required,\n            (control: AbstractControl) => {\n                const modelControl = control.root.get(\"model\");\n                if (modelControl) {\n                    for (const item of this.model.baskets) {\n                        if (modelControl.value === item) {\n                            continue;\n                        }\n                        if (control.value === item.name) {\n                            return {\n                                unique: true\n                            };\n                        }\n                    }\n                }\n                return null;\n            }\n        ];\n    }\n\n    ngOnInit() {\n        this.buttons = [\n            this.removeAllButton = new ModalButton({\n                text: \"msg#manageBaskets.removeAll\",\n                result: ModalResult.Custom,\n                action: (button) => {\n                    this.model.baskets.splice(0);\n                    button.visible = false;\n                    this.addAuditEvent({\n                        type: BasketEventType.DeleteAll\n                    });\n                },\n                visible: this.model.baskets.length > 0\n            }),\n            new ModalButton({\n                result: ModalResult.OK,\n                primary: true\n            }),\n            new ModalButton({\n                result: ModalResult.Cancel\n            })\n        ];\n    }\n\n    addAuditEvent(auditEvent: AuditEvent) {\n        if (!this.model.auditEvents) {\n            this.model.auditEvents = [];\n        }\n        this.model.auditEvents.push(auditEvent);\n    }\n\n    reorder() {\n        this.reordering = !this.reordering;\n    }\n\n    setName(basket: Basket, name: string) {\n        if (!Utils.eqNC(basket.name, name)) {\n            this.addAuditEvent({\n                type: BasketEventType.Rename,\n                detail: {\n                    basket: name,\n                    \"old-name\": basket.name\n                }\n            });\n            basket.name = name;\n        }\n    }\n\n    remove(basket: Basket, index: number) {\n        this.model.baskets.splice(index, 1);\n        this.removeAllButton.visible = this.model.baskets.length > 0;\n        this.addAuditEvent({\n            type: BasketEventType.Delete,\n            detail: {\n                basket: basket.name\n            }\n        });\n        return false;\n    }\n\n    dropped(drop: CdkDragDrop<Basket[]>) {\n        Utils.arrayMove(this.model.baskets, drop.previousIndex, drop.currentIndex);\n    }\n}\n","<form name=\"manageBaskets\" novalidate>\n    <sq-modal [title]=\"'msg#manageBaskets.title'\" [buttons]=\"buttons\">\n        <div *ngIf=\"model.baskets.length\" class=\"form-group clearfix\">\n            <button type=\"button\" class=\"btn btn-secondary float-right\" (click)=\"reorder()\">{{(reordering ? \"msg#manageBaskets.edit\" : \"msg#manageBaskets.reorder\") | sqMessage}}</button>\n        </div>\n        <div class=\"form-group\">\n            <div class=\"list-group\" cdkDropList [cdkDropListData]=\"model.baskets\" [cdkDropListDisabled]=\"!reordering\" (cdkDropListDropped)=\"dropped($event)\">\n                <div *ngFor=\"let basket of model.baskets; let $index = index\" cdkDrag \n                    [ngClass]=\"['list-group-item list-group-item-action d-flex w-auto-unimportant', reordering ? 'cursor-move': '']\">\n                    <div *ngIf=\"reordering\" class=\"sq-basket-text\">{{basket.name}}</div>\n                    <sq-editable *ngIf=\"!reordering\" [value]=\"basket.name\" (valueChange)=\"setName(basket, $event)\" name=\"msg#manageBaskets.name\"\n                        [model]=\"basket\" [validators]=\"nameValidators\"></sq-editable>\n                    <div class=\"ml-auto\">\n                        <a *ngIf=\"!reordering\" class=\"ml-2\" href=\"#\" (click)=\"remove(basket, $index)\" title=\"{{'msg#manageBaskets.remove' | sqMessage}}\">\n                            <span class=\"fas fa-times sq-remove\"></span>\n                        </a>\n                        <span *ngIf=\"reordering\" class=\"ml-2 fas fa-bars sq-move\"></span>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </sq-modal>\n</form>\n","import { Component, Input, Output, EventEmitter, OnChanges, SimpleChanges, HostBinding, AfterViewChecked } from \"@angular/core\";\nimport { SafeResourceUrl } from \"@angular/platform-browser\";\nimport { Query } from '@sinequa/core/app-utils';\nimport { Record, PreviewData } from \"@sinequa/core/web-services\";\nimport { PreviewService } from \"../../preview.service\";\nimport { PreviewDocument, HighlightFilters } from \"../../preview-document\";\nimport { AbstractFacet } from '@sinequa/components/facet';\nimport { Action } from '@sinequa/components/action';\n\n@Component({\n  selector: 'sq-facet-preview-2',\n  templateUrl: './facet-preview.component.html',\n  styleUrls: ['./facet-preview.component.scss']\n})\nexport class BsFacetPreviewComponent2 extends AbstractFacet implements OnChanges, AfterViewChecked {\n\n  @Input() record: Record;\n  @Input() query: Query;\n  @Input() iframeClass: string;\n  @Input() sandbox : string | null;\n  @Input() height = 500;\n  @Input() scalingFactor = 0.6;\n  @Input() metadata: string[] = [];\n  @Input() expandModal = true;\n  @Input() closable = true;\n  @Input() highlightActions = true;\n  @Input() customActions: Action[];\n  @Input() filters: HighlightFilters;\n  @Input() originalDocTarget: string | undefined;\n  @Output() recordClosed = new EventEmitter<void>();\n  @Output() previewLoaded = new EventEmitter<PreviewDocument>();\n  @HostBinding('style.height.px') _height: number = this.height;\n\n  private closeAction: Action;\n  private expandModalAction: Action;\n  private toggleEntitiesAction: Action;\n  private toggleExtractsAction: Action;\n  private minimizeAction: Action;\n  private maximizeAction: Action;\n\n  data?: PreviewData;\n  document?: PreviewDocument;\n  downloadUrl?: SafeResourceUrl;\n\n  private readonly scaleFactorThreshold = 0.1;\n  private loaded = false;\n\n  constructor(\n      private previewService: PreviewService) {\n\n    super();\n\n    this.closeAction = new Action({\n      icon: \"fas fa-times\",\n      title: \"msg#facet.preview.closeTitle\",\n      action: () => {\n        this.recordClosed.next();\n      }\n    });\n\n    this.expandModalAction = new Action({\n      icon: \"far fa-window-maximize\",\n      title: \"msg#facet.preview.expandTitle\",\n      action: () => {\n        this.previewService.openModal(this.record, this.query, {\n          displaySimilarDocuments: false,\n          metadata: this.metadata\n        });\n      }\n    });\n\n    this.toggleEntitiesAction = new Action({\n      icon: \"fas fa-lightbulb\",\n      title: \"msg#facet.preview.toggleEntities\",\n      selected: true,\n      action: (action) => {\n        action.selected = !action.selected;\n        if(this.data?.highlightsPerCategory) {\n          Object.keys(this.data.highlightsPerCategory)\n            .filter(value => value !== \"extractslocations\" && value !== \"matchlocations\")\n            .forEach(cat =>\n              this.document?.toggleHighlight(cat, action.selected!)\n            );\n        }\n      }\n    });\n\n    this.toggleExtractsAction = new Action({\n        icon: \"fas fa-highlighter\",\n        title: \"msg#facet.preview.toggleExtracts\",\n        selected: true,\n        action: (action) => {\n            action.selected = !action.selected;\n            this.document?.toggleHighlight(\"matchlocations\", action.selected);\n            this.document?.toggleHighlight(\"extractslocations\", action.selected);\n        }\n    });\n\n    this.maximizeAction = new Action({\n      icon: \"fas fa-search-plus\",\n      title: \"msg#facet.preview.maximize\",\n      action: () => {\n        this.scalingFactor = this.scalingFactor + this.scaleFactorThreshold;\n      }\n    });\n\n    this.minimizeAction = new Action({\n      icon: \"fas fa-search-minus\",\n      title: \"msg#facet.preview.minimize\",\n      disabled: this.scalingFactor === 0.1,\n      action: () => {\n        this.scalingFactor = Math.round(Math.max(0.1, this.scalingFactor - this.scaleFactorThreshold) * 100) / 100;\n      },\n      updater: (action) => {\n        action.disabled = this.scalingFactor === 0.1;\n      }\n    });\n\n  }\n\n  get actions(): Action[] {\n    const actions: Action[] = [];\n    if(this.customActions){\n      actions.push(...this.customActions);\n    }\n    if(this.highlightActions) {\n      actions.push(this.toggleExtractsAction, this.toggleEntitiesAction);\n    }\n    this.minimizeAction.update();\n    actions.push(this.minimizeAction, this.maximizeAction);\n    if(this.expandModal){\n      actions.push(this.expandModalAction);\n    }\n    if(this.closable){\n      actions.push(this.closeAction);\n    }\n    return actions;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes[\"record\"]) {\n      this.previewService.getPreviewData(this.record.id, this.query).subscribe(\n        previewData => {\n          this.data = previewData;\n          this.downloadUrl = this.data ? this.previewService.makeDownloadUrl(this.data.documentCachedContentUrl) : undefined;\n        });\n      this.downloadUrl = undefined;\n      this.data = undefined;\n      this.document = undefined;\n    }\n    if(changes[\"height\"] || changes[\"scalingFactor\"]) {\n      this._height = this.height;\n    }\n  }\n\n  ngAfterViewChecked() {\n    if (this.document && this.loaded) {\n      this.loaded = false;\n      // as now view is checked, emit event\n      this.previewLoaded.emit(this.document);\n    }\n  }\n\n  onPreviewReady(document: PreviewDocument) {\n    this.document = document;\n    if (this.document && this.filters) {\n      this.document.filterHighlights(this.filters);\n    }\n\n    this.loaded = true;\n  }\n}\n","<div class=\"d-flex flex-column {{iframeClass}}\" [ngStyle]=\"{'height.%': 100}\">\n    <sq-preview-document-iframe\n                                [sandbox]=\"sandbox\"\n                                [downloadUrl]=\"downloadUrl\"\n                                [scalingFactor]=\"scalingFactor\"\n                                (onPreviewReady)=\"onPreviewReady($event)\">\n    </sq-preview-document-iframe>\n</div>\n\n<ng-template #headerTpl>\n    <sq-result-title class=\"flex-grow-1 flex-basis-0\" [record]=\"record\" [originalDocTarget]=\"originalDocTarget\" titleLinkBehavior=\"open-if-url\"></sq-result-title>\n</ng-template>\n\n<ng-template #subHeaderTpl>\n    <sq-metadata *ngIf=\"metadata && metadata.length > 0\"\n        [record]=\"record\"\n        [items]=\"metadata\"\n        [showTitles]=\"true\"\n        [showIcons]=\"true\"\n        [clickable]=\"false\">\n    </sq-metadata>\n</ng-template>\n","export * from \"./public-api\";","export * from \"./public-api\";","import {Component, Input, OnDestroy, OnInit} from '@angular/core';\r\nimport {Action, IAction} from '@sinequa/components/action';\r\nimport {Subscription} from 'rxjs';\r\n\r\nimport {SearchService} from '../../search.service';\r\n\r\n@Component({\r\n  selector: \"sq-load-more\",\r\n  templateUrl: \"./load-more.html\"\r\n})\r\nexport class BsLoadMore implements OnInit, OnDestroy {\r\n  @Input() buttonsStyle = \"outline-primary\";\r\n  @Input() actionsSize = \"sm\"\r\n\r\n  private subscription: Subscription = new Subscription();\r\n  loadMoreAction: IAction;\r\n  hasMore = false;\r\n\r\n  constructor(private searchService: SearchService) {\r\n    this.loadMoreAction = new Action({\r\n      text: \"msg#facet.loadMore\",\r\n      title: \"msg#facet.loadMore\",\r\n      action: (action) => {\r\n        this.searchService.loadMore();\r\n        action.update();\r\n      },\r\n      updater:() => {\r\n        // hide button while fetching new data\r\n        this.hasMore = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.subscription = this.searchService.resultsStream\r\n      .subscribe(results => {\r\n        this.hasMore = this.searchService.hasMore();\r\n      });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n}","<div *ngIf=\"hasMore\" class=\"btn-group\" [sq-action-buttons]=\"{items: [loadMoreAction], style: buttonsStyle, size: actionsSize, rightAligned: false}\"></div>\r\n","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport { Action } from '@sinequa/components/action';\nimport { LoginService } from '@sinequa/core/login';\nimport { AlertsService, Alert } from '../../alerts.service';\nimport { SearchService } from '@sinequa/components/search';\nimport { Utils } from '@sinequa/core/base';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'sq-alerts-menu',\n  templateUrl: './alerts-menu.component.html'\n})\nexport class BsAlertsMenuComponent implements OnInit, OnDestroy {\n  \n  @Input() searchRoute: string = \"/search\";\n  @Input() icon: string = \"fas fa-bell\";\n  @Input() autoAdjust: boolean = true;\n  @Input() autoAdjustBreakpoint: string = 'xl';\n  @Input() collapseBreakpoint: string = 'sm';\n  @Input() size: string;\n\n  menu: Action | undefined;\n\n  // Alerts actions\n  createAction: Action;\n  manageAction: Action;\n\n  constructor(\n    public loginService: LoginService,\n    public alertsService: AlertsService,\n    public searchService: SearchService\n  ) {\n\n    this.createAction = new Action({\n      text: \"msg#alerts.createAlert\",\n      title: \"msg#alerts.createAlert\",\n      action: () => { this.alertsService.createAlertModal(); }\n    });\n\n    this.manageAction = new Action({\n      text: \"msg#alerts.manageAlerts\",\n      title: \"msg#alerts.manageAlerts\",\n      action: () => { this.alertsService.manageAlertsModal(this.searchRoute); }\n    });\n\n  }\n\n  ngOnInit() {\n    this.updateMenu();\n    this._alertsServiceSubscription = this.alertsService.changes.subscribe({\n      next: () => { this.updateMenu(); }\n    });\n    this._loginServiceSubscription = this.loginService.events.subscribe(event => {\n      if(event.type === \"session-changed\"){\n        this.updateMenu();\n      }\n    });\n    this._searchServiceSubscription = this.searchService.resultsStream.subscribe(results => {\n      this.updateMenu();\n    });\n  }\n\n  private _alertsServiceSubscription: Subscription;\n  private _loginServiceSubscription: Subscription;\n  private _searchServiceSubscription: Subscription;\n  ngOnDestroy(){\n    if(this._alertsServiceSubscription){\n      this._alertsServiceSubscription.unsubscribe();\n    }\n    if(this._loginServiceSubscription){\n      this._loginServiceSubscription.unsubscribe();\n    }\n    if(this._searchServiceSubscription){\n      this._searchServiceSubscription.unsubscribe();\n    }\n  }\n\n  updateMenu() {\n\n    if (!this.loginService.complete) {\n      this.menu = undefined;\n      return;\n    }\n\n    const alertsActions: Action[] = [];\n\n    if (this.alertsService.hasAlert) {\n        const scrollGroup = new Action({\n            scrollGroup: true,\n            children: this.alertsService.alerts.map(alert => new Action({\n              text: alert.name,\n              data: alert,\n              action: (item: Action) => {\n                const alert: Alert = Utils.copy(item.data);\n                this.alertsService.editAlertModal(alert, undefined, this.searchRoute);\n              }\n          }))\n        });\n        alertsActions.push(scrollGroup);\n    }\n\n    if (!!this.searchService.results) {\n        alertsActions.push(this.createAction);\n    }\n\n    if (this.alertsService.hasAlert) {\n        alertsActions.push(this.manageAction);\n    }\n\n    this.menu = new Action({\n      icon: this.icon,\n      text: \"msg#alerts.alerts\",\n      children: alertsActions\n    });\n  }\n\n}\n","<li *ngIf=\"!!menu && !menu.hidden\" class=\"nav-item dropdown\" \n    [sq-action-item]=\"{item: menu, size: size, autoAdjust: autoAdjust, autoAdjustBreakpoint: autoAdjustBreakpoint, inMenu: true}\"\n    [collapseBreakpoint]=\"collapseBreakpoint\"\n></li>","export * from \"./breadcrumbs\";\nexport * from \"./search.service\";\nexport * from \"./first-page.service\";\nexport * from \"./bootstrap/index\";\nexport * from \"./messages/index\";","export * from \"./public-api\";","export * from \"./public-api\";","import {Component, Input, Output, OnInit, OnDestroy, EventEmitter, ContentChild, HostBinding, AfterContentInit, ChangeDetectorRef} from \"@angular/core\";\nimport {Subscription} from \"rxjs\";\nimport {Action} from \"@sinequa/components/action\";\nimport {AbstractFacet} from \"../../abstract-facet\";\n\n@Component({\n    selector: \"sq-facet-card\",\n    templateUrl: \"./facet-card.html\",\n    styles: [`\n        .cursor-default {cursor: default;}\n    `]\n})\nexport class BsFacetCard implements OnInit, OnDestroy, AfterContentInit {\n\n    /**\n     * Title of this facet (optional)\n     */\n    @Input() title: string;\n\n    /**\n     * Tooltip of this facet (defaults to title)\n     */\n    @Input() tooltip: string;\n\n    /**\n     * Icon of this facet, in a form of a span class name (optional)\n     */\n    @Input() icon: string;\n\n    /**\n     * Bootstrap theme name (light, dark...)\n     */\n    @Input() buttonsStyle: string;\n\n    /**\n     * List of custom actions for this facet (optional)\n     */\n    @Input() actions: Action[] = [];\n\n    /**\n     * Whether the [actions]=\"...\" passed by binding should be displayed before or after\n     * the actions from the inner facet component\n     */\n    @Input() actionsFirst = true;\n\n    /**\n     * Size of the custom actions\n     */\n    @Input() actionsSize = \"sm\";\n\n    /**\n     * Whether the facet can be collapsed (default: true)\n     */\n    @Input() collapsible: boolean = true;\n\n    /**\n     * Whether the facet starts collapsed (if collapsible / default: false)\n     */\n    @Input() startCollapsed: boolean = false;\n\n    /**\n     * Whether other actions should be hidden when the facet is collapsed (default: true)\n     */\n    @Input() hideActionsCollapsed: boolean = true;\n\n    /**\n     * Whether the facet can be expanded (default: false)\n     */\n    @Input() expandable: boolean = false;\n\n    /**\n     * Whether the facet starts expanded (if expandable / default: false)\n     */\n    @Input() startExpanded: boolean = false;\n\n    /**\n     * Whether the facet starts with opened settings (default: false)\n     */\n    @Input() startSettingsOpened: boolean = false;\n\n    /**\n     * Event triggered when the facet gets expanded or reduced\n     */\n    @Output() facetExpanded = new EventEmitter<\"expanded\"|\"reduced\">();\n\n    /**\n     * Event triggered when the facet gets expanded or reduced\n     */\n    @Output() facetCollapsed = new EventEmitter<\"collapsed\"|\"expanded\">();\n\n    /**\n     * Event triggered when the facet gets expanded or reduced\n     */\n    @Output() settingsOpened = new EventEmitter<\"opened\"|\"saved\"|\"canceled\">();\n\n    /**\n     * Reference to the child facet inserted by transclusion (ng-content)\n     */\n    @ContentChild(\"facet\", {static: false}) public facetComponent: AbstractFacet;\n\n    @HostBinding('class.collapsed') _collapsed: boolean;\n    @HostBinding('class.expanded') _expanded: boolean;\n    @HostBinding('class.settings-opened') _settingsOpened: boolean;\n\n    @HostBinding('hidden') get hidden(): boolean {\n        return !!this.facetComponent && !!this.facetComponent.isHidden && this.facetComponent.isHidden();\n    }\n\n    private readonly collapseAction;\n    private readonly expandAction;\n    private readonly settingsAction;\n\n    private actionChangedSubscription: Subscription;\n\n    constructor(\n        private changeDetectorRef: ChangeDetectorRef\n    ){\n\n        this.collapseAction = new Action({\n            action: (action) => {\n                this._collapsed = !this._collapsed;\n                this.facetCollapsed.next(this._collapsed ? \"collapsed\" : \"expanded\");\n                if(!!this.facetComponent){\n                    this.facetComponent.onCollapse(this._collapsed);\n                }\n                action.update();\n            },\n            updater: (action) => {\n                action.icon = this._collapsed ? \"fas fa-chevron-down\" : \"fas fa-chevron-up\";\n                action.title = this._collapsed ? 'msg#facetCard.expand' : 'msg#facetCard.collapse';\n            }\n        });\n\n        this.expandAction = new Action({\n            action: (action) => {\n                this._expanded = !this._expanded;\n                this.facetExpanded.next(this._expanded ? \"expanded\" : \"reduced\");\n                if(!!this.facetComponent){\n                    this.facetComponent.onExpand(this._expanded);\n                }\n                action.update();\n            },\n            updater: (action) => {\n                action.icon = this._expanded ? \"fas fa-compress\" : \"fas fa-expand\";\n                action.title = this._expanded ? \"msg#facetCard.reduce\" : \"msg#facetCard.enlarge\";\n            }\n        });\n\n        this.settingsAction = new Action({\n            action: (action) => {\n                this._settingsOpened = !this._settingsOpened;\n                this.settingsOpened.next(this._settingsOpened? \"opened\" : \"saved\");\n                if(!!this.facetComponent){\n                    this.facetComponent.onOpenSettings(this._settingsOpened);\n                }\n                action.update();\n            },\n            updater: (action) => {\n                action.icon = this._settingsOpened ? \"far fa-save\" : \"fas fa-cog\";\n                action.title = this._settingsOpened ? \"msg#facetCard.saveSettings\" : \"msg#facetCard.openSettings\";\n            }\n        });\n\n    }\n\n    ngOnInit(){\n        // Initialize actions\n        this._collapsed = this.startCollapsed;\n        this._expanded = this.startExpanded;\n        this._settingsOpened = this.startSettingsOpened;\n\n        this.collapseAction.update();\n        this.expandAction.update();\n        this.settingsAction.update();\n    }\n\n    ngAfterContentInit(){\n        if(this.facetComponent) {\n            this.actionChangedSubscription = this.facetComponent.actionsChanged.subscribe((actions) => {\n                this.allActions.forEach(action => action.update());\n                this.changeDetectorRef.markForCheck();\n            });\n        }\n        else {\n            console.warn(\"No #facet component is defined in this facet card: \", this.title);\n        }\n    }\n\n    ngOnDestroy(){\n        if(this.actionChangedSubscription){\n            this.actionChangedSubscription.unsubscribe();\n        }\n    }\n\n    public get allActions() : Action[] {\n        if(this.hideActionsCollapsed && this._collapsed) return [this.collapseAction]; // Hide other actions if collapsed\n        let actions = [] as Action[];\n        if(this.actionsFirst) {\n            actions.push(...this.actions);\n        }\n        if(this.facetComponent) actions = actions.concat(this.facetComponent.actions);\n        if(this.hasSettings) actions.push(this.settingsAction);\n        if(this.expandable) actions.push(this.expandAction);\n        if(this.collapsible) actions.push(this.collapseAction);\n        if(!this.actionsFirst) {\n            actions.push(...this.actions);\n        }\n        return actions;\n    }\n\n    public get hasSettings(){\n        return !!this.facetComponent && !!this.facetComponent.settingsTpl;\n    }\n}\n","<div class=\"card\">    \n    <div class=\"card-header cursor-default pl-3 pr-2 py-1\">\n        <div class=\"d-flex\">\n            <div class=\"d-flex align-items-center text-truncate mr-auto\" [title]=\"(tooltip || title) | sqMessage\">\n                <div *ngIf=\"!!icon\" class=\"card-icon {{icon}} mr-2\" aria-hidden=\"true\"></div>\n                <div *ngIf=\"title\" class=\"card-title text-truncate mb-0 py-1 mr-auto\">{{title | sqMessage }}</div>\n            </div>\n            <ng-container *ngIf=\"facetComponent && facetComponent.headerTpl\" [ngTemplateOutlet]=\"facetComponent.headerTpl\">\n            </ng-container>\n            <div class=\"btn-group\" [sq-action-buttons]=\"{items: allActions, style: buttonsStyle, size: actionsSize, rightAligned: true}\"></div>\n        </div>\n        <ng-container *ngIf=\"facetComponent && facetComponent.subHeaderTpl\" [ngTemplateOutlet]=\"facetComponent.subHeaderTpl\"></ng-container>\n    </div>\n    <sq-collapse [collapsed]=\"_collapsed\" *ngIf=\"!_settingsOpened\">\n        <ng-template>\n            <ng-content>\n            </ng-content>\n        </ng-template>\n    </sq-collapse>\n    <ng-container *ngIf=\"hasSettings && _settingsOpened\" [ngTemplateOutlet]=\"facetComponent.settingsTpl\"></ng-container>\n    <ng-container class=\"card-footer\" *ngIf=\"facetComponent && facetComponent.footerTpl\" [ngTemplateOutlet]=\"facetComponent.footerTpl\"></ng-container>\n</div>","export default {\n    \"baskets\": {\n        \"baskets\": \"Baskets\",\n        \"addToBasket\": \"Add to basket\",\n        \"removeFromBasket\": \"Remove from basket\",\n        \"removeFromAllBaskets\": \"Remove from all baskets\",\n        \"removeFromAllBasketsConfirmation\": \"Are you sure you want to remove this result from these baskets: {baskets}?\",\n        \"basketAlreadyExists\": \"A basket with that name already exists. Would you like to replace it?\",\n        \"noBasket\": \"You have not yet added a document to a basket...\",\n        \"createBasket\": \"Create Basket\",\n        \"manageBaskets\": \"Manage Baskets\",\n        \"delete\": \"Delete this basket\"\n    },\n\n    \"editBasket\": {\n        \"title\": \"Basket\",\n        \"name\": \"Name\"\n    },\n\n    \"manageBaskets\": {\n        \"title\": \"Manage Baskets\",\n        \"edit\": \"Edit\",\n        \"reorder\": \"Reorder\",\n        \"remove\": \"Remove\",\n        \"removeAll\": \"Remove all\",\n        \"name\": \"Name\"\n    },\n\n    \"selectBasket\": {\n        \"title\": \"Select Basket\",\n        \"newBasket\": \"New basket...\"\n    }\n};\n","export * from \"./public-api\";","import { Component, Input } from '@angular/core';\nimport { SearchService } from '@sinequa/components/search';\nimport { RecentQueriesService, RecentQuery, RecentQueryEventType } from '../../recent-queries.service';\nimport { AbstractFacet } from '@sinequa/components/facet';\nimport { Action } from '@sinequa/components/action';\nimport { SavedQueriesService } from '../../saved-queries.service';\nimport { Utils } from '@sinequa/core/base';\nimport { Query } from '@sinequa/core/app-utils';\n\n@Component({\n  selector: 'sq-facet-recent-queries',\n  templateUrl: './facet-recent-queries.html',\n  styles: [`\n.recent-query-item .query-delete, .recent-query-item .query-save{\n    opacity: 0;\n}\n\n.recent-query-item:hover .query-delete, .recent-query-item:hover .query-save{\n    opacity: 1;\n    transition: opacity 0.2s ease-in-out;\n}\n  `]\n})\nexport class BsFacetRecentQueries extends AbstractFacet  {\n    @Input() searchRoute: string = \"/search\";\n    @Input() maxQueries: number = 5;\n    @Input() enableDelete: boolean = true;\n    @Input() enableSave: boolean = true;\n\n    page: number = 0;\n\n    previousPage: Action;\n    nextPage: Action;\n\n    constructor(\n        public searchService: SearchService,\n        public recentQueriesService: RecentQueriesService,\n        public savedQueriesService: SavedQueriesService) {\n        super();\n\n        this.previousPage = new Action({\n            icon: \"fas fa-chevron-left\",\n            title: \"msg#facet.previous\",\n            action: () => {\n                this.page--;\n            },\n            updater: (action: Action) => {\n                action.disabled = this.page <= 0;\n                action.hidden = this.maxPage === 0;\n            }\n        });\n        this.nextPage = new Action({\n            icon: \"fas fa-chevron-right\",\n            title: \"msg#facet.next\",\n            action: () => {\n                this.page++;\n            },\n            updater: (action: Action) => {\n                action.disabled = this.page >= this.maxPage;\n                action.hidden = this.maxPage === 0;\n            }\n        });\n    }\n\n    get maxPage(): number {\n        return Math.max(0, Math.ceil(this.recentQueriesService.recentqueries.length / this.maxQueries) - 1);\n    }\n\n    get startIndex(): number {\n        return this.page * this.maxQueries;\n    }\n\n    get endIndex(): number {\n        return (this.page+1) * this.maxQueries;\n    }\n\n    get actions(): Action[] {\n        this.previousPage.update();\n        this.nextPage.update();\n        return [this.previousPage, this.nextPage];\n    }\n\n    openRecentQuery(query: RecentQuery){\n        this.recentQueriesService.notifyOpenRecentQuery(query);\n        return true;\n    }\n\n    deleteQuery(query: RecentQuery, event: Event){\n        event.stopPropagation();\n        this.recentQueriesService.deleteRecentQuery(query);\n        this.page = Math.min(this.page, this.maxPage);\n        return false;\n    }\n\n    saveQuery(query: RecentQuery, event: Event){\n        event.stopPropagation();\n        const q = Utils.extend(this.searchService.makeQuery(), Utils.copy(query.query));\n        this.savedQueriesService.createSavedQueryModal(q);\n        return false;\n    }\n\n    getQueryParams(recentQuery: Query) {\n        const query = this.searchService.makeQuery(recentQuery);\n        const queryParams = query.toJsonForQueryString();\n        return {query: queryParams};\n    }\n\n    getRouterState(recentQuery: Query) {\n        return {\n            audit: {\n                type: RecentQueryEventType.Search,\n                detail: {\n                    recentquery: recentQuery.text\n                }\n            }\n        }\n    }\n}\n","<div class=\"list-group list-group-flush\">\n    <a *ngFor=\"let query of recentQueriesService.recentqueries | slice:startIndex:endIndex\" \n        class=\"recent-query-item list-group-item list-group-item-action d-flex align-items-center\"\n        [routerLink]=\"[searchRoute]\" [queryParams]=\"getQueryParams(query.query)\" [state]=\"getRouterState(query.query)\"\n        (click)=\"openRecentQuery(query)\">\n        <span class=\"query-text mr-auto text-truncate\" title=\"{{ query.query.text }}\">{{ query.query.text }}</span>\n        <span *ngIf=\"query.date\" class=\"query-date ml-2 text-muted small text-right\">{{ query.date | sqDate }}</span>\n        <i *ngIf=\"enableSave\" class=\"query-save ml-2 far fa-save\" [title]=\"'msg#recentQueries.save' | sqMessage\" (click)=\"saveQuery(query, $event)\"></i>\n        <i *ngIf=\"enableDelete\"class=\"query-delete ml-2 fas fa-times\" [title]=\"'msg#recentQueries.delete' | sqMessage\" (click)=\"deleteQuery(query, $event)\"></i>\n    </a>\n    <div *ngIf=\"recentQueriesService.recentqueries.length == 0\" class=\"list-group-item text-center text-muted font-italic small py-5\">\n        {{ 'msg#recentQueries.noRecentQuery' | sqMessage }}\n    </div>\n</div>","import {Injectable, Inject} from \"@angular/core\";\nimport {Observable, of} from \"rxjs\";\nimport {map} from \"rxjs/operators\";\nimport {SqHttpClient} from \"./http-client\";\nimport {HttpService} from \"./http.service\";\nimport {START_CONFIG, StartConfig} from \"./start-config.web.service\";\nimport {Suggestion} from \"./suggest/suggestion\";\n\n/**\n * A service for calling the suggestquery web service\n */\n@Injectable({\n    providedIn: \"root\"\n})\nexport class SuggestQueryWebService extends HttpService {\n    constructor(\n        @Inject(START_CONFIG) startConfig: StartConfig,\n        private httpClient: SqHttpClient) {\n        super(startConfig);\n    }\n\n    /**\n     * Gets suggestions for the passed text for a set of fields using the passed suggestquery web service\n     *\n     * @param suggestQuery The name of the suggestquery web service to use\n     * @param text The text to match\n     * @param query The name of the current query\n     * @param fields The fields for which to return suggestions\n     */\n    get(suggestQuery: string, text: string, query: string, fields?: string | string[]): Observable<Suggestion[]> {\n        if (!suggestQuery) {\n            return of([]);\n        }\n        else {\n            const observable = this.httpClient.post<{suggests: Suggestion[]}>(this.makeUrl(\"suggestquery\"), {\n                app: this.appName,\n                suggestQuery: suggestQuery,\n                text: text,\n                query: query,\n                kinds: fields\n            });\n            return observable.pipe(map(value => value.suggests));\n        }\n    }\n}","import {\n    Component,\n    Input,\n    OnInit,\n    OnDestroy,\n} from \"@angular/core\";\nimport { FormGroup, AbstractControl } from \"@angular/forms\";\nimport { Subscription } from \"rxjs\";\nimport { Utils } from \"@sinequa/core/base\";\nimport { CCColumn } from \"@sinequa/core/web-services\";\nimport { AppService } from \"@sinequa/core/app-utils\";\n\n@Component({\n    selector: \"sq-advanced-form-range\",\n    templateUrl: \"./advanced-form-range.html\"\n})\nexport class BsAdvancedFormRange implements OnInit, OnDestroy {\n    @Input() form: FormGroup;\n    @Input() field: string;\n    @Input() min: Date | number | string;\n    @Input() max: Date | number | string;\n    @Input() label: string;\n\n    fromName: string;\n    toName: string;\n    forName: string;\n    column: CCColumn | undefined;\n    minDate: Date | undefined;\n    maxDate: Date | undefined;\n    control: AbstractControl | null;\n    value: (string | number | Date)[];\n    isDate: boolean;\n    private _valueChangesSubscription: Subscription;\n\n    constructor(private appService: AppService) {}\n\n    ngOnInit() {\n        this.fromName = \"from_\" + this.field;\n        this.toName = \"to_\" + this.field;\n        this.forName = this.fromName;\n        this.column = this.appService.getColumn(this.field);\n        if(this.label === undefined) {\n            this.label = this.appService.getPluralLabel(this.field);\n        }\n        this.isDate = !!this.column && AppService.isDate(this.column);\n        if (this.isDate) {\n            this.minDate = Utils.isDate(this.min)\n                ? this.min\n                : undefined;\n            this.maxDate = Utils.isDate(this.max)\n                ? this.max\n                : undefined;\n        }\n        this.control = this.form.get(this.field);\n        if (this.control) {\n            this.value = this.control.value;\n            this._valueChangesSubscription = Utils.subscribe(\n                this.control.valueChanges,\n                (value) => {\n                    this.value = value;\n                }\n            );\n        }\n        else {\n            throw new Error(\"No form control named \"+this.field);\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._valueChangesSubscription) {\n            this._valueChangesSubscription.unsubscribe();\n        }\n    }\n\n    ensureValue(value: string): string | number | Date {\n        if (this.isDate) {\n            const value1 = Utils.toDate(value);\n            if (value1 !== undefined) {\n                return value1;\n            }\n        } else if (this.column && AppService.isNumber(this.column)) {\n            if (Utils.testFloat(value)) {\n                return Utils.toNumber(value);\n            }\n        }\n        return value;\n    }\n\n    updateFrom(from: string) {\n        this.value[0] = this.ensureValue(from);\n        if (this.control) {\n            this.control.markAsDirty();\n            this.control.setValue(this.value);\n        }\n    }\n\n    updateTo(to: string) {\n        this.value[1] = this.ensureValue(to);\n        if (this.control) {\n            this.control.markAsDirty();\n            this.control.setValue(this.value);\n        }\n    }\n}\n","<div class=\"form-group\" [formGroup]=\"form\">\n    <label for=\"{{forName}}\">{{label | sqMessage}}</label>\n    <div *ngIf=\"!isDate\"\n        class=\"sq-advanced-form-range form-row\"\n        sqAdvancedFormValidation\n        [field]=\"field\"\n        [validationForm]=\"form\"\n        [id]=\"field\">\n        <div class=\"col-auto d-flex flex-column\">\n            <input\n                type=\"text\"\n                autocomplete=\"off\"\n                spellcheck=\"off\"\n                class=\"form-control sq-range-from\"\n                [id]=\"fromName\"\n                [ngModel]=\"value[0]\"\n                (ngModelChange)=\"updateFrom($event)\"\n                [ngModelOptions]=\"{standalone: true}\"/>\n        </div>\n        <div class=\"col-auto sq-separator\">{{'msg#advanced.rangeSeparator' | sqMessage}}</div>\n        <div class=\"col-auto d-flex flex-column\">\n            <input\n                type=\"text\"\n                autocomplete=\"off\"\n                spellcheck=\"off\"\n                class=\"form-control sq-range-to\"\n                [id]=\"toName\"\n                [ngModel]=\"value[1]\"\n                (ngModelChange)=\"updateTo($event)\"\n                [ngModelOptions]=\"{standalone: true}\"/>\n        </div>\n    </div>\n    <sq-date-range-picker *ngIf=\"isDate\"\n        [options]=\"{name: field, system: false, closedRange: false, minDate: minDate, maxDate: maxDate}\"\n        [formControlName]=\"field\"\n        [id]=\"field\"\n        sqAdvancedFormValidation\n        [field]=\"field\"\n        [validationForm]=\"form\">\n    </sq-date-range-picker>\n</div>\n","import {Injectable, Inject} from \"@angular/core\";\nimport {HttpInterceptor, HttpRequest, HttpResponse, HttpHandler, HttpEvent} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {tap} from \"rxjs/operators\";\nimport {START_CONFIG, StartConfig} from \"@sinequa/core/web-services\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {NotificationsService, Notification, NotificationType} from \"./notifications.service\";\n\n/**\n * An `HttpInterceptor` to process notifications attached to the response body\n * in the `$notifications` member.\n */\n@Injectable({\n    providedIn: \"root\"\n})\nexport class NotificationsInterceptor implements HttpInterceptor {\n    constructor(\n        @Inject(START_CONFIG) private startConfig: StartConfig,\n        private notificationsService: NotificationsService) {\n    }\n\n    protected shouldIntercept(url: string): boolean {\n        return Utils.startsWith(url, this.startConfig.apiPath!);\n    }\n\n    protected processNotifications(notifications: Notification[] | undefined) {\n        if (Utils.isArray(notifications)) {\n            for (const notification of notifications) {\n                let  type = notification.type;\n                if (Utils.isUndefined(type)) {\n                    type = NotificationType.Info;\n                }\n                const text = notification.text;\n                if (text) {\n                    const params = notification.params;\n                    const title = notification.title;\n                    let autoClose = notification.autoClose;\n                    if (Utils.isUndefined(autoClose)) {\n                        autoClose = (type === NotificationType.Success) || (type === NotificationType.Info);\n                    }\n                    this.notificationsService.notify(type, text, params, title, autoClose);\n                }\n            }\n        }\n    }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        if (!this.shouldIntercept(request.url)) {\n            return next.handle(request);\n        }\n        return next.handle(request).pipe(\n            tap(event => {\n                if (event instanceof HttpResponse) {\n                    if (request.responseType === \"json\" && Utils.isObject(event.body)) {\n                        this.processNotifications(event.body.$notifications);\n                    }\n                }\n            }));\n   }\n}\n","import { Component, EventEmitter, Input, OnChanges, Output } from \"@angular/core\";\nimport { FormBuilder, FormControl, FormGroup } from \"@angular/forms\";\nimport { ValidationService } from \"@sinequa/core/validation\";\n\n@Component({\n    selector: 'sq-preview-page-form',\n    templateUrl: './preview-page-form.component.html'\n})\nexport class BsPreviewPageFormComponent implements OnChanges{\n    @Input() pageNumber?: number;\n    @Output() gotopage = new EventEmitter<number>();\n\n    form: FormGroup;\n    pageControl: FormControl;\n\n    constructor(\n        formBuilder: FormBuilder,\n        validationService: ValidationService\n    ) {\n        this.pageControl = new FormControl('', [validationService.integerValidator(), validationService.minValidator(1)]);\n        this.form = formBuilder.group({\n          page: this.pageControl\n        });\n    }\n\n    ngOnChanges() {\n        this.pageControl.setValue(this.pageNumber);\n    }\n\n    submit() {\n        const page = parseInt(this.pageControl.value, 10);\n        if(!isNaN(page) && page !== this.pageNumber) {\n            // remember the page number submitted\n            // this allow us to submit again the previous page \n            // when page not exists and/or an error is triggered\n            this.pageNumber = page;\n            this.gotopage.next(page);\n        }\n    }\n\n}","<form novalidate [formGroup]=\"form\" *ngIf=\"pageNumber\" class=\"mb-2\">\n    <div [sqValidation]=\"{form: form, controlName: 'page'}\" class=\"input-group mb-1\">\n        <div class=\"input-group-prepend\">\n            <label for=\"page-input\" class=\"input-group-text\">{{ 'msg#preview.gotopage' | sqMessage}}</label>\n        </div>\n        <input id=\"page-input\" type=\"text\" class=\"form-control\" placeholder=\"page\" formControlName=\"page\" autocomplete=\"off\" spellcheck=\"off\">\n        <div class=\"input-group-append\">\n            <button class=\"btn btn-primary\" type=\"submit\" (click)=\"submit()\" >\n                <i class=\"fas fa-fw fa-arrow-right\"></i>\n            </button>\n        </div>\n    </div>\n</form>","import {Directive, Input, Output, ElementRef, HostListener, OnInit, EventEmitter, OnDestroy, OnChanges, SimpleChanges, HostBinding} from \"@angular/core\";\nimport {Observable, Subscription} from \"rxjs\";\nimport {Utils, Keys} from \"@sinequa/core/base\";\nimport {AppService} from \"@sinequa/core/app-utils\";\nimport {SuggestService} from \"./suggest.service\";\nimport {UIService} from \"@sinequa/components/utils\";\n\n/**\n * Minimal interface for autocomplete items (note that the Suggestion\n * objects returned by the Suggestion service implement naturally this\n * interface)\n */\nexport interface AutocompleteItem {\n    display: string;\n    normalized?: string;\n    category: string;\n    label?: string;\n}\n\n/**\n * Interface required to be implemented by the dropdown components\n * binded to this autocomplete directive.\n * The component is responsible for displaying a list of items\n * and signaling back if a component was clicked. The component must\n * also manage navigation through the list (next/previous and selectedValue).\n */\nexport interface AutocompleteComponent {\n\n    /**\n     * Whether there are any item to display\n     */\n    hasItems: boolean;\n\n    /**\n     * Event emitter for clicks on an autocomplete item\n     */\n    clicked: EventEmitter<AutocompleteItem>;\n\n    /**\n     * Returns the currently selected item, if any\n     */\n    selectedValue: AutocompleteItem | undefined;\n\n    /**\n     * Update the data and state of this component\n     * @param active whether the component should be displayed\n     * @param items The list of items to display\n     */\n    update(active: boolean, items?: AutocompleteItem[]): void;\n\n    /**\n     * Select the next item in the list and returns it\n     */\n    selectNext(): AutocompleteItem | undefined;\n\n    /**\n     * Select the previous item in the list and returns it\n     */\n    selectPrevious(): AutocompleteItem | undefined;\n}\n\n/**\n * States in which the autocomplete component can be\n */\nexport enum AutocompleteState {\n    OFF = \"OFF\", // Autocomplete is turned off (via @Input())\n    INIT = \"INIT\", // Input is not focused, dropdown is closed\n    START = \"START\", // Input is focused, no text typed in, dropdown is closed\n    ACTIVE = \"ACTIVE\", // Input is focused, text is typed, suggests are being queried, dropdown is closed\n    OPENED = \"OPENED\", // Input is focused, text is typed, suggests are available, dropdown/autocomplete component is displayed\n    SELECTED = \"SELECTED\" // Input is focused, an input from the dropdown was selected\n}\n\n@Directive({\n    selector: \"[sqAutocomplete]\"\n})\nexport class Autocomplete implements OnInit, OnChanges, OnDestroy {\n\n    /** Reference to the AutocompleteComponent that displays the autocomplete items */\n    @Input() dropdown: AutocompleteComponent;\n\n    /** Whether the autocomplete should be active or not */\n    @Input() off: boolean;\n\n    /** Debounce delay between autocomplete queries */\n    @Input() suggestDelay: number = 200;\n\n    /** Name of the Suggest Query to be used */\n    @Input() suggestQuery: string;\n\n    /** Custom placeholder */\n    @Input() placeholder: string = '';\n\n    @HostBinding('attr.placeholder') _placeholder;\n\n    // Event emitters\n\n    @Output() stateChange = new EventEmitter<AutocompleteState>();\n    @Output() submit = new EventEmitter<void>();\n\n    private _state: AutocompleteState = AutocompleteState.INIT;\n\n    // The input HTML element to which this directive is attached\n    protected readonly inputElement: HTMLInputElement;\n\n\n    // Initialization\n\n    constructor(\n        elementRef: ElementRef,\n        protected suggestService: SuggestService,\n        protected appService: AppService,\n        protected uiService: UIService){\n\n        this.inputElement = elementRef.nativeElement;\n    }\n\n\n    /**\n     * On initialization, we listen to the autocomplete component for\n     * selection events\n     */\n    ngOnInit(){\n        this._dropdownSubscription = this.dropdown.clicked.subscribe(item => {\n            this.select(item, true);  // An item was selected from the autocomplete => take the value\n        });\n\n        this._placeholder = this.placeholder;\n        this.inputElement.focus();\n        this.start();\n    }\n\n    /**\n     * If the off input changes state, react accordingly\n     * @param changes\n     */\n    ngOnChanges(changes: SimpleChanges){\n        // Turn on the autocomplete\n        if(changes[\"off\"] && !this.off){\n            this.start();\n        }\n    }\n\n\n    protected _dropdownSubscription: Subscription;\n    /**\n     * Unsubscribe when destroying the component\n     */\n    ngOnDestroy(){\n        if(this._dropdownSubscription){\n            this._dropdownSubscription.unsubscribe();\n        }\n    }\n\n\n    // Getters and Setters\n\n    /**\n     * Return the current state of the autocomplete\n     */\n    public getState(): AutocompleteState {\n        return this._state;\n    }\n\n    /**\n     * Set the current state of the autocomplete\n     */\n    protected setState(state: AutocompleteState) {\n        if(this.off){\n            if(this._state !== AutocompleteState.OFF){\n                this._state = AutocompleteState.OFF;\n                this.stateChange.next(this.getState());\n            }\n            // ignore state change if Autocomplete is off\n        }\n        else if(!!state && this._state !== state) {\n            this._state = state;\n            //console.log(\"STATE: \", this._state);\n            this.stateChange.next(this.getState());\n        }\n    }\n\n    /**\n     * Get the current text value of the HTML <input>\n     * to which this directive is attached\n     */\n    protected getInputValue() : string {\n        return this.inputElement.value;\n    }\n\n    /**\n     * Set the current text value of the HTML <input>\n     * to which this directive is attached\n     */\n    protected setInputValue(value: string) {\n        // Using setCaret() allows to properly update the underlying form\n        this.uiService.setCaret(this.inputElement, 0, -1, value); // 0, -1 erases the current value and writes the new one\n    }\n\n    /**\n     * Sets the content of the <input> based on the given\n     * Autocomplete Item (various implementations are possible,\n     * depending on the item content and nature).\n     * This would be the right method to override to implement\n     * fielded search autocomplete.\n     * @returns true if this autocomplete item should be searched\n     */\n    protected setAutocompleteItem(item: AutocompleteItem): boolean {\n        if(item) {\n            this.setInputValue(item.display);\n            return true;\n        }\n        return false;\n    }\n\n\n    // Methods triggering state changes\n\n    /**\n     * INIT state (Input is not focused, dropdown is closed)\n     */\n    protected init(): void {\n        this.setState(AutocompleteState.INIT);\n        this.dropdown.update(false);    // If the dropdown was active\n    }\n\n    /**\n     * START state (Input is focused, no text typed in, dropdown is closed)\n     */\n    protected start(): void {\n        this.setState(AutocompleteState.START);\n        this.dropdown.update(false);    // If the dropdown was active\n    }\n\n    /**\n     * START state and if the <input> has content, immediately switch to ACTIVE\n     */\n    protected startOrActive(): void {\n        if(this.getState()!== AutocompleteState.ACTIVE && this.getState()!== AutocompleteState.OPENED){ // Avoid flickering\n            this.start();\n            if(!!this.getInputValue()){\n                this.active();\n            }\n        }\n    }\n\n    /**\n     * ACTIVE state (Input is focused, text is typed, suggests are being queried, dropdown is closed)\n     */\n    protected active(): void {\n        if(this.getState() === AutocompleteState.START || this.getState() === AutocompleteState.ACTIVE || this.getState() === AutocompleteState.OPENED){\n            this.setState(AutocompleteState.ACTIVE);\n            this.dropdown.update(false);    // If the dropdown was active\n            this.suggest();\n        }\n    }\n\n    /**\n     * Select the given autocomplete suggestion for search\n     * @param submit if, true also trigger a submit\n     * @param item a specific item to submit\n     */\n    protected select(item: AutocompleteItem, submit?: boolean): void {\n        this.setState(AutocompleteState.SELECTED); // Change state BEFORE setting input value, so the event is correctly processed\n        const searchable = this.setAutocompleteItem(item);\n        this.dropdown.update(false);    // Close dropdown\n\n        if(submit && searchable) this.submit.next();\n    }\n\n    /**\n     * Switch to OPENED state (from ACTIVE only)\n     */\n    protected open(): void {\n        if(this.getState() === AutocompleteState.ACTIVE){\n            this.setState(AutocompleteState.OPENED);\n        }\n    }\n\n    /**\n     * Request suggestions from the server, and update the dropdown contents\n     * and autocomplete state asynchronously.\n     * Override this method for a synchronous implementation.\n     */\n    protected suggest() {\n        this.debounceSuggest();\n    }\n\n    /**\n     * Actually makes the API call to the suggestService to retrieve suggestions\n     * and process them.\n     */\n    protected getSuggests() {\n        const value = this.getInputValue();\n        if(value) { // If there is text, make a call to the suggest API\n            this.processSuggests(\n                this.getSuggestsObs(value)\n            );\n        }\n        else {  // If empty input, restart autocomplete\n            this.start();\n        }\n    }\n\n    /**\n     * Returns an observable of Suggestions, given some input text\n     * @param value input text for which to return suggestions\n     */\n    protected getSuggestsObs(value: string, fields?: string[]): Observable<AutocompleteItem[]> {\n        return this.suggestService.get(this.suggestQuery, value, fields);\n    }\n\n    /**\n     * Process suggestions obtained (from whatever mean):\n     * - If data available, filter out fields\n     * - update the dropdown content\n     * - Switch between OPEN and ACTIVE states\n     * - Use changeDetectorRef to update display\n     * @param obs an observable of AutocompleteItem suggestions\n     */\n    protected processSuggests(obs: Observable<AutocompleteItem[]>){\n        obs.subscribe(\n            suggests => {\n                if(this.getState() === AutocompleteState.ACTIVE || this.getState() === AutocompleteState.OPENED){\n                    this.dropdown.update(true, suggests\n                        .filter(item => item.category !== \"$field$\")  // Filter out fields\n                        .map(item => {\n                            if(!item.label){\n                                item.label = this.appService.getLabel(item.category);\n                            }\n                            return item;\n                        }));\n                }\n            },\n            err => {\n                this.dropdown.update(false);\n            },\n            () => {\n                if(this.dropdown.hasItems && this.getState() === AutocompleteState.ACTIVE){\n                    this.open();    // Switch from ACTIVE to OPENED (if not already)\n                }\n                else if(!this.dropdown.hasItems && this.getState() === AutocompleteState.OPENED){   // No data\n                    this.active();  // Switch from OPENED to ACTIVE (if not already)\n                }\n            });\n    }\n\n    /**\n     * Use the suggest service to retrieve suggestions given the input text.\n     * The suggest (autocomplete) query is debounded to avoid flooding the server.\n     */\n    private readonly debounceSuggest: () => void = Utils.debounce(() => {\n        this.getSuggests();\n    }, this.suggestDelay);\n\n\n    /**\n     * Returns the caret position within the input\n     */\n    protected getInputPosition(): number {\n        // Come back before trailing spaces so the preceding value is still seen as the input value\n        // (needed for ExprParser to stop autocomplete being cancelled on entering trailing spaces)\n        const position = this.uiService.getCaret(this.inputElement).start;\n        const length = Utils.len(Utils.trimEnd(this.getInputValue()));\n        return Math.min(position, length);\n    }\n\n    /**\n     * The following are event listeners applied to the <input> host component\n     * onto which this directive is applied.\n     * The events affect the state of the autocomplete, which triggers\n     * various actions (call to suggest API, etc.).\n     */\n\n    /**\n     * Listens to click events on the <input> host\n     */\n    @HostListener(\"click\") click() {\n        //console.log(\"input clicked\");\n        this.startOrActive();\n    }\n\n    /**\n     * Listens to touchstart events (mobile clicks) on the <input> host\n     */\n    @HostListener(\"touchstart\") touchstart() {\n        //console.log(\"input touchstart\");\n        this.startOrActive();\n    }\n\n    /**\n     * Listens to focus events on the <input> host\n     */\n    @HostListener(\"focus\") focus() {\n        //console.log(\"input focus gained\");\n        this.start();\n    }\n\n    /**\n     * Listens to blur events (out of focus) on the <input> host\n     */\n    @HostListener(\"blur\", [\"$event\"]) blur(event: FocusEvent) {\n        //console.log(\"input focus lost\");\n        this.init();\n    }\n\n    /**\n     * Listen to any change in the <input> content and react\n     * according to the current state of the autocomplete\n     * @param event\n     */\n    @HostListener(\"input\", [\"$event\"]) inputChanged(event: Event) {\n        //console.log(\"input value changed\");\n        switch(this.getState()){\n            case AutocompleteState.OPENED:\n                this.suggest(); // Just request more data, but no state change\n                break;\n            case AutocompleteState.START:\n            case AutocompleteState.ACTIVE:\n                this.active(); // get more data, and change state if not already ACTIVE\n                break;\n            case AutocompleteState.SELECTED:\n                this.start(); // The model changed because we selected a value ==> we restart in case the user keeps typing\n                break;\n            case AutocompleteState.INIT:\n                console.error(\"Should not be in INIT state if the form changes\");\n                break;\n        }\n    }\n\n    /**\n     * Listen to user's keyboard actions in the <input>, in order to navigate\n     * and select the autocomplete suggestions.\n     * @param event the keyboard\n     */\n    @HostListener(\"keydown\", [\"$event\"]) keydown(event: KeyboardEvent) {\n        // Navigation in the opened dropdown\n        if (this.getState() === AutocompleteState.OPENED) {\n            switch (event.keyCode) {\n                case Keys.up:\n                    this.dropdown.selectPrevious();\n                    return false; // prevent default\n                case Keys.down:\n                    this.dropdown.selectNext();\n                    return false; // prevent default\n                case Keys.tab:\n                    if(!!this.dropdown.selectedValue){\n                        this.select(this.dropdown.selectedValue);\n                    } else {\n                        this.dropdown.selectNext();\n                    }\n                    return false; // prevent default (change focus)\n                case Keys.esc:\n                    this.start(); // Just restart the autocomplete\n                    //event.stopPropagation(); // needed?\n                    return false; // prevent default\n                case Keys.enter:\n                    if(!!this.dropdown.selectedValue){\n                        this.select(this.dropdown.selectedValue, true);\n                        //event.stopPropagation(); // needed?\n                        return false; // prevent default action (auto submit)\n                    }\n            }\n        }\n\n        // If a search was triggered, restart the autocomplete\n        if(event.keyCode === Keys.enter) {\n            this.submit.next();\n            this.start();\n        }\n        return undefined;\n    }\n}\n","import {\n    Directive,\n    Input,\n    Output,\n    EventEmitter,\n    HostListener,\n} from \"@angular/core\";\nimport { AutocompleteItem } from \"@sinequa/components/autocomplete\";\nimport { BsAdvancedFormAutocomplete } from \"../advanced-form-autocomplete.directive\";\nimport { Keys } from \"@sinequa/core/base\";\n\n@Directive({\n    selector: \"[sqAdvancedFormAutocompleteMultiInput]\",\n})\nexport class BsAdvancedFormAutocompleteMultiInput extends BsAdvancedFormAutocomplete {\n    /** Event synchronizing the list of search terms in the parent component */\n    @Output() itemsUpdate = new EventEmitter<AutocompleteItem[]>();\n\n    /** Stores the selected search terms selected via Tab */\n    @Input() items: AutocompleteItem[] = [];\n\n    /**\n     * The setAutocompleteItem() method from the original directive is overriden to\n     * Sets the content of the <input> based on the given\n     * Autocomplete Item.\n     * @returns false since we don't need trigger search at this point of time\n     */\n    protected setAutocompleteItem(item: AutocompleteItem): boolean {\n        if (item) {\n            // Store the autocomplete items that will be used to create a selection\n            this.items.push(item);\n            this.itemsUpdate.next(this.items);\n            this.setInputValue(\"\");\n        }\n        return false;\n    }\n\n    /**\n     * Listen to user's keyboard actions in the <input>, in order to navigate\n     * and select the autocomplete suggestions.\n     * Overrides the parent keydown method, adds the management of the backspace key\n     * to remove items, enhance the enter key to support adding new items.\n     * @param event the keyboard\n     */\n    keydown(event: KeyboardEvent) {\n        const keydown = super.keydown(event);\n\n        if (keydown === undefined) {\n            /** We can remove selections by typing <backspace> when the input is empty */\n            if (event.keyCode === Keys.backspace) {\n                if (this.getInputValue() === \"\") {\n                    this.items.pop();\n                    this.itemsUpdate.next(this.items);\n                }\n            }\n            /** Allow the selection one of new item */\n            if (event.keyCode === Keys.enter) {\n                this._manageSetAutocompleteItem();\n            }\n        }\n        return keydown;\n    }\n\n    /**\n     * Listens to blur events (out of focus) on the <input> host and overrides the parent blur events\n     */\n    @HostListener(\"blur\", [\"$event\"]) blur(event: FocusEvent) {\n        this._manageSetAutocompleteItem();\n        this.init();\n    }\n\n    private _manageSetAutocompleteItem(): void {\n        /** Always consider if there is text in the <input> and that it is not yet added in items  */\n        if (!!this.getInputValue() && this.getInputValue() !== \"\") {\n            this.setAutocompleteItem({\n                display: this.getInputValue(),\n                normalized: this.getInputValue(),\n                category: \"\",\n            });\n        }\n    }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { AppService } from \"@sinequa/core/app-utils\";\nimport { Locale, IntlService } from \"@sinequa/core/intl\";\nimport { MapOf } from \"@sinequa/core/base\";\n\nimport { JsonInfo } from \"../edit-user-settings/edit-user-settings\";\n\n\n/**\n * Editor for User settings.\n * <p>\n * This component can add form control for modifiable settings which are not shown by JsonEditor component.\n *\n */\n@Component({\n    selector: 'sq-user-settings-editor',\n    templateUrl: './user-settings-editor.html'\n})\nexport class BsUserSettingsEditor implements OnInit {\n\n    @Input() public form: FormGroup;\n    @Input() public model: MapOf<any>;\n    @Input() public layout: MapOf<JsonInfo.Entry>;\n    @Input() showUILanguageSelector: boolean;\n    public locales: Locale[];\n\n    constructor(\n        private appService: AppService,\n        private intlService: IntlService,\n        private formBuilder: FormBuilder\n    ) {\n    }\n\n    ngOnInit(): void {\n        if (!this.appService.app) {\n            return; // logout\n        }\n\n        // Locale is treated separately because it is not really stored in the user settings.\n        this.locales = [];\n        if (this.intlService.locales.length > 0) {\n            for (const locale of this.intlService.locales) {\n                this.locales.push(locale);\n            }\n        }\n\n        this.model['language'] = this.intlService.currentLocale.name;\n        this.form.addControl('selectedLocale', this.formBuilder.control(this.intlService.currentLocale.name));\n/*\n        if (this.config && this.config.items) {\n            this.config.items.forEach(item => {\n                if (item.active && JsonEditor.isInputComponent(item)) {\n                    const entry = <JsonInfo.Entry>item;\n                    const paths = Utils.split(entry.path, '.');\n                    const pathLength = paths.length;\n                    const currentValue = this.userSettingsService.readUserSetting(paths)\n                    const entryKey = paths[pathLength - 1];\n\n                    // Add model value\n                    this.setModelValue(paths, currentValue);\n\n                    // Add layout\n                    this.layout[entryKey] = entry;\n\n                    // Add form control\n                    this.form.addControl(\n                        entryKey,\n                        this.formBuilder.control(currentValue, Validators.compose(JsonEditor.makeValidatorFunctions(entry, this.validationService))));\n                }\n            });\n        }\n        */\n    }\n\n    /**\n     * Sets the current value of an entry to our JSON model.\n     *\n     * @param paths The paths to the entry in the JSON model.\n     * @param value The value to set.\n     */\n    /*private setModelValue(paths: string[], value: any): void {\n        const nbPaths = paths.length;\n        let json = this.model;\n        if (nbPaths > 1) {\n            for (let i = 0; i < nbPaths - 1; ++i) {\n                const path = paths[i];\n                if (!json[path]) {\n                    json[path] = {};\n                }\n                json = json[path];\n            }\n        }\n\n        const key = paths[nbPaths - 1];\n        json[key] = value;\n    }*/\n\n    /**\n     * Indicates if the UI language selector is shown in the User settings editor dialog.\n     * By default, returns true.\n     *\n     * @returns true if the UI language selector is shown in the User settings editor dialog.\n     */\n    public showLanguageSelector(): boolean {\n        return this.showUILanguageSelector;\n    }\n}\n","<div [formGroup]=\"form\">\n    <div class=\"form-group\" style=\"margin-bottom: 0\" [hidden]=\"!showLanguageSelector()\">\n        <label for=\"locales\">{{'msg#editUserSettings.language' | sqMessage}}</label>\n        <select [sqValidation]=\"form\" class=\"form-control custom-select\" formControlName=\"selectedLocale\" id=\"selectedLocale\" sqAutofocus>\n            <option [value]=\"locale.name\" *ngFor=\"let locale of locales\">{{locale.display | sqMessage}}</option>\n        </select>\n    </div>\n    <!--sq-json-editor [form]=\"form\" [model]=\"model\" [layout]=\"layout\" [config]=\"config\"></sq-json-editor-->\n</div>\n","export * from \"./confirm.component\";\nexport * from \"./prompt.component\";\nexport * from \"./modal.module\";\nexport * from \"./modal.service\";\nexport * from \"./modal-ref\";\nexport * from \"./messages/index\";","import {Injectable, Inject} from \"@angular/core\";\nimport {Observable, throwError} from \"rxjs\";\nimport {SqHttpClient} from \"./http-client\";\nimport {HttpService} from \"./http.service\";\nimport {START_CONFIG, StartConfig} from \"./start-config.web.service\";\nimport {Utils, FieldValue} from \"@sinequa/core/base\";\nimport {IQuery} from \"./query/query\";\nimport {AuditEvents} from \"./audit.web.service\";\nimport {CCColumn, SpellingCorrectionMode} from \"./config/ccapp\";\n\n/**\n * Describes the results of a call to the query web service\n */\nexport interface Results {\n    /**\n     * A unique identifier for this set of results - typically used for auditing\n     */\n    id: string;\n    /**\n     * The sql queries that were executed on the server to produce these results\n     */\n    sql: string[];\n    /**\n     * The page number of these results\n     */\n    page: number;\n    /**\n     * The page size or number of document per page\n     */\n    pageSize: number;\n    /**\n     * The number of document results for the query.\n     */\n    rowCount: number;\n    /**\n     * The number of document results for the query. If tab search is active and the `CCTabSearch.totalIsSumOfTabTotals` option is set then\n     * the total of counts of all the tabs will be returned. Otherwise this returns the same value as `rowCount`.\n     */\n    totalRowCount: number;\n    /**\n     * Returns the number of documents included in these results, as reported by the engine. It will have the same value as `records.length`.\n     */\n    cursorRowCount: number;\n    /**\n     * The number of attributes in these results\n     */\n    attributeCount: number;\n    /**\n     * The number of columns in these results\n     */\n    columnCount: number;\n    /**\n     * The name of currently selected tab. See {@link CCTab}\n     */\n    tab: string;\n    /**\n     * Information on the tabs for these results. See {@link CCTabSearch}\n     */\n    tabs: Tab[];\n    /**\n     * The name of the currently selected scope. See {@link CCScope}\n     */\n    scope: string;\n    /**\n     * The name of the currently selected sorting choice. See {@link CCSortingChoice}\n     */\n    sort: string;\n    /**\n     * Details of the \"did you mean\" state for these results\n     */\n    didYouMean: DidYouMean;\n    /**\n     * The aggregation results\n     */\n    aggregations: Aggregation[];\n    /**\n     * The attributes for these results\n     */\n    attributes: Attributes;\n    /**\n     * Any query intents associated with these results\n     */\n    queryIntents: QueryIntent[];\n    /**\n     * An analysis of the query associated with these resullts\n     */\n    queryAnalysis: QueryAnalysis;\n    /**\n     * The document records\n     */\n    records: Record[];\n    /**\n     * A hash of the associated results for use with RFM (relevance feedback model) functionality\n     */\n    rfmQueryHash: string;\n    /**\n     * The name of the {@link IQuery} that produced these results\n     */\n    queryName: string;\n    /**\n     * SQL statements executed by the query web service\n     */\n    statements: string[];\n}\n\n/**\n * Describes the results for a particular tab\n */\nexport interface Tab {\n    /**\n     * The name of the tab\n     */\n    name: string;\n    /**\n     * The display value of the tab\n     */\n    display: string;\n    /**\n     * The tab value\n     */\n    value: string;\n    /**\n     * The number of document records that would be returned if this tab is selected\n     */\n    count: number;\n}\n\n/**\n * Describes a single \"did you mean\" item\n */\nexport interface DidYouMeanItem {\n    /**\n     * The original search term\n     */\n    original: string;\n    /**\n     * The corrected search term\n     */\n    corrected: string;\n}\n\n/**\n * Describes the \"did you mean\" results\n */\nexport interface DidYouMean {\n    /**\n     * The spelling correction mode used for these results\n     */\n    spellingCorrectionMode: SpellingCorrectionMode;\n    /**\n     * The `DidYouMeanItem` corresponding to the main fulltext terms\n     */\n    text: DidYouMeanItem;\n    /**\n     * The `DidYouMeanItem`s corresponding to any refine fulltext term selections\n     */\n    refine: DidYouMeanItem[];\n}\n\n/**\n * Used to inform whether a query is being executed using original or corrected search terms\n */\nexport enum DidYouMeanKind {\n    Original,\n    Corrected\n}\n\n/**\n * Various attributes that are returned with a set of search results\n */\nexport interface  Attributes {\n    queryid: string;\n    searchid: string;\n    processingtime: string;\n    rowfetchtime: string;\n    cachehit: string;\n    matchingrowcount: string;\n    internalqueryanalysis: string;\n    internalquerylog: string;\n}\n\n/**\n * Describes a single query intent item\n */\nexport interface QueryIntent {\n    name: string;\n    component: string;\n    entities: QueryIntentEntity[];\n    words: QueryIntentWord[];\n    actions: QueryIntentAction[];\n    datasets: QueryIntentDatasets;\n}\n\n/**\n * Describes a query intent entity\n */\nexport interface QueryIntentEntity {\n    name: string;\n    value: string;\n    matched: boolean;\n}\n\n/**\n * Describes a query intent word\n */\nexport interface QueryIntentWord {\n    word: string;\n    value: string;\n    matched: boolean;\n}\n\n/**\n * Describes a query intent action\n */\nexport interface QueryIntentAction {\n    type: string;\n    data: string;\n}\n\n/**\n * Describes a set of query intent datasets\n */\nexport interface QueryIntentDatasets {\n    [name: string] : {\n        attributes : [any],\n        rows : [any]\n    };\n}\n\n/**\n * Describes an analysis of a query\n */\nexport interface QueryAnalysis {\n    text: string;\n    initial: boolean;\n    queryLanguage: string | undefined;\n    elements: QueryAnalysisElement[];\n}\n\n/**\n * Describes an element of query analysis\n */\nexport interface QueryAnalysisElement {\n    text: string;\n    entity: string;\n    weight: number;\n    length: number;\n    offset: number;\n    stopword: boolean;\n    root: string;\n    normalization: string;\n    lemmas: {text: string}[];\n    entities: QueryAnalysisElement[];\n    synonyms: QueryAnalysisElement[];\n    reformulations: QueryAnalysisElement[];\n    typos: QueryAnalysisElement[];\n    expression: QueryAnalysisElement[];\n    adjacency: QueryAnalysisElement[];\n    exact: QueryAnalysisElement[];\n}\n\n/**\n * Describes the match location information for a particular partname\n */\nexport interface PartnameMatchLocations {\n    partname: string;\n    data: string;\n}\n\n/**\n * Describes a set of partname match locations\n */\nexport interface MatchLocationsPerPartname {\n    matchlocations: PartnameMatchLocations[];\n}\n\n/**\n * Describes the locations of relevant extracts for a partname\n */\nexport interface PartnameExtracts {\n    partname: string;\n    data: string;\n}\n\n/**\n * Describes a set of partname relevant extracts locations\n */\nexport interface ExtractsPerPartname {\n    highlight: PartnameExtracts[];\n}\n\n/**\n * Describes the term presence for a particular search term\n */\nexport interface TermPresence {\n    term: string;\n    presence: \"found\" | \"missing\";\n}\n\n/**\n * Describes an aggregation item. This serves as a base interface for list aggregation items and tree aggregation nodes\n */\nexport interface AggregationItem {\n    /**\n     * The value of the item\n     */\n    value: FieldValue;\n    /**\n     * The display value of the item, if any\n     */\n    display?: string;\n    /**\n     * The number of documents that contain this item in the current results\n     */\n    count: number;\n    /**\n     * Identifies any operator with their associated results\n     */\n    operatorResults?: {\n        [key in \"min\" | \"max\" | \"sum\" | \"avg\" | \"stddev\" | \"variance\"]: number | Date\n    };\n\n    /**\n     * A client-side field that indicates whether this item is currrently selected\n     */\n    $selected?: boolean;\n    /**\n     * A client-side field that indicates whether this item is currently excluded\n     */\n    $excluded?: boolean;\n    /**\n     * A client-side field that indicates whether this item is currently filtered\n     */\n    $filtered?: boolean;\n    /**\n     * A client-side field that indicates the column that provided the value for this item.\n     * This can be useful when mixing items from different aggregations.\n     */\n    $column?: CCColumn;\n}\n\n/**\n * Describes any fields particular to a list aggregation item\n */\nexport type ListAggregationItem = AggregationItem;\n\n/**\n * Describes any fields particular to a tree aggregation node\n */\nexport interface TreeAggregationNode extends AggregationItem {\n    /**\n     * Determines whether this node has any children even if the `items` field is not currently populated\n     */\n    hasChildren: boolean;\n    /**\n     * Contains the child nodes of this node\n     */\n    items: TreeAggregationNode[];\n\n    /**\n     * A client-side field that contains the full path of the node\n     */\n    $path?: string;\n    /**\n     * A client-side field that indicates whether a parent node is currently open\n     */\n    $opened?: boolean;\n    /**\n     * The level at which this node is in the Tree aggregation\n     */\n    $level: number;\n}\n\n/**\n * Describes the results of an aggregation. This serves as a base interface for list and tree aggregations\n */\nexport interface Aggregation {\n    /**\n     * The name of the aggregation\n     */\n    name: string;\n    /**\n     * The name of the index column used to provide aggregation items\n     */\n    column: string;\n    /**\n     * Indicates whether the aggregation items are calculated using a distrbution (see App Dependencies in the Sinequa admin interface)\n     */\n    isDistribution?: boolean;\n    /**\n     * Indicates whether the aggregation items should be handled as tree nodes. This can be set to false for a tree aggregation\n     * if the \"Load tree as csv\" option is checked in the Sinequa configuration\n     */\n    isTree?: boolean;\n    /**\n     * Indicates whether the values for the items are fielded search expressions. This is the case for aggregations using a\n     * distribution (see `isDistribution`) and crossed distributions\n     */\n    valuesAreExpressions?: boolean;\n    /**\n     * The aggregation items for this aggregation\n     */\n    items?: AggregationItem[];\n}\n\n/**\n * Describes the fields specific to a list aggregation\n */\nexport type ListAggregation = Aggregation;\n\n/**\n * Describes the fields specific to a tree aggregation\n */\nexport type TreeAggregation = Aggregation;\n\n/**\n * Describes the fields making up an entity in the context of a particular document\n */\nexport interface EntityItem {\n    /**\n     * The value\n     */\n    value: string;\n    /**\n     * The display\n     */\n    display: string;\n    /**\n     * The locations of this item in the document text in the form `row1,col1;row2,col2;...`\n     */\n    locations?: string;\n    /**\n     * The remapped locations of this item in the original document in the form `row1,col1;row2,col2;...`\n     */\n    originalLocations?: string;\n    /**\n     * Following ES-11166, the number of occurrence of this entity in the document can be included\n     */\n    count?: number;\n}\n\n/**\n * Display kinds for RFM\n */\nexport enum RFMDisplay {\n    // Must be in par with C# RFMDisplay enum (RFM.cs)\n    none          = 0,\n\n    positiveRate  = 1,\n    mainlyPosRate = 2,\n    unrate        = 4,\n    mainlyNegRate = 8,\n    negativeRate  = 16,\n\n    all          = 31,\n    positiveOnly = 7,\n    negativeOnly = 28,\n\n    personalAll = 21,\n    personalPosOnly = 5,\n    personalNegOnly = 20,\n}\n\n/**\n * Describes the fields of an RFM action\n */\nexport interface RFMActionDisplay {\n    eventCount: number;\n    average: number;\n    status: RFMDisplay;\n    image: RFMDisplay;\n    imageAction: RFMDisplay;\n    availableActions: RFMDisplay;\n}\n\n/**\n * Describes the RFM data returned with a set of results\n */\nexport interface RFMData {\n    click?: RFMActionDisplay;\n    like?: RFMActionDisplay;\n    important?: RFMActionDisplay;\n}\n\n/**\n * Describes the standard fields in a document result record\n */\nexport interface Record {\n    /**\n     * The zero-based position of this document in the results\n     */\n    rank: number;\n    /**\n     * The unique identifier of this document\n     */\n    id: string;\n    /**\n     * The name of the index that contains this document\n     */\n    databasealias: string;\n    /**\n     * The global relevance of this document in the context of the query\n     */\n    globalrelevance: number;\n    /**\n     * Partnames that contain one or more of the search terms\n     */\n    matchingpartnames: string[];\n    /**\n     * The locations of the search terms in the document\n     */\n    matchlocations: string[];\n    /**\n     * The locations of the search terms in the document grouped by partname\n     */\n    matchlocationsperpartname: MatchLocationsPerPartname;\n    /**\n     * The relevant extracts in the document grouped by partname\n     */\n    extractsperpartname: ExtractsPerPartname;\n    /**\n     * The languages in the document\n     */\n    documentlanguages: string[];\n    /**\n     * The documentweight value of the document\n     */\n    documentweight: string;\n    /**\n     * The modified date and time of the document\n     */\n    modified: string;\n    /**\n     * The time and date when the document was indexed\n     */\n    indexationtime: string;\n    /**\n     * The version of the document\n     */\n    version: string;\n    /**\n     * The title of the document\n     */\n    title: string;\n    /**\n     * The display title of the document. This can contain HTML highlighting of the search terms\n     */\n    displayTitle: string;\n    /**\n     * The size in bytes of the document\n     */\n    size: number;\n    /**\n     * The value of the treepath of the document\n     */\n    treepath: string[];\n    /**\n     * The filename of the document\n     */\n    filename: string;\n    /**\n     * The file extension of the document\n     */\n    fileext: string;\n    /**\n     * The document flags\n     */\n    flags: string[];\n    /**\n     * The collection that produced the document (only one element will exist)\n     */\n    collection: string[];\n    /**\n     * The value of the docformat column\n     */\n    docformat: string;\n    /**\n     * The value of the doctype column\n     */\n    doctype: string;\n    /**\n     * The value of the url1 column\n     */\n    url1: string;\n    /**\n     * The value of the url2 column\n     */\n    url2: string;\n    /**\n     * The relevant extracts from the document. This can contain HTML highlighting of the search terms\n     */\n    relevantExtracts: string;\n    /**\n     * The text of the document\n     */\n    text: string;\n    /**\n     * The document authors\n     */\n    authors: string[];\n    /**\n     * The document access lists\n     */\n    accesslists: DocumentAccessLists;\n    /**\n     * The URL of the document's thumbnail\n     */\n    thumbnailUrl: string;\n    /**\n     * Indicates whether RFM has been enabled for this document\n     */\n    rfmEnabled: boolean;\n    /**\n     * Any RFM data for this document\n     */\n    rfm: RFMData;\n    /**\n     * Information about the search terms and whether they exist in the document or not\n     */\n    termspresence: TermPresence[];\n    /**\n     * A client-side field that indicates whether this document is currrently selected\n     */\n    $selected: boolean;\n    /**\n     * id of the container of this document (for splitted documents, attachments, etc.)\n     */\n    containerid?: string;\n    /**\n     * Page number of this document (for splitted documents). Added by the front-end\n     */\n    $page?: number;\n}\n\n/**\n * Describes the authorized and denied access lists for a document\n */\nexport interface DocumentAccessLists {\n    accessListIndices: number[];\n    authorizedLists: AccessLists;\n    deniedLists: AccessLists;\n}\n\n/**\n * Describes the access lists\n */\nexport interface AccessLists {\n    /**\n     * An array of `AccessListPrincipal` arrays. Each item in the outer array corresponds to column value of the document\n     */\n    [index: number]: AccessListPrincipal[];\n}\n\n/**\n * Describes the fields of a principal item in an access list\n */\nexport interface AccessListPrincipal {\n    /**\n     * The Sinequa domain to which the principal belongs\n     */\n    domain: string;\n    /**\n     * The identifier of the principal\n     */\n    id: string;\n}\n\nexport interface IMulti<T> {\n    results: T[];\n}\n\n/**\n * Describes information to be sent to the server when executing a query for server-side query intent processing\n */\nexport interface QueryIntentData {\n    /**\n     * The current results view\n     */\n    resultsView?: string;\n    /**\n     * The current tab\n     */\n    tab?: string;\n    /**\n     * Query intents\n     */\n    queryIntents?: QueryIntent[];\n    /**\n     * Analysis of the current query\n     */\n    queryAnalysis?: QueryAnalysis;\n}\n\n/**\n * A service to call the query web service\n */\n@Injectable({\n    providedIn: \"root\"\n})\nexport class QueryWebService extends HttpService {\n    constructor(\n        @Inject(START_CONFIG) startConfig: StartConfig,\n        public httpClient: SqHttpClient) {\n        super(startConfig);\n    }\n\n    protected endPoint = \"query\";\n\n    /**\n     * Get the results for the passed query\n     *\n     * @param query The query to execute\n     * @param auditEvents Any audit events to store on the server\n     * @param queryIntentData Any accompanying query intent data\n     */\n    public getResults(query: IQuery, auditEvents?: AuditEvents, queryIntentData?: QueryIntentData): Observable<Results> {\n        if (!query) {\n            return throwError({ error: \"no query\" });\n        }\n        const observable = this.httpClient.post<Results>(this.makeUrl(this.endPoint), {\n            app: this.appName,\n            query,\n            $auditRecord: auditEvents,\n            queryIntentData\n        });\n        Utils.subscribe(observable,\n            (response) => {\n                console.log(\"queryService.getResults success - data: \", response);\n                return response;\n            },\n            (error) => {\n                console.log(\"queryService.getResults failure - error: \", error);\n            });\n        return observable;\n    }\n\n    /**\n     * Get the results for a set of queries\n     *\n     * @param queries The queries to execute\n     * @param auditEvents Any audit events to store on the server\n     */\n    public getMultipleResults(queries: IQuery[], auditEvents?: AuditEvents): Observable<IMulti<Results>> {\n        if (!queries || queries.length === 0) {\n            return throwError({ error: \"no queries\" });\n        }\n        const data: {\n            methods: {\n                method: string,\n                app: string,\n                query: IQuery\n            }[],\n            propagateErrors: true,\n            $auditRecord?: AuditEvents\n        } = {\n            methods: [],\n            propagateErrors: true,\n            $auditRecord: auditEvents\n        };\n        for (const query of queries) {\n            data.methods.push({\n                method: this.endPoint,\n                app: this.appName,\n                query\n            });\n        }\n        return this.httpClient.post<IMulti<Results>>(this.makeUrl(\"multi\"), data);\n    }\n}\n","export default {\n    \"statusBar\": {\n        \"fullscreenTitleEnter\": \"Fullscreen\",\n        \"fullscreenTitleExit\": \"Exit fullscreen\",\n        \"networkActivity\": \"Network activity\"\n    }\n};\n","import {Directive, OnInit, OnDestroy, AfterViewInit, ElementRef, HostListener} from \"@angular/core\";\nimport {Subscription} from 'rxjs';\nimport Popper from 'popper.js';\nimport {Keys} from \"@sinequa/core/base\";\nimport {BsDropdownService, gClassName, gSelector, gAttachmentMap} from './dropdown.service';\n\n// Based on  Bootstrap (v4.4.1): dropdown.js\n\nfunction noop() {}\n\nconst gConfig = {\n    offset       : 0,\n    flip         : true,\n    boundary     : 'scrollParent',\n    reference    : 'toggle',\n    display      : 'dynamic',\n    popperConfig : null\n};\n\n@Directive({\n    selector: gSelector.DATA_TOGGLE\n})\nexport class BsDropdownDirective implements OnInit, OnDestroy, AfterViewInit {\n    private subscription: Subscription;\n    private inNavbar: boolean;\n    private dropdown: HTMLElement;\n    private dropdownToggle: HTMLElement;\n    private _dropdownMenu: HTMLElement | null;\n    private popper;\n\n    constructor(\n        private elementRef: ElementRef,\n        private dropdownService: BsDropdownService\n    ) {\n    }\n\n    get dropdownMenu(): HTMLElement | null {\n        if (!this._dropdownMenu && this.dropdown) {\n            this._dropdownMenu = this.dropdown.querySelector(gSelector.MENU);\n        }\n        return this._dropdownMenu;\n    }\n\n    ngOnInit() {\n        this.subscription = this.dropdownService.events.subscribe((event) => {\n            if (event.type === \"clear\") {\n                this.clear(event.sourceEvent);\n            }\n            else if (event.type === \"toggle\") {\n                this.toggle(event.element);\n            }\n        });\n    }\n\n    ngAfterViewInit() {\n        this.dropdownToggle = this.elementRef.nativeElement;\n        this.dropdown = this.dropdownService.getParentFromElement(this.dropdownToggle) as HTMLElement;\n        this.inNavbar = !!this.dropdownToggle.closest('.navbar');\n    }\n\n    ngOnDestroy() {\n        this.subscription.unsubscribe();\n    }\n\n    @HostListener(\"click\", [\"$event\"])\n    clickHandler(event: Event) {\n        // before event.stopPropagation() \n        // needed to avoid dropdown menu list to stay opened,\n        // bubble event to his root parent first and once\n        const isActive = this.dropdownMenu && this.dropdownMenu.classList.contains(gClassName.SHOW);\n        if (!isActive) this.dropdown.dispatchEvent(new Event('click', {bubbles: true, cancelable: false}));\n        \n        event.preventDefault();\n        event.stopPropagation();\n        this.toggle(this.dropdownToggle);\n    }\n\n    private toggle(element: Element) {\n        if (!element || this.dropdownToggle !== element || !this.dropdownMenu || !this.dropdown) {\n            return;\n        }\n\n        if (/*TODO element.disabled || */element.classList.contains(gClassName.DISABLED)) {\n            return;\n        }\n\n        const isActive = this.dropdownMenu && this.dropdownMenu.classList.contains(gClassName.SHOW);\n\n        this.dropdownService.raiseClear();\n\n        if (isActive) {\n            return;\n        }\n\n        this.show(true);\n    }\n\n    private getPlacement(): string {\n        let placement = gAttachmentMap.BOTTOM;\n\n        // Handle dropup\n        if (this.dropdown.classList.contains(gClassName.DROPUP)) {\n            placement = gAttachmentMap.TOP;\n            if (this.dropdownMenu && this.dropdownMenu.classList.contains(gClassName.MENURIGHT)) {\n                placement = gAttachmentMap.TOPEND;\n            }\n        }\n        else if (this.dropdown.classList.contains(gClassName.DROPRIGHT)) {\n            placement = gAttachmentMap.RIGHT;\n        }\n        else if (this.dropdown.classList.contains(gClassName.DROPLEFT)) {\n            placement = gAttachmentMap.LEFT;\n        }\n        else if (this.dropdownMenu && this.dropdownMenu.classList.contains(gClassName.MENURIGHT)) {\n            placement = gAttachmentMap.BOTTOMEND;\n        }\n        return placement;\n    }\n\n    private getOffset() {\n        return {\n            offset: gConfig.offset\n        };\n    }\n\n    private getPopperConfig() {\n        const popperConfig: any = {\n            placement: this.getPlacement(),\n            modifiers: {\n                offset: this.getOffset(),\n                flip: {\n                    enabled: gConfig.flip\n                },\n                preventOverflow: {\n                    boundariesElement: gConfig.boundary\n                }\n            }\n        };\n\n        // Disable Popper.js if we have a static display\n        if (gConfig.display === 'static') {\n            popperConfig.modifiers.applyStyle = {\n                enabled: false\n            };\n        }\n\n        return popperConfig;\n    }\n\n    show(usePopper = false) {\n        if (!this.dropdownToggle || !this.dropdownMenu || !this.dropdown) {\n            return;\n        }\n        if (/*TODO element.disabled || */\n            this.dropdownToggle.classList.contains(gClassName.DISABLED) ||\n            this.dropdownMenu.classList.contains(gClassName.SHOW)) {\n          return;\n        }\n\n        const parent = this.dropdown;\n\n        // Disable totally Popper.js for Dropdown in Navbar\n        if (!this.inNavbar && usePopper) {\n            /**\n             * Check for Popper dependency\n             * Popper - https://popper.js.org\n             */\n            if (typeof Popper === 'undefined') {\n                throw new TypeError('Bootstrap\\'s dropdowns require Popper.js (https://popper.js.org/)');\n            }\n\n            let referenceElement = this.dropdownToggle;\n\n            if (gConfig.reference === 'parent') {\n                referenceElement = parent;\n            }\n\n            // If boundary is not `scrollParent`, then set position to `static`\n            // to allow the menu to \"escape\" the scroll parent's boundaries\n            // https://github.com/twbs/bootstrap/issues/24251\n            if (gConfig.boundary !== 'scrollParent') {\n                parent.classList.add(gClassName.POSITION_STATIC);\n            }\n            this.popper = new Popper(referenceElement, this.dropdownMenu, this.getPopperConfig());\n        }\n\n        // If this is a touch-enabled device we add extra\n        // empty mouseover listeners to the body's immediate children;\n        // only needed because of broken event delegation on iOS\n        // https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\n        if ('ontouchstart' in document.documentElement &&\n            !parent.closest(gSelector.NAVBAR_NAV)) {\n            Array.from(document.body.children).forEach((element) => element.addEventListener('mouseover', noop));\n        }\n\n        this.dropdownToggle.focus();\n        this.dropdownToggle.setAttribute('aria-expanded', \"true\");\n\n        this.dropdownMenu.classList.toggle(gClassName.SHOW);\n        parent.classList.toggle(gClassName.SHOW);\n    }\n\n    private clear(event: KeyboardEvent | MouseEvent | undefined) {\n        if (!this.dropdownToggle || !this.dropdownMenu || !this.dropdown) {\n            return;\n        }\n        const parent = this.dropdown;\n\n        if (!parent.classList.contains(gClassName.SHOW)) {\n            return;\n        }\n\n        if (event && (event.type === 'click' &&\n            /input|textarea/i.test((event.target as Element).tagName) || event.type === 'keyup' && event.which === Keys.tab) &&\n            parent.contains(event.target as Node)) {\n            return;\n        }\n\n        // If this is a touch-enabled device we remove the extra\n        // empty mouseover listeners we added for iOS support\n        if ('ontouchstart' in document.documentElement) {\n            Array.from(document.body.children).forEach((element) => element.removeEventListener('mouseover', noop));\n        }\n\n        this.dropdownToggle.setAttribute('aria-expanded', 'false');\n\n        if (this.popper) {\n            this.popper.destroy();\n        }\n\n        this.dropdownMenu.classList.remove(gClassName.SHOW);\n        parent.classList.remove(gClassName.SHOW);\n    }\n}\n","import {Injectable, Inject} from \"@angular/core\";\nimport {Observable} from \"rxjs\";\nimport {SqHttpClient} from \"./http-client\";\nimport {HttpService} from \"./http.service\";\nimport {START_CONFIG, StartConfig} from \"./start-config.web.service\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {IQuery} from \"./query/query\";\n\nexport class RecentQueriesList {\n    constructor(name: string) {\n        this.name = name;\n        this.queries = [];\t// Make sure to have at least a valid \"queries\" member, to simplify tests in GUI code.\n    }\n    name: string;\t\t// App name or user name the queries are related to.\n    queries: IQuery[];\n}\n\nexport class RecentQueries {\n    app?: RecentQueriesList;\n    user?: RecentQueriesList;\n}\n\n@Injectable({\n    providedIn: \"root\"\n})\nexport class RecentQueriesWebService extends HttpService {\n    recentQueries: RecentQueries;\n\n    constructor(\n        @Inject(START_CONFIG) startConfig: StartConfig,\n        private httpClient: SqHttpClient) {\n        super(startConfig);\n    }\n\n    load(): Observable<RecentQueries> {\n        const observable = this.httpClient.get<RecentQueries>(this.makeUrl(\"recentqueries\"), {\n            params: this.makeParams({\n                app: this.appName,\n                action: \"load\"\n            })\n        });\n        Utils.subscribe(observable,\n            (response) => {\n                this.recentQueries = response;\n                if (!this.recentQueries)\n                    this.recentQueries = new RecentQueries();\n                if (this.recentQueries) {\n                    if (!this.recentQueries.app)\n                        this.recentQueries.app = new RecentQueriesList(this.appName);\n                    if (!this.recentQueries.user)\n                        this.recentQueries.user = new RecentQueriesList(\"currentuser\");\n                }\n                console.log(\"recentQueriesService.load success - data: \", response);\n                return response;\n            },\n            (error) => {\n                console.log(\"recentQueriesService.load failure - error: \", error);\n            });\n        return observable;\n    }\n    // No save/patch action for the recent queries: MRU lists are generated server side when the query is executed.\n\n    appRecentQueries(): IQuery[]{\n        if (this.recentQueries && this.recentQueries.app && this.recentQueries.app.queries)\n            return this.recentQueries.app.queries;\n        else {\n            return [];\n        }\n    }\n\n    appRecentQueriesLength(): number{\n        if (this.recentQueries && this.recentQueries.app && this.recentQueries.app.queries)\n            return this.recentQueries.app.queries.length;\n        else\n            return 0;\n    }\n\n    userRecentQueries(): IQuery[]{\n        if (this.recentQueries && this.recentQueries.user && this.recentQueries.user.queries)\n            return this.recentQueries.user.queries;\n        else {\n            return [];\n        }\n    }\n\n    userRecentQueriesLength(): number{\n        if (this.recentQueries && this.recentQueries.user && this.recentQueries.user.queries)\n            return this.recentQueries.user.queries.length;\n        else\n            return 0;\n    }\n}","export * from \"./advanced.service\";\nexport * from \"./bootstrap/index\";\nexport * from \"./messages/index\";\n","export * from \"./directives/autofocus\";\nexport * from \"./directives/click-outside\";\nexport * from \"./directives/media-if\";\nexport * from \"./directives/scroll-into-view\";\nexport * from \"./directives/focus-key-list.directive\";\nexport * from \"./directives/focus-key-list-item.directive\";\nexport * from \"./directives/resize-event.directive\";\nexport * from \"./directives/sticky\";\nexport * from \"./directives/tooltip/tooltip.directive\";\nexport * from \"./directives/tooltip/tooltip.component\";\nexport * from \"./pipes/date-pipe\";\nexport * from \"./pipes/expr-pipe\";\nexport * from \"./pipes/memory-size-pipe\";\nexport * from \"./pipes/moment-pipe\";\nexport * from \"./pipes/number-pipe\";\nexport * from \"./pipes/relative-time-pipe\";\nexport * from \"./pipes/time-pipe\";\nexport * from \"./pipes/value-pipe\";\nexport * from \"./utils.module\";\nexport * from \"./ui.service\";\nexport * from \"./voice-recognition/voice-recongnition.service\";\nexport * from \"./messages\";\n","import \"hammerjs\";\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule, {preserveWhitespaces: true})\n    .catch(err => console.error(err));\n","import { Component, Input } from \"@angular/core\";\nimport { DocumentAccessLists } from \"@sinequa/core/web-services\";\n\n@Component({\n    selector: \"sq-metadata-access-lists-item\",\n    templateUrl: \"./metadata-access-lists-item.html\",\n    styleUrls: [\"./metadata-access-lists-item.css\"]\n})\nexport class MetadataAccessListsItem {\n    @Input() public accessLists: DocumentAccessLists;\n}","<ng-container *ngFor=\"let i of accessLists.accessListIndices\" >\n    <div class=\"accessList\" *ngIf=\"accessLists.authorizedLists[i]\">\n        <div class=\"accessListIcon authorizedListIcon far fa-check-circle\" title=\"{{ 'msg#metadata.accessLists.authorizedListTitleText' | sqMessage }}\"></div>\n        <div class=\"accessListValue\">\n            <sq-metadata-access-lists-item-single-access-list [authorized]=\"true\" [index]=\"i\" [accessList]=\"accessLists.authorizedLists[i]\">\n            </sq-metadata-access-lists-item-single-access-list>\n        </div>\n    </div>\n    <div class=\"accessList\" *ngIf=\"accessLists.deniedLists[i]\">\n        <div class=\"accessListIcon deniedListIcon fas fa-minus-circle\" title=\"{{ 'msg#metadata.accessLists.deniedListTitleText' | sqMessage }}\"></div>\n        <div class=\"accessListValue\">\n            <sq-metadata-access-lists-item-single-access-list [authorized]=\"false\" [index]=\"i\" [accessList]=\"accessLists.deniedLists[i]\">\n            </sq-metadata-access-lists-item-single-access-list>\n        </div>\n    </div>\n</ng-container>","import {Component, Input, OnChanges, SimpleChanges} from \"@angular/core\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {Results, DidYouMeanItem, DidYouMeanKind} from \"@sinequa/core/web-services\";\nimport {SearchService} from \"../../search.service\";\n\n@Component({\n    selector: \"sq-did-you-mean\",\n    templateUrl: \"./did-you-mean.html\",\n    styleUrls: [\"./did-you-mean.css\"]\n})\nexport class BsDidYouMean implements OnChanges {\n    @Input() results: Results;\n    @Input() context: \"search\" | \"refine\" = \"search\";\n    item: DidYouMeanItem | undefined;\n\n    constructor(\n        public searchService: SearchService) {\n    }\n\n    private handleResults() {\n        this.item = undefined;\n        if (this.results && this.results.didYouMean) {\n            if (this.context === \"search\") {\n                const item = this.results.didYouMean.text;\n                if (item && item.corrected) {\n                    this.item = item;\n                }\n            }\n            else {\n                const refineSelect = this.searchService.query.findSelect(\"refine\");\n                if (refineSelect && Utils.startsWith(refineSelect.expression, \"refine:\") && !!this.results.didYouMean.refine) {\n                    const dymItem = this.results.didYouMean.refine[this.results.didYouMean.refine.length - 1];\n                    if (dymItem.corrected) {\n                        this.item = dymItem;\n                    }\n                }\n            }\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (!!changes[\"results\"]) {\n            this.handleResults();\n        }\n    }\n\n    selectOriginal() {\n        if (this.item) {\n            this.searchService.didYouMean(this.item.original, this.context, DidYouMeanKind.Original);\n        }\n        return false;\n    }\n\n    selectCorrected() {\n        if (this.item) {\n            this.searchService.didYouMean(this.item.corrected, this.context, DidYouMeanKind.Corrected);\n        }\n        return false;\n    }\n}","<div *ngIf=\"!!item\" class=\"sq-did-you-mean sq-text {{'sq-' + context}}\" [ngSwitch]=\"results.didYouMean.spellingCorrectionMode\">\n    <ng-container *ngSwitchCase=\"'DYMOnly'\">\n        {{'msg#didYouMean.dymonlyBeforeCorrected' | sqMessage}}<a class=\"sq-did-you-mean-corrected\" href=\"#\" (click)=\"selectCorrected()\">{{item.corrected}}</a>{{'msg#didYouMean.dymonlyAfterCorrected' | sqMessage}}\n    </ng-container>\n    <ng-container *ngSwitchCase=\"'Correct'\">\n        {{'msg#didYouMean.correctBeforeCorrected' | sqMessage}}<a class=\"sq-did-you-mean-corrected\" href=\"#\" (click)=\"selectCorrected()\">{{item.corrected}}</a>{{'msg#didYouMean.correctBeforeOriginal' | sqMessage}}<a class=\"sq-did-you-mean-original\" href=\"#\" (click)=\"selectOriginal()\">{{item.original}}</a>{{'msg#didYouMean.correctAfterOriginal' | sqMessage}}\n    </ng-container>\n    <ng-container *ngSwitchCase=\"'Smart'\">\n        {{'msg#didYouMean.smartBeforeOriginal' | sqMessage}}<a class=\"sq-did-you-mean-original\" href=\"#\" (click)=\"selectOriginal()\">{{item.original}}</a>{{'msg#didYouMean.smartBeforeCorrected' | sqMessage}}<a class=\"sq-did-you-mean-original\" href=\"#\" (click)=\"selectCorrected()\">{{item.corrected}}</a>{{'msg#didYouMean.smartAfterCorrected' | sqMessage}}\n    </ng-container>\n</div>","import {NgModule, Injectable, Inject, ModuleWithProviders, Type} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\n\nimport {Ng2UiAuthModule, /*IPartialConfigOptions,*/ CONFIG_OPTIONS, IProviders, StorageType, OauthService, PopupService} from \"ng2-ui-auth\";\nimport {A11yModule} from \"@angular/cdk/a11y\";\nimport {OverlayModule} from \"@angular/cdk/overlay\";\nimport {AuthenticationOauthService} from \"./authentication-oauth.service\";\nimport {AuthenticationPopupService} from \"./authentication-popup.service\";\n\n// Sinequa modules\nimport {BaseModule} from \"@sinequa/core/base\";\nimport {WebServicesModule, START_CONFIG, StartConfig} from \"@sinequa/core/web-services\";\nimport {ValidationModule} from \"@sinequa/core/validation\";\nimport {IntlModule} from \"@sinequa/core/intl\";\nimport {ModalModule} from \"@sinequa/core/modal\";\nimport {NotificationModule} from \"@sinequa/core/notification\";\nimport {AppUtilsModule} from \"@sinequa/core/app-utils\";\n\n// Login\nimport {MODAL_LOGIN} from \"./login.service\";\nimport {Login} from \"./login.component\";\n\nimport {LOGIN_MODULE_PROVIDERS} from \"./module.providers\";\n\nexport interface IPartialConfigOptions {} // until export restored to ng2-ui-auth@9\n\n/**\n * Configuration for the ng2-ui-auth library\n */\n@Injectable({\n    providedIn: \"root\"\n})\nexport class AuthConfig implements IPartialConfigOptions {\n    storageType: StorageType;\n    providers: IProviders;\n    constructor(@Inject(START_CONFIG) startConfig: StartConfig) {\n        this.storageType = \"memory\" as StorageType;\n        this.providers = startConfig.providers || {};\n    }\n}\n\n/**\n * This module provides support for user authentication in the {@link AuthenticationService}. This authentication can be\n * automatic (OAuth/SAML), if configured in the Sinequa administration, or manual where the user name and password are\n * entered in a modal dialog box and transmitted in clear text. There is also support for the ng2-ui-auth library where the\n * authentication process occurs in a browser popup window. Authentication is instigated by the handling of HTTP 401 errors\n * in an `HttpInterceptor` so all web service calls requiring authentication are automatically protected. This module will\n * not be used for authentication when the web server is configured for Windows authentication.\n *\n * A higher level {@link LoginService} groups the successful retrieval of the current `application configuration` ({@link AppService}),\n * `principal` ({@link PrincipalWebService}), and `user settings` ({@link UserSettingsWebService}) all of which require the user\n * to be authenticated. This can be used as a \"gatekeeper\" to protect access to the main, often routed, component(s).\n *\n * The {@link LoginInterceptor} in this module must be registered using `HTTP_INTERCEPTORS` in your app module.\n */\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n\n        Ng2UiAuthModule.forRoot(undefined, false),\n        ModalModule.forRoot(),\n\n        // CDK\n        OverlayModule, // Needed for the modal service\n        A11yModule,\n\n        // Sinequa modules\n        BaseModule,\n        AppUtilsModule,\n        WebServicesModule,  // Required for start-up config (START_CONFIG token)\n        IntlModule,\n        ValidationModule,\n        NotificationModule\n    ],\n    declarations: [\n        Login, // Default Login components\n    ],\n    exports: [\n    ],\n    providers: [\n        // Auth module dependencies\n        {provide: CONFIG_OPTIONS, useClass: AuthConfig},\n        {provide: OauthService, useExisting: AuthenticationOauthService},\n        {provide: PopupService, useExisting: AuthenticationPopupService},\n\n        ...LOGIN_MODULE_PROVIDERS\n    ]\n})\nexport class LoginModule {\n    static forRoot(loginModal: Type<any> = Login): ModuleWithProviders<LoginModule> {\n        return {\n            ngModule: LoginModule,\n            providers: [\n                // Login\n                {provide: MODAL_LOGIN, useValue: loginModal},\n            ]\n        };\n    }\n}\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","export * from \"./query/expr-parser\";\nexport * from \"./query/expr-builder\";\nexport * from \"./query/query\";\n\nexport * from \"./app.service\";\nexport * from \"./format.service\";\nexport * from \"./audit.interceptor\";\nexport * from \"./app-utils.module\";"],"sourceRoot":"webpack:///"}