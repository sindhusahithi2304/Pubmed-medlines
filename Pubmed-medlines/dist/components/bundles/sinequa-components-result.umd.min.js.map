{"version":3,"sources":["../../projects/components/result/result-extracts/result-extracts.html","../../projects/components/result/result-extracts/result-extracts.ts","../../projects/components/result/result-icon/result-icon.ts","../../projects/components/result/result-icon/result-icon.html","../../../node_modules/tslib/tslib.es6.js","../../projects/components/result/result-missing-terms/result-missing-terms.html","../../projects/components/result/result-missing-terms/result-missing-terms.ts","../../projects/components/result/result-title/result-title.html","../../projects/components/result/result-title/result-title.ts","../../projects/components/result/result-source/result-source.html","../../projects/components/result/result-source/result-source.ts","../../projects/components/result/result-thumbnail/result-thumbnail.html","../../projects/components/result/result-thumbnail/result-thumbnail.ts","../../projects/components/result/user-rating/user-rating.html","../../projects/components/result/user-rating/user-rating.ts","../../projects/components/result/sponsored-results/sponsored-results.html","../../projects/components/result/sponsored-results/sponsored-results.ts","../../projects/components/result/results-counter/results-counter.ts","../../projects/components/result/results-counter/results-counter.html","../../../projects/components/result/result-module.ts","../../projects/components/result/messages/en.ts","../../projects/components/result/messages/index.ts","../../projects/components/result/messages/fr.ts","../../projects/components/result/messages/de.ts"],"names":["i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵadvance","i0.ɵɵtextInterpolate2","i0.ɵɵtemplate","i0.ɵɵelement","i0.ɵɵclassMapInterpolate1","i0.ɵɵproperty","i0.ɵɵtextInterpolate","i0.ɵɵelementContainerStart","i0.ɵɵelementContainerEnd","i0.ɵɵlistener","ResultExtracts","this","dateFormat","year","month","day","collapsed","prototype","setup","text","undefined","longExtracts","showTextAlways","Utils","encodeHTML","record","extractsClass","showLongExtracts","recordExtracts","highlight","data","split","maxLongExtracts","slice","i","length","push","replace","relevantExtracts","limitLinesDisplayed","ngOnChanges","changes","collapseClick","event","preventDefault","selectors","inputs","showLinesExpander","hideDate","features","i0","ɵɵNgOnChangesFeature","decls","vars","consts","template","rf","ctx","size","ResultIcon","i0.ɵɵclassMapInterpolate2","i0.ɵɵpropertyInterpolate","Object","create","__values","o","s","Symbol","iterator","m","call","next","value","done","TypeError","i0.ɵɵtextInterpolate1","ResultMissingTerms","missingTerms","termspresence","_b","_c","tp","eqNC","presence","term","ResultTitle","searchService","appService","titleLinkBehavior","field","titleClicked","EventEmitter","titleField","resolveColumnAlias","title","getTitle","documentUrl","url1","defineProperty","hasUrl","hasLinkBehaviour","originalDocTarget","escapeHtml","displayTitle","click","isLink","notifyOpenOriginalDocument","emit","ɵɵdirectiveInject","i1$1","SearchService","i1$2","AppService","outputs","ResultSource","displayTreepathMinLevel","displayUrl","source","ngOnInit","displayTreepath","treepath","substr","displayTreepathMaxLevel","map","path","array","display","join","url","select","item","addFieldSelect","search","ResultThumbnail","linkBehavior","defaultThumbnail","thumbnailClicked","thumbnailColumn","thumbnailUrl","updateUrlForCors","i0.ɵɵclassMap","UserRating","userRatingService","changeDetector","_this","handleResponse","response","userRatingIndex","rating","averageRatingIndex","averagerating","markForCheck","ensureRatingValues","getRecordRating","getCCRating","ratingsColumn","averageColumn","updateDocWeight","ratingsDistribution","ratingValues","values","average","getAverageRating","ratingIndex","titles","getRating","selectedRatingIndex","deleteRating","subscribe","setRating","count","toString","Array","fill","_","i3$1","UserRatingsWebService","ChangeDetectorRef","caption","showAverage","SponsoredResults","sponsoredResultsService","auditService","changeDetectorRef","updateSponsoredLinksIfNecessary","app","redoQuery","currentWS","getWebService","webService","lastText","currentPage","query","page","isEmpty","sponsoredlinks","linksQuery","getLinks","results","links","auditLinksDisplay","error","console","log","sponsoredLinks","initDone","initialize","trim","ccquery","Query","name","auditEvents_1","forEach","link","type","detail","resultid","id","linkid","rank","notify","notifySponsoredLink","SponsoredLinksWebService","AuditWebService","ResultsCounter","rowCount","ResultModule","imports","CommonModule","FormsModule","ReactiveFormsModule","IntlModule","UtilsModule","CollapseModule","MetadataModule","declarations","exports","enResult","merge","resultsCount","userRatings","enSearch","enMetadata","enCollapse","frResult","frSearch","frMetadata","frCollapse","deResult","deSearch","deMetadata","deCollapse"],"mappings":"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","sourcesContent":["<ng-container *ngIf=\"text || longExtracts\">\n    <p *ngIf=\"!longExtracts\" class=\"{{extractsClass}} sq-text\">\n        <span *ngIf=\"record.modified && !hideDate\" class=\"extracts-date\">{{record.modified | sqDate:dateFormat}}{{!!text ? ' - ' : ''}}</span>\n        <span class=\"extracts-text\" [innerHTML]=\"text\"></span>\n    </p>\n    <ng-container *ngIf=\"longExtracts\">\n        <p *ngIf=\"record.modified && !hideDate\" class=\"{{extractsClass}} extracts-date sq-text\">{{record.modified | sqDate:dateFormat}}</p>\n        <ul *ngIf=\"longExtracts\" class=\"{{extractsClass}} sq-text\">\n            <li *ngFor=\"let extract of longExtracts\" [innerHTML]=\"extract\"></li>\n        </ul>\n    </ng-container>\n    <a *ngIf=\"showLinesExpander\" class=\"sq-text\" href=\"#\" (click)=\"collapseClick($event)\">\n        <sq-collapse-button [collapsed]=\"collapsed\"></sq-collapse-button>\n    </a>\n</ng-container>\n","import {Component, Input, OnChanges, SimpleChanges} from \"@angular/core\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {Record} from \"@sinequa/core/web-services\";\n\n@Component({\n    selector: \"sq-result-extracts\",\n    templateUrl: \"./result-extracts.html\",\n    styles: [`\np, ul {\n    margin: 0;\n    color: #676767;\n    font-size: 0.9em;\n}\n    `]\n})\nexport class ResultExtracts implements OnChanges {\n    @Input() record: Record;\n    @Input() limitLinesDisplayed: boolean;\n    @Input() showLinesExpander: boolean;\n    @Input() showTextAlways: boolean;\n    @Input() showLongExtracts: boolean;\n    @Input() hideDate: boolean;\n    @Input() maxLongExtracts: number;\n    @Input() dateFormat: Intl.DateTimeFormatOptions = {year: 'numeric', month: 'short', day: 'numeric'};\n    collapsed: boolean = true;\n    text: string | undefined;\n    longExtracts: string[] | undefined;\n    extractsClass: string;\n\n    setup() {\n        this.text = undefined;\n        this.longExtracts = undefined;\n        if (this.showTextAlways) {\n            this.text = Utils.encodeHTML(this.record.text);\n            this.extractsClass = \"sq-text-extracts\";\n        }\n        else {\n            if (this.showLongExtracts && (this.record[\"extracts\"] || this.record[\"extractsperpartname\"] )) {\n                this.longExtracts = [];\n                // extractsperpartname is a complex structure where extracts are stored in an object: \"highlight.data\"\n                // in a csv field (';' separator)\n                let recordExtracts = this.record[\"extracts\"] || this.record[\"extractsperpartname\"].highlight[0].data.split(\";\");\n                if (this.maxLongExtracts) {\n                    recordExtracts = recordExtracts.slice(0, this.maxLongExtracts * 3);\n                }\n                for (let i = 0; i < recordExtracts.length; i += 3) {\n                    this.longExtracts.push(recordExtracts[i].replace(/\\{b\\}/g, \"<strong>\").replace(/\\{nb\\}/g, \"</strong>\"));\n                }\n                this.extractsClass = \"sq-long-extracts\";\n            }\n            else if (this.record.relevantExtracts) {\n                this.text = this.record.relevantExtracts;\n                this.extractsClass = \"sq-relevant-extracts\";\n            }\n            else {\n                this.text = Utils.encodeHTML(this.record.text);\n                this.extractsClass = \"sq-text-extracts\";\n            }\n        }\n\n        if (!this.limitLinesDisplayed || !this.collapsed) {\n            this.extractsClass += \" sq-show-all\";\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        this.setup();\n    }\n\n    collapseClick(event: Event) {\n        this.collapsed = !this.collapsed;\n        this.setup();\n        event.preventDefault();\n    }\n}","import {Component, Input} from \"@angular/core\";\nimport {Record} from \"@sinequa/core/web-services\";\n\n/**\n * This component requires a global CSS file to map file extensions (doc, ppt, xls, etc.)\n * to Font Awesome icons via a class `sq-icon-file-{{fileext}}`\n */\n\n@Component({\n    selector: \"sq-result-icon\",\n    templateUrl: \"./result-icon.html\"\n})\nexport class ResultIcon {\n    /**\n     * Record which file extension is displayed as an icon\n     */\n    @Input() record: Record;\n\n    /**\n     * Integer controlling the icon's size\n     */\n    @Input() size: number = 1; \n}","<span class=\"far fa-file sq-icon-file-{{record.fileext}} fa-{{size}}x fa-fw\" title=\"{{record.fileext}}\"></span>","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","<ng-container *ngIf=\"missingTerms.length > 0\">\n    <span class=\"sq-missing-terms-label sq-text\">{{'msg#results.missingTerms' | sqMessage}}</span>\n    <span class=\"sq-missing-terms sq-text\">\n        <span *ngFor=\"let term of missingTerms\" class=\"sq-missing-term\"> {{term}}</span>\n    </span>\n</ng-container>\n","import {Component, Input, OnChanges, SimpleChanges} from \"@angular/core\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {Record} from \"@sinequa/core/web-services\";\n\n@Component({\n    selector: \"sq-result-missing-terms\",\n    templateUrl: \"./result-missing-terms.html\",\n    styleUrls: [\"./result-missing-terms.css\"]\n})\nexport class ResultMissingTerms implements OnChanges {\n    @Input() record: Record;\n    missingTerms: string[];\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes[\"record\"]) {\n            this.missingTerms = [];\n            if (this.record.termspresence) {\n                for (const tp of this.record.termspresence) {\n                    if (Utils.eqNC(tp.presence, \"missing\")) {\n                        this.missingTerms.push(tp.term);\n                    }\n                }\n            }\n        }\n    }\n}","<!-- Display a regular SPAN if the component is supposed to have a link behavior but has no URL -->\n<span *ngIf=\"hasSpanBehaviour\" class=\"sq-result-title\" title=\"{{this.record.title}}\" [innerHTML]=\"title\"></span>\n<!-- Display a link if a URL exists or the component is used to trigger an action -->\n<a *ngIf=\"!hasSpanBehaviour\" class=\"sq-result-title\" title=\"{{this.record.title}}\" href=\"{{href}}\" target=\"{{target}}\" [innerHTML]=\"title\" (click)=\"click()\"></a>\n","import {ViewEncapsulation, Component, Input, OnChanges, SimpleChanges, Output, EventEmitter} from \"@angular/core\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {Record} from \"@sinequa/core/web-services\";\nimport {AppService} from \"@sinequa/core/app-utils\";\nimport {SearchService} from \"@sinequa/components/search\";\n\n\n@Component({\n    selector: \"sq-result-title\",\n    templateUrl: \"./result-title.html\",\n    styles: [`\nsq-result-title {\n    font-size: 1.25rem;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n}\n.match-highlight {\n    font-weight: bold;\n    font-style: italic;\n}\n    `],\n    encapsulation: ViewEncapsulation.None   // Currently necessary for the match-highlight\n})\nexport class ResultTitle implements OnChanges {\n    /** The record which title we want to display */\n    @Input() record: Record;\n    /**\n     * \"open\" mode: Display a link which opens the original document (url1) if available, or emits a titleClicked event to perform an action otherwise\n     * \"action\" mode: Display a link which emits a titleClicked event to perform an action\n     * \"open-if-url\" mode: Display a link which opens the original document (url1) if available, or displays a SPAN with the title otherwise\n     * \"display\" mode: Only display a SPAN element (no link)\n     */\n    @Input() titleLinkBehavior: \"open\" | \"action\" | \"open-if-url\" | \"display\" = \"open\";\n    /** Optional field name containing the title. Otherwise displayTitle or title are used */\n    @Input() field: string = \"\";\n    /** Optional custom target used in the link */\n    @Input() originalDocTarget: string | undefined;\n    /** Event emitter to perform actions at the parent level */\n    @Output() titleClicked = new EventEmitter<boolean>();   // TODO: Custom options to get title & URL (replace pluginservice)\n\n    public title: string;\n    private titleField: string;\n    private documentUrl: string;\n\n    constructor(\n        public searchService: SearchService,\n        private appService: AppService) {\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes[\"record\"]) {\n            this.titleField = this.appService.resolveColumnAlias(this.field);\n            this.title = this.getTitle();\n            this.documentUrl = this.record.url1;\n        }\n    }\n\n    get hasLinkBehaviour(): boolean {\n        return this.titleLinkBehavior === \"open\" || (this.titleLinkBehavior === \"open-if-url\" && this.hasUrl);\n    }\n\n    /**\n     * A span is shown in \"display\" mode or \"open-if-url\" mode when no url is present\n     * A link is shown in all other cases (even in \"open\" mode with no url, which is equivalent to \"action\" mode)\n     */\n    get hasSpanBehaviour(): boolean {\n        return this.titleLinkBehavior === \"display\" || (this.titleLinkBehavior === \"open-if-url\" && !this.hasUrl);\n    }\n\n    public get href(): string {\n        return (this.hasLinkBehaviour && this.documentUrl) || \"#\";\n    }\n\n    public get target(): string {\n        return (this.hasLinkBehaviour && this.documentUrl) ? this.originalDocTarget || '_blank' : \"_self\";\n    }\n    \n    public get hasUrl(): boolean {\n        return !!this.documentUrl;\n    }\n\n    private getTitle(): string {\n        let title;\n        if (this.titleField) {\n            title = Utils.escapeHtml(this.record[this.titleField]);\n        }\n        if (!title) {\n            title = this.record.displayTitle || Utils.escapeHtml(this.record.title);\n        }\n        return title;\n    }\n\n    public click() : boolean {\n        const isLink = this.hasLinkBehaviour && !!this.documentUrl; // true if this is a regular link (performs the default action)\n        if(isLink)\n            this.searchService.notifyOpenOriginalDocument(this.record);\n        this.titleClicked.emit(isLink); // Can be use to trigger actions\n        return isLink;\n    }\n}","<span class=\"sq-result-source\">\n    <ng-container *ngFor=\"let s of source; let i=index\">\n        <span *ngIf=\"i > 0\"> &#8250; </span>\n        <span (click)=\"select(s)\" class=\"link\" title=\"Select this source\">{{s.display}}</span>\n    </ng-container>\n    <span *ngIf=\"source.length>0 && !!url\"> - </span>\n    <a *ngIf=\"url\" href=\"{{url}}\" target=\"_blank\">{{url}}</a>\n</span>","import {Component, Input, OnInit} from \"@angular/core\";\nimport {ValueItem} from \"@sinequa/core/app-utils\";\nimport {Record} from \"@sinequa/core/web-services\";\nimport {SearchService} from \"@sinequa/components/search\";\n\n@Component({\n    selector: \"sq-result-source\",\n    templateUrl: \"./result-source.html\",\n    styleUrls: [\"./result-source.css\"]\n})\nexport class ResultSource implements OnInit {\n    @Input() record: Record;\n    @Input() displayTreepath: boolean;\n    @Input() displayTreepathMinLevel = 0;\n    @Input() displayTreepathMaxLevel: number;\n    @Input() displayUrl: boolean = true;\n\n    source: ValueItem[] = [];\n    url: string;\n\n    constructor(\n        public searchService: SearchService) {\n    }\n\n    public ngOnInit() {\n        if(this.displayTreepath && !!this.record.treepath){\n            const treepath = this.record.treepath[0];\n            if(!!treepath && treepath.length >= 2){\n                this.source = treepath.substr(1, treepath.length-2).split('/')\n                    .slice(this.displayTreepathMinLevel, this.displayTreepathMaxLevel)\n                    .map((path,i,array) => {\n                        return {\n                            display: path,\n                            value: '/'+array.slice(0,i+1).join('/')+'/*'\n                        };\n                    });\n            }\n        }\n        if(this.displayUrl){\n            this.url = this.record.url1;\n        }\n    }\n\n    select(item){\n        if(this.searchService.addFieldSelect(\"treepath\", item)) {\n            this.searchService.search();\n        }\n    }\n\n}","<a *ngIf=\"thumbnailUrl\" href=\"{{href}}\" target=\"{{target}}\" (click)=\"click()\">\n    <img src=\"{{thumbnailUrl}}\">\n</a>","import {Component, Input, Output, OnChanges, SimpleChanges, EventEmitter} from \"@angular/core\";\nimport {Record} from \"@sinequa/core/web-services\";\nimport {AppService} from \"@sinequa/core/app-utils\";\nimport {SearchService} from \"@sinequa/components/search\";\n\n@Component({\n    selector: \"sq-result-thumbnail\",\n    templateUrl: \"./result-thumbnail.html\"\n})\nexport class ResultThumbnail implements OnChanges {\n    @Input() record: Record;\n    @Input() linkBehavior: \"open\" | \"action\" = \"open\";\n    @Input() thumbnailColumn: string;\n    @Input() defaultThumbnail: string = \"\";\n    @Output() thumbnailClicked = new EventEmitter<boolean>();\n    thumbnailUrl: string;\n    private documentUrl: string;\n\n    constructor(\n        private appService: AppService,\n        private searchService: SearchService) {\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (!!changes[\"record\"]) {\n            this.documentUrl = this.record.url1;\n            if (!!this.thumbnailColumn) {\n                this.thumbnailUrl = this.record[this.thumbnailColumn];\n            }\n            if (!this.thumbnailUrl && !!this.record.thumbnailUrl) {\n                this.thumbnailUrl = this.record.thumbnailUrl;\n            }\n            if (!this.thumbnailUrl && !!this.defaultThumbnail) {\n                this.thumbnailUrl = this.defaultThumbnail;\n            }\n            this.thumbnailUrl = this.appService.updateUrlForCors(this.thumbnailUrl);\n        }\n    }\n\n    get hasLinkBehaviour(): boolean {\n        return this.linkBehavior === \"open\";\n    }\n\n    public get href(): string {\n        return (this.hasLinkBehaviour && this.documentUrl) || \"#\";\n    }\n\n    public get target(): string {\n        return (this.hasLinkBehaviour && this.documentUrl) ? \"_blank\" : \"_self\";\n    }\n\n    public click() : boolean {\n        const isLink = this.hasLinkBehaviour && !!this.documentUrl; // true if this is a regular link (performs the default action)\n        if(isLink)\n            this.searchService.notifyOpenOriginalDocument(this.record);\n        this.thumbnailClicked.emit(isLink); // Can be use to trigger actions\n        return isLink;\n    }\n}","<ul class=\"sq-user-rating-stars\">\n    <!-- caption -->\n    <li *ngIf=\"caption\" class=\"sq-user-rating-caption\">\n        <span>{{caption|sqMessage}}</span>\n    </li>\n    <!-- rating stars -->\n    <li *ngFor=\"let r of ratingValues; let i = index\" class=\"sq-user-rating-item\">\n        <a class=\"sq-user-rating-star\" title=\"{{getTitle(i)}}\" href=\"javascript:void(0)\" (click)=\"select(i)\">\n            <span class=\"{{(i <= userRatingIndex) ? 'fas fa-star' : 'far fa-star'}}\"></span>\n        </a>\n    </li>\n    <!-- average rating -->\n    <li *ngIf=\"showAverage && getAverageRating() !== undefined && getAverageRating() !== ''\" class=\"sq-user-rating-average\">\n        <span>{{'msg#userRatings.average'|sqMessage:messageParams}}</span>\n    </li>\n</ul>\n","import {Component, OnInit, Input, ChangeDetectorRef} from \"@angular/core\";\nimport {Record, CCRating, UserRatingsWebService, UserRatingResponse} from \"@sinequa/core/web-services\";\n\n@Component({\n    selector: \"sq-user-rating\",\n    templateUrl: \"./user-rating.html\",\n    styleUrls: [\"./user-rating.css\"]\n})\nexport class UserRating implements OnInit {\n    @Input() record: Record;\n    @Input() ratingsColumn: string;\n    @Input() averageColumn: string;\n    @Input() updateDocWeight: boolean;\n    @Input() count: number;\n    @Input() values: string;\n    @Input() titles: string;\n    @Input() caption: string;\n    @Input() showAverage: boolean;\n    userRatingIndex: number;\n    averageRatingIndex: number;\n    ratingValues: string[];\n\n    constructor(\n        private userRatingService: UserRatingsWebService,\n        private changeDetector: ChangeDetectorRef) {\n    }\n\n    ngOnInit() {\n        this.ensureRatingValues();\n        this.handleResponse(this.userRatingService.getRecordRating(this.record, this.getCCRating()));\n    }\n\n    getCCRating(): CCRating {\n        return {\n            ratingsColumn: this.ratingsColumn,\n            averageColumn: this.averageColumn,\n            updateDocWeight: this.updateDocWeight,\n            ratingsDistribution: this.ratingValues\n        };\n    }\n\n    get messageParams() {\n        return {\n            values: {\n                average: this.getAverageRating()\n            }\n        };\n    }\n\n    getTitle(ratingIndex: number): string {\n        if (this.titles) {\n            return this.titles.split(\";\")[ratingIndex] || \"\";\n        }\n        else {\n            return \"\";\n        }\n    }\n\n    getRating(ratingIndex: number): string {\n        return this.ratingValues[ratingIndex];\n    }\n\n    getAverageRating(): string {\n        if (this.averageRatingIndex < 0) {\n            return \"\";\n        }\n        else {\n            return this.ratingValues[this.averageRatingIndex];\n        }\n    }\n\n    select(selectedRatingIndex: number) {\n        //If selected rating was already selected, remove the rating\n        if (this.userRatingIndex === selectedRatingIndex) {\n            this.userRatingService.deleteRating(this.record, this.getCCRating()).subscribe(this.handleResponse);\n        }\n        else {\n            this.userRatingService.setRating(this.record, selectedRatingIndex, this.getCCRating()).subscribe(this.handleResponse);\n        }\n    }\n\n    private ensureRatingValues() {\n        if (!this.ratingValues) {\n            const count = this.count || 0;\n\n            //Work out rating value range\n            if (this.values) {\n                //Use predefined values\n                this.ratingValues = this.values.split(\";\");\n\n                //Initialize missing values - so that ratingValues.length matches config.count\n                for (let i = this.ratingValues.length; i < count; i++) {\n                    this.ratingValues.push((i + 1).toString());\n                }\n            }\n            else {\n                //Generates [1, ... config.count]\n                this.ratingValues = Array(count).fill(0).map((_, i) => (i + 1).toString());\n            }\n        }\n    }\n\n    private handleResponse = (response: UserRatingResponse) => {\n        this.userRatingIndex    = response.rating;\n        this.averageRatingIndex = response.averagerating;\n\n        this.changeDetector.markForCheck();\n    }\n}\n","<ul class=\"sq-sponsored-links-list\" *ngIf=\"!!sponsoredlinks\" >\n    <li *ngFor=\"let link of sponsoredlinks\" class=\"sponsored-item\" >\n        <div class=\"sq-sponsored-link-view\">\n            <div *ngIf=\"link.thumbnail\" class=\"sq-sponsored-link-view-thumbnail\">\n                <a href=\"{{link.url}}\" (click)=\"click(link)\" target=\"_blank\">\n                    <img src=\"{{link.thumbnail}}\">\n                </a>\n            </div>\n            <div class=\"sq-sponsored-link-view-info\">\n                <a href=\"{{link.url}}\" (click)=\"click(link)\" target=\"_blank\" title=\"{{link.title | sqMessage}}\">{{link.title | sqMessage}}</a>\n                <div *ngIf=\"link.summary\" class=\"sq-sponsored-link-view-summary\">{{link.summary | sqMessage}}</div>\n            </div>\n        </div>\n    </li>\n</ul>\n","import { Component, Input, OnChanges, SimpleChanges, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { Utils } from \"@sinequa/core/base\";\nimport { LinkResult, SponsoredLinksWebService, AuditWebService, AuditEventType, AuditEvent } from \"@sinequa/core/web-services\";\nimport { AppService, Query } from \"@sinequa/core/app-utils\";\nimport {SearchService} from \"@sinequa/components/search\";\n\n@Component({\n    selector: 'sq-sponsored-results',\n    templateUrl: './sponsored-results.html',\n    styleUrls: [\"./sponsored-results.scss\"]\n})\n\n/**\n * Represent the component that display the sponsored results on result page.\n * NOTE: this class and (its containing file) could have been named SponsoredLinks but this naming causes\n * the file to be flagged as ads by Adblock.\n */\nexport class SponsoredResults implements OnChanges, OnInit {\n    @Input() query: Query;\n    public sponsoredlinks: LinkResult[];\n\n    private lastText: string;\n    private currentPage?: number;\n    private linksQuery: Query;\n    private initDone: boolean;\n    private webService: string;\n\n    constructor(\n        private appService: AppService,\n        private searchService: SearchService,\n        private sponsoredResultsService: SponsoredLinksWebService,\n        private auditService: AuditWebService,\n        private changeDetectorRef: ChangeDetectorRef) {\n    }\n\n    /**\n     * Considers the text of the new query and sees if the list of the sponsored lists needs to be updated.\n     *\n     * @param text The text of the new query.\n     * @memberof SponsoredLinks\n     */\n    private updateSponsoredLinksIfNecessary(text: string): void {\n        if (!this.appService.app) {\n            return; // logout\n        }\n\n        let redoQuery = false;\n        const currentWS = this.getWebService();\n        if (!Utils.eqNC(this.webService, currentWS)) {\n            this.webService = currentWS;\n            redoQuery = true;\n        }\n\n        if (!redoQuery && !Utils.eqNC(this.lastText, text)) {\n            this.lastText = text;\n            redoQuery = true;\n        }\n\n        if (!redoQuery && this.currentPage !== this.searchService.query.page) {\n            this.currentPage = this.searchService.query.page;\n            redoQuery = true;\n        }\n\n        if (redoQuery) {\n            if (!Utils.isEmpty(this.webService) && !Utils.isEmpty(text)) {\n                this.linksQuery.text = text;\n                this.linksQuery.page = this.currentPage;\n                Utils.subscribe(\n                    this.sponsoredResultsService.getLinks(this.linksQuery, this.webService),\n                    (results) => {\n                        this.sponsoredlinks = results.links;\n                        this.auditLinksDisplay();\n                        this.changeDetectorRef.markForCheck();\n                    },\n                    (error) => console.log(`Could not retrieve sponsored links: ${error}.`)\n                );\n            } else {\n                this.sponsoredlinks = [];\n            }\n        }\n    }\n\n    /**\n     * Retrieves the web service for sponsored links.\n     * If it is defined both in the component configuration and the app configuration,\n     * this method returns the one in the component configuration.\n     *\n     * @returns the web service for sponsored links.\n     */\n    private getWebService(): string {\n        return (this.appService.app && this.appService.app.sponsoredLinks) || \"\";\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (!this.initDone) {\n            this.initialize();\n        }\n\n        if (changes['query'] || changes['results']) {\n            this.updateSponsoredLinksIfNecessary(Utils.trim(this.query.text || \"\"));\n        }\n    }\n\n    private initialize(): void {\n        if (this.initDone) {\n            return;\n        }\n\n        if (this.appService.ccquery) {\n            this.linksQuery = new Query(this.appService.ccquery.name);\n        } else {\n            return;\n        }\n        this.initDone = true;\n    }\n\n    ngOnInit(): void {\n        this.initialize();\n    }\n\n    auditLinksDisplay() {\n        if (!!this.sponsoredlinks && this.sponsoredlinks.length > 0) {\n            const auditEvents: AuditEvent[] = [];\n            this.sponsoredlinks.forEach(link => {\n                auditEvents.push({\n                    type: AuditEventType.Link_Display,\n                    detail: {\n                        resultid: this.searchService.results && this.searchService.results.id,\n                        linkid: link.id,\n                        rank: link.rank,\n                        title: link.title,\n                        url: link.url\n                    }\n                });\n            });\n            this.auditService.notify(auditEvents);\n        }\n    }\n\n    click(link: LinkResult) {\n        this.auditService.notifySponsoredLink(AuditEventType.Link_Click, link,\n            this.searchService.results && this.searchService.results.id || \"\");\n    }\n}\n","import {Input, Component} from \"@angular/core\";\n\n@Component({\n    selector: \"sq-results-counter\",\n    templateUrl: \"./results-counter.html\"\n})\nexport class ResultsCounter {\n    @Input() rowCount: number;\n}\n","<div class=\"sq-results-count\">{{'msg#results.resultsCount' | sqMessage:{values: {count: rowCount} } }}</div>","import {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\n\nimport {IntlModule} from \"@sinequa/core/intl\";\n\nimport {UtilsModule} from \"@sinequa/components/utils\";\nimport {CollapseModule} from \"@sinequa/components/collapse\";\nimport {MetadataModule} from \"@sinequa/components/metadata\";\n\nimport {ResultTitle} from \"./result-title/result-title\";\nimport {ResultSource} from \"./result-source/result-source\";\nimport {ResultExtracts} from \"./result-extracts/result-extracts\";\nimport {ResultMissingTerms} from \"./result-missing-terms/result-missing-terms\";\nimport {ResultThumbnail} from \"./result-thumbnail/result-thumbnail\";\nimport {UserRating} from \"./user-rating/user-rating\";\nimport {SponsoredResults} from './sponsored-results/sponsored-results';\nimport {ResultsCounter} from \"./results-counter/results-counter\";\nimport {ResultIcon} from \"./result-icon/result-icon\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule, ReactiveFormsModule,\n\n        IntlModule,\n\n        UtilsModule,\n        CollapseModule,\n        MetadataModule\n    ],\n    declarations: [\n        ResultTitle, ResultExtracts,\n        ResultMissingTerms,\n        ResultThumbnail, UserRating,\n        SponsoredResults, ResultsCounter,\n        ResultIcon, ResultSource\n    ],\n    exports: [\n        ResultTitle, ResultExtracts,\n        ResultMissingTerms,\n        ResultThumbnail, UserRating,\n        SponsoredResults, ResultsCounter,\n        ResultIcon, ResultSource\n    ]\n})\nexport class ResultModule {\n}\n","export default {\n    results: {\n        missingTerms: \"Missing terms:\",\n        resultsCount: \"{count, plural, =0 {no results} one {# result} other {# results}}\",\n    },\n    userRatings: {\n        average: \"Average: {average}\"\n    },\n};\n","import {Utils} from \"@sinequa/core/base\";\nimport {enSearch, frSearch, deSearch} from \"@sinequa/components/search\";\nimport {enCollapse, frCollapse, deCollapse} from \"@sinequa/components/collapse\";\nimport {enMetadata, frMetadata, deMetadata} from \"@sinequa/components/metadata\";\n\nimport _enResult from \"./en\";\nimport _frResult from \"./fr\";\nimport _deResult from \"./de\";\n\nconst enResult = Utils.merge({}, _enResult, enSearch, enMetadata, enCollapse);\nconst frResult = Utils.merge({}, _frResult, frSearch, frMetadata, frCollapse);\nconst deResult = Utils.merge({}, _deResult, deSearch, deMetadata, deCollapse);\n\nexport { enResult, frResult, deResult };\n","export default {\n    results: {\n        missingTerms: \"Termes manquants :\",\n        resultsCount: \"{count, plural, =0 {aucune réponse} one {# réponse} other {# réponses}}\",\n    },\n    userRatings: {\n        average: \"Moyenne : {average}\"\n    },\n};\n","export default {\n    \"results\": {\n        \"missingTerms\": \"fehlende Begriffe:\",\n        \"resultsCount\": \"{count, plural, =0 {keine Ergebnisse} one {# Ergebnis} other {# Ergebnisse}}\"\n    },\n    \"userRatings\": {\n        \"average\": \"Durchschnittlich: {average}\"\n    },\n};\n"]}