{"version":3,"sources":["../../projects/components/modal/bootstrap/modal-header.component.html","../../projects/components/modal/bootstrap/modal-header.component.ts","../../../node_modules/tslib/tslib.es6.js","../../projects/components/modal/bootstrap/modal-footer.component.html","../../projects/components/modal/bootstrap/modal-footer.component.ts","../../projects/components/modal/bootstrap/modal.component.html","../../projects/components/modal/bootstrap/modal.component.ts","../../projects/components/modal/bootstrap/login.component.html","../../projects/components/modal/bootstrap/login.component.ts","../../projects/components/modal/bootstrap/confirm.component.ts","../../projects/components/modal/bootstrap/prompt.component.ts","../../projects/components/modal/bootstrap/confirm.component.html","../projects/components/modal/bootstrap/help/help.ts","../projects/components/modal/bootstrap/help/help.html","../projects/components/modal/bootstrap/override-user/override-user.ts","../projects/components/modal/bootstrap/editable/editable.html","../projects/components/modal/bootstrap/override-user/override-user.html","../projects/components/modal/bootstrap/editable/editable.ts","../../projects/components/modal/bootstrap/modal.module.ts","../../projects/components/modal/messages/de.ts","../../projects/components/modal/messages/en.ts","../../projects/components/modal/messages/fr.ts"],"names":["i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵadvance","i0.ɵɵtextInterpolate","BsModalHeader","modalRef","injector","this","Object","defineProperty","prototype","get","ModalService","cancel","close","i0","ɵɵdirectiveInject","i1","ModalRef","Injector","selectors","hostVars","hostBindings","rf","ctx","i0.ɵɵtemplate","i0.ɵɵprojection","i0.ɵɵlistener","i0.ɵɵproperty","create","__values","o","s","Symbol","iterator","m","i","call","length","next","value","done","TypeError","i0.ɵɵclassMapInterpolate1","i0.ɵɵpropertyInterpolate","i0.ɵɵelementContainerStart","i0.ɵɵelementContainerEnd","i0.ɵɵelement","BsModalFooter","buttons","ngOnChanges","changes","isProcessingState","currentValue","buttonClick","button","validation","controls","_b","keys","_c","name","markAsDirty","click","ctx_r1","showHeader","showFooter","provider_r2","BsModal","BsLogin","model","modalService","formBuilder","startConfig","authenticationService","ngOnInit","_this","userNameControl","FormControl","userName","Validators","required","passwordControl","password","providerNameControl","form","group","providerName","formChanges","Utils","subscribe","valueChanges","ModalButton","result","primary","providers","forEach","displayName","push","ngOnDestroy","unsubscribe","yes","authenticate","authenticateWithProvider","response","error","console","log","MODAL_MODEL","i2$1","FormBuilder","START_CONFIG","i3$1","AuthenticationService","BsConfirm","title","getMessageClass","confirmType","BsPrompt","inputControl","output","validators","input","decls","vars","consts","template","BsHelp","sanitizer","url","helpUrl","bypassSecurityTrustResourceUrl","i1$2","DomSanitizer","BsOverrideUser","domain","pipe","debounceTime","merge","ɵɵrestoreView","_r3_1","ɵɵnextContext","stopEditing","BsEditable","elementRef","tabindex","valueChange","EventEmitter","editableControl","modelControl","editable","startEditing","editing","previousValue","focusAfterEdit","nativeElement","focus","emit","inputKeydown","event","keyCode","Keys","enter","stopPropagation","esc","hostKeydown","ElementRef","$event","BsModalModule","imports","CommonModule","FormsModule","ReactiveFormsModule","OverlayModule","A11yModule","IntlModule","ValidationModule","CoreModalModule","forRoot","LoginModule","UtilsModule","declarations","ModalModule","exports","help","overrideUser","btnClose","text"],"mappings":"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","sourcesContent":["<div class=\"modal-header\">\n    <h5 *ngIf=\"title\" class=\"modal-title\">{{title | sqMessage}}</h5>\n    <ng-content></ng-content>\n    <button type=\"button\" class=\"close\" (click)=\"cancel()\" data-dismiss=\"modal\" aria-hidden=\"true\">&times;</button>\n</div>\n","import {Component, Input, HostBinding, Injector} from \"@angular/core\";\nimport {ModalService, ModalResult, ModalRef} from \"@sinequa/core/modal\";\n\n@Component({\n    selector: \"sq-modal-header\",\n    templateUrl: \"./modal-header.component.html\"\n})\nexport class BsModalHeader {\n    @Input() title: string;\n    @HostBinding(\"class.sq-modal-header\") true;\n\n    constructor(\n        protected modalRef: ModalRef,\n        protected injector: Injector) {\n    }\n\n    // Avoid circular reference (via Confirm)\n    get modalService(): ModalService {\n        return this.injector.get(ModalService);\n    }\n\n    cancel() {\n        this.modalRef.close(ModalResult.Cancel);\n    }\n}","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","<div class=\"modal-footer\">\n    <ng-container *ngIf=\"!isProcessingState\">\n        <section *ngFor=\"let button of buttons\">\n            <button *ngIf=\"button.visible && !button.anchor\" type=\"{{button.primary ? 'submit' : 'button'}}\" class=\"btn {{button.primary ? 'btn-primary' : button.result < 0 ? '' : 'btn-secondary'}}\" (click)=\"buttonClick(button)\">{{button.getText() | sqMessage}}</button>\n            <a *ngIf=\"button.visible && button.anchor\"\n                href=\"#\"\n                class=\"btn {{button.primary ? 'btn-primary' : button.result < 0 ? 'sq-anchor-btn' : 'btn-secondary'}}\"\n                (click)=\"buttonClick(button)\">{{button.getText() | sqMessage}}</a>\n        </section>\n    </ng-container>\n    <ng-container *ngIf=\"isProcessingState\">\n        <span class=\"loader\"></span>\n        <button type=\"button\" class=\"btn\" (click)=\"close()\">{{ 'msg#btnClose.text' | sqMessage }}</button>\n    </ng-container>\n</div>\n<ng-content></ng-content>\n\n\n","import {Component, Input, HostBinding, Injector, OnChanges, SimpleChanges} from \"@angular/core\";\nimport {ModalButton, ModalRef, ModalResult} from \"@sinequa/core/modal\";\n\n@Component({\n    selector: \"sq-modal-footer\",\n    templateUrl: \"./modal-footer.component.html\",\n    styleUrls: [\"./modal-footer.component.scss\"]\n})\nexport class BsModalFooter implements OnChanges{\n    @Input() buttons: ModalButton[] = [];\n    @Input() isProcessingState: boolean;\n    @HostBinding(\"class.sq-modal-footer\") true;\n\n    constructor(\n        protected modalRef: ModalRef,\n        protected injector: Injector) {\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.isProcessingState) {\n            this.isProcessingState = changes.isProcessingState.currentValue;\n        }\n    }\n\n    buttonClick(button: ModalButton) {\n        if (button.validation && button.validation.controls) {\n            // Mark all controls as dirty so validation errors are shown on all controls after a submit\n            for (const name of Object.keys(button.validation.controls)) {\n                button.validation.controls[name].markAsDirty();\n            }\n        }\n        button.click(this.modalRef);\n        return false;\n    }\n\n    public close(): void {\n        this.modalRef.close(ModalResult.Cancel);\n    }\n}\n","<div class=\"modal-dialog\" cdkTrapFocus [cdkTrapFocusAutoCapture]=\"true\">\n    <div class=\"modal-content\">\n        <sq-modal-header *ngIf=\"showHeader\" [title]=\"title\">\n            <ng-content select=\"[header]\"></ng-content>\n        </sq-modal-header>\n        <div class=\"modal-body\">\n            <ng-content></ng-content>\n        </div>\n        <sq-modal-footer *ngIf=\"showFooter\" [buttons]=\"buttons\" [isProcessingState]=\"isProcessingState\">\n            <ng-content select=\"[footer]\"></ng-content>\n        </sq-modal-footer>\n    </div>\n</div>\n","import {Component, Input, HostBinding, ViewEncapsulation} from \"@angular/core\";\nimport {ModalButton} from \"@sinequa/core/modal\";\n\n@Component({\n    selector: \"sq-modal\",\n    templateUrl: \"./modal.component.html\",\n    styleUrls: [\"./modal.component.scss\"],\n    encapsulation: ViewEncapsulation.None\n})\nexport class BsModal {\n    @Input() title: string;\n    @Input() buttons: ModalButton[];\n    @Input() showHeader = true;\n    @Input() showFooter = true;\n    @Input() isProcessingState = false;\n    @HostBinding(\"class.sq-modal\") true;\n}\n","<form novalidate [formGroup]=\"form\">\n    <sq-modal\n        [title]=\"'msg#modal.login.title'\"\n        [buttons]=\"buttons\">\n        <div class=\"form-group sq-form-group\">\n            <label for=\"userName\">{{'msg#modal.login.userName' | sqMessage}}</label>\n            <input [sqValidation]=\"form\" type=\"text\" class=\"form-control\" id=\"userName\" formControlName=\"userName\" spellcheck=\"off\" cdkFocusInitial>\n        </div>\n        <div class=\"form-group sq-form-group\">\n            <label for=\"password\">{{'msg#modal.login.password' | sqMessage}}</label>\n            <input [sqValidation]=\"form\" type=\"password\" class=\"form-control\" id=\"password\" formControlName=\"password\" autocomplete=\"off\" spellcheck=\"off\">\n        </div>\n        <div class=\"form-group sq-form-group\" *ngIf=\"!!providers\">\n            <label for=\"providerName\">{{'msg#modal.login.singleSignOn' | sqMessage}}</label>\n            <select class=\"form-control custom-select\" id=\"providerName\" formControlName=\"providerName\" (change)=\"authenticate()\">\n                <option *ngFor=\"let provider of providers\" [value]=\"provider.name\" [hidden]=\"!provider.name\" [disabled]=\"!provider.name\">{{(provider.displayName || provider.name) | sqMessage}}</option>\n            </select>\n        </div>\n    </sq-modal>\n</form>","import {Component, HostBinding, OnInit, OnDestroy, Inject} from \"@angular/core\";\nimport {FormBuilder, FormGroup, FormControl, Validators} from \"@angular/forms\";\nimport {Subscription} from \"rxjs\";\nimport {START_CONFIG, StartConfig} from \"@sinequa/core/web-services\";\nimport {ModalService, MODAL_MODEL, ModalRef, ModalButton, ModalResult} from \"@sinequa/core/modal\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {AuthenticationService, Credentials} from \"@sinequa/core/login\";\n\n@Component({\n    selector: \"sq-login\",\n    templateUrl: \"./login.component.html\"\n})\nexport class BsLogin implements OnInit, OnDestroy {\n    @HostBinding(\"class.sq-login\") true;\n    userNameControl: FormControl;\n    passwordControl: FormControl;\n    providerNameControl: FormControl;\n    form: FormGroup;\n    formChanges: Subscription;\n    buttons: ModalButton[];\n    providers: any[];\n    providerName: string;\n\n    constructor(\n        @Inject(MODAL_MODEL) protected model: Credentials,\n        protected modalService: ModalService,\n        protected modalRef: ModalRef,\n        protected formBuilder: FormBuilder,\n        @Inject(START_CONFIG) protected startConfig: StartConfig,\n        protected authenticationService: AuthenticationService) {\n    }\n\n    ngOnInit() {\n        this.userNameControl = new FormControl(this.model.userName, Validators.required);\n        this.passwordControl = new FormControl(this.model.password, Validators.required);\n        this.providerNameControl = new FormControl();\n        this.form = this.formBuilder.group({\n            userName: this.userNameControl,\n            password: this.passwordControl,\n            providerName: this.providerNameControl\n        });\n        this.formChanges = Utils.subscribe(this.form.valueChanges,\n            (value) => {\n                this.model.userName = this.userNameControl.value;\n                this.model.password = this.passwordControl.value;\n                this.providerName = this.providerNameControl.value;\n            });\n\n        this.buttons = [\n            new ModalButton({\n                result: ModalResult.OK,\n                primary: true,\n                validation: this.form\n            }),\n            new ModalButton({\n                result: ModalResult.Cancel\n            })\n        ];\n\n        if (this.startConfig.providers) {\n            Object.keys(this.startConfig.providers).forEach((providerName) => {\n                if (!this.providers) {\n                    this.providerName = \"\";\n                    this.providers = [{displayName: \"msg#modal.login.signInWith\", name: \"\"}];\n                }\n                this.providers.push(this.startConfig.providers![providerName]);\n            });\n        }\n    }\n\n    ngOnDestroy() {\n        this.formChanges.unsubscribe();\n    }\n\n    yes() {\n        this.modalRef.close(ModalResult.Yes);\n    }\n\n    authenticate() {\n        Utils.subscribe(this.authenticationService.authenticateWithProvider(this.providerName),\n            (response) => {\n                this.yes();\n            },\n            (error) => {\n                console.log(\"login.authenticate cancelled: \", error);\n            });\n    }\n}\n","import {Component, Inject, HostBinding} from \"@angular/core\";\nimport {MODAL_MODEL, ModalRef, ConfirmOptions, ConfirmType} from \"@sinequa/core/modal\";\n\n@Component({\n    selector: \"sq-confirm\",\n    templateUrl: \"./confirm.component.html\"\n})\nexport class BsConfirm {\n    @HostBinding(\"class.sq-confirm\") true;\n\n    constructor(\n        @Inject(MODAL_MODEL) public model: ConfirmOptions,\n        protected modalRef: ModalRef) {\n    }\n\n    get title(): string {\n        return this.model.title ? this.model.title : \"msg#modal.confirm.title\";\n    }\n\n    public getMessageClass(confirmType): string {\n        switch (confirmType) {\n            case ConfirmType.Info:\n                return \"alert-info\";\n            case ConfirmType.Success:\n                return \"alert-sucess\";\n            case ConfirmType.Warning:\n                return \"alert-warning\";\n            case ConfirmType.Error:\n                return \"alert-danger\";\n            default:\n                return \"\";\n        }\n    }\n}","import { Component, Inject, OnDestroy, OnInit } from \"@angular/core\";\nimport { FormControl, FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { MODAL_MODEL, PromptOptions, ModalResult, ModalRef, ModalButton} from \"@sinequa/core/modal\";\nimport { Utils } from '@sinequa/core/base';\n\n@Component({\n    selector: \"sq-prompt\",\n    template: `\n        <form name=\"prompt\" novalidate [formGroup]=\"form\">\n            <sq-modal [title]=\"title\" [buttons]=\"buttons\">\n                <div class=\"form-group sq-form-group\">\n                    <label for=\"input\">{{model.message | sqMessage:model.messageParams}}</label>\n                    <input [sqValidation]=\"form\" type=\"text\" class=\"form-control\" id=\"input\" formControlName=\"input\" spellcheck=\"off\" sqAutofocus *ngIf=\"!model.rowCount\">\n                    <textarea [sqValidation]=\"form\" type=\"text\" class=\"form-control\" id=\"input\" formControlName=\"input\" spellcheck=\"on\" rows=\"{{model.rowCount}}\" sqAutofocus *ngIf=\"!!model.rowCount\">\n                    </textarea>\n                </div>\n            </sq-modal>\n        </form>\n    `\n})\nexport class BsPrompt implements OnInit, OnDestroy {\n    inputControl: FormControl;\n    form: FormGroup;\n    formChanges: Subscription;\n    buttons: ModalButton[];\n\n    constructor(\n        @Inject(MODAL_MODEL) public model: PromptOptions,\n        protected modalRef: ModalRef,\n        protected formBuilder: FormBuilder) {\n    }\n\n    ngOnInit() {\n        this.inputControl = new FormControl(this.model.output, this.model.validators || Validators.required);\n        this.form = this.formBuilder.group({\n            input: this.inputControl\n        });\n        this.formChanges = Utils.subscribe(this.form.valueChanges,\n            (value) => {\n                this.model.output = this.inputControl.value;\n            });\n            \n        this.buttons = [\n            new ModalButton({\n                result: ModalResult.OK,\n                primary: true,\n                validation: this.form\n            }),\n            new ModalButton({\n                result: ModalResult.Cancel\n            })\n        ];\n    }\n\n    ngOnDestroy() {\n        this.formChanges.unsubscribe();\n    }\n\n    get title(): string {\n        return this.model.title ? this.model.title : \"msg#modal.prompt.title\";\n    }\n\n}\n","<sq-modal\n    [title]=\"title\"\n    [buttons]=\"model.buttons\">\n    <div class=\"alert {{getMessageClass(model.confirmType)}}\">{{model.message | sqMessage:model.messageParams}}</div>\n</sq-modal>\n","import {Component, Inject, HostBinding, OnInit} from \"@angular/core\";\nimport {SafeResourceUrl, DomSanitizer} from \"@angular/platform-browser\";\nimport {START_CONFIG, StartConfig} from \"@sinequa/core/web-services\";\n\n@Component({\n    selector: \"sq-help\",\n    templateUrl: \"./help.html\"\n})\nexport class BsHelp  implements OnInit {\n    @HostBinding(\"class.modal-content\") true;\n    model: {};\n    url: SafeResourceUrl;\n\n    constructor(\n        @Inject(START_CONFIG) public startConfig: StartConfig,\n        public sanitizer: DomSanitizer) {\n    }\n\n    ngOnInit() {\n        const url = this.startConfig.helpUrl || \"assets/help/index.html\";\n        this.url = this.sanitizer.bypassSecurityTrustResourceUrl(url);\n    }\n}\n","<sq-modal [title]=\"'msg#help.title'\">\n    <div class=\"d-flex flex-column\">\n        <iframe [src]=\"url\"></iframe>\n    </div>\n</sq-modal>","import {Component, OnInit, OnDestroy, Inject} from \"@angular/core\";\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {Subscription} from \"rxjs\";\nimport {debounceTime} from \"rxjs/operators\";\nimport {MODAL_MODEL, ModalButton, ModalResult} from \"@sinequa/core/modal\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {UserOverride} from \"@sinequa/core/login\";\n\n@Component({\n    selector: \"sq-override-user\",\n    templateUrl: \"./override-user.html\"\n})\nexport class BsOverrideUser implements OnInit, OnDestroy {\n    form: FormGroup;\n    formChanges: Subscription;\n    buttons: ModalButton[];\n\n    constructor(\n        @Inject(MODAL_MODEL) public model: UserOverride,\n        private formBuilder: FormBuilder) {\n    }\n\n    ngOnInit() {\n        this.form = this.formBuilder.group({\n            \"userName\": [this.model.userName, Validators.required],\n            \"domain\": [this.model.domain, Validators.required]\n        });\n        this.formChanges = Utils.subscribe(this.form.valueChanges.pipe(debounceTime(100)),\n            (value) => {\n                Utils.merge(this.model, value);\n                //this.model.userName = this.form.get(\"userName\").value;\n                //this.model.domain = this.form.get(\"domain\").value;\n            });\n\n        this.buttons = [\n            new ModalButton({\n                result: ModalResult.OK,\n                primary: true,\n                validation: <any>this.form\n            }),\n            new ModalButton({\n                result: ModalResult.Cancel\n            })\n        ];\n    }\n\n    ngOnDestroy() {\n        this.formChanges.unsubscribe();\n    }\n}","<div *ngIf=\"!editing\" class=\"editable-text\">{{value}}</div>\n<form *ngIf=\"editing\" class=\"form-inline\" role=\"form\" novalidate [formGroup]=\"form\">\n    <div class=\"form-group\">\n        <!--label [hidden]=\"form.valid\" for=\"editable\">{{name | sqMessage}}</label-->\n        <label for=\"editable\" class=\"sr-only\">{{name | sqMessage}}</label>\n        <input [sqValidation]=\"form\" type=\"text\" id=\"editable\" formControlName=\"editable\" spellcheck=\"false\" class=\"form-control\" (keydown)=\"inputKeydown($event)\" sqAutofocus (blur)=\"stopEditing()\">\n    </div>\n</form>\n","<form name=\"overrideUser\" novalidate [formGroup]=\"form\">\n    <sq-modal [title]=\"'msg#overrideUser.title'\" [buttons]=\"buttons\">\n        <div class=\"form-group sq-form-group\">\n            <label for=\"userName\">{{'msg#overrideUser.userName' | sqMessage}}</label>\n            <input [sqValidation]=\"form\" type=\"text\" class=\"form-control\" id=\"userName\" formControlName=\"userName\" spellcheck=\"off\" sqAutofocus>\n        </div>\n        <div class=\"form-group sq-form-group\">\n            <label for=\"domain\">{{'msg#overrideUser.domain' | sqMessage}}</label>\n            <input [sqValidation]=\"form\" type=\"text\" class=\"form-control\" id=\"domain\" formControlName=\"domain\" spellcheck=\"off\">\n        </div>\n    </sq-modal>\n</form>","import {Component, OnInit, OnDestroy, Input, Output, EventEmitter, HostBinding, HostListener, ElementRef} from \"@angular/core\";\nimport {FormBuilder, FormGroup, FormControl} from \"@angular/forms\";\nimport {ValidatorFn} from \"@angular/forms\";\nimport {Subscription} from \"rxjs\";\nimport {Utils, Keys} from \"@sinequa/core/base\";\n\n@Component({\n    selector: \"sq-editable\",\n    templateUrl: \"./editable.html\",\n    styleUrls: [\"./editable.scss\"]\n})\nexport class BsEditable implements OnInit, OnDestroy {\n    @HostBinding(\"attr.tabindex\") tabindex = \"0\";\n    @Input() name: string;\n    @Input() value: string;\n    @Input() model: any;\n    @Output() valueChange: EventEmitter<string>;\n    @Input() validators: ValidatorFn[];\n    editableControl: FormControl;\n    modelControl: FormControl;\n    form: FormGroup;\n    formChanges: Subscription;\n    previousValue: string;\n    editing: boolean;\n    private focusAfterEdit: boolean;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private elementRef: ElementRef\n    ) {\n        this.valueChange = new EventEmitter<string>();\n    }\n\n    ngOnInit() {\n        this.editableControl = new FormControl(this.value, this.validators);\n        this.modelControl = new FormControl(this.model);\n        this.form = this.formBuilder.group({\n            editable: this.editableControl,\n            model: this.modelControl\n        });\n        this.formChanges = Utils.subscribe(this.form.valueChanges,\n            (value) => {\n                this.value = this.editableControl.value;\n            }\n        );\n    }\n\n    ngOnDestroy() {\n        this.valueChange.unsubscribe();\n        this.formChanges.unsubscribe();\n    }\n\n    @HostListener(\"mousedown\")\n    @HostListener(\"touchstart\")\n    startEditing() {\n        if (!this.editing) {\n            this.previousValue = this.value;\n            this.editableControl[\"_touched\"] = false; //TODO - need markAsPristine?\n            this.editableControl[\"_pristine\"] = true; //\n            this.editing = true;\n        }\n    }\n\n    stopEditing(cancel = false) {\n        if (this.editing) {\n            this.editing = false;\n            if (this.focusAfterEdit && this.elementRef) {\n                this.elementRef.nativeElement.focus();\n            }\n            this.focusAfterEdit = false;\n            if (cancel) {\n                this.value = this.previousValue;\n            }\n            this.valueChange.emit(this.value);\n        }\n    }\n\n    inputKeydown(event: KeyboardEvent) {\n        switch (event.keyCode) {\n            case Keys.enter:\n                event.stopPropagation();\n                this.stopEditing();\n                return false;\n            case Keys.esc:\n                event.stopPropagation();\n                this.stopEditing(true);\n                return false;\n        }\n        return undefined;\n    }\n\n    @HostListener(\"keydown\", [\"$event\"])\n    hostKeydown(event: KeyboardEvent) {\n        if (event.keyCode === Keys.enter) {\n            this.focusAfterEdit = true;\n            this.startEditing();\n            return false;\n        }\n        return undefined;\n    }\n}\n","import {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\n\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\n\nimport {ModalModule as CoreModalModule} from \"@sinequa/core/modal\";\nimport {LoginModule} from \"@sinequa/core/login\";\nimport {IntlModule} from \"@sinequa/core/intl\";\nimport {ValidationModule} from \"@sinequa/core/validation\";\n\nimport {UtilsModule} from \"@sinequa/components/utils\";\n\nimport {BsModal} from \"./modal.component\";\nimport {BsModalHeader} from \"./modal-header.component\";\nimport {BsModalFooter} from \"./modal-footer.component\";\nimport {BsLogin} from \"./login.component\";\nimport {BsConfirm} from \"./confirm.component\";\nimport {BsPrompt} from \"./prompt.component\";\nimport {BsHelp} from \"./help/help\";\nimport {BsOverrideUser} from \"./override-user/override-user\";\nimport {BsEditable} from \"./editable/editable\";\n\nimport {OverlayModule} from \"@angular/cdk/overlay\";\nimport {A11yModule} from \"@angular/cdk/a11y\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule, ReactiveFormsModule,\n        OverlayModule,\n        A11yModule,\n\n        IntlModule,\n        ValidationModule,\n        CoreModalModule.forRoot(BsConfirm, BsPrompt),\n        LoginModule.forRoot(BsLogin),\n\n        UtilsModule,\n    ],\n    declarations: [\n        BsModal, BsModalHeader, BsModalFooter, BsLogin, BsConfirm,\n        BsHelp, BsOverrideUser, BsEditable, BsPrompt\n    ],\n    exports: [\n        BsModal, BsModalHeader, BsModalFooter, BsLogin, BsConfirm,\n        BsHelp, BsOverrideUser, BsEditable, BsPrompt\n    ],\n})\nexport class BsModalModule {\n}","export default {\n    \"help\": {\n        \"title\": \"Online-Hilfe\"\n    },\n\n    \"overrideUser\": {\n        \"title\": \"Benutzer wechseln\",\n        \"userName\": \"Benutzername\",\n        \"domain\": \"Domäne\"\n    },\n\n    \"btnClose\": {\n        \"text\": \"Schließen\"\n    }\n};\n","export default {\n    \"help\": {\n        \"title\": \"Online Help\"\n    },\n\n    \"overrideUser\": {\n        \"title\": \"Override User\",\n        \"userName\": \"User name\",\n        \"domain\": \"Domain\"\n    },\n\n    \"btnClose\": {\n        \"text\": \"Close\"\n    }\n};\n","export default {\n    \"help\": {\n        \"title\": \"Aide en ligne\"\n    },\n\n    \"overrideUser\": {\n        \"title\": \"Emprunt d'identité\",\n        \"userName\": \"Identifiant\",\n        \"domain\": \"Domaine\"\n    },\n\n    \"btnClose\": {\n        \"text\": \"Fermer\"\n    }\n};\n"]}