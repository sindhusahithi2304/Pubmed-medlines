{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","../../../projects/components/selection/selection.service.ts","../projects/components/selection/bootstrap/result-selector/result-selector.ts","../projects/components/selection/bootstrap/result-selector/result-selector.html","../projects/components/selection/bootstrap/results-selector/results-selector.ts","../projects/components/selection/bootstrap/selection-arranger/selection-arranger.component.html","../projects/components/selection/bootstrap/results-selector/results-selector.html","../projects/components/selection/bootstrap/selection-arranger/selection-arranger.component.ts","../../projects/components/selection/bootstrap/selection.module.ts","../../projects/components/selection/messages/en.ts","../../projects/components/selection/messages/index.ts","../../projects/components/selection/messages/fr.ts","../../projects/components/selection/messages/de.ts"],"names":["Object","create","__values","o","s","Symbol","iterator","m","i","call","length","next","value","done","TypeError","SelectionEventType","defaultSelectionOptions","resetOnNewResults","resetOnNewQuery","storage","SELECTION_OPTIONS","InjectionToken","SelectionService","searchService","selectionOptions","_this","this","selectedRecords","selectionActions","_events","Subject","events","subscribe","event","type","haveRecords","newSelectedRecords","_a","results","records","record","index","findIndex","item","id","$selected","splice","push","_c","_d","SELECT","source","clearSelectedRecords","selectedRecordsAction","buildSelectRecordsAction","forEach","action","update","defineProperty","prototype","ngOnDestroy","complete","getItem","getSelectedItems","slice","getSelectedIds","map","r","getSelectedCount","selectCurrentRecords","toggleSelectedRecords","ssRecord","getRecordFromId","UNSELECT","allRecordsSelected","moveSelectedRecord","newIndex","Error","MOVE","newUnselectedRecords","Action","icon","text","title","messageParams","values","count","$event","undefined","updater","haveSelectedRecords","i0","ɵɵinject","i1","SearchService","factory","ɵfac","providedIn","selectionService","BsResultSelector","ɵɵdirectiveInject","selectors","inputs","decls","vars","consts","template","rf","ctx","i0.ɵɵelementStart","i0.ɵɵlistener","i0.ɵɵelementEnd","i0.ɵɵtext","i0.ɵɵpropertyInterpolate","i0.ɵɵattribute","i0.ɵɵadvance","i0.ɵɵproperty","BsResultsSelector","rightAligned","reverse","i0.ɵɵelement","i0.ɵɵelementContainer","size","style","i0.ɵɵtemplate","ɵɵpureFunction2","_c0$1","record_r1","i_r2","BsSelectionArranger","change","EventEmitter","getRecords","dropRecord","isPointerOverContainer","moveItemInArray","previousIndex","currentIndex","removeRecord","indexOf","contentQueries","dirIndex","TemplateRef","BsSelectionModule","providers","provide","useValue","imports","CommonModule","DragDropModule","IntlModule","BsActionModule","declarations","exports","enSelection","Utils","merge","resultSelector","selectDocument","unselectDocument","resultsSelector","selectDocuments","selectDocumentsTitle","unselectDocumentsTitle","selection","selectedDocuments","enSearch","frSelection","frSearch","deSelection","deSearch"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import {Injectable, OnDestroy, InjectionToken, Inject} from \"@angular/core\";\nimport {Subject} from \"rxjs\";\nimport {Record} from \"@sinequa/core/web-services\";\nimport {Action} from \"@sinequa/components/action\";\nimport {SearchService} from \"@sinequa/components/search\";\n\nexport enum SelectionEventType {\n    SELECT,\n    UNSELECT,\n    MOVE\n}\n\nexport interface SelectionEvent {\n    type: SelectionEventType;\n    records: Record[];\n    source?: string;\n}\n\nexport interface SelectionItem {\n    id: string;\n}\n\n/**\n * The storage mode allows to customize how the service stores records, \n * which enables different features:\n * - id: only store the id of a selected record (default)\n * - record: store the entire record\n * - a function that customize what is stored (at least the record id is required)\n */\nexport interface SelectionOptions {\n    resetOnNewResults: boolean;\n    resetOnNewQuery: boolean;\n    storage: \"id\" | \"record\" | ((record: Record) => SelectionItem);\n}\n\nexport const defaultSelectionOptions: SelectionOptions = {\n    resetOnNewResults: false,\n    resetOnNewQuery: true,\n    storage: \"id\"\n}\n\nexport const SELECTION_OPTIONS = new InjectionToken<SelectionOptions>(\"SELECTION_OPTIONS\");\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SelectionService implements OnDestroy {\n\n    protected readonly selectedRecords: SelectionItem[] = []; // currently selected items\n    public readonly selectionActions: Action[] = []; // Actions that other services can register onto this service\n\n    private _events = new Subject<SelectionEvent>();\n\n    public readonly selectedRecordsAction: Action;\n\n    constructor(\n        public searchService : SearchService,\n        @Inject(SELECTION_OPTIONS) public selectionOptions: SelectionOptions \n    ){\n\n        this.searchService.events.subscribe(event => {\n\n            if(!this.selectionOptions.resetOnNewResults && event.type === \"new-results\" && this.searchService.haveRecords){\n\n                const newSelectedRecords: Record[] = [];\n                if (this.searchService.results?.records) {\n                    for (const record of this.searchService.results.records) {\n                        const index = this.selectedRecords.findIndex(item => item.id === record.id);\n                        if (index !== -1 && !record.$selected) {\n                            record.$selected = true;    // Select previously selected records\n                            this.selectedRecords.splice(index, 1, record);\n                            newSelectedRecords.push(record);\n                        }\n                    }\n                }\n                if(newSelectedRecords.length > 0)   // Menus might need to be refreshed\n                    this._events.next({type: SelectionEventType.SELECT, records: newSelectedRecords, source: event.type});\n\n            }\n\n            if(this.selectionOptions.resetOnNewResults && event.type === \"new-results\") {\n                this.clearSelectedRecords(event.type);\n            }\n            \n            if(this.selectionOptions.resetOnNewQuery && event.type === \"new-query\") {\n                this.clearSelectedRecords(event.type);\n            }\n\n        });\n\n        this.selectedRecordsAction = this.buildSelectRecordsAction();\n        this.selectionActions.push(this.selectedRecordsAction);\n\n        this.events.subscribe({next: () => {\n            this.selectionActions.forEach(action => action.update());\n        }});\n\n    }\n\n    /**\n     * Emits an event on any (bulk or single) selection and unselection events\n     */\n    public get events() : Subject<SelectionEvent> {\n        return this._events;\n    }\n\n    ngOnDestroy(){\n        this._events.complete();\n    }\n\n    private getItem(record: Record): SelectionItem {\n        if(this.selectionOptions.storage === \"id\") {\n            return {id: record.id};\n        }\n        else if(this.selectionOptions.storage === \"record\") {\n            return record;\n        }\n        else {\n            return this.selectionOptions.storage(record);\n        }\n    }\n\n    /**\n     * Returns a copy of the list of selected records\n     */\n    public getSelectedItems(): SelectionItem[] {\n        return this.selectedRecords.slice(0);\n    }\n\n    /**\n     * Return the list of selected record ids\n     */\n    public getSelectedIds(): string[] {\n        return this.selectedRecords.map(r => r.id);\n    }\n\n    /**\n     * @returns true if at least one record is selected\n     */\n    public get haveSelectedRecords(): boolean {\n        return this.selectedRecords.length > 0;\n    }\n\n    public getSelectedCount(): number {\n        return this.selectedRecords.length;\n    }\n\n    /**\n     * @returns true if all records in the search results are selected\n     */\n    public get allRecordsSelected(): boolean {\n        if (!this.searchService.results || !this.searchService.results.records) {\n            return false;\n        }\n        for (const record of this.searchService.results.records) {\n            if (!record.$selected) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    private selectCurrentRecords(source?: string) {\n        const newSelectedRecords: Record[] = [];\n        if (this.searchService.results && this.searchService.results.records) {\n            for (const record of this.searchService.results.records) {\n                if (!record.$selected) {\n                    this.selectedRecords.push(this.getItem(record));\n                    newSelectedRecords.push(record);\n                    record.$selected = true;\n                }\n            }\n        }\n        if(newSelectedRecords.length > 0)\n            this._events.next({type: SelectionEventType.SELECT, records: newSelectedRecords, source});\n    }\n\n\n    /**\n     * Toggles the selection of one record or all those in the results.\n     * Emits a SelectionEvent if a record is selected or unselected.\n     * @param record if provided, will toggle the selection of this record; if not will toggle all records in results\n     */\n    public toggleSelectedRecords(record?: Record, source?: string) {\n        if (!!record) {\n            const index = this.selectedRecords.findIndex(item => item.id === record.id);\n            if (index > -1) {\n                this.selectedRecords.splice(index, 1);\n                record.$selected = false;\n            }\n            else {\n                this.selectedRecords.push(this.getItem(record));\n                record.$selected = true;\n            }\n            // record might not be the one in the search service results (if passing a SelectionItem)\n            const ssRecord = this.searchService.getRecordFromId(record.id);\n            if(ssRecord) {\n                ssRecord.$selected = record.$selected;\n            }\n            this._events.next({type: record.$selected? SelectionEventType.UNSELECT : SelectionEventType.SELECT, records: [record], source});\n        }\n        else {\n            if (this.allRecordsSelected) {\n                this.clearSelectedRecords(source);\n            }\n            else {\n                this.selectCurrentRecords(source);\n            }\n        }\n    }\n\n    /**\n     * Moves a selected record to a different index;\n     * @param record \n     * @param newIndex \n     */\n    public moveSelectedRecord(record: Record, newIndex: number, source?: string) {\n        const i = this.selectedRecords.findIndex(r => r.id === record.id);\n        if(i === -1) {\n            throw new Error(`Record ${record.id} is not in the selected records`);\n        }\n        this.selectedRecords.splice(i, 1);\n        this.selectedRecords.splice(newIndex, 0, this.getItem(record));\n        this.events.next({type: SelectionEventType.MOVE, records: [record], source});\n    }\n\n    /**\n     * Unselect all selected records\n     * Emits a SelectionEvent\n     */\n    public clearSelectedRecords(source?: string) {\n        this.selectedRecords.splice(0);\n        const newUnselectedRecords: Record[] = [];\n        if (this.searchService.results && this.searchService.results.records) {\n            for (const record of this.searchService.results.records) {\n                if(record.$selected){\n                    record.$selected = false;\n                    newUnselectedRecords.push(record);\n                }\n            }\n        }\n        if(newUnselectedRecords.length > 0)\n            this._events.next({type: SelectionEventType.UNSELECT, records: newUnselectedRecords, source});\n    }\n\n    private buildSelectRecordsAction(): Action {\n        return new Action({\n            icon: \"far fa-square\",\n            text: \"msg#resultsSelector.selectDocuments\",\n            title: this.allRecordsSelected ? \"msg#resultsSelector.unselectDocumentsTitle\" : \"msg#resultsSelector.selectDocumentsTitle\",\n            messageParams: {values: {count: this.selectedRecords.length}},\n            action: (item, $event) => {\n                this.toggleSelectedRecords(undefined, \"multiple-selector\");\n            },\n            updater: (item) => {\n                item.icon = this.haveSelectedRecords ? \"far fa-check-square\" : \"far fa-square\";\n                item.title = this.allRecordsSelected ? \"msg#resultsSelector.unselectDocumentsTitle\" : \"msg#resultsSelector.selectDocumentsTitle\";\n                item.messageParams = {values: {count: this.selectedRecords.length}};\n            }\n        });\n    }\n}","import {Component, Input} from \"@angular/core\";\nimport {Record} from \"@sinequa/core/web-services\";\nimport {SelectionService} from \"../../selection.service\";\n\n@Component({\n    selector: \"sq-result-selector\",\n    templateUrl: \"./result-selector.html\"\n})\nexport class BsResultSelector {\n    @Input() record: Record;\n\n    constructor(\n        public selectionService: SelectionService) {\n    }\n\n}","<label class=\"sq-select-results-item custom-control custom-control-inline custom-checkbox\"\n    title=\"{{(record.$selected ? 'msg#resultSelector.unselectDocument' : 'msg#resultSelector.selectDocument') | sqMessage}}\"\n    [attr.aria-label]=\"(record.$selected ? 'msg#resultSelector.unselectDocument' : 'msg#resultSelector.selectDocument') | sqMessage\">\n    <input type=\"checkbox\" class=\"custom-control-input\" [checked]=\"record.$selected\" (change)=\"selectionService.toggleSelectedRecords(record, 'result')\">\n    <span class=\"custom-control-label\">&#8203;</span>\n</label>","import {Component, Input} from \"@angular/core\";\nimport {SelectionService} from \"../../selection.service\";\nimport {Action} from '@sinequa/components/action';\n\n@Component({\n    selector: \"sq-results-selector\",\n    templateUrl: \"./results-selector.html\"\n})\nexport class BsResultsSelector {\n    @Input() size: string;\n    @Input() style: string;\n    @Input() rightAligned: boolean;\n\n    constructor(\n        public selectionService: SelectionService) {\n    }\n\n    public get actions(): Action[] {\n        return this.rightAligned? this.selectionService.selectionActions.slice().reverse() : this.selectionService.selectionActions;\n    }\n}\n","<div cdkDropList  (cdkDropListDropped)=\"dropRecord($event)\">\n    <div class=\"card\" *ngFor=\"let record of getRecords(); let i=index\" cdkDrag>\n        <div class=\"record-placeholder\" *cdkDragPlaceholder></div>\n        <ng-container *ngTemplateOutlet=\"recordTpl; context:{$implicit: record, index: i}\"></ng-container>\n        <i class=\"position-absolute fas fa-times record-close\" (click)=\"removeRecord(record)\"></i>\n    </div>\n</div>","<div class=\"btn-group\" [sq-action-buttons]=\"{items: actions, size: size, style: style, rightAligned: rightAligned}\"></div>","import { Component, ContentChild, TemplateRef, Input, Output, EventEmitter } from \"@angular/core\";\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\nimport { Record } from \"@sinequa/core/web-services\";\nimport { SearchService } from '@sinequa/components/search';\nimport { SelectionService, SelectionItem } from '../../selection.service';\n\n@Component({\n    selector: \"sq-selection-arranger\",\n    templateUrl: \"./selection-arranger.component.html\",\n    styleUrls: [\"./selection-arranger.component.scss\"]\n})\nexport class BsSelectionArranger {\n\n    /**\n     * If a list of records is supplied it is used to display and rearrange the list of records.\n     * If this list is not supplied, the SelectionService list of items is used instead.\n     */\n    @Input() records?: Record[];\n\n    /**\n     * A template must be passed by transclusion to display each record in the selection\n     */\n    @ContentChild(TemplateRef, {static: false}) recordTpl: TemplateRef<any>;\n\n    /**\n     * Triggers event when the user moves or removes a record in the list.\n     */\n    @Output() change = new EventEmitter<SelectionItem[]>();\n\n    constructor(\n        public searchService: SearchService,\n        public selectionService: SelectionService\n    ) {\n    }\n\n    getRecords(): SelectionItem[] {\n        return this.records || this.selectionService.getSelectedItems();\n    }\n\n    dropRecord(event: CdkDragDrop<string[]>) {\n        if (event.isPointerOverContainer) { //https://material.angular.io/cdk/drag-drop/api#CdkDragExit\n            if(this.records) {\n                moveItemInArray(this.records, event.previousIndex, event.currentIndex); // Reorder the items when item dragged inside the drop zone\n            }\n            else {\n                const record = this.selectionService.getSelectedItems()[event.previousIndex];\n                this.selectionService.moveSelectedRecord(record as Record, event.currentIndex);\n            }\n        }\n        else {\n            if(this.records) {\n                this.records.splice(event.previousIndex, 1);\n            }\n            else {\n                const record = this.selectionService.getSelectedItems()[event.previousIndex];\n                this.selectionService.toggleSelectedRecords(record as Record, \"selection-arranger\");\n            }\n        }\n        this.change.next(this.getRecords());\n    }\n\n    removeRecord(record: Record) {\n        if(this.records) {\n            this.records.splice(this.records.indexOf(record), 1);\n        }\n        else {\n            this.selectionService.toggleSelectedRecords(record, \"selection-arranger\");\n        }\n        this.change.next(this.getRecords());\n    }\n}","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { DragDropModule } from '@angular/cdk/drag-drop';\n\nimport { IntlModule } from \"@sinequa/core/intl\";\n\nimport { BsActionModule } from \"@sinequa/components/action\";\n\nimport { BsResultsSelector } from \"./results-selector/results-selector\";\nimport { BsResultSelector } from \"./result-selector/result-selector\";\nimport { BsSelectionArranger } from \"./selection-arranger/selection-arranger.component\";\nimport { SELECTION_OPTIONS, defaultSelectionOptions } from \"../selection.service\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        DragDropModule,\n\n        IntlModule,\n\n        BsActionModule,\n    ],\n    declarations: [\n        BsResultsSelector, BsResultSelector, BsSelectionArranger\n    ],\n    exports: [\n        BsResultsSelector, BsResultSelector, BsSelectionArranger\n    ],\n    providers: [\n        {provide: SELECTION_OPTIONS, useValue: defaultSelectionOptions}\n    ]\n})\nexport class BsSelectionModule {\n}\n","export default {\n    \"resultSelector\": {\n        \"selectDocument\": \"Select document\",\n        \"unselectDocument\": \"Unselect document\"\n    },\n    \"resultsSelector\": {\n        \"selectDocuments\": \"{count, selectordinal, =0 {} other {(#)}}\",\n        \"selectDocumentsTitle\": \"Select documents\",\n        \"unselectDocumentsTitle\": \"Unselect documents\"\n    },\n    \"selection\": {\n        \"selectedDocuments\": \"{count, plural, =0 {} one {# selected document} other {# selected documents}}\"\n    }\n};\n","import {Utils} from \"@sinequa/core/base\";\nimport {enSearch, frSearch, deSearch} from \"@sinequa/components/search\";\n\nimport _enSelection from \"./en\";\nimport _frSelection from \"./fr\";\nimport _deSelection from \"./de\";\n\nconst enSelection = Utils.merge({}, _enSelection, enSearch);\nconst frSelection = Utils.merge({}, _frSelection, frSearch);\nconst deSelection = Utils.merge({}, _deSelection, deSearch);\n\nexport { enSelection, frSelection, deSelection };\n","export default {\n    \"resultSelector\": {\n        \"selectDocument\": \"Sélectionner le document\",\n        \"unselectDocument\": \"Désélectionner le document\"\n    },\n    \"resultsSelector\": {\n        \"selectDocuments\": \"{count, selectordinal, =0 {} other {(#)}}\",\n        \"selectDocumentsTitle\": \"Sélectionner les documents\",\n        \"unselectDocumentsTitle\": \"Désélectionner les documents\",\n    },\n    \"selection\": {\n        \"selectedDocuments\": \"{count, plural, =0 {} one {# document sélectionné} other {# documents sélectionnés}}\"\n    }\n};\n","export default {\n    \"resultSelector\": {\n        \"selectDocument\": \"Dokument auswählen\",\n        \"unselectDocument\": \"Dokumentauswahl aufheben\"\n    },\n    \"resultsSelector\": {\n        \"selectDocuments\": \"{count, selectordinal, =0 {} other {(#)}}\",\n        \"selectDocumentsTitle\": \"Dokumente auswählen\",\n        \"unselectDocumentsTitle\": \"Dokumentauswahl aufheben\",\n    },\n    \"selection\": {\n        \"selectedDocuments\": \"{count, plural, =0 {} one {# ausgewähltes Dokument} other {# ausgewählte Dokumente}}\"\n    }\n};\n"]}