{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","../../../projects/components/search/breadcrumbs.ts","../../../projects/components/search/search.service.ts","../../../projects/components/search/first-page.service.ts","../projects/components/search/bootstrap/breadcrumbs/breadcrumbs.html","../projects/components/search/bootstrap/breadcrumbs/breadcrumbs.ts","../projects/components/search/bootstrap/did-you-mean/did-you-mean.html","../projects/components/search/bootstrap/did-you-mean/did-you-mean.ts","../projects/components/search/bootstrap/page-size-selector/page-size-selector.html","../projects/components/search/bootstrap/page-size-selector/page-size-selector.ts","../projects/components/search/bootstrap/pager/pager.ts","../projects/components/search/bootstrap/pager/pager.html","../projects/components/search/bootstrap/sort-selector/sort-selector.ts","../projects/components/search/bootstrap/sort-selector/sort-selector.html","../projects/components/search/bootstrap/tabs/tabs.html","../projects/components/search/bootstrap/tabs/tabs.ts","../projects/components/search/bootstrap/loading-bar/loading-bar.ts","../projects/components/search/bootstrap/scroller/scroller.ts","../projects/components/search/bootstrap/load-more/load-more.html","../projects/components/search/bootstrap/load-more/load-more.ts","../../projects/components/search/bootstrap/search.module.ts","../../projects/components/search/messages/de.ts","../../projects/components/search/messages/en.ts","../../projects/components/search/messages/fr.ts"],"names":["Object","create","__values","o","s","Symbol","iterator","m","i","call","length","next","value","done","TypeError","__read","n","r","e","ar","push","error","__spread","arguments","concat","Breadcrumbs","appService","searchService","query","this","copy","items","advanced","fields","Set","init","defineProperty","prototype","findIndex","item","active","index","activeIndex","display","expr","slice","hidden","find","_this","expr1","Expr","every","expr2","field","exprContext","resolveColumnAlias","has","_c","_d","_e","selects","_f","select","textExpr","expr3","isStructured","findSelect","facet","exprOrField","activeSelects","Utils","eqNC","isString","addFields","getFields","forEach","add","makeBreadcrumbsItemFromExpr","text","parseExpr","ExprParser","escape","undefined","initItems","basket","ccquery","allowEmptySearch","isEmptySearchIgnoreSelects","_b","expression","selectItem","indexOf","splice","item1","removeItem","activeItem","update","SEARCH_OPTIONS","InjectionToken","SearchService","options","router","queryService","loginService","intlService","formatService","auditService","notificationsService","exprBuilder","queryStringParams","fetchingLoadMore","_events","Subject","_queryStream","BehaviorSubject","_resultsStream","routes","results","breadcrumbs","loginSubscription","events","subscribe","type","handleLogin","routerSubscription","event","NavigationStart","currentNavigation","getCurrentNavigation","navigationTrigger","extras","state","restoredState","NavigationEnd","handleNavigation","appSubscription","_query","name","clearQuery","ngOnDestroy","unsubscribe","complete","asObservable","getTabConfig","tabSearch","tabs","t","makeQuery","setQuery","newQuery","preventQueryNameChanges","defaultCCQuery","getCCQuery","console","warn","updateBreadcrumbs","resuseBreadcrumbs","_setResults","treatQueryIntents","tab","attributes","queryid","queryId","setResults","queryAnalysis","queryIntents","queryIntents_1","queryIntents_1_1","intent","actions","_h","e_2","_j","action","analysis","actionProcessed","data","initial","selectTab","skipLocationChange","records","rowCount","totalRowCount","pageSize","DefaultPageSize","page","Math","ceil","recentQuery","Query","assign","makeAuditEvent","selectBreadcrumbsItem","search","reuseBreadcrumbs","removeBreadcrumbsItem","isEmptySearch","clear","removeSelect","removeText","navigate","path","homeRoute","home","makeQueryIntentData","queryIntentData","intentData","isFirstPage","trim","checkEmptySearch","queries","isArray","queries_1","queries_1_1","info","getResults","auditEvents","throwError","searchInactive","searchActive","getCurrentTab","pipe","map","getMultipleResults","of","audit","analyzeQueryText","routingActive","url","makeURL","currentPath","pathname","searchParams","delete","currentSearch","decodeURIComponent","queryParams","toJsonForQueryString","navigationOptions","_g","keys","key","set","eq","$refresh","now","getTime","Promise","resolve","getHistoryState","navigation","window","history","isSearchRouteActive","isSearchRoute","checkSearchRoute","isSkipSearchRoute","skipSearchRoutes","routes_1","routes_1_1","route","endsWith","addUrl","getQueryFromUrl","jquery","get","fromJson","_a","ensureQueryFromUrl","deactivateRouting","makeAuditEventFromCurrentQuery","lastSelect","detail","scope","lastExpr","itembox","from-result-id","id","itemcolumn","isitemexclude","not","pathName","skipSearch","observable","afterSelectTabEvent","catchError","toPromise","spellingCorrectionMode","searchText","language","currentLocale","searchRefine","addSelect","makeRefineExpr","gotoPage","loadMore","pageCount","hasMore","didYouMean","context","kind","refineSelect","DidYouMeanKind","Original","getCurrentRecordIds","record","getRecordFromId","addFieldSelect","makeFieldExpr","and","makeNotExpr","facetName","refineExpr","unescape","toString","hasRelevance","arg","tabName","selectScope","getTab","equals","notifyOpenOriginalDocument","resultId","includes","querylang","queryLanguage","questionLanguage","notifyDocument","queryhash","rfmQueryHash","querytext","checkBeforeSearch","cancelReasons","beforeSearch","apply","cancel","i0","ɵɵinject","i1","Router","i2","AppService","i3","QueryWebService","i4","LoginService","i3$1","IntlService","FormatService","AuditWebService","i6","NotificationsService","ExprBuilder","factory","ɵfac","providedIn","FIRST_PAGE_OPTIONS","FirstPageService","searchSubscription","displayOnHomePage","getFirstPage","isCurrentSearchResults","firstPage","path1","exports","i0.ɵɵelementStart","i0.ɵɵlistener","i0.ɵɵelementEnd","i0.ɵɵproperty","i0.ɵɵelement","i0.ɵɵpropertyInterpolate","i0.ɵɵtemplate","i0.ɵɵclassMapInterpolate2","i0.ɵɵadvance","i0.ɵɵelementContainerStart","i0.ɵɵelementContainerEnd","BsBreadcrumbs","allowDeletion","displayFieldNames","getField","join","i0.ɵɵtext","i0.ɵɵtextInterpolate1","i0.ɵɵtextInterpolate","i0.ɵɵclassMapInterpolate1","ɵɵdirectiveInject","selectors","inputs","decls","vars","consts","template","rf","ctx","BsDidYouMean","handleResults","corrected","startsWith","refine","dymItem","ngOnChanges","changes","selectOriginal","original","selectCorrected","Corrected","features","ɵɵNgOnChangesFeature","BsPageSizeSelector","showInRegularView","refreshVisualisation","res","configPageSize","buildPageSizingAction","availableSizes","pageSizes","sort","a","b","children","Action","messageParams","values","size","defaultPageSize","updatePageSize","icon","pageSizingAction","setCurrentSize","currentPageSize","selectedAction","showInCustomization","rightAligned","BsPager","Item","showNavigation","showFirstLast","showPages","endPages","pages","makeItems","currentPage","endWidth","split1","split2","mid","floor","delta","FIRST_PAGE","PREVIOUS_PAGE","ic","ELLIPSIS","NEXT_PAGE","LAST_PAGE","title","isUndefined","isPage","isEllipsis","isNavigation","BsSortSelector","buildSortAction","setCurrentSort","sortAction","sortingChoices","getSortingChoices","current","queryOrderBy","orderBy","isAscendingSort","orderByClause","isDescendingSort","selectSort","sortingChoice","filter","lastElement","substring","lastIndexOf","isTabSearch","column","isActive","q","style","ɵɵpureFunction4","_c1$2","ɵɵpureFunction1","_c0$3","BsTabs","iconMap","EventEmitter","currentTab","searchtabs","customtabs","outputs","BsLoadingBar","BsScroller","ngAfterViewInit","root","observer","IntersectionObserver","isIntersecting","observe","anchor","nativeElement","disconnect","viewQuery","BsLoadMore","buttonsStyle","actionsSize","subscription","Subscription","loadMoreAction","updater","ngOnInit","resultsStream","BsSearchModule","forRoot","searchOptions","ngModule","providers","provide","useValue","imports","CommonModule","FormsModule","ReactiveFormsModule","WebServicesModule","IntlModule","LoginModule","UtilsModule","BsActionModule","declarations","emptySearchNotification","alreadyFiltered","emptySearch","itemRemove","dymonlyBeforeCorrected","dymonlyAfterCorrected","correctBeforeCorrected","correctBeforeOriginal","correctAfterOriginal","smartBeforeOriginal","smartBeforeCorrected","smartAfterCorrected","pageSizeSelector","pageSizeChoice","defaultPageSizeChoice","pager","pageNumberTitle","nextPage","previousPage","lastPage","sortSelector","sortByTitle","sortOther","relevance","date","filename","queryIntent","externalServiceTimeoutError","alreadySelected"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import {Query, AppService, ExprParser, Expr, ExprValueInitializer} from \"@sinequa/core/app-utils\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {SearchService} from \"./search.service\";\n\nexport interface BreadcrumbsItem {\n    expr: Expr | undefined;\n    display: Expr | string; // Either expr or a label (error string, basket name or <empty search>)\n    facet?: string; // associated facet, if any\n    active?: boolean; // true if the active item\n    hidden?: boolean; // true for \"empty search\" item when !ccquery.allowEmptySearch\n}\n\n/**\n * Description of the Breadcrumbs class - link to {@link SearchService}\n */\nexport class Breadcrumbs {\n    appService: AppService;\n    searchService: SearchService;\n    items: BreadcrumbsItem[]; // always starts with the text expression followed by any selects\n    advanced: Expr[];\n    query: Query; // the associated query. Will be different to the current query if any item other than the last is selected\n    fields: Set<string>;\n\n    static create(appService: AppService, searchService: SearchService, query: Query): Breadcrumbs {\n        const breadcrumbs = new Breadcrumbs(appService, searchService, query);\n        return breadcrumbs.init();\n    }\n\n    private constructor(appService: AppService, searchService: SearchService, query: Query) {\n        this.appService = appService;\n        this.searchService = searchService;\n        this.query = query.copy();\n        this.items = [];\n        this.advanced = [];\n        this.fields = new Set<string>();\n    }\n\n    get activeIndex(): number {\n        return this.items.findIndex(item => item.active);\n    }\n\n    get activeItem(): BreadcrumbsItem | undefined {\n        const index = this.activeIndex;\n        if (index !== -1) {\n            return this.items[index];\n        }\n        return undefined;\n    }\n\n    get text(): Expr | string {\n        return this.items[0].display;\n    }\n\n    get textExpr(): Expr | undefined {\n        return this.items[0].expr;\n    }\n\n    get selects(): BreadcrumbsItem[] {\n        return this.items.slice(1);\n    }\n\n    get activeSelects(): BreadcrumbsItem[] {\n        return this.items.slice(1, this.activeIndex + 1);\n    }\n\n    get activeItems():  BreadcrumbsItem[] {\n        return this.items.slice(0, this.activeIndex + 1);\n    }\n\n    get isEmpty(): boolean {\n        if (this.items.length === 0) {\n            return true;\n        }\n        if (this.items.length === 1 && this.items[0].hidden) {\n            return true;\n        }\n        return false;\n    }\n\n    find(expr: Expr | ExprValueInitializer): Expr | undefined {\n        let expr1 = expr as Expr;\n        const init = expr as ExprValueInitializer;\n        if (!(expr instanceof Expr)) {\n            expr1 = new Expr(init);\n        }\n        if (!expr1.every((expr2) => {\n            const field = expr2.exprContext.appService.resolveColumnAlias(expr2.field);\n            return !field || this.fields.has(field);\n        })) {\n            return undefined;\n        }\n        for (const expr3 of this.advanced) {\n            const expr2 = expr3.find(expr1);\n            if (expr2) {\n                return expr2;\n            }\n        }\n        for (const select of this.selects) {\n            if (select.expr) {\n                const expr2 = select.expr.find(expr1);\n                if (expr2) {\n                    return expr2;\n                }\n            }\n        }\n        if (this.textExpr) {\n            let expr2 = this.textExpr.find(expr1, (expr3) => expr3.isStructured);\n            if (expr2) {\n                return expr2;\n            }\n            expr2 = this.textExpr.find(expr1, (expr3) => !expr3.isStructured);\n            if (expr2) {\n                return expr2;\n            }\n        }\n        return undefined;\n    }\n\n    findSelect(facet: string, exprOrField?: Expr | string): Expr | undefined {\n        // Active selects only, most recent first\n        const activeSelects = this.activeSelects;\n        for (let i = activeSelects.length - 1; i >= 0; i--) {\n            const select = activeSelects[i];\n            if (select.expr && (!facet || Utils.eqNC(facet, select.facet || \"\"))) {\n                if (!exprOrField ) {\n                    return select.expr;\n                }\n                if (Utils.isString(exprOrField)) {\n                    if (Utils.eqNC(exprOrField, select.expr.field || \"\")) {\n                        return select.expr;\n                    }\n                }\n                else {\n                    const expr1 = select.expr.find(exprOrField);\n                    if (expr1) {\n                        return expr1;\n                    }\n                }\n            }\n        }\n        return undefined;\n    }\n\n    private addFields(expr: Expr | undefined) {\n        if (expr) {\n            const fields = expr.getFields();\n            fields.forEach((field) => {\n                this.fields.add(field);\n            });\n        }\n    }\n\n    private makeBreadcrumbsItemFromExpr(text: string): BreadcrumbsItem {\n        let expr = this.appService.parseExpr(text);\n        if (!(expr instanceof Expr)) {\n            expr = this.appService.parseExpr(ExprParser.escape(text));\n        }\n        if (expr instanceof Expr) {\n            return {expr, display: expr};\n        }\n        else {\n            return {expr: undefined, display: expr};\n        }\n    }\n\n    private initItems() {\n        // Text\n        if (this.query && this.query.text) {\n            const item = this.makeBreadcrumbsItemFromExpr(this.query.text);\n            this.items.push(item);\n            this.addFields(item.expr);\n        }\n        else {\n            this.items.push({\n                expr: undefined,\n                display: this.query && this.query.basket ? this.query.basket : \"msg#breadcrumbs.emptySearch\",\n                hidden: this.appService.ccquery && !this.appService.ccquery.allowEmptySearch &&\n                    this.searchService.isEmptySearchIgnoreSelects(this.query)\n            });\n        }\n        // Selects\n        if (this.query && this.query.select) {\n            for (const select of this.query.select) {\n                const item = this.makeBreadcrumbsItemFromExpr(select.expression);\n                item.facet = select.facet;\n                this.items.push(item);\n                this.addFields(item.expr);\n            }\n        }\n        // Set last item active\n        this.items[this.items.length - 1].active = true;\n    }\n\n    private init(): Breadcrumbs {\n        this.initItems();\n        return this;\n    }\n\n    selectItem(item: BreadcrumbsItem): Query | undefined {\n        const index = this.items.indexOf(item);\n        if (this.query && index !== -1) {\n            const query = this.query.copy();\n            if (query.select) {\n                query.select.splice(index);\n            }\n            this.items.forEach(item1 => item1.active = false);\n            item.active = true;\n            return query;\n        }\n        return undefined;\n    }\n\n    removeItem(item: BreadcrumbsItem): BreadcrumbsItem | undefined {\n        const index = this.items.indexOf(item);\n        if (this.query && index !== -1) {\n            let next: BreadcrumbsItem | undefined;\n            if (index === 0) { // Text\n                if (this.query.text || this.query.basket) {\n                    delete this.query.text;\n                    delete this.query.basket;\n                    item.expr = undefined;\n                    item.display = \"msg#breadcrumbs.emptySearch\";\n                    item.hidden = this.appService.ccquery && !this.appService.ccquery.allowEmptySearch &&\n                        this.searchService.isEmptySearchIgnoreSelects(this.query);\n                }\n                if (!item.hidden) {\n                    next = this.activeItem;\n                }\n                else if (this.items.length > 1) {\n                    next = this.items[this.items.length - 1];\n                }\n            }\n            else {\n                // Find next item to activate, if necessary\n                const activeIndex = this.activeIndex;\n                if (activeIndex >= index) {\n                    if (activeIndex > index) {\n                        next = this.items[activeIndex];\n                    }\n                    else {\n                        if (index === this.items.length - 1) {\n                            next = this.items[index - 1];\n                        }\n                        else {\n                            next = this.items[index + 1];\n                        }\n                        if (next.hidden) {\n                            next = undefined;\n                        }\n                    }\n                }\n                if (this.query.select) {\n                    this.query.select.splice(index - 1, 1);\n                }\n                this.items.splice(index, 1);\n            }\n            return next;\n        }\n        return undefined;\n    }\n\n    update(query: Query) {\n        if (!this.query) {\n            this.query = query.copy();\n        }\n        this.query.text = query.text;\n        this.query.basket = query.basket;\n        if (!this.query.text && !this.query.basket) {\n            const item = this.items[0];\n            item.expr = undefined;\n            item.display = \"msg#breadcrumbs.emptySearch\";\n            item.hidden = this.appService.ccquery && !this.appService.ccquery.allowEmptySearch &&\n                this.searchService.isEmptySearchIgnoreSelects(this.query);\n        }\n    }\n}\n","import {Injectable, InjectionToken, Inject, Optional, OnDestroy} from \"@angular/core\";\nimport {Router, NavigationStart, NavigationEnd, Params} from \"@angular/router\";\nimport {Subject, BehaviorSubject, Observable, Subscription, of, throwError} from \"rxjs\";\nimport {map, catchError  } from \"rxjs/operators\";\nimport {QueryWebService, AuditWebService, CCQuery, QueryIntentData, Results, Record, Tab, DidYouMeanKind,\n    QueryIntentAction, QueryIntent, QueryAnalysis, IMulti, CCTab,\n    AuditEvents, AuditEventType, AuditEvent} from \"@sinequa/core/web-services\";\nimport {AppService, FormatService, ValueItem, Query, ExprParser, Expr, ExprBuilder} from \"@sinequa/core/app-utils\";\nimport {NotificationsService} from \"@sinequa/core/notification\";\nimport {LoginService} from \"@sinequa/core/login\";\nimport {IntlService} from \"@sinequa/core/intl\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {Breadcrumbs, BreadcrumbsItem} from './breadcrumbs';\n\nexport interface SearchOptions {\n    routes?: string[];\n    skipSearchRoutes?: string[];\n    homeRoute?: string;\n    deactivateRouting?: boolean;\n    preventQueryNameChanges?: boolean;\n}\n\nexport const SEARCH_OPTIONS = new InjectionToken<SearchOptions>(\"SEARCH_OPTIONS\");\n\n@Injectable({\n    providedIn: \"root\"\n})\nexport class SearchService implements OnDestroy {\n    protected _query: Query | undefined;\n    queryStringParams: Params = {};\n    results: Results | undefined;\n    breadcrumbs: Breadcrumbs | undefined;\n    searchActive: boolean;\n\n    protected loginSubscription: Subscription;\n    protected routerSubscription: Subscription;\n    protected appSubscription: Subscription;\n    protected fetchingLoadMore = false;\n    protected _events = new Subject<SearchService.Events>();\n    protected _queryStream = new BehaviorSubject<Query | undefined>(undefined);\n    protected _resultsStream = new BehaviorSubject<Results | undefined>(undefined);\n\n    constructor(\n        @Optional() @Inject(SEARCH_OPTIONS) protected options: SearchOptions,\n        protected router: Router,\n        protected appService: AppService,\n        protected queryService: QueryWebService,\n        protected loginService: LoginService,\n        protected intlService: IntlService,\n        protected formatService: FormatService,\n        protected auditService: AuditWebService,\n        protected notificationsService: NotificationsService,\n        protected exprBuilder: ExprBuilder) {\n\n        if (!this.options) {\n            this.options = {\n                routes: [\"search\"]\n            };\n        }\n\n        this.results = undefined;\n        this.breadcrumbs = undefined;\n\n        this.loginSubscription = this.loginService.events.subscribe(\n            (value) => {\n                if (value.type === \"session-changed\") {\n                    this.handleLogin();\n                }\n            });\n        this.routerSubscription = this.router.events.subscribe(\n            (event) => {\n                if (event instanceof NavigationStart) {\n                    // Restore state on back/forward until this issue is fixed: https://github.com/angular/angular/issues/28108\n                    const currentNavigation = this.router.getCurrentNavigation();\n                    if (currentNavigation && event.navigationTrigger === \"popstate\" &&\n                        !currentNavigation.extras.state && event.restoredState) {\n                        currentNavigation.extras.state = event.restoredState;\n                    }\n                }\n                else if (event instanceof NavigationEnd) {\n                    this.handleNavigation();\n                }\n            });\n        this.appSubscription = this.appService.events.subscribe(\n            (event) => {\n                if (event.type === \"query-changed\") {\n                    if (this._query && (!this.appService.ccquery || (this._query.name !== this.appService.ccquery.name))) {\n                        this.clearQuery();\n                    }\n                }\n            });\n    }\n\n    ngOnDestroy() {\n        this.loginSubscription.unsubscribe();\n        this.routerSubscription.unsubscribe();\n        this.appSubscription.unsubscribe();\n        this._events.complete();\n        this._queryStream.complete();\n        this._resultsStream.complete();\n    }\n\n    get events(): Observable<SearchService.Events> {\n        return this._events;\n    }\n\n    get queryStream(): Observable<Query | undefined> {\n        return this._queryStream;\n    }\n\n    get resultsStream(): Observable<Results | undefined> {\n        return this._resultsStream.asObservable();\n    }\n\n    getTabConfig(name: string): CCTab | undefined {\n        if (this.appService.ccquery && this.appService.ccquery.tabSearch && this.appService.ccquery.tabSearch.tabs) {\n            return this.appService.ccquery.tabSearch.tabs.find(t => Utils.eqNC(t.name, name));\n        }\n        return undefined;\n    }\n\n    get query(): Query {\n        if (!this._query) {\n            this._query = this.makeQuery();\n            this._events.next({type: \"new-query\", query: this._query});\n        }\n        return this._query;\n    }\n\n    public setQuery(query: Query | undefined, newQuery = true) {\n        if (query === this._query) {\n            return;\n        }\n        this._query = query;\n        if (this._query) {\n            let ccquery: CCQuery | undefined;\n            if (this.options.preventQueryNameChanges) {\n                ccquery = this.appService.ccquery || this.appService.defaultCCQuery;\n            }\n            else {\n                ccquery = this.appService.getCCQuery(this._query.name);\n                if (!ccquery) {\n                    console.warn(`Query '${this._query.name}' not found`);\n                    ccquery = this.appService.defaultCCQuery;\n                }\n            }\n            if (ccquery) {\n                this._query.name = ccquery.name;\n                if (this.appService.ccquery !== ccquery) {\n                    this.appService.ccquery = ccquery;\n                }\n            }\n        }\n        if (newQuery) {\n            this._events.next({type: \"new-query\", query: this._query});\n        }\n    }\n\n    public clearQuery() {\n        this.setQuery(undefined);\n    }\n\n    public updateBreadcrumbs(results: Results | undefined, options: SearchService.SetResultsOptions) {\n        if (!results) {\n            this.breadcrumbs = undefined;\n            return;\n        }\n        if (!this.breadcrumbs || (!options.resuseBreadcrumbs && !options.advanced)) {\n            this.breadcrumbs = Breadcrumbs.create(this.appService, this, this.query);\n        }\n        else if (options.advanced) {\n            this.breadcrumbs.update(this.query);\n        }\n    }\n\n    private _setResults(results: Results | undefined, options: SearchService.SetResultsOptions = {}) {\n        if (results === this.results) {\n            return;\n        }\n        this._events.next({type: \"before-new-results\", results});\n        this.results = results;\n        this.treatQueryIntents(results);\n        this.updateBreadcrumbs(results, options);\n        if (this.results) {\n            if (this.results.tab) {\n                this.query.tab = this.results.tab;\n            }\n            if (this.results.attributes && this.results.attributes.queryid) {\n                this.query.queryId = this.results.attributes.queryid;\n            }\n        }\n        this._events.next({type: \"new-results\", results: this.results});\n        this._resultsStream.next(this.results);\n    }\n\n    public setResults(results: Results) {\n        return this._setResults(results);\n    }\n\n    // TODO: queryintents in their own service ?\n\n    private treatQueryIntents (results: Results | undefined) {\n        if (results && results.queryAnalysis && results.queryIntents) {\n            const queryIntents = results.queryIntents;\n            for (const intent of queryIntents) {\n                if (intent.actions) {\n                    for (const action of intent.actions) {\n                        const event: SearchService.ProcessQueryIntentActionEvent = {type: \"process-query-intent-action\", action: action, intent: intent, analysis: results.queryAnalysis};\n                        this._events.next(event);\n                        if (!event.actionProcessed) {\n                            if (!!action.data) {\n                                switch (action.type) {\n                                    case \"tab\":\n                                        if (results.queryAnalysis.initial && this.query &&\n                                            !Utils.eqNC(this.query.tab || \"\", action.data)) {\n                                            this.selectTab(action.data, {skipLocationChange: true});\n                                        }\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    get haveRecords(): boolean {\n        return !!this.results && !!this.results.records && this.results.records.length > 0;\n    }\n\n    get rowCount(): number {\n        return (!!this.results && this.results.rowCount) ? this.results.rowCount : 0;\n    }\n\n    get totalRowCount(): number {\n        return (!!this.results && this.results.totalRowCount) ? this.results.totalRowCount : 0;\n    }\n\n    get pageSize(): number {\n        if (this.query && this.query.pageSize) {\n            return this.query.pageSize;\n        }\n        if (this.appService.ccquery && this.appService.ccquery.pageSize) {\n            return this.appService.ccquery.pageSize;\n        }\n        return SearchService.DefaultPageSize;\n    }\n\n    get page(): number {\n        if (!this.results) {\n            return 1;\n        }\n        return this.results.page;\n    }\n\n    get pageCount(): number {\n        if (!this.results || !this.results.rowCount) {\n            return 0;\n        }\n        return Math.ceil(this.results.rowCount / this.results.pageSize);\n    }\n\n    makeQuery(recentQuery?: Query): Query {\n        const ccquery = this.appService.ccquery;\n        const query = new Query(ccquery ? ccquery.name : \"_unknown\");\n        if(recentQuery){\n            Object.assign(query, recentQuery);\n        }\n        this._events.next({type: \"make-query\", query: query});\n        return query;\n    }\n\n    protected makeAuditEvent(event: AuditEvent): AuditEvent {\n        this._events.next({type: \"make-audit-event\", event: event});\n        return event;\n    }\n\n    selectBreadcrumbsItem(item: BreadcrumbsItem) {\n        if (this.breadcrumbs) {\n            const query = this.breadcrumbs.selectItem(item);\n            if (query) {\n                this.setQuery(query, false);\n                this.search({reuseBreadcrumbs: true}); // audit?\n            }\n        }\n    }\n\n    removeBreadcrumbsItem(item: BreadcrumbsItem) {\n        if (this.breadcrumbs) {\n            const next = this.breadcrumbs.removeItem(item);\n            if (this.isEmptySearch(this.breadcrumbs.query)) {\n                this.clear();\n                return;\n            }\n            if (next) {\n                this.selectBreadcrumbsItem(next);\n            }\n        }\n    }\n\n    removeSelect(index: number) {\n        if (this.breadcrumbs) {\n            const item = this.breadcrumbs.items[index + 1];\n            this.removeBreadcrumbsItem(item);\n        }\n    }\n\n    removeText() {\n        if (this.breadcrumbs) {\n            const item = this.breadcrumbs.items[0];\n            this.removeBreadcrumbsItem(item);\n        }\n    }\n\n    clear(navigate = true, path?: string) {\n        this.clearQuery();\n        path = path || this.options.homeRoute;\n        this._setResults(undefined);\n        this._events.next({type: \"clear\", path});\n        if (navigate) {\n            this.navigate({path: path || this.options.homeRoute});\n        }\n    }\n\n    home(path = this.options.homeRoute) {\n        this.clear(true, path);\n    }\n\n    protected makeQueryIntentData(queryIntentData: QueryIntentData): QueryIntentData {\n        this._events.next({type: \"make-query-intent-data\", intentData: queryIntentData});\n        return queryIntentData;\n    }\n\n    isEmptySearchIgnoreSelects(query: Query | undefined): boolean {\n        if (!query) {\n            return true;\n        }\n        if (!query.action || query.action === \"search\") {\n            // Test isFirstPage\n            if (query.isFirstPage) {\n                return false;\n            }\n            // Test empty text\n            if (query.text && Utils.trim(query.text)) {\n                return false;\n            }\n            // Test basket\n            if (query.basket) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }\n\n    isEmptySearch(query: Query | undefined): boolean {\n        if (!query) {\n            return true;\n        }\n        if (!query.action || query.action === \"search\") {\n            if (!this.isEmptySearchIgnoreSelects(query)) {\n                return false;\n            }\n            // Test no facet selection\n            if (query.select && query.select.length > 0) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }\n\n    checkEmptySearch(queries: Query | Query[]): boolean {\n        if (this.appService.ccquery && !this.appService.ccquery.allowEmptySearch) {\n            if (!Utils.isArray(queries)) {\n                queries = [queries];\n            }\n            for (const query of queries) {\n                if (this.isEmptySearch(query)) {\n                    this.notificationsService.info(\"msg#search.emptySearchNotification\");\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n\n    getResults(\n        query: Query, auditEvents?: AuditEvents,\n        options: SearchService.GetResultsOptions = {}): Observable<Results> {\n        if (!this.checkEmptySearch(query)) {\n            return throwError(\"empty search\");\n        }\n        if (!options.searchInactive) {\n            this.searchActive = true;\n        }\n        const tab = this.getCurrentTab();\n        return this.queryService.getResults(query, auditEvents,\n            this.makeQueryIntentData({\n                tab: !!tab ? tab.name : undefined,\n                queryIntents: options.queryIntents,\n                queryAnalysis: options.queryAnalysis\n            })\n        ).pipe(\n            map((results) => {\n                this.searchActive = false;\n                return results;\n            })\n        );\n    }\n\n    getMultipleResults(queries: Query[], auditEvents?: AuditEvents): Observable<IMulti<Results>> {\n        if (!this.checkEmptySearch(queries)) {\n            return of({results: []});\n        }\n        return this.queryService.getMultipleResults(queries, auditEvents);\n    }\n\n    navigate(options?: SearchService.NavigationOptions, audit?: AuditEvents): Promise<boolean> {\n        if (!options) {\n            options = {};\n        }\n        if (!options.analyzeQueryText && this.results) {\n            options.queryIntents = this.results.queryIntents;\n            options.queryAnalysis = this.results.queryAnalysis;\n        }\n        if (!this.routingActive) {\n            this.handleNavigation(options, audit);\n            return Promise.resolve(true);\n        }\n        else {\n            // Save currentPath and currentSearch\n            let url = Utils.makeURL(this.router.url);\n            const currentPath = url.pathname;\n            url.searchParams.delete(\"$refresh\");\n            const currentSearch = decodeURIComponent(url.search);\n            // Set up queryParams and add current query\n            const queryParams = Utils.copy(this.queryStringParams);\n            if (this._query) {\n                queryParams.query = this._query.toJsonForQueryString();\n            }\n            // Set up history state\n            const state: SearchService.HistoryState = {\n                audit,\n                navigationOptions: options\n            };\n            const extras = {\n                queryParams,\n                state,\n                skipLocationChange: options.skipLocationChange\n            };\n            // Calculate new search\n            let path = options.path;\n            if (!path) {\n                path = currentPath;\n            }\n            url = Utils.makeURL(path);\n            path = url.pathname; // normalized\n            for (const key of Object.keys(queryParams)) {\n                url.searchParams.set(key, queryParams[key]);\n            }\n            const search = decodeURIComponent(url.search);\n            // If path and search are both the same as current then force navigation (without adding to history)\n            if (Utils.eq(currentPath, path) && Utils.eq(currentSearch, search)) {\n                // We want to force the navigation so that the query will be processed\n                extras.queryParams.$refresh = Utils.now.getTime();\n                // But don't update the browser url\n                extras.skipLocationChange = true;\n            }\n            return this.router.navigate([path], extras);\n        }\n    }\n\n    protected getHistoryState(): SearchService.HistoryState {\n        const navigation = this.router.getCurrentNavigation();\n        if (navigation) {\n            return navigation.extras && navigation.extras.state || {};\n        }\n        return window.history.state || {};\n    }\n\n    public isSearchRouteActive(): boolean {\n        const url = Utils.makeURL(this.router.url);\n        return this.isSearchRoute(url.pathname);\n    }\n\n    protected isSearchRoute(pathname: string): boolean {\n        return this.checkSearchRoute(pathname, this.options.routes);\n    }\n\n    protected isSkipSearchRoute(pathname: string): boolean {\n        return this.checkSearchRoute(pathname, this.options.skipSearchRoutes);\n    }\n\n    private checkSearchRoute(pathname: string, routes: string[] | undefined): boolean {\n        if (routes) {\n            for (const route of routes) {\n                if (Utils.endsWith(pathname, Utils.addUrl(\"/\", route))) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    public getQueryFromUrl(): Query | undefined {\n        let query: Query | undefined;\n        const url = Utils.makeURL(this.router.url);\n        if (this.isSearchRoute(url.pathname)) {\n            const jquery = url.searchParams.get(\"query\");\n            if (jquery) {\n                try {\n                    query = this.makeQuery().fromJson(jquery);\n                }\n                catch {}\n            }\n        }\n        return query;\n    }\n\n    protected ensureQueryFromUrl(): Query | undefined {\n        const query = this.getQueryFromUrl();\n        if (!query) {\n            this.clear(false);\n            return undefined;\n        }\n        else {\n            // The url query should be the same as the current query on SearchService unless\n            // it's the initial navigation or if the url is changed manually.\n            // In any case, we always set the query from the url. We only send a new-query\n            // event if the current query is empty so that we don't systematically create a\n            // new query \"session\" (ml-audit)\n            this.setQuery(query, !this._query);\n            return query;\n        }\n    }\n\n    protected handleLogin(): Promise<boolean> {\n        if (!this.loginService.complete) {\n            return Promise.resolve(false);\n        }\n        if (!!this.ensureQueryFromUrl()) {\n            return this.navigate();\n        }\n        else {\n            return Promise.resolve(true);\n        }\n    }\n\n    get routingActive(): boolean {\n        return !this.options.deactivateRouting;\n    }\n\n    set routingActive(value: boolean) {\n        this.options.deactivateRouting = !value;\n    }\n\n    protected makeAuditEventFromCurrentQuery(): AuditEvent | undefined {\n        const lastSelect = this.query.lastSelect();\n        if (lastSelect) {\n            const lastExpr = this.appService.parseExpr(lastSelect.expression);\n            if (lastExpr instanceof Expr) {\n                if (lastExpr.field === \"refine\") {\n                    return this.makeAuditEvent({\n                        type: AuditEventType.Search_Refine,\n                        detail: {\n                            text: lastExpr.value,\n                            itembox: lastSelect.facet,\n                            \"from-result-id\": !!this.results ? this.results.id : null\n                        }\n                    });\n                }\n                else {\n                    return this.makeAuditEvent({\n                        type: AuditEventType.Search_Select_Item,\n                        detail: {\n                            item: lastSelect as any,\n                            itembox: lastSelect.facet,\n                            itemcolumn: lastExpr.field,\n                            isitemexclude: lastExpr.not,\n                            \"from-result-id\": !!this.results ? this.results.id : null\n                        }\n                    });\n                }\n            }\n        }\n        else {\n            if (this.query.basket) {\n                return this.makeAuditEvent({\n                    type: AuditEventType.Basket_Open,\n                    detail: {\n                        basket: this.query.basket\n                    }\n                });\n            }\n            else {\n                return this.makeAuditEvent({\n                    type: AuditEventType.Search_Text,\n                    detail: {\n                        text: this.query.text,\n                        scope: this.query.scope\n                    }\n                });\n            }\n        }\n        return undefined;\n    }\n\n    protected handleNavigation(navigationOptions?: SearchService.NavigationOptions, audit?: AuditEvents): Promise<boolean> {\n        if (!this.loginService.complete) {\n            return Promise.resolve(false);\n        }\n        if (!this.appService.ccquery) {\n            return Promise.resolve(false);\n        }\n        let query = this._query;\n        if (this.routingActive) {\n            query = this.ensureQueryFromUrl();\n        }\n        this._events.next({type: \"update-query\", query});\n        this._queryStream.next(query);\n        if (!query) {\n            return Promise.resolve(true);\n        }\n        if (this.routingActive) {\n            const state = this.getHistoryState();\n            // console.log(\"history.state:\", state);\n            audit = state.audit;\n            navigationOptions = state.navigationOptions;\n        }\n        navigationOptions = navigationOptions || {};\n        const pathName = navigationOptions.path ? navigationOptions.path : Utils.makeURL(this.router.url).pathname;\n        if(navigationOptions.skipSearch || this.isSkipSearchRoute(pathName)) {\n            return Promise.resolve(true);\n        }\n        if (!audit) {\n            audit = this.makeAuditEventFromCurrentQuery();\n            if (audit && audit.type === AuditEventType.Search_Text) {\n                delete navigationOptions.queryIntents;\n                delete navigationOptions.queryAnalysis;\n            }\n        }\n        let observable = this.getResults(this.query, audit,\n            {\n                queryIntents: navigationOptions.queryIntents,\n                queryAnalysis: navigationOptions.queryAnalysis\n            });\n        Utils.subscribe(observable,\n            (results) => {\n                navigationOptions = navigationOptions || {};\n                this._setResults(results, {\n                    resuseBreadcrumbs: navigationOptions.reuseBreadcrumbs,\n                });\n                return results;\n            });\n        if (navigationOptions.selectTab) {\n            const afterSelectTabEvent: SearchService.AfterSelectTabEvent = {\n                type: \"after-select-tab\",\n                observable\n            };\n            this._events.next(afterSelectTabEvent);\n            observable = afterSelectTabEvent.observable;\n        }\n        return observable.pipe(\n            map(() => true),\n            catchError(() => of(false))).toPromise();\n    }\n\n    search(navigationOptions?: SearchService.NavigationOptions, audit?: AuditEvents): Promise<boolean> {\n        delete this.query.page;\n        delete this.query.spellingCorrectionMode;\n        return this.navigate(navigationOptions, audit);\n    }\n\n    searchText(path?: string): Promise<boolean> {\n        // Check for empty search preemptively to avoid clearing the current results in the most\n        // common case of the user entering empty search text in the search box\n        // The lower level check in getResults will handle less obvious cases (url editing etc)\n        if (!this.checkEmptySearch(this.query)) {\n            return Promise.resolve(false);\n        }\n        return this.search(\n            {\n                path,\n                analyzeQueryText: true\n            },\n            this.makeAuditEvent({\n                type: AuditEventType.Search_Text,\n                detail: {\n                    text: this.query.text,\n                    scope: this.query.scope,\n                    language: this.intlService.currentLocale.name\n                }\n            }));\n    }\n\n    searchRefine(text: string): Promise<boolean> {\n        // add \"refine\" name to facet value is mandatory as it's used in preview's query\n        this.query.addSelect(this.exprBuilder.makeRefineExpr(text), \"refine\");\n        return this.search(undefined,\n            this.makeAuditEvent({\n                type: AuditEventType.Search_Refine,\n                detail: {\n                    text: text,\n                    itembox: \"refine\",\n                    \"from-result-id\": !!this.results ? this.results.id : null\n                }\n            }));\n    }\n\n    gotoPage(page: number): Promise<boolean> {\n        this.query.page = page;\n        return this.navigate(undefined, this.makeAuditEvent({\n            type: AuditEventType.Search_GotoPage,\n            detail: {\n                page: page,\n                \"from-result-id\": !!this.results ? this.results.id : null\n            }\n        }));\n    }\n\n    /**\n     * Load more results and append them to previous results\n     */\n    loadMore() {\n        if(!this.fetchingLoadMore) {\n            let page = this.query.page || this.page;\n            page += (page <= this.pageCount) ? 1 : 0;\n            if (page <= this.pageCount) {\n                this.fetchingLoadMore = true;\n                this.query.page = page;\n\n                const auditEvents = this.makeAuditEvent({\n                    type: AuditEventType.Search_GotoPage,\n                    detail: {\n                        page: page,\n                        \"from-result-id\": !!this.results ? this.results.id : null\n                    }\n                })\n\n                this.getResults(this.query, auditEvents)\n                .subscribe(results => {\n                    if(this.results && results) {\n                        this.results.records = [...this.results?.records || [], ...results.records] || [];\n                        this._resultsStream.next(this.results);\n                    }\n                    this.fetchingLoadMore = false;\n                });\n            }\n        }\n    }\n\n    /**\n     * @returns true if more are available otherwise false\n     */\n    hasMore(): boolean {\n        const page = this.query.page || this.page;\n        return (page < this.pageCount);\n    }\n\n    didYouMean(text: string, context: \"search\" | \"refine\", kind: DidYouMeanKind): Promise<boolean> {\n        if (context === \"search\") {\n            this.query.text = text;\n        }\n        else {\n            const refineSelect = this.query.findSelect(\"refine\");\n            if (refineSelect) {\n                refineSelect.expression = \"refine:\" + ExprParser.escape(text);\n            }\n        }\n        this.query.spellingCorrectionMode = \"dymonly\";\n        return this.navigate(undefined, this.makeAuditEvent({\n            type: kind === DidYouMeanKind.Original ? AuditEventType.Search_DidYouMean_Original : AuditEventType.Search_DidYouMean_Correction,\n            detail: {\n                text: text\n            }\n        }));\n    }\n\n    getCurrentRecordIds(): string[]{\n        if (this.results && this.results.records) {\n            return this.results.records.map(record => record.id);\n        }\n        return [];\n    }\n\n    getRecordFromId(id: string): Record | undefined {\n        if (this.results && this.results.records) {\n            return this.results.records.find(record => Utils.eq(record.id, id));\n        }\n        return undefined;\n    }\n\n    addFieldSelect(field: string, items: ValueItem | ValueItem[], options?: SearchService.AddSelectOptions): boolean {\n        if (items && (!Utils.isArray(items) || items.length > 0)) {\n            let expr = this.exprBuilder.makeFieldExpr(field, items, options?.and);\n            if (options?.not) {\n                expr = this.exprBuilder.makeNotExpr(expr);\n            }\n            this.query.addSelect(expr, options?.facetName);\n            return true;\n        }\n        return false;\n    }\n\n\n    get lastRefineText(): string {\n        if (this.breadcrumbs) {\n            const refineExpr = this.breadcrumbs.findSelect(\"refine\");\n            if (refineExpr) {\n                return ExprParser.unescape(refineExpr.toString(false));\n            }\n        }\n        return \"\";\n    }\n\n    get hasRelevance(): boolean {\n        if (!this.breadcrumbs) {\n            return false;\n        }\n        if (this.breadcrumbs.textExpr?.hasRelevance) {\n            return true;\n        }\n        const refineExpr = this.breadcrumbs.findSelect(\"refine\");\n        return refineExpr?.hasRelevance || false;\n    }\n\n    selectTab(arg: string | Tab, options: SearchService.NavigationOptions = {}): Promise<boolean> {\n        options.selectTab = true;\n        const tabName = typeof arg === 'string' ? arg : arg.name;\n        this.query.tab = tabName;\n        delete this.query.queryId; // SBA-154\n        this._events.next({type: \"before-select-tab\", query: this.query});\n        return this.search(options,\n            this.makeAuditEvent({\n                type: AuditEventType.Search_GotoTab,\n                detail: {\n                    tab: tabName,\n                    \"from-result-id\": !!this.results ? this.results.id : null\n                }\n            }));\n    }\n\n    selectScope(scope: string) {\n        this.query.scope = scope;\n    }\n\n    getTab(tabName: string): Tab | undefined {\n        if (this.results && this.results.tabs) {\n            for (const tab of this.results.tabs) {\n                if (Utils.equals(tab.name, tabName)) {\n                    return tab;\n                }\n            }\n        }\n        return undefined;\n    }\n\n    getCurrentTab(): Tab | undefined {\n        if (this.results && this.results.tab) {\n            return this.getTab(this.results.tab);\n        }\n        return undefined;\n    }\n\n    notifyOpenOriginalDocument(record: Record, resultId?: string): void {\n        const results = this.results && this.results.records && this.results.records.includes(record) ? this.results : undefined;\n        this._events.next({ type: \"open-original-document\", record });\n        const querylang = this.results?.queryAnalysis?.queryLanguage\n            || this.query?.questionLanguage\n            || this.appService?.ccquery?.questionLanguage;\n        this.auditService.notifyDocument(\n            AuditEventType.Click_ResultLink,\n            record,\n            results || resultId || \"\",\n            {\n                text: this.query.text,\n                querylang,\n            },\n            {\n                queryhash: results ? results.rfmQueryHash : undefined,\n                querytext: this.query.text,\n                querylang: querylang\n            }\n        );\n    }\n\n    checkBeforeSearch(cancelReasons?: string[]): boolean {\n        const beforeSearch: SearchService.BeforeSearchEvent = {type: \"before-search\"};\n        this._events.next(beforeSearch);\n        if (cancelReasons && beforeSearch.cancelReasons) {\n            cancelReasons.splice(0, 0, ...beforeSearch.cancelReasons);\n        }\n        return !beforeSearch.cancel;\n    }\n}\n\nexport module SearchService {\n    export interface GetResultsOptions {\n        queryIntents?: QueryIntent[];\n        queryAnalysis?: QueryAnalysis;\n        searchInactive?: boolean;   // default \"false\"\n    }\n\n    export interface SetResultsOptions {\n        resuseBreadcrumbs?: boolean;\n        advanced?: boolean;\n    }\n\n    export interface AddSelectOptions {\n        not?: boolean;      // default \"false\"\n        and?: boolean;      // default \"false\"\n        facetName?: string; // default: undefined\n    }\n\n    export interface NavigationOptions {\n        path?: string; // absolute path, current path used if not specified\n        reuseBreadcrumbs?: boolean;\n        selectTab?: boolean;\n        analyzeQueryText?: boolean;\n        queryIntents?: QueryIntent[];\n        queryAnalysis?: QueryAnalysis;\n        skipLocationChange?: boolean;\n        skipSearch?: boolean;\n    }\n\n    export interface HistoryState {\n        audit?: AuditEvents;\n        navigationOptions?: NavigationOptions;\n    }\n\n    export interface Event {\n        type: \"new-query\" | \"update-query\" | \"make-query\" | \"before-new-results\" | \"new-results\" | \"make-query-intent-data\" |\n            \"process-query-intent-action\" | \"make-audit-event\" |\n            \"before-select-tab\" | \"after-select-tab\" | \"clear\" | \"open-original-document\" | \"before-search\";\n    }\n\n    export interface NewQueryEvent extends Event {\n        type: \"new-query\";\n        query: Query | undefined;\n    }\n\n    export interface UpdateQueryEvent extends Event {\n        type: \"update-query\";\n        query: Query | undefined;\n    }\n\n    export interface MakeQueryEvent extends Event {\n        type: \"make-query\";\n        query: Query;\n    }\n\n    export interface BeforeNewResultsEvent extends Event {\n        type: \"before-new-results\";\n        results: Results | undefined;\n    }\n\n    export interface NewResultsEvent extends Event {\n        type: \"new-results\";\n        results: Results | undefined;\n    }\n\n    export interface MakeQueryIntentDataEvent extends Event {\n        type: \"make-query-intent-data\";\n        intentData: QueryIntentData;\n    }\n\n    export interface ProcessQueryIntentActionEvent extends Event {\n        type: \"process-query-intent-action\";\n        action: QueryIntentAction;\n        intent: QueryIntent;\n        analysis: QueryAnalysis;\n        actionProcessed?: boolean;\n    }\n\n    export interface MakeAuditEventEvent extends Event {\n        type: \"make-audit-event\";\n        event: AuditEvent;\n    }\n\n    export interface BeforeSelectTabEvent extends Event {\n        type: \"before-select-tab\";\n        query: Query;\n    }\n\n    export interface AfterSelectTabEvent extends Event {\n        type: \"after-select-tab\";\n        observable: Observable<Results>;\n    }\n\n    export interface ClearEvent extends Event {\n        type: \"clear\";\n        path?: string;\n    }\n\n    export interface OpenOriginalDocument extends Event {\n        type: \"open-original-document\";\n        record: Record;\n    }\n\n    export interface BeforeSearchEvent extends Event {\n        type: \"before-search\";\n        cancel?: boolean;\n        cancelReasons?: string[];\n    }\n\n    export type Events =\n        NewQueryEvent |\n        UpdateQueryEvent |\n        MakeQueryEvent |\n        BeforeNewResultsEvent |\n        NewResultsEvent |\n        MakeQueryIntentDataEvent |\n        ProcessQueryIntentActionEvent |\n        MakeAuditEventEvent |\n        BeforeSelectTabEvent |\n        AfterSelectTabEvent |\n        ClearEvent |\n        OpenOriginalDocument |\n        BeforeSearchEvent;\n\n    export const DefaultPageSize = 20;\n}\n","import {Injectable, InjectionToken, Optional, Inject, OnDestroy} from \"@angular/core\";\nimport {Router} from \"@angular/router\";\nimport {SearchService} from \"./search.service\";\nimport {Subscription, Observable, of} from 'rxjs';\nimport {Utils} from \"@sinequa/core/base\";\nimport {AuditEventType, Results} from \"@sinequa/core/web-services\";\n\nexport interface FirstPageOptions {\n    displayOnHomePage?: boolean;\n}\n\nexport const FIRST_PAGE_OPTIONS = new InjectionToken<FirstPageOptions>(\"FIRST_PAGE_OPTIONS\");\n\n@Injectable({\n    providedIn: \"root\"\n})\nexport class FirstPageService implements OnDestroy {\n    private searchSubscription: Subscription;\n    firstPage: Results;\n\n    constructor(\n        @Optional() @Inject(FIRST_PAGE_OPTIONS) protected options: FirstPageOptions,\n        protected searchService: SearchService,\n        protected router: Router\n    ) {\n        if (!this.options) {\n            this.options = {};\n        }\n        this.searchSubscription = this.searchService.events.subscribe(\n            (event) => {\n                if (event.type === \"clear\") {\n                    if (this.displayOnHomePage(event.path)) {\n                        Utils.subscribe(this.getFirstPage(),\n                            (results) => {\n                                this.searchService.setResults(results);\n                            });\n                    }\n                }\n            }\n        );\n    }\n\n    ngOnDestroy() {\n        this.searchSubscription.unsubscribe();\n    }\n\n    /**\n     * @ignore\n     * legacy\n     */\n    get isFirstPage(): boolean {\n        return this.isCurrentSearchResults;\n    }\n\n    get isCurrentSearchResults(): boolean {\n        return !!this.searchService.results && this.searchService.results === this.firstPage;\n    }\n\n    displayOnHomePage(path?: string): boolean {\n        if (Utils.isArray(this.options.displayOnHomePage)) {\n            if (!path) {\n                const url = Utils.makeURL(this.router.url);\n                path = url.pathname;\n            }\n            for (const path1 of this.options.displayOnHomePage) {\n                if (Utils.endsWith(path, Utils.addUrl(\"/\", path1))) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        else {\n            return !!this.options.displayOnHomePage;\n        }\n    }\n\n    getFirstPage(): Observable<Results> {\n        if (this.firstPage) {\n            return of<Results>(this.firstPage);\n        }\n        const query = this.searchService.makeQuery();\n        query.isFirstPage = true;\n        const observable = this.searchService.getResults(query, {\n            type: AuditEventType.Search_FirstPage\n        }, {\n            searchInactive: true\n        });\n        Utils.subscribe(observable,\n            (results) => {\n                this.firstPage = results;\n                return results;\n            });\n        return observable;\n    }\n}\n","<ol class=\"breadcrumb\">\n    <li class=\"breadcrumb-item\">\n        <a href=\"#\" (click)=\"home()\" title=\"Home\"><span class=\"fas fa-home\"></span></a>\n    </li>\n    <ng-container *ngFor=\"let item of searchService.breadcrumbs?.items\">\n        <li *ngIf=\"!item.hidden\" class=\"breadcrumb-item {{item.active ? 'active' : ''}} sq-breadcrumb-item  sq-breadcrumb-item-{{getField(item)}}\"><!--\n            --><a *ngIf=\"!item.active\" href=\"#\" (click)=\"selectItem(item)\" [innerHTML]=\"item.display | sqExpr:{withFields: displayFieldNames, asHTML: true}\"></a><!--\n            --><span *ngIf=\"item.active\" [innerHTML]=\"item.display | sqExpr:{withFields: displayFieldNames, asHTML: true}\"></span>\n            <span *ngIf=\"allowDeletion\" class=\"fas fa-times\" role=\"button\" (click)=\"removeItem(item)\" title=\"{{'msg#breadcrumbs.itemRemove' | sqMessage}}\"></span>\n        </li>\n    </ng-container>\n</ol>","import {Component, Input} from \"@angular/core\";\nimport {Results} from \"@sinequa/core/web-services\";\nimport {SearchService} from \"../../search.service\";\nimport {BreadcrumbsItem} from \"../../breadcrumbs\";\n\n@Component({\n    selector: \"sq-breadcrumbs\",\n    templateUrl: \"./breadcrumbs.html\",\n    styleUrls: [\"./breadcrumbs.css\"]\n})\nexport class BsBreadcrumbs {\n    @Input() results: Results;\n    @Input() allowDeletion: boolean = true;\n    @Input() displayFieldNames: boolean = true;\n\n    constructor(\n        public searchService: SearchService) {\n    }\n\n    getField(item: BreadcrumbsItem): string {\n        if (item.expr) {\n            if (item.expr.field) {\n                return item.expr.field;\n            }\n            else {\n                if (!item.expr.isStructured) {\n                    return \"text\";\n                }\n                else {\n                    const fields = item.expr.getFields();\n                    return fields.join(\"-\");\n                }\n            }\n        }\n        return \"unknown\";\n    }\n\n    home() {\n        this.searchService.home();\n        return false;\n    }\n\n    selectItem(item: BreadcrumbsItem) {\n        this.searchService.selectBreadcrumbsItem(item);\n        return false;\n    }\n\n    removeItem(item: BreadcrumbsItem) {\n        this.searchService.removeBreadcrumbsItem(item);\n    }\n}","<div *ngIf=\"!!item\" class=\"sq-did-you-mean sq-text {{'sq-' + context}}\" [ngSwitch]=\"results.didYouMean.spellingCorrectionMode\">\n    <ng-container *ngSwitchCase=\"'DYMOnly'\">\n        {{'msg#didYouMean.dymonlyBeforeCorrected' | sqMessage}}<a class=\"sq-did-you-mean-corrected\" href=\"#\" (click)=\"selectCorrected()\">{{item.corrected}}</a>{{'msg#didYouMean.dymonlyAfterCorrected' | sqMessage}}\n    </ng-container>\n    <ng-container *ngSwitchCase=\"'Correct'\">\n        {{'msg#didYouMean.correctBeforeCorrected' | sqMessage}}<a class=\"sq-did-you-mean-corrected\" href=\"#\" (click)=\"selectCorrected()\">{{item.corrected}}</a>{{'msg#didYouMean.correctBeforeOriginal' | sqMessage}}<a class=\"sq-did-you-mean-original\" href=\"#\" (click)=\"selectOriginal()\">{{item.original}}</a>{{'msg#didYouMean.correctAfterOriginal' | sqMessage}}\n    </ng-container>\n    <ng-container *ngSwitchCase=\"'Smart'\">\n        {{'msg#didYouMean.smartBeforeOriginal' | sqMessage}}<a class=\"sq-did-you-mean-original\" href=\"#\" (click)=\"selectOriginal()\">{{item.original}}</a>{{'msg#didYouMean.smartBeforeCorrected' | sqMessage}}<a class=\"sq-did-you-mean-original\" href=\"#\" (click)=\"selectCorrected()\">{{item.corrected}}</a>{{'msg#didYouMean.smartAfterCorrected' | sqMessage}}\n    </ng-container>\n</div>","import {Component, Input, OnChanges, SimpleChanges} from \"@angular/core\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {Results, DidYouMeanItem, DidYouMeanKind} from \"@sinequa/core/web-services\";\nimport {SearchService} from \"../../search.service\";\n\n@Component({\n    selector: \"sq-did-you-mean\",\n    templateUrl: \"./did-you-mean.html\",\n    styleUrls: [\"./did-you-mean.css\"]\n})\nexport class BsDidYouMean implements OnChanges {\n    @Input() results: Results;\n    @Input() context: \"search\" | \"refine\" = \"search\";\n    item: DidYouMeanItem | undefined;\n\n    constructor(\n        public searchService: SearchService) {\n    }\n\n    private handleResults() {\n        this.item = undefined;\n        if (this.results && this.results.didYouMean) {\n            if (this.context === \"search\") {\n                const item = this.results.didYouMean.text;\n                if (item && item.corrected) {\n                    this.item = item;\n                }\n            }\n            else {\n                const refineSelect = this.searchService.query.findSelect(\"refine\");\n                if (refineSelect && Utils.startsWith(refineSelect.expression, \"refine:\") && !!this.results.didYouMean.refine) {\n                    const dymItem = this.results.didYouMean.refine[this.results.didYouMean.refine.length - 1];\n                    if (dymItem.corrected) {\n                        this.item = dymItem;\n                    }\n                }\n            }\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (!!changes[\"results\"]) {\n            this.handleResults();\n        }\n    }\n\n    selectOriginal() {\n        if (this.item) {\n            this.searchService.didYouMean(this.item.original, this.context, DidYouMeanKind.Original);\n        }\n        return false;\n    }\n\n    selectCorrected() {\n        if (this.item) {\n            this.searchService.didYouMean(this.item.corrected, this.context, DidYouMeanKind.Corrected);\n        }\n        return false;\n    }\n}","<div class=\"btn-toolbar\" *ngIf=\"!!results\">\n    <div class=\"btn-group\"\n        [sq-action-buttons]=\"{\n            items: [pageSizingAction],\n            autoAdjust: true,\n            rightAligned: rightAligned\n        }\"></div>\n</div>\n","import {Component, OnChanges, SimpleChanges, Input} from '@angular/core';\nimport {Results} from \"@sinequa/core/web-services\";\nimport {AppService} from \"@sinequa/core/app-utils\";\nimport {Action} from \"@sinequa/components/action\";\nimport {SearchService} from \"../../search.service\";\n//import {ResultsView} from '@sinequa/components/results-view';\n\n// TODO restore functionality of storing page size in user settings ?\n\n/**\n * Component for choosing the page size of the results view\n *\n */\n@Component({\n    selector: 'sq-page-size-selector',\n    templateUrl: './page-size-selector.html'\n})\nexport class BsPageSizeSelector implements OnChanges {\n    @Input() results: Results;\n    //@Input() resultsView: ResultsView;\n    @Input() showInRegularView: boolean = true;\n    @Input() showInCustomization: boolean;\n    @Input() pageSizes: number[];\n    @Input() rightAligned: boolean;\n\n    public pageSizingAction: Action;\n\n    private availableSizes: number[];\n    private currentPageSize: number;\n\n    constructor(\n        private appService: AppService,\n        private searchService: SearchService\n    ) { }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        this.refreshVisualisation();\n    }\n\n    /*\n    private get globalPageSize(): number {\n        const globalQueryParams = this.userSettingsService.getUserSettings().queryParams;\n        return globalQueryParams ? globalQueryParams.pageSize : undefined;\n    }\n    */\n\n    private get configPageSize(): number {\n        return this.appService.ccquery ? this.appService.ccquery.pageSize : 0;\n    }\n\n    private get defaultPageSize(): number {\n        //let res = this.globalPageSize;\n        //if (!res) {\n        let res = this.configPageSize;\n        if (!res) {\n            res = SearchService.DefaultPageSize;\n        }\n        //}\n\n        return res;\n    }\n\n    private buildPageSizingAction(): Action {\n        this.availableSizes = this.pageSizes ? this.pageSizes.slice(0) : [];\n        this.availableSizes.sort((a, b) => a - b);\n        const children: Action[] = [];\n\n        children.push(new Action({\n            text: 'msg#pageSizeSelector.defaultPageSize',\n            messageParams: { values: { size: this.defaultPageSize } },\n            data: undefined, // To make sure that setCurrentSize() always chooses the default choice text.\n            action: (item: Action, event: Event) => {\n                this.updatePageSize(item.data);\n            }\n        }));\n\n        for (const size of this.availableSizes) {\n            children.push(new Action({\n                text: size.toString(),\n                data: size,\n                action: (item: Action, event: Event) => {\n                    this.updatePageSize(item.data);\n                }\n            }));\n        }\n\n        return new Action({\n            icon: 'fas fa-arrows-alt-v',\n            text: 'msg#pageSizeSelector.pageSizeChoice',\n            children: children\n        });\n    }\n\n    private refreshVisualisation(): void {\n        this.pageSizingAction = this.buildPageSizingAction();\n        if (this.results) {\n            //const queryParams = this.userSettingsService.getViewQueryParams(this.resultsView.name);\n            //this.currentPageSize = queryParams.pageSize;\n            this.setCurrentSize(this.currentPageSize);\n        }\n    }\n\n    private setCurrentSize(size: number): void {\n        if (!size) {\n            this.pageSizingAction.text = 'msg#pageSizeSelector.defaultPageSizeChoice';\n            this.pageSizingAction.messageParams = { values: { size: this.defaultPageSize } };\n        }\n        else {\n            const selectedAction = this.pageSizingAction.children?.find(action => action.data === size);\n            this.pageSizingAction.text = 'msg#pageSizeSelector.pageSizeChoice';\n            this.pageSizingAction.messageParams = { values: { size: selectedAction?.data } };\n        }\n    }\n\n    private updatePageSize(size: number): void {\n        if (this.currentPageSize !== size) {\n            //this.userSettingsService.saveResultsViewPageSize(this.resultsView.name, size);\n            this.currentPageSize = size;\n\n            this.searchService.query.pageSize = size;\n            this.searchService.search();\n        }\n\n        this.setCurrentSize(size);\n    }\n}\n","import {Component, Input, OnChanges, SimpleChanges} from \"@angular/core\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {Results} from \"@sinequa/core/web-services\";\nimport {SearchService} from \"../../search.service\";\n\n@Component({\n    selector: \"sq-pager\",\n    templateUrl: \"./pager.html\",\n})\nexport class BsPager implements OnChanges {\n    @Input() results: Results;\n    @Input() showNavigation: boolean = true;\n    @Input() showFirstLast: boolean = true;\n    @Input() showPages: boolean = true;\n    @Input() endPages: number = 1;\n    @Input() pages: number = 5;\n\n    items: BsPager.Item[] | undefined;\n\n    private currentPage: number;\n    pageCount: number = 0;\n\n    static FIRST_PAGE = \"«\";\n    static PREVIOUS_PAGE = \"‹\";\n    static NEXT_PAGE = \"›\";\n    static LAST_PAGE = \"»\";\n    static ELLIPSIS = \"…\";\n\n    constructor(\n        private searchService: SearchService) {\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes[\"results\"]) {\n            this.makeItems();\n        }\n    }\n\n    makeItems() {\n        this.pageCount = this.searchService.pageCount;\n        this.currentPage = this.searchService.page;\n        if (this.pageCount === 0) {\n            this.items = undefined;\n            return;\n        }\n        let endPages = this.endPages;\n        if (!endPages || endPages <= 0) {\n            endPages = 1;\n        }\n\n        const endWidth = endPages + 1; // +1 for the …\n\n        let pages = this.pages;\n        if (!pages) {\n            pages = 3 + endWidth * 2;\n        }\n        if (pages < 3 + endWidth * 2) {\n            pages = 3 + endWidth * 2; // 3 is the minimum number of pages to show between the … separators\n        }\n        let split1 = -1, split2 = -1;\n        if (this.pageCount <= pages) {\n            pages = this.pageCount;\n        }\n        else {\n            // pages must be an odd number to accommodate:  (First page) … (Current page - 1) (Current page) (Current page + 1) … (Last page)\n            pages = Math.floor(pages / 2) * 2 + 1;\n            const mid = pages - endWidth * 2;\n            const delta = Math.floor(mid / 2);\n            if ((this.currentPage - delta) > endPages + 1 + 1) {\n                split1 = this.currentPage - delta;\n            }\n            if ((this.currentPage + delta) < (this.pageCount - endWidth)) {\n                split2 = this.currentPage + delta;\n            }\n            if (split1 === -1 && split2 !== -1) {\n                split2 += endPages + 1 + 1 - (this.currentPage - delta);\n            }\n            else if (split2 === -1 && split1 !== -1)  {\n                split1 -= (this.currentPage + delta) - (this.pageCount - endWidth);\n            }\n        }\n        this.items = [];\n        if (this.showNavigation) {\n            if (this.showFirstLast) {\n                this.items.push(new BsPager.Item(1, this.currentPage, BsPager.FIRST_PAGE, \"msg#pager.firstPage\"));\n            }\n            this.items.push(new BsPager.Item(this.currentPage > 1 ? this.currentPage - 1 : 1, this.currentPage, BsPager.PREVIOUS_PAGE, \"msg#pager.previousPage\"));\n        }\n        if (this.showPages) {\n            for (let i = 1, ic = split1 !== -1 ? endPages : split2 !== -1 ? split2 : this.pageCount; i <= ic; i++) {\n                this.items.push(new BsPager.Item(i, this.currentPage));\n            }\n            if (split1 !== -1) {\n                this.items.push(new BsPager.Item(0, this.currentPage, BsPager.ELLIPSIS));\n                for (let i = split1, ic = split2 !== -1 ? split2 : this.pageCount; i <= ic; i++) {\n                    this.items.push(new BsPager.Item(i, this.currentPage));\n                }\n            }\n            if (split2 !== -1) {\n                this.items.push(new BsPager.Item(0, this.currentPage, BsPager.ELLIPSIS));\n                for (let i = this.pageCount - endPages + 1, ic = this.pageCount; i <= ic; i++) {\n                    this.items.push(new BsPager.Item(i, this.currentPage));\n                }\n            }\n        }\n        if (this.showNavigation) {\n            this.items.push(new BsPager.Item(this.currentPage < this.pageCount ? this.currentPage + 1 : this.pageCount, this.currentPage, BsPager.NEXT_PAGE, \"msg#pager.nextPage\"));\n            if (this.showFirstLast) {\n                this.items.push(new BsPager.Item(this.pageCount, this.currentPage, BsPager.LAST_PAGE, \"msg#pager.lastPage\"));\n            }\n        }\n    }\n\n    gotoPage(page: number) {\n        if (page !== this.currentPage && page > 0) {\n            this.searchService.gotoPage(page);\n        }\n    }\n}\n\nexport namespace BsPager {\n    export class Item {\n        constructor(\n            public page: number,\n            public currentPage: number,\n            public display?: string | number,\n            public title?: string) {\n            if (display) {\n                this.display = display;\n            }\n            else {\n                this.display = page;\n            }\n            if (Utils.isUndefined(title) && page) {\n                this.title = \"msg#pager.pageNumberTitle\";\n            }\n        }\n\n        get active(): boolean {\n            return this.isPage && (this.currentPage === this.page);\n        }\n\n        get disabled(): boolean {\n            return this.isEllipsis || ((this.currentPage === this.page) && this.isNavigation);\n        }\n\n        get isNavigation(): boolean {\n            return this.display === BsPager.FIRST_PAGE ||\n                this.display === BsPager.PREVIOUS_PAGE ||\n                this.display === BsPager.NEXT_PAGE ||\n                this.display === BsPager.LAST_PAGE;\n        }\n\n        get isPage(): boolean {\n            return !!this.page && !this.isNavigation;\n        }\n\n        get isEllipsis(): boolean {\n            return this.display === BsPager.ELLIPSIS;\n        }\n    }\n}","<ul class=\"pagination my-0\" *ngIf=\"pageCount > 1\">\n    <li *ngFor=\"let item of items\" \n        title=\"{{item.title | sqMessage:{values: {page: item.page} } }}\" \n        class=\"page-item\" \n        [ngClass]=\"{'active': item.active, 'disabled': item.disabled, 'sq-navigation': item.isNavigation, 'sq-page': item.isPage, 'sq-ellipsis': item.isEllipsis}\" \n        (click)=\"gotoPage(item.page)\">\n        <a href=\"javascript:void(0)\" class=\"page-link\"> \n            <span>{{item.display | sqNumber}}</span>\n        </a>            \n    </li>\n</ul>","import {Component, Input, OnChanges, SimpleChanges} from \"@angular/core\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {AppService} from \"@sinequa/core/app-utils\";\nimport {AuditEvent, AuditEventType, CCSortingChoice, Results} from \"@sinequa/core/web-services\";\nimport {Action} from \"@sinequa/components/action\";\nimport {SearchService} from \"../../search.service\";\n\n@Component({\n    selector: \"sq-sort-selector\",\n    templateUrl: \"./sort-selector.html\"\n})\nexport class BsSortSelector implements OnChanges {\n    @Input() results: Results;  // Needed to detect Changes\n    @Input() rightAligned: boolean;\n    @Input() style: string;\n    @Input() size: string;\n    sortAction: Action | undefined;\n\n    constructor(\n        public appService: AppService,\n        public searchService: SearchService) {\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes[\"results\"]) {\n            this.buildSortAction();\n        }\n    }\n\n    private setCurrentSort(name: string) {\n        if (this.sortAction) {\n            const sortingChoices = this.getSortingChoices();\n            const current = sortingChoices && sortingChoices.find((value) => {\n                return Utils.eqNC(value.name, name);\n            });\n            if (current) {\n                const queryOrderBy = this.searchService.query.orderBy;\n                this.sortAction.text = !!queryOrderBy ? \"msg#sortSelector.sortOther\" : current.display || current.name;\n                this.sortAction.icon = !!queryOrderBy ? 'fas fa-sort'\n                    : this.isAscendingSort(current.orderByClause) ? 'fas fa-sort-amount-up'\n                    : this.isDescendingSort(current.orderByClause) ? 'fas fa-sort-amount-down' : 'fas fa-sort';\n            }\n            else {\n                this.sortAction.text = \"msg#sortSelector.sortOther\";\n                this.sortAction.icon = \"fas fa-sort\";\n            }\n            this.sortAction.messageParams = {values: {text: this.sortAction.text}}; // for title\n        }\n    }\n\n    private selectSort(sortingChoice: CCSortingChoice) {\n        this.setCurrentSort(sortingChoice.name);\n        this.searchService.query.sort = sortingChoice.name;\n        const audit: AuditEvent = {\n            type: AuditEventType.Search_Sort,\n            detail: {\n                sort: sortingChoice.name,\n                orderByClause: sortingChoice.orderByClause,\n            }\n        };\n        this.searchService.search(undefined, audit);\n    }\n\n    private buildSortAction() {\n        const sortingChoices = this.getSortingChoices();\n        if (!sortingChoices || sortingChoices.length === 0) {\n            this.sortAction = undefined;\n            return;\n        }\n        this.sortAction = new Action({\n            title: \"msg#sortSelector.sortByTitle\",\n            children: sortingChoices\n                .filter(sortingChoice => this.searchService.hasRelevance || !Utils.includes(sortingChoice.orderByClause, \"globalrelevance\"))\n                .map(sortingChoice => new Action({\n                    icon: this.isAscendingSort(sortingChoice.orderByClause) ? 'fas fa-sort-amount-up'\n                            : this.isDescendingSort(sortingChoice.orderByClause) ? 'fas fa-sort-amount-down' : '',\n                    text: sortingChoice.display || sortingChoice.name,\n                    data: sortingChoice,\n                    action: (item: Action, event: Event) => {\n                        this.selectSort(item.data);\n                    }\n                }))\n        });\n        if (!!this.searchService.results) {\n            this.setCurrentSort(this.searchService.results.sort);\n        }\n    }\n\n    private isAscendingSort(orderByClause: string): boolean {\n        if (!orderByClause) {\n            return false;\n        }\n\n        const lastElement: string = orderByClause.substring(orderByClause.lastIndexOf(' ') + 1);\n        return Utils.eqNC('asc', lastElement);\n    }\n\n    private isDescendingSort(orderByClause: string): boolean {\n        if (!orderByClause) {\n            return false;\n        }\n\n        const lastElement: string = orderByClause.substring(orderByClause.lastIndexOf(' ') + 1);\n        return Utils.eqNC('desc', lastElement);\n    }\n\n    private isTabSearch(): boolean {\n        const query = this.appService.ccquery;\n        if (!query)\n            return false;\n        const tabSearch = query.tabSearch;\n        return !(!tabSearch || !tabSearch.column || !tabSearch.isActive ||\n            !tabSearch.tabs || tabSearch.tabs.length === 0);\n    }\n\n    private getSortingChoices(): CCSortingChoice[] | null | undefined {\n        if (this.isTabSearch()) {\n            const tabName = this.searchService.results && this.searchService.results.tab;\n            if (tabName && this.appService.ccquery) {\n                for (const t of this.appService.ccquery.tabSearch.tabs) {\n                    if (t.name === tabName) {\n                        const s = t.sortingChoices;\n                        if (s && s.length > 0)\n                            return s;\n                        else\n                            break;\n                    }\n                }\n            }\n        }\n        const q = this.appService.ccquery;\n        return q && q.sortingChoices;\n    }\n}","<div class=\"btn-toolbar\" role=\"toolbar\" aria-label=\"Toolbar\">\n    <div class=\"btn-group\" [hidden]=\"!searchService.haveRecords || !sortAction\" [sq-action-buttons]=\"{items: [sortAction], style: style, autoAdjust: true, rightAligned: rightAligned, size: size}\"></div>\n</div>","<ul *ngIf=\"!!searchtabs || !!customtabs\" class=\"nav nav-tabs mb-1\">\n    <ng-container *ngIf=\"!!searchtabs\">\n        <li *ngFor=\"let tab of searchtabs\" class=\"nav-item\">\n            <a href=\"#\" class=\"nav-link\" [ngClass]=\"{'active' : tab == currentTab, 'disabled': tab.count == 0}\" (click)=\"selectTab(tab)\">\n                <i [ngClass]=\"iconMap[tab.name]\"></i>\n                {{(tab.display || tab.name) | sqMessage}} \n                <span class=\"count\">({{tab.count | sqNumber}})</span>\n            </a>\n        </li>\n    </ng-container>\n    <ng-container *ngIf=\"!!customtabs\">\n        <li *ngFor=\"let tab of customtabs\" class=\"nav-item\">\n            <a href=\"#\" class=\"nav-link\" [ngClass]=\"{'active' : tab == currentTab, 'disabled': tab.count == 0}\" (click)=\"selectTab(tab, false)\">\n                <i [ngClass]=\"iconMap[tab.name]\"></i>\n                {{(tab.display || tab.name) | sqMessage}}\n                <span class=\"count\" *ngIf=\"tab.count >= 0\">({{tab.count | sqNumber}})</span>\n            </a>\n        </li>\n    </ng-container>\n</ul>","import {Component, Input, Output, OnChanges, SimpleChanges, EventEmitter} from \"@angular/core\";\nimport {Results, Tab} from \"@sinequa/core/web-services\";\nimport {SearchService} from \"../../search.service\";\n\n@Component({\n    selector: \"sq-tabs\",\n    templateUrl: \"./tabs.html\"\n})\nexport class BsTabs implements OnChanges {\n\n    @Input() results: Results;\n\n    /**\n     * List of custom tabs (complementing the search query tabs)\n     * Actions can be performed on click via the events Output.\n     *\n     * When the results are updated (new search text, facet\n     * selection...), the custom tab selection is discarded.\n     * If the custom action updates the results, the tab selection\n     * will revert to previous state unless the query is updated.\n     */\n    @Input() customtabs: Tab[];\n\n    /**\n     * Associate icon to a tab name ({tab1 : 'icon class 1', tab2 : ...})\n     */\n    @Input() iconMap: {[key: string]: string} = {};\n\n    /**\n     * Emits an event when a tab is selected\n     */\n    @Output() events = new EventEmitter<Tab>();\n\n    currentTab: Tab | undefined;\n    searchtabs: Tab[] | undefined;\n\n    constructor(\n        private searchService: SearchService) {\n    }\n\n    update() {\n        if (this.results && this.results.tabs) {\n            this.currentTab = this.searchService.getCurrentTab();\n            this.searchtabs = this.results.tabs;\n        }\n        else {\n            this.currentTab = undefined;\n            this.searchtabs = undefined;\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (!!changes[\"results\"]) {\n            this.update();\n        }\n    }\n\n    selectTab(tab: Tab, search = true) {\n        if (tab !== this.currentTab) {\n            if(search){\n                this.searchService.selectTab(tab); // the currentTab will be updated in update()\n            } else {\n                this.currentTab = tab;\n            }\n            this.events.next(tab);\n        }\n        return false;   // Stop following href\n    }\n}","import {Component, Input} from '@angular/core';\nimport {SearchService} from \"../../search.service\";\n\n// From https://stackoverflow.com/questions/34773266/how-to-write-css-keyframes-to-indeterminate-material-design-progress-bar\n\n@Component({\n    selector: 'sq-loading-bar',\n    template: `\n<div class=\"slider\" *ngIf=\"isActive()\">\n\t<div class=\"line\"></div>\n  <div class=\"subline inc\"></div>\n  <div class=\"subline dec\"></div>\n</div>\n    `,\n    styles: [`\n\n.slider{\n  position:absolute;\n  width:100%;\n  height:3px;\n  overflow: hidden;\n  z-index: 3;\n}\n\n.line{\n  position:absolute;\n  opacity: 0.4;\n  background:#4a8df8;\n  width:150%;\n  height:5px;\n}\n\n.subline{\n  position:absolute;\n  background:#4a8df8;\n  height:5px;\n}\n.inc{\nanimation: increase 1s infinite;\n}\n.dec{\nanimation: decrease 1s 0.25s infinite;\n}\n\n@keyframes increase {\n from { left: -5%; width: 5%; }\n to { left: 130%; width: 100%;}\n}\n@keyframes decrease {\n from { left: -80%; width: 80%; }\n to { left: 110%; width: 10%;}\n}\n    `]\n})\nexport class BsLoadingBar {\n  /**\n   * active can provided as a boolean to activate the loading bar.\n   * If it is not provided, the SearchService searchActive property is used.\n   */\n  @Input() active?: boolean;\n\n  constructor(\n    public searchService: SearchService\n  ) { }\n\n  isActive() {\n    return this.active === undefined ? this.searchService.searchActive : this.active;\n  }\n}\n","  import {Component, ElementRef, ViewChild, Input, OnDestroy, AfterViewInit} from '@angular/core';\r\n  import {SearchService} from '../../search.service';\r\n\r\n  @Component({\r\n    selector: 'sq-scroller',\r\n    template: `<div #anchor style=\"height:5px\"></div>`\r\n  })\r\n  export class BsScroller implements AfterViewInit, OnDestroy {\r\n  @Input() options = {};\r\n  @ViewChild('anchor') anchor: ElementRef<HTMLElement>;\r\n\r\n  private observer: IntersectionObserver;\r\n\r\n  constructor(private searchService: SearchService) {}\r\n\r\n  ngAfterViewInit() {\r\n    const options = {\r\n      root: null,\r\n      ...this.options\r\n    };\r\n\r\n    this.observer = new IntersectionObserver(([entry]) => {\r\n      if(entry.isIntersecting) {\r\n        this.searchService.loadMore();\r\n      }\r\n    }, options);\r\n\r\n    this.observer.observe(this.anchor.nativeElement);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.observer.disconnect();\r\n  }\r\n\r\n}","<div *ngIf=\"hasMore\" class=\"btn-group\" [sq-action-buttons]=\"{items: [loadMoreAction], style: buttonsStyle, size: actionsSize, rightAligned: false}\"></div>\r\n","import {Component, Input, OnDestroy, OnInit} from '@angular/core';\r\nimport {Action, IAction} from '@sinequa/components/action';\r\nimport {Subscription} from 'rxjs';\r\n\r\nimport {SearchService} from '../../search.service';\r\n\r\n@Component({\r\n  selector: \"sq-load-more\",\r\n  templateUrl: \"./load-more.html\"\r\n})\r\nexport class BsLoadMore implements OnInit, OnDestroy {\r\n  @Input() buttonsStyle = \"outline-primary\";\r\n  @Input() actionsSize = \"sm\"\r\n\r\n  private subscription: Subscription = new Subscription();\r\n  loadMoreAction: IAction;\r\n  hasMore = false;\r\n\r\n  constructor(private searchService: SearchService) {\r\n    this.loadMoreAction = new Action({\r\n      text: \"msg#facet.loadMore\",\r\n      title: \"msg#facet.loadMore\",\r\n      action: (action) => {\r\n        this.searchService.loadMore();\r\n        action.update();\r\n      },\r\n      updater:() => {\r\n        // hide button while fetching new data\r\n        this.hasMore = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.subscription = this.searchService.resultsStream\r\n      .subscribe(results => {\r\n        this.hasMore = this.searchService.hasMore();\r\n      });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n}","import {NgModule, ModuleWithProviders} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\n\nimport {WebServicesModule} from \"@sinequa/core/web-services\";\nimport {IntlModule} from \"@sinequa/core/intl\";\nimport {LoginModule} from \"@sinequa/core/login\";\nimport {UtilsModule} from \"@sinequa/components/utils\";\nimport {BsActionModule} from \"@sinequa/components/action\";\nimport {SearchOptions, SEARCH_OPTIONS} from \"../search.service\";\n\nimport {BsDidYouMean} from \"./did-you-mean/did-you-mean\";\nimport {BsBreadcrumbs} from \"./breadcrumbs/breadcrumbs\";\nimport {BsPager} from \"./pager/pager\";\nimport {BsPageSizeSelector} from \"./page-size-selector/page-size-selector\";\nimport {BsSortSelector} from \"./sort-selector/sort-selector\";\nimport {BsTabs} from \"./tabs/tabs\";\nimport {BsLoadingBar} from \"./loading-bar/loading-bar\";\nimport {BsScroller} from \"./scroller/scroller\"\nimport {BsLoadMore} from './load-more/load-more';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule, ReactiveFormsModule,\n\n        WebServicesModule,\n        IntlModule,\n        LoginModule,\n\n        UtilsModule,\n        BsActionModule\n    ],\n    declarations: [\n        BsDidYouMean,\n        BsBreadcrumbs, BsPager, BsPageSizeSelector, BsSortSelector,\n        BsTabs, BsLoadingBar,\n        BsScroller, BsLoadMore\n    ],\n    exports: [\n        BsDidYouMean,\n        BsBreadcrumbs, BsPager, BsPageSizeSelector, BsSortSelector,\n        BsTabs, BsLoadingBar,\n        BsScroller, BsLoadMore\n    ],\n})\nexport class BsSearchModule {\n    static forRoot(searchOptions: SearchOptions) : ModuleWithProviders<BsSearchModule> {\n        return {\n            ngModule: BsSearchModule,\n            providers: [\n                // Provide SEARCH_OPTIONS\n                {provide: SEARCH_OPTIONS, useValue: searchOptions},\n            ]\n        };\n    }\n}\n","export default {\n    \"search\": {\n        \"emptySearchNotification\": \"Bitte geben Sie einige Suchbegriffe ein, um eine Suche durchzuführen\",\n        \"alreadyFiltered\": \"bereits ausgewählt\"\n    },\n\n    \"breadcrumbs\": {\n        \"emptySearch\": \"<Suche ohne Suchbegriff>\",\n        \"itemRemove\": \"Entfernen\"\n    },\n\n    \"didYouMean\": {\n        \"dymonlyBeforeCorrected\": \"Meinten Sie: \",\n        \"dymonlyAfterCorrected\": \"?\",\n        \"correctBeforeCorrected\": \"Zeige Ergebnisse für [\",\n        \"correctBeforeOriginal\": \"]. Zeige stattdessen Ergebnisse für [\",\n        \"correctAfterOriginal\": \"]\",\n        \"smartBeforeOriginal\": \"Zeige Ergebnisse für [\",\n        \"smartBeforeCorrected\": \"] und [\",\n        \"smartAfterCorrected\": \"]\"\n    },\n\n    \"pageSizeSelector\": {\n        \"pageSizeChoice\": \"{size, number} pro Seite\",\n        \"defaultPageSize\": \"Standard ({size, number})\",\n        \"defaultPageSizeChoice\": \"{size, number} pro Seite (standard)\"\n    },\n\n    \"pager\": {\n        \"pageNumberTitle\": \"Seite {page, number}\",\n        \"firstPage\": \"Erste Seite\",\n        \"nextPage\": \"Nächste Seite\",\n        \"previousPage\": \"Vorherige Seite\",\n        \"lastPage\": \"Letzte Seite\"\n    },\n\n    \"sortSelector\": {\n        \"sortByTitle\": \"Sortieren nach: {text}\",\n        \"sortOther\": \"<Andere>\"\n    },\n\n    \"sort\": {\n        \"relevance\": \"Relevanz\",\n        \"date\": \"Datum\",\n        \"filename\": \"Dateiname\",\n        \"title\": \"Titel\"\n    },\n\n    \"queryIntent\": {\n        \"externalServiceTimeoutError\": \"Diese Ergebnisseite ist aufgrund eines internen Zeitlimits unvollständig. Bitte versuchen Sie es später noch einmal.\"\n    }\n};\n","export default {\n    \"search\": {\n        \"emptySearchNotification\": \"Please enter some search terms to perform a search\",\n        \"alreadyFiltered\": \"Already selected\"\n    },\n\n    \"breadcrumbs\": {\n        \"emptySearch\": \"<empty search>\",\n        \"itemRemove\": \"Remove\"\n    },\n\n    \"didYouMean\": {\n        \"dymonlyBeforeCorrected\": \"Did you mean: \",\n        \"dymonlyAfterCorrected\": \"?\",\n        \"correctBeforeCorrected\": \"Showing results for: \",\n        \"correctBeforeOriginal\": \". Search instead for: \",\n        \"correctAfterOriginal\": \"\",\n        \"smartBeforeOriginal\": \"Showing results for: \",\n        \"smartBeforeCorrected\": \" and \",\n        \"smartAfterCorrected\": \"\"\n    },\n\n    \"pageSizeSelector\": {\n        \"pageSizeChoice\": \"{size, number} per page\",\n        \"defaultPageSize\": \"Default ({size, number})\",\n        \"defaultPageSizeChoice\": \"{size, number} per page (default)\"\n    },\n\n    \"pager\": {\n        \"pageNumberTitle\": \"Page {page, number}\",\n        \"firstPage\": \"First page\",\n        \"nextPage\": \"Next page\",\n        \"previousPage\": \"Previous page\",\n        \"lastPage\": \"Last page\"\n    },\n\n    \"sortSelector\": {\n        \"sortByTitle\": \"Sort by: {text}\",\n        \"sortOther\": \"<Other>\"\n    },\n\n    \"sort\": {\n        \"relevance\": \"Relevance\",\n        \"date\": \"Date\",\n        \"filename\": \"File name\",\n        \"title\": \"Title\"\n    },\n\n    \"queryIntent\": {\n        \"externalServiceTimeoutError\": \"This result page is incomplete due to an internal timeout. Please retry later.\"\n    }\n};\n","export default {\n    \"search\": {\n        \"emptySearchNotification\": \"Veuillez saisir des termes de recherche pour effectuer une recherche\",\n        \"alreadySelected\": \"Déjà sélectionné\"\n    },\n\n    \"breadcrumbs\": {\n        \"emptySearch\": \"<recherche vide>\",\n        \"itemRemove\": \"Supprimer\"\n    },\n\n    \"didYouMean\": {\n        \"dymonlyBeforeCorrected\": \"Essayez avec cette orthographe : \",\n        \"dymonlyAfterCorrected\": \"\",\n        \"correctBeforeCorrected\": \"Résultats pour : \",\n        \"correctBeforeOriginal\": \". Essayez avec l'orthographe : \",\n        \"correctAfterOriginal\": \"\",\n        \"smartBeforeOriginal\": \"Résultats pour : \",\n        \"smartBeforeCorrected\": \" et \",\n        \"smartAfterCorrected\": \"\"\n    },\n\n    \"pageSizeSelector\": {\n        \"pageSizeChoice\": \"{size, number} par page\",\n        \"defaultPageSize\": \"Défaut ({size, number})\",\n        \"defaultPageSizeChoice\": \"{size, number} par page (défaut)\"\n    },\n\n    \"pager\": {\n        \"pageNumberTitle\": \"Page {page, number}\",\n        \"firstPage\": \"Première page\",\n        \"nextPage\": \"Page suivante\",\n        \"previousPage\": \"Page précédente\",\n        \"lastPage\": \"Dernière page\"\n    },\n\n    \"sortSelector\": {\n        \"sortByTitle\": \"Trier par: {text}\",\n        \"sortOther\": \"<Autre>\"\n    },\n\n    \"sort\": {\n        \"relevance\": \"Pertinence\",\n        \"date\": \"Date\",\n        \"filename\": \"Nom de fichier\",\n        \"title\": \"Titre\"\n    },\n\n    \"queryIntent\": {\n        \"externalServiceTimeoutError\": \"Cette page de résultat est incomplète due à un délai d'attente interne dépassé. S'il vous plaît, réessayez plus tard.\"\n    }\n};\n"]}