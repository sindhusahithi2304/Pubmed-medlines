{"version":3,"sources":["../../../projects/components/theme-toggle/theme-toggle.component.html","../../../projects/components/theme-toggle/theme-toggle.component.ts","../../projects/components/theme-toggle/messages/en.ts","../../../projects/components/theme-toggle/theme-toggle.module.ts","../../projects/components/theme-toggle/messages/de.ts","../../projects/components/theme-toggle/messages/fr.ts"],"names":["i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵadvance","i0.ɵɵtextInterpolate","BsThemeToggleComponent","this","showLabel","labels","tooltips","label","theme","prototype","ngOnInit","localStorage","getItem","tooltip","isDark","toggleTheme","index","setItem","document","body","classList","toggle","selectors","inputs","decls","vars","consts","template","rf","ctx","i0.ɵɵtemplate","i0.ɵɵlistener","i0.ɵɵelement","i0.ɵɵproperty","i0.ɵɵpropertyInterpolate","BsThemeToggleModule","providers","imports","CommonModule","UtilsModule","IntlModule","declarations","exports","darkMode","darkModeTitle","lightMode","lightModeTitle"],"mappings":"qqBACEA,EAAAA,eAAAA,EAAAA,OAAuBC,EAAAA,OAAAA,2BAAuBC,EAAAA,6CAAvBC,EAAAA,UAAAA,GAAAC,EAAAA,kBAAAA,EAAAA,YAAAA,EAAAA,EAAAA,EAAAA,wGCgBvB,SAAAC,IATSC,KAAAC,WAAY,EAErBD,KAAAE,OAAS,CAAC,sBAAuB,sBACjCF,KAAAG,SAAW,CAAC,0BAA2B,4BACvCH,KAAAI,MAAgB,GAGhBJ,KAAAK,MAAgB,gBAIhBN,EAAAO,UAAAC,SAAA,WACEP,KAAKK,MAAQG,aAAaC,QAAQ,kBAAoB,SACtDT,KAAKI,MAAuB,WAAfJ,KAAKK,MAAqBL,KAAKE,OAAO,GAAKF,KAAKE,OAAO,GACpEF,KAAKU,QAAyB,WAAfV,KAAKK,MAAqBL,KAAKG,SAAS,GAAKH,KAAKG,SAAS,IAM5EJ,EAAAO,UAAAK,OAAA,WACE,MAAsB,SAAfX,KAAKK,OAGdN,EAAAO,UAAAM,YAAA,WACE,IAAIC,EAAQ,EAYZ,MAXmB,WAAfb,KAAKK,OACPL,KAAKK,MAAQ,OACbQ,EAAQ,GAERb,KAAKK,MAAQ,SAEfL,KAAKI,MAAQJ,KAAKE,OAAOW,GACzBb,KAAKU,QAAUV,KAAKG,SAASU,GAE7BL,aAAaM,QAAQ,gBAAiBd,KAAKK,OAC3CU,SAASC,KAAKC,UAAUC,OAAO,SACxB,yCAtCEnB,qCAAAA,EAAsBoB,UAAA,CAAA,CAAA,oBAAAC,OAAA,CAAAnB,UAAA,aAAAoB,MAAA,EAAAC,KAAA,GAAAC,OAAA,CAAA,CAAA,EAAA,SAAA,sBAAA,CAAA,EAAA,QAAA,CAAA,EAAA,OAAA,EAAA,UAAA,YAAA,SAAA,CAAA,EAAA,eAAA,EAAA,YAAAC,SAAA,SAAAC,EAAAC,SDPnChC,EAAAA,eAAAA,EAAAA,MAAAA,GACEiC,EAAAA,WAAAA,EAAAA,EAAAA,EAAAA,EAAAA,MAAAA,GACAjC,EAAAA,eAAAA,EAAAA,MAAAA,GAA8DkC,EAAAA,WAAAA,SAAAA,WAAAA,OAASF,EAAAd,yCACrEiB,EAAAA,UAAAA,EAAAA,MAAAA,GACFjC,EAAAA,eACFA,EAAAA,sBAJQC,EAAAA,UAAAA,GAAAiC,EAAAA,WAAAA,OAAAA,EAAAA,WACgFjC,EAAAA,UAAAA,GAAAkC,EAAAA,sBAAAA,YAAAA,EAAAA,YAAAA,EAAAA,EAAAA,EAAAA,UAApED,EAAAA,WAAAA,UAAAA,EAAAA,gBAAAA,EAAAA,EAAAA,QAAAA,EAAAA,QACUjC,EAAAA,UAAAA,GAAAiC,EAAAA,WAAAA,UAAAA,EAAAA,gBAAAA,EAAAA,EAAAA,QAAAA,EAAAA,+mBEH9B,MCsBA,6CAAaE,iEAAAA,IAAmBC,UAFjB,GAAEC,QAAA,CAXJ,CACLC,EAAAA,aACAC,EAAAA,YACAC,EAAAA,gFAUKL,EAAmB,CAAAM,aAAA,CAPxBvC,GAAsBmC,QAAA,CALtBC,EAAAA,aACAC,EAAAA,YACAC,EAAAA,YAAUE,QAAA,CAMVxC,kEClBO,CACXM,MAAS,CACLmC,SAAY,gBACZC,cAAiB,yBACjBC,UAAa,cACbC,eAAkB,oCFLX,CACXtC,MAAS,CACLmC,SAAY,YACZC,cAAiB,mBACjBC,UAAa,aACbC,eAAkB,gCGLX,CACXtC,MAAS,CACLmC,SAAY,cACZC,cAAiB,yBACjBC,UAAa,aACbC,eAAkB","sourcesContent":["<div class=\"d-flex align-items-center\">\r\n  <div *ngIf=\"showLabel\">{{ label | sqMessage }}</div>\r\n  <div class=\"oval\" [ngClass]=\"{ovalSelected: theme == 'dark'}\" (click)=\"toggleTheme()\" sqTooltip=\"{{ tooltip | sqMessage }}\">\r\n    <div class=\"buttonToggle\" [ngClass]=\"{buttonSelected: theme == 'dark'}\"></div>\r\n  </div>\r\n</div>","import {Component, Input, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'sq-theme-toggle',\r\n  templateUrl: './theme-toggle.component.html',\r\n  styleUrls: ['./theme-toggle.component.scss']\r\n})\r\nexport class BsThemeToggleComponent implements OnInit {\r\n  @Input() showLabel = true;\r\n\r\n  labels = ['msg#theme.lightMode', 'msg#theme.darkMode'];\r\n  tooltips = ['msg#theme.darkModeTitle', 'msg#theme.lightModeTitle']\r\n  label: string = '';\r\n  tooltip: string;\r\n\r\n  theme: string = \"normal\"\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    this.theme = localStorage.getItem('sinequa-theme') || 'normal'\r\n    this.label = this.theme === 'normal' ? this.labels[0] : this.labels[1];\r\n    this.tooltip = this.theme === 'normal' ? this.tooltips[0] : this.tooltips[1];\r\n  }\r\n\r\n  /**\r\n  * Whether the UI is in dark or light mode\r\n  */\r\n  isDark(): boolean {\r\n    return this.theme === \"dark\";\r\n  }\r\n\r\n  toggleTheme() {\r\n    let index = 0;\r\n    if (this.theme === 'normal') {\r\n      this.theme = 'dark';\r\n      index = 1;\r\n    } else {\r\n      this.theme = 'normal';\r\n    }\r\n    this.label = this.labels[index];\r\n    this.tooltip = this.tooltips[index];\r\n\r\n    localStorage.setItem('sinequa-theme', this.theme);\r\n    document.body.classList.toggle(\"dark\");\r\n    return false;\r\n  }\r\n}","export default {\n    \"theme\": {\n        \"darkMode\": \"Dark mode\",\n        \"darkModeTitle\": \"Toggle dark mode\",\n        \"lightMode\": \"Light mode\",\n        \"lightModeTitle\": \"Toggle light mode\"\n    }\n}","import {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\n\nimport {UtilsModule} from \"@sinequa/components/utils\";\nimport {IntlModule} from \"@sinequa/core/intl\";\n\nimport {BsThemeToggleComponent} from \"./theme-toggle.component\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        UtilsModule,\n        IntlModule\n    ],\n    declarations: [\n        BsThemeToggleComponent\n    ],\n    exports: [\n        BsThemeToggleComponent\n    ],\n    providers: []\n})\nexport class BsThemeToggleModule {\n}\n","export default {\n    \"theme\": {\n        \"darkMode\": \"Dunkler Modus\",\n        \"darkModeTitle\": \"Dunkelmodus umschalten\",\n        \"lightMode\": \"Licht Modus\",\n        \"lightModeTitle\": \"lichtmodus umschalten\"\n    }\n}","export default {\n    \"theme\": {\n        \"darkMode\": \"Mode sombre\",\n        \"darkModeTitle\": \"Activer le mode sombre\",\n        \"lightMode\": \"Mode clair\",\n        \"lightModeTitle\": \"Activer le mode clair\"\n    }\n}\n"]}