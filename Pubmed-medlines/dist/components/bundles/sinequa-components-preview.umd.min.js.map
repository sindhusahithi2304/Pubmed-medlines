{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","../../../projects/components/preview/preview-document.ts","../../../projects/components/preview/preview-document-iframe.component.ts","../../../projects/components/preview/preview-tooltip.component.html","../../../projects/components/preview/preview-tooltip.component.ts","../../../projects/components/preview/preview.service.ts","../../../projects/components/preview/preview.module.ts","../projects/components/preview/bootstrap/facet-preview/facet-preview.html","../projects/components/preview/bootstrap/facet-preview/facet-preview.ts","../projects/components/preview/bootstrap/facet-preview-2/facet-preview.component.html","../projects/components/preview/bootstrap/facet-preview-2/facet-preview.component.ts","../projects/components/preview/bootstrap/preview-highlights/preview-highlights.html","../projects/components/preview/bootstrap/preview-highlights/preview-highlights.ts","../projects/components/preview/bootstrap/preview-links/preview-links.html","../projects/components/preview/bootstrap/preview-links/preview-links.ts","../projects/components/preview/bootstrap/similar-documents/similar-documents.html","../projects/components/preview/bootstrap/similar-documents/similar-documents.ts","../projects/components/preview/bootstrap/preview-panel/preview-panel.html","../projects/components/preview/bootstrap/preview-panel/preview-panel.ts","../projects/components/preview/bootstrap/preview-popup/preview-popup.html","../projects/components/preview/bootstrap/preview-popup/preview-popup.ts","../projects/components/preview/bootstrap/result-link-preview/result-link-preview.html","../projects/components/preview/bootstrap/result-link-preview/result-link-preview.ts","../projects/components/preview/bootstrap/preview-entity-facet/preview-entity-facet.component.html","../projects/components/preview/bootstrap/preview-entity-facet/preview-entity-facet.component.ts","../projects/components/preview/bootstrap/preview-entity-panel/preview-entity-panel.component.html","../projects/components/preview/bootstrap/preview-entity-panel/preview-entity-panel.component.ts","../projects/components/preview/bootstrap/preview-extracts-panel/preview-extracts-panel.component.html","../projects/components/preview/bootstrap/preview-extracts-panel/preview-extracts-panel.component.ts","../projects/components/preview/bootstrap/preview-search-form/preview-search-form.component.ts","../projects/components/preview/bootstrap/preview-search-form/preview-search-form.component.html","../projects/components/preview/bootstrap/preview-pages-panel/preview-pages-panel.component.html","../projects/components/preview/bootstrap/preview-pages-panel/preview-pages-panel.component.ts","../projects/components/preview/bootstrap/preview-page-form/preview-page-form.component.html","../projects/components/preview/bootstrap/preview-page-form/preview-page-form.component.ts","../../projects/components/preview/bootstrap/preview.module.ts","../../projects/components/preview/messages/en.ts","../../projects/components/preview/messages/index.ts","../../projects/components/preview/messages/fr.ts","../../projects/components/preview/messages/de.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__values","o","s","Symbol","iterator","m","i","call","length","next","value","done","TypeError","__read","n","r","e","ar","push","error","HighlightCategoryFilterChoice","forEach","nodeList","callbackfn","from","PreviewDocument","element","ElementRef","_window","_a","nativeElement","contentWindow","_b","frames","_document","getContentWindow","defineProperty","document","insertComponent","component","body","appendChild","getHighlightText","categoryId","index","nodes","querySelectorAll","text","textContent","setSvgBackgroundPositionAndSize","svgList","ic","tspanList","item","getElementsByTagName","j","jc","tspan","bgId","getAttribute","rect","getFirst","getDocElements","resizeSvgBackground","selectHighlight","clearHighlightSelection","previousElement","getElementById","setHighlightSelection","scrollIntoView","block","classList","remove","SELECTED_HIGHLIGHT_CLASS","elements","parentNode","removeChild","filterHighlights","filters","updateHighlightFilterState","Utils","isArray","some","category","contains","FILTERED_OUT_HIGHLIGHT_CLASS","add","elementIsFilteredOut","toggleHighlight","on","hasAttribute","BASIC_ENTITY_DISPLAY_ELEMENT_ATTRIBUTE","ADVANCED_ENTITY_DISPLAY_ELEMENT_ATTRIBUTE","elt","isFirst","isLast","isSvgElement","setHighlightSelectionSVG","setHighlightSelectionHTML","SELECTED_HIGHLIGHT_FIRST_FRAGMENT_CLASS","SELECTED_HIGHLIGHT_LAST_FRAGMENT_CLASS","group","rectPosition","getBBox","top","y","bottom","height","left","x","right","width","valueTransform","addSvgLine","x1","y1","x2","y2","transform","line","createElementNS","setAttribute","SVG_LINE_CLASS","String","tagName","textBoxPixel","getBoundingClientRect","textBoxSVG","deltaX","deltaY","firstCharRect","getExtentOfChar","tspanWidth","getComputedTextLength","id","list","eltList","elementClass","getElementCategory","keys","filterState","choice","None","All","filterValue","categoryIds","categoryIds_1","categoryIds_1_1","PreviewDocumentIframe","cdr","sanitizer","defaultSandbox","scalingFactor","onPreviewReady","EventEmitter","pageChange","previewDocLoadHandler","onPreviewDocLoad","bind","_this","undefined","downloadUrl","previewDocument","documentFrame","console","sheetFrame","contentDocument","getElementsByName","removeEventListener","addEventListener","markForCheck","tooltip","addTooltip","ngOnInit","ngOnDestroy","ngOnChanges","simpleChanges","firstChange","resetContent","currentValue","_sandbox","sandbox","isString","sanitizedUrlSrc","bypassSecurityTrustResourceUrl","ngAfterViewInit","iframeURLChange","newURL","iframe","callback","lastDispatched","dispatchChange","newHref","location","href","unloadHandler","setTimeout","attachUnload","i0","ɵɵdirectiveInject","ChangeDetectorRef","i1","DomSanitizer","selectors","contentQueries","rf","ctx","dirIndex","i0.ɵɵelement","i0.ɵɵstyleProp","i0.ɵɵproperty","ɵɵpureFunction1","_c2","i0.ɵɵattribute","i0.ɵɵelementContainerStart","i0.ɵɵelementStart","i0.ɵɵlistener","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵelementContainerEnd","i0.ɵɵadvance","i0.ɵɵpropertyInterpolate","i0.ɵɵclassMap","i0.ɵɵtextInterpolate","i0.ɵɵtemplate","action_r8","hidden","i0.ɵɵtextInterpolate1","action_r18","PreviewTooltip","zone","changeDetectorRef","entityActions","entityNavActions","selectedTextActions","selectedText","entityType","isBottom","handleMouseDown","event","handleMouseUp","selection","getSelection","toString","trim","range","getRangeAt","detectChanges","positionTooltipAbove","_inTime","handleMouseMove","path","nodeType","nodeName","attributes","className","split","entityDisplay","value_1","entityValue","highlights","previewData","highlightsPerCategory","values","find","v","entityCount","locations","entityLabel","categoryDisplayLabel","idsplt","idx_1","parseInt","entity","findEntity","_","idIndex","entityIdx","valueIndex","Date","now","el","localName","handleScroll","changes","window","box","run","tooltipWidth","tooltipHeight","Math","min","max","clientWidth","round","leftPin","bypassSecurityTrustStyle","innerHeight","previousEntity","stopPropagation","valueIdx","idx","nextEntity","entityAction","action","type","display","selectedTextAction","predicate","currentIdx","highlightsPerLocation","highlight","categories","positionInCategories","NgZone","viewQuery","ɵɵpureFunction3","_c5","visibility","PREVIEW_MODAL","InjectionToken","PreviewService","previewModal","router","previewWebService","appService","authenticationService","searchService","modalService","recentDocumentsService","exprBuilder","_events","Subject","events","subscribe","record","addDocument","makeQuery","query","copy","sort","scope","tab","basket","page","queryId","select","filter","eqNC","facet","getPreviewData","audit","auditEvent","getRecordFromId","resultId","results","detail","getAuditPreviewDetail","observable","get","makeDownloadUrl","url","updateUrlForCors","openModal","model","open","getQueryStr","toJsonForQueryString","openNewWindow","params","app","appName","userOverrideActive","userOverride","userName","domain","makeHttpParams","openRoute","rank","navigate","queryParams","getPageNumber","containerid","startsWith","pageNumberStr","slice","test","pageNumber","isNaN","$page","fetchPages","groupBy","addSelect","makeExpr","getResults","queryLanguage","queryAnalysis","_d","_c","questionLanguage","_e","ccquery","_f","collectionColumn","collection","doc-id","source","treeFirstNode","resultid","querylang","filename","fileext","getHtmlPreview","ɵɵinject","i1$1","Router","i2$1","PreviewWebService","i3$1","AppService","i4","AuthenticationService","i1$2","SearchService","i6","ModalService","i7","RecentDocumentsService","ExprBuilder","factory","ɵfac","providedIn","PreviewModule","forRoot","ngModule","providers","provide","useValue","imports","CommonModule","IntlModule","WebServicesModule","UtilsModule","declarations","exports","i0.ɵɵclassMapInterpolate1","ctx_r0","data","BsFacetPreview","previewService","recordOpened","documentCachedContentUrl","openSimilarDoc","doc","startSmall","iframeClass","ctx_r1","originalDocTarget","ctx_r4","metadata","inputs","similarDocuments","outputs","features","ɵɵNgOnChangesFeature","decls","vars","consts","template","BsFacetPreviewComponent2","_super","expandModal","closable","highlightActions","recordClosed","previewLoaded","_height","scaleFactorThreshold","loaded","closeAction","Action","icon","title","expandModalAction","displaySimilarDocuments","toggleEntitiesAction","selected","cat","toggleExtractsAction","maximizeAction","minimizeAction","disabled","updater","actions","customActions","apply","arguments","concat","__spread","update","ngAfterViewChecked","emit","AbstractFacet","i0.ɵɵclassMapInterpolate2","$event","ɵɵrestoreView","_r20_1","categoryId_r13","ɵɵnextContext","$implicit","selectFilter","ctx_r14","compareFilters","i0.ɵɵtextInterpolate2","_r28_1","ctx_r16","_r15","_r4","hostVars","hostBindings","BsPreviewHighlights","keepAllFilter","SimpleHighlightCategoryFilterState","keepNoneFilter","initialize","previewReady","moveToFirstSearchTerm","highlightDataPerCategory","highlightDataPerLocation","navigationState","SimpleHighlightNavigationState","nonEmptyCategoryIds","reset","current","filteredHighlightData","FilteredHighlightDataPerLocation","total","position","isNumber","size","result","displayValue","categoryIconClass","getCategoryHighlightData","categoryLabelPipeParams","Number","categoryIsEmpty","highlightData","categoryHasMultipleValues","getHighlightValueCount","first","previous","last","firstCategory","selectAll","selectNone","newFilter","Value","key","includes","filter1","filter2","compare","_r1","categories_1","categories_1_1","param","_filterValue","baseData","counter","locationIsIncluded","categories_2","categories_2_1","BsPreviewLinks","originalDocumentUrl","url1","click","notifyOpenOriginalDocument","BsSimilarDocuments","similarDocumentsService","documentList","sourceDocumentId","name","documentIconClass","onLinkClick","ctx_r2","SimilarDocumentsWebService","BsPreviewPanel","leftPaneAdditionalClasses","BsPreviewPopup","uiService","screenSize","resizeSubscription","resizeEvent","updatePreviewData","unsubscribe","previewDataError","screenSizeIsGreaterOrEqual","getSearchPositionInPage","records","searchPosition","currentId","MODAL_MODEL","i3$2","UIService","BsResultLinkPreview","usePopup","ctrlKey","newWindow","BsPreviewEntityFacetComponent","itemsChecked","count","sortFreq","Map","nav","unselectAll","set","checkAction","foundHidden","foundNotHidden","sortAlphaAction","sortFreqAction","startUnchecked","column","getColumn","val","a","localeCompare","navValue","entityHidden","showAll","toggleEntity","selectEntity","prevEntity","indexes","getEntityIndexes","e_1","e_2","entityIcon","entity_r1","collapsible","style","entityValues","ɵɵInheritDefinitionFeature","BsPreviewEntityPanelComponent","facetChecked","_entities","entities","categoryDisplayLabelPlural","checked","_r5","BsPreviewExtractsPanelComponent","domSanitizer","extracts","currentIndex","loading","loadCompleteSubscription","extractAll","extracts_1","createDocument","implementation","createHTMLDocument","write","close","map","startIndex","start","relevanceIndex","textIndex","sanitize","buildSortAction","sortAction","children","scrollExtract","extract","bypassSecurityTrustHtml","replace","previousExtract","scrollTo","nextExtract","cdkScrollViewport","scrollToIndex","DOCUMENT","BsPreviewSearchFormComponent","formBuilder","searchText","searchControl","FormControl","form","search","setValue","i1$3","FormBuilder","i0.ɵɵstyleMap","ctx_r18","BsPreviewPagesPanelComponent","gotopage","_pendingPreviewDocument","_pendingPages","_pendingPage","currentPage","pages","sortedPages","Error","hasFirst","hasPrevious","hasNext","currentPageEl","behaviour","selectPage","selectPrevious","selectNext","BsPreviewPageFormComponent","validationService","pageControl","integerValidator","minValidator","submit","i2$2","ValidationService","BsPreviewModule","FormsModule","ReactiveFormsModule","ScrollingModule","ValidationModule","CollapseModule","MetadataModule","BsModalModule","BsFacetModule","ResultModule","BsActionModule","enPreview","merge","preview","noDocumentDataErrorPopupTitle","highlightsTitle","noEntityToHighlight","termXLabel","otherTerms","previousDocument","nextDocument","originalDocument","selectedHighlight","noSelectedHighlight","firstHighlightButtonAltText","previousHighlightButtonAltText","nextHighlightButtonAltText","relevanceSortHighlightButtonText","textOrderSortHighlightButtonText","lastHighlightButtonAltText","highlightFilters","keepAll","keepNone","keepAllInCategory","keepNoneInCategory","documentPropertiesTitle","similarDocumentsTitle","sortAlphabetically","sortFrequency","noextract","closeTitle","expandTitle","minimize","maximize","toggleExtracts","toggleEntities","enSearch","enCollapse","enMetadata","enModal","enFacet","enResult","frPreview","frSearch","frCollapse","frMetadata","frModal","frFacet","frResult","dePreview","deSearch","deCollapse","deMetadata","deModal","deFacet","deResult"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { ElementRef } from \"@angular/core\";\n\nimport { Utils } from \"@sinequa/core/base\";\n\nexport enum HighlightCategoryFilterChoice {\n    All, None, Value\n}\n\nexport interface HighlightCategoryFilterState {\n    choice: HighlightCategoryFilterChoice;\n    filterValue: string;\n}\n\nexport type HighlightFilters = { [key: string]: HighlightCategoryFilterState } | string[];\n\n// forEach on a NodeList is polyfilled for IE but not at all necessarily when the list comes from a document\n// in another frame. This function is used to perform the forEach taking this into account.\nfunction forEach<T extends Node>(nodeList: NodeListOf<T>, callbackfn: (value: T, key: number, parent: NodeListOf<T> | T[]) => void): void {\n    if (!nodeList.forEach) {\n        Array.from(nodeList).forEach(callbackfn);\n    }\n    else {\n        nodeList.forEach(callbackfn);\n    }\n}\n\n/**\n * This class offers an API to manipulate the HTML of a preview document.\n * - Insert elements dynamically in the DOM of the preview (eg. tooltips)\n * - Retrieve the text of entities or extracts\n * - Select the elements of entities or extracts (by altering their CSS classes)\n * - Highlight (or not) specific entities or categories in the HTML (by altering their CSS classes)\n */\nexport class PreviewDocument {\n\n    private static readonly SELECTED_HIGHLIGHT_CLASS: string = \"sq-current\";\n    private static readonly SELECTED_HIGHLIGHT_FIRST_FRAGMENT_CLASS: string = \"sq-first\";\n    private static readonly SELECTED_HIGHLIGHT_LAST_FRAGMENT_CLASS: string = \"sq-last\";\n    private static readonly FILTERED_OUT_HIGHLIGHT_CLASS: string = \"sq-inactive\";\n    private static readonly SVG_LINE_CLASS: string = \"sq-svg\";\n\n    private static readonly BASIC_ENTITY_DISPLAY_ELEMENT_ATTRIBUTE = \"data-entity-basic\";\n    private static readonly ADVANCED_ENTITY_DISPLAY_ELEMENT_ATTRIBUTE = \"data-entity-display\";\n\n    private readonly _window: Window;\n    private readonly _document: Document;\n    \n    private previousElement: HTMLElement | null;\n    \n    constructor(element: ElementRef | Document){\n        if (element instanceof ElementRef) {\n            this._window = element?.nativeElement?.contentWindow;\n            if (this._window?.frames && this._window.frames[\"frSheet\"]) {\n                this._window = this._window.frames[\"frSheet\"];  // aspose xls preview\n            }\n        } else {\n            this._document = element;\n        }\n    }\n\n\n    // PUBLIC METHODS\n\n    /**\n     * Return the Window of the iframe containing the element\n     */\n    public getContentWindow(): Window {\n        return this._window;\n    }\n\n    /**\n     * Returns the root Document element of the HTML Preview\n     */\n    public get document(): Document {\n        return this._document || this._window.document;\n    }\n\n    /**\n     * Insert a given DOM Element in the body of the document preview\n     * @param component\n     */\n    public insertComponent(component){\n        this.document.body.appendChild(component);\n    }\n\n    /**\n     * Returns the text of a given entity\n     * @param categoryId Category of the entity\n     * @param index Index of the entity in that category\n     */\n    public getHighlightText(categoryId: string, index: number) : string {\n        if (index < 0) {\n            return \"\";\n        }\n        const nodes = this.document.querySelectorAll(\"#\"+categoryId + \"_\" + index);\n        if (!nodes || nodes.length === 0) {\n            return \"\";\n        }\n        let text = \"\";\n        forEach(nodes, n => text += (n['innerHTML'] || n.textContent));\n        return text;\n    }\n\n    /**\n     * Update the location of the entities' SVG background (for some converters)\n     */\n    public setSvgBackgroundPositionAndSize(): void {\n        const svgList: NodeListOf<Element> = this.document.querySelectorAll(\"svg\");\n        if (svgList != null) {\n            for (let i = 0, ic = svgList.length; i < ic; i++) {\n                const svg = svgList.item(i);\n                const tspanList: HTMLCollectionOf<SVGTSpanElement> = svg.getElementsByTagName(\"tspan\");\n                if (tspanList != null) {\n                    for (let j = 0, jc = tspanList.length; j < jc; j++) {\n                        const tspan = tspanList.item(j);\n                        if (tspan) {\n                            const bgId = tspan.getAttribute(\"data-entity-background\");\n                            if (bgId) {\n                                const rect = this.getFirst(this.getDocElements(bgId));\n                                if (rect) {\n                                    this.resizeSvgBackground(rect, tspan);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Select a specific entity by applying specific highlight classes\n     * to the DOM elements and scrolling the view to center around them.\n     * @param categoryId Category of the entity\n     * @param index Index of the entity in that category\n     */\n    public selectHighlight(categoryId: string, index: number) : void {\n        \n        this.clearHighlightSelection();\n        // current element becomes previous element\n        this.previousElement = this.document.getElementById(categoryId + '_' + index);\n        \n        if (this.previousElement) {\n            // highlight new selected element\n            this.setHighlightSelection(this.previousElement,true, true);\n            this.previousElement.scrollIntoView({block: 'center'});\n        }\n    }\n\n    /**\n     * Removes all entity selection classes from the document HTML elements\n     */\n    public clearHighlightSelection(): void {\n        // Clear HTML elements borders\n        if (this.previousElement) {\n            this.previousElement.classList.remove(PreviewDocument.SELECTED_HIGHLIGHT_CLASS);\n        }\n        // Clear SVG elements borders\n        const elements: NodeListOf<Element> = this.document.querySelectorAll(\"line.sq-svg\");\n        for (let i = 0; i < elements.length; i++) {\n            const parentNode = elements[i].parentNode;\n            if (parentNode) {\n                parentNode.removeChild(elements[i]);\n            }\n        }\n    }\n\n    /**\n     * Turns highlights on or off based on the provided filter object. Additionally clears the selected entity\n     * @param filters object where each key provides a filter for each category of entity/highlight\n     */\n    public filterHighlights(filters: HighlightFilters){\n\n        this.updateHighlightFilterState(filters);\n        this.clearHighlightSelection();\n    }\n\n    /**\n     * Loop through every highlighted element in the document and turn highlights on or off based on the filters object.\n     * If the filters object is an array then only the specified categories are highlighted.\n     * @param filters object where each key provides a filter for each category of entity/highlight\n     */\n    public updateHighlightFilterState(filters: HighlightFilters): void {\n        const elements = this.document.querySelectorAll(\"[data-entity-display], .extractslocations, .matchlocations\");\n        if (Utils.isArray(filters)) {\n            forEach<Element>(elements, element => {\n                const highlight = filters.some(category => element.classList.contains(category));\n                if (highlight) {\n                    element.classList.remove(PreviewDocument.FILTERED_OUT_HIGHLIGHT_CLASS);\n                }\n                else {\n                    element.classList.add(PreviewDocument.FILTERED_OUT_HIGHLIGHT_CLASS);\n                }\n            });\n        }\n        else {\n            forEach(elements, element => {\n                if (PreviewDocument.elementIsFilteredOut(element, filters)) {\n                    element.classList.add(PreviewDocument.FILTERED_OUT_HIGHLIGHT_CLASS);\n                }\n                else {\n                    element.classList.remove(PreviewDocument.FILTERED_OUT_HIGHLIGHT_CLASS);\n                }\n            });\n        }\n    }\n\n    /**\n     * Turns on/off the highlights of one category of entities or a specific value if provided\n     * @param category e.g. person\n     * @param on true for highlighting / false for turning off\n     * @param value e.g. \"BILL GATES\"\n     */\n    public toggleHighlight(category: string, on: boolean, value?: string) {\n        const elements = this.document.querySelectorAll(\".\"+category);\n        forEach(elements, element => {\n            if(!value\n                || (element.hasAttribute(PreviewDocument.BASIC_ENTITY_DISPLAY_ELEMENT_ATTRIBUTE) && value === element.getAttribute(PreviewDocument.BASIC_ENTITY_DISPLAY_ELEMENT_ATTRIBUTE))\n                || (element.hasAttribute(PreviewDocument.ADVANCED_ENTITY_DISPLAY_ELEMENT_ATTRIBUTE) && value === element.getAttribute(PreviewDocument.ADVANCED_ENTITY_DISPLAY_ELEMENT_ATTRIBUTE))) {\n\n                if(on){\n                    element.classList.remove(PreviewDocument.FILTERED_OUT_HIGHLIGHT_CLASS);\n                }\n                else{\n                    element.classList.add(PreviewDocument.FILTERED_OUT_HIGHLIGHT_CLASS);\n                }\n            }\n        });\n    }\n\n    // PRIVATE METHODS\n\n    private setHighlightSelection(elt: Element, isFirst: boolean, isLast: boolean): void {\n        if (this.isSvgElement(elt)) {\n            this.setHighlightSelectionSVG(elt, isFirst, isLast);\n        }\n        else {\n            this.setHighlightSelectionHTML(elt, isFirst, isLast);\n        }\n    }\n\n    private setHighlightSelectionHTML(elt: Element, isFirst: boolean, isLast: boolean): void {\n        elt.classList.add(PreviewDocument.SELECTED_HIGHLIGHT_CLASS);\n        if (isFirst) {\n            elt.classList.add(PreviewDocument.SELECTED_HIGHLIGHT_FIRST_FRAGMENT_CLASS);\n        }\n        if (isLast) {\n            elt.classList.add(PreviewDocument.SELECTED_HIGHLIGHT_LAST_FRAGMENT_CLASS);\n        }\n    }\n\n    private setHighlightSelectionSVG(elt: Element, isFirst: boolean, isLast: boolean): void {\n        const bgId = elt.getAttribute(\"data-entity-background\");\n        if (!bgId) return;\n        const rect: SVGRectElement = <SVGRectElement>this.getFirst(this.getDocElements(bgId));\n        const group = rect.parentNode;\n        const rectPosition = rect.getBBox();\n\n        if (group) {\n            const top = rectPosition.y;\n            const bottom = rectPosition.y + rectPosition.height;\n            const left = rectPosition.x;\n            const right = rectPosition.x + rectPosition.width;\n            const valueTransform = rect.getAttribute(\"transform\");\n            this.addSvgLine(group, left, top   , right, top   , valueTransform);\n            this.addSvgLine(group, left, bottom, right, bottom, valueTransform);\n            if (isFirst) this.addSvgLine(group, left , top, left , bottom, valueTransform);\n            if (isLast)  this.addSvgLine(group, right, top, right, bottom, valueTransform);\n        }\n    }\n\n    private addSvgLine(group: Node, x1: number, y1: number, x2: number, y2: number, transform: string | null): void {\n        const line: Element = this.document.createElementNS(\"http://www.w3.org/2000/svg\",\"line\");\n        line.setAttribute(\"class\", PreviewDocument.SVG_LINE_CLASS);\n        line.setAttribute(\"x1\", String(x1));\n        line.setAttribute(\"y1\", String(y1));\n        line.setAttribute(\"x2\", String(x2));\n        line.setAttribute(\"y2\", String(y2));\n        if (transform) line.setAttribute(\"transform\", transform);\n        group.appendChild(line);\n    }\n\n\n    private resizeSvgBackground(rect: Element, tspan: SVGTSpanElement): void {\n        let elt: Element = tspan;\n        while (elt.tagName !== \"text\") {\n            elt = elt.parentNode as Element;\n            if (elt == null) break;\n        }\n        const text: SVGTextElement = elt as SVGTextElement;\n        const textBoxPixel: ClientRect = text.getBoundingClientRect();\n        const textBoxSVG: SVGRect = text.getBBox();\n        if (textBoxPixel.height === 0 || textBoxPixel.width === 0) return;\n        const scaleX = textBoxSVG.width / textBoxPixel.width;\n        const scaleY = textBoxSVG.height / textBoxPixel.height;\n        const deltaX = 2 * scaleX;\n        const deltaY = 2 * scaleY;\n\n        const firstCharRect = tspan.getExtentOfChar(0);\n        const tspanWidth = tspan.getComputedTextLength();\n\n        rect.setAttribute(\"x\", String(firstCharRect.x - deltaX));\n        rect.setAttribute(\"y\", String(firstCharRect.y - deltaY));\n        rect.setAttribute(\"width\", String(tspanWidth + 2 * deltaX));\n        rect.setAttribute(\"height\", String(textBoxSVG.height + 2 * deltaY));\n        const valueTransform = text.getAttribute(\"transform\");\n        if (valueTransform) rect.setAttribute(\"transform\", valueTransform);\n    }\n\n    private getDocElements(id: string): Array<Element> {\n        const list = Array<Element>();\n        // Get HTML elements directly by id\n        const eltList: NodeListOf<Element> = this.document.querySelectorAll(\"#\" + id);\n        for (let i = 0; i < eltList.length; i++) {\n            list.push(eltList[i]);\n        }\n        // Get SVG tspan iterating on them (jquery querySelectorAll didn't return SVG inner elements)\n        const svgList: NodeListOf<Element> = this.document.querySelectorAll(\"svg\");\n        if (svgList != null) {\n            for (let i = 0, ic = svgList.length; i < ic; i++) {\n                const svg = svgList.item(i);\n                const tspanList: HTMLCollectionOf<SVGTSpanElement> = svg.getElementsByTagName(\"tspan\");\n                if (tspanList != null) {\n                    for (let j = 0, jc = tspanList.length; j < jc; j++) {\n                        const tspan = tspanList.item(j);\n                        if (tspan) {\n                            if (tspan.id === id) list.push(tspan);\n                        }\n                    }\n                }\n            }\n        }\n        return list;\n    }\n\n    private getFirst(nodes: Array<Element>): Element | null {\n        return (nodes != null && nodes.length > 0) ? nodes[0] : null;\n    }\n\n    private isSvgElement(elt: Element): boolean {\n        if (elt == null) return false;\n        return \"viewportElement\" in <any>elt;\n    }\n\n\n\n    // PRIVATE STATIC (from highlight helper)\n\n\n    private static elementIsFilteredOut(element: Element, filters: {[key: string]: HighlightCategoryFilterState}): boolean {\n        const elementClass: string = this.getElementCategory(element, Object.keys(filters));\n        if (elementClass == null) {\n            return false;\n        }\n        const filterState = filters[elementClass];\n        if (filterState == null) {\n            return false;\n        }\n        if (filterState.choice === HighlightCategoryFilterChoice.None) {\n            return true;\n        }\n        if (filterState.choice === HighlightCategoryFilterChoice.All) {\n            return false;\n        }\n        if (element.hasAttribute(PreviewDocument.BASIC_ENTITY_DISPLAY_ELEMENT_ATTRIBUTE)) {\n            return filterState.filterValue !== element.getAttribute(PreviewDocument.BASIC_ENTITY_DISPLAY_ELEMENT_ATTRIBUTE);\n        }\n        return filterState.filterValue !== element.getAttribute(PreviewDocument.ADVANCED_ENTITY_DISPLAY_ELEMENT_ATTRIBUTE);\n    }\n\n    private static getElementCategory(element: Element, categoryIds: string[]): string {\n        for (const categoryId of categoryIds) {\n            if (element.classList.contains(categoryId)) {\n                return categoryId;\n            }\n        }\n        return \"\";\n    }\n}\n","import { Component, Input, Output, ViewChild, ElementRef, EventEmitter, ContentChild, OnChanges, SimpleChanges, AfterViewInit, ChangeDetectorRef, OnInit, OnDestroy, ChangeDetectionStrategy } from \"@angular/core\";\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\nimport { Utils } from \"@sinequa/core/base\";\nimport { PreviewDocument } from \"./preview-document\";\n\n\n/**\n * This component manages the iframe containing the document's preview.\n * The main input is the URL of the document's preview.\n * The main output is an event emitter providing an instance of PreviewDocument.\n *\n * PreviewDocument is a wrapper around the HTML Document, allowing to interact with\n * the HTML of the preview (for example to highlight some entities)\n *\n * It is possible to insert a tooltip in the preview via transclusion.\n * Example:\n    <sq-preview-document-iframe\n        [downloadUrl]=\"downloadUrl\"\n        (onPreviewReady)=\"onPreviewReady($event)\">\n        <sq-preview-tooltip #tooltip\n            [previewDocument]=\"previewDocument\"\n            [previewData]=\"previewDocument\">\n        </sq-preview-tooltip>\n    </sq-preview-document-iframe>\n */\n@Component({\n    selector: \"sq-preview-document-iframe\",\n    template: `\n                <iframe #documentFrame\n                    [attr.sandbox]=\"_sandbox\"\n                    [src]=\"sanitizedUrlSrc\"\n                    [style.--factor]=\"scalingFactor\"\n                    [ngStyle]=\"{'-ms-zoom': scalingFactor, '-moz-transform': 'scale(var(--factor))', '-o-transform': 'scale(var(--factor))', '-webkit-transform': 'scale(var(--factor))'}\">\n                </iframe>`,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    styles: [`\n:host{\n    flex: 1;\n}\n\n\niframe {\n    background-color: white;\n    flex: 1;\n    position: relative;\n    display: block;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    height: calc(100% / var(--factor));\n    width: calc(100% / var(--factor));\n    border: 0;\n\n    -moz-transform-origin: 0 0;\n    -o-transform-origin: 0 0;\n    -webkit-transform-origin: 0 0;\n}\n\n.spinner-grow {\n    width: 3rem;\n    height: 3rem\n}\n    `]\n})\nexport class PreviewDocumentIframe implements OnChanges, OnInit, OnDestroy, AfterViewInit {\n    defaultSandbox: string = \"allow-forms allow-modals allow-orientation-lock allow-pointer-lock allow-popups allow-popups-to-escape-sandbox allow-presentation allow-same-origin allow-scripts\";\n    @Input() sandbox: string | null | undefined;\n    @Input() downloadUrl: string;\n    @Input() scalingFactor: number = 1.0;\n    @Output() onPreviewReady = new EventEmitter<PreviewDocument>();\n    \n    // page could change when location.href change or when user click on a tab (sheet case)\n    // when URL a string is sent otherwise a PreviewDocument\n    @Output() pageChange = new EventEmitter<string | PreviewDocument>();\n    @ViewChild('documentFrame', {static: true}) documentFrame: ElementRef;  // Reference to the preview HTML in the iframe\n    @ContentChild('tooltip', {read: ElementRef, static: false}) tooltip: ElementRef; // see https://stackoverflow.com/questions/45343810/how-to-access-the-nativeelement-of-a-component-in-angular4\n\n    public sanitizedUrlSrc: SafeResourceUrl;\n    // Must be undefined by default, because if a default value is set, \n    // if we set it to undefined in the future, this new (undefined) value \n    // is not used by the iFrame as if it used the previous value\n    public _sandbox: string | null | undefined;\n    \n    private previewDocument: PreviewDocument;\n    readonly previewDocLoadHandler;\n\n    constructor(\n        private cdr: ChangeDetectorRef,\n        private sanitizer: DomSanitizer) {\n            this.previewDocLoadHandler = this.onPreviewDocLoad.bind(this);\n    }\n\n    public onPreviewDocLoad() {\n        \n        if(this.downloadUrl === undefined) return;\n        // previewDocument must be created here when document is fully loaded\n        // because in case of sheet, PreviewDocument constructor change.\n        this.previewDocument = new PreviewDocument(this.documentFrame);\n        \n        // SVG highlight:\n        //   background rectangle (highlight) were added to the SVG by the HTML generator (C#), but html generation is\n        //   not able to know the geometry of the text. It is up to the browser to compute the position and size of the\n        //   background. That needs to be done now that the iFrame is loaded.\n        try {\n            this.previewDocument.setSvgBackgroundPositionAndSize();\n        } catch (error) {\n            console.error(error);\n        }\n\n        /* To catch tab's sheet changes\n         * Sheet structure:\n         * <iframe #preview>\n         *      #document\n         *          ...\n         *          <frameset>\n         *              <iframe name=\"frSheet\"> // current sheet displayed\n         *              <iframe name=\"frTabs\">  // contains all sheet's tabs\n         *          </frameset>\n         *          ...\n         * </iframe>\n         */ \n        const sheetFrame = this.documentFrame.nativeElement.contentDocument.getElementsByName(\"frSheet\");\n        if(sheetFrame.length > 0) {\n            sheetFrame[0].removeEventListener(\"load\", () => {});\n            sheetFrame[0].addEventListener(\"load\", () => {\n                this.previewDocument = new PreviewDocument(this.documentFrame);\n                this.pageChange.next(this.previewDocument);\n                this.cdr.markForCheck();\n            }, true);\n        }\n\n        if (this.tooltip)\n            this.addTooltip(this.previewDocument);\n\n        // Let upstream component know document is now ready\n        this.onPreviewReady.next(this.previewDocument);\n        this.cdr.markForCheck();\n    }\n\n    addTooltip(previewDocument: PreviewDocument) {\n        previewDocument.insertComponent(this.tooltip.nativeElement);\n    }\n\n    ngOnInit() {\n        this.documentFrame.nativeElement.addEventListener(\"load\", this.previewDocLoadHandler, true);\n    }\n\n    ngOnDestroy() {\n        this.documentFrame.nativeElement.removeEventListener(\"load\", this.previewDocLoadHandler);\n    }\n\n    ngOnChanges(simpleChanges: SimpleChanges) {\n        if (simpleChanges.scalingFactor && !simpleChanges.scalingFactor.firstChange) {\n            return;\n        }\n\n        this.resetContent();\n        if (simpleChanges.downloadUrl && simpleChanges.downloadUrl.currentValue !== undefined) {\n            // set sandbox attribute only when downloadUrl is defined, so iframe is created without sandbox attribute\n            // if sandbox is null, keep sandbox attribute to undefined\n            // otherwise put sanbox value in the sanbox attribute or default sandbox value\n            this._sandbox = (this.sandbox === null) ? undefined : Utils.isString(this.sandbox) ? this.sandbox : this.defaultSandbox;\n            this.sanitizedUrlSrc = this.sanitizer.bypassSecurityTrustResourceUrl(this.downloadUrl);\n        }\n    }\n\n    ngAfterViewInit() {\n        this.resetContent();\n        this.iframeURLChange(this.documentFrame.nativeElement, (newURL: string) => {\n            this.previewDocument = new PreviewDocument(this.documentFrame);\n            this.pageChange.next(newURL);\n        });\n    }\n\n    iframeURLChange(iframe, callback) {\n        let lastDispatched = null;\n\n        const dispatchChange = function () {\n            if (iframe.contentWindow) {\n                const newHref = iframe.contentWindow.location.href;\n                if (newHref === \"about:blank\") return;\n                if (newHref !== lastDispatched) {\n                    callback(newHref);\n                    lastDispatched = newHref;\n                }\n            }\n        };\n\n        const unloadHandler = function (e: Event) {\n            setTimeout(dispatchChange, 0);\n        };\n\n        function attachUnload() {\n            // Remove the unloadHandler in case it was already attached.\n            // Otherwise, there will be two handlers, which is unnecessary.\n            if (iframe.contentWindow) {\n                iframe.contentWindow.removeEventListener(\"unload\", unloadHandler);\n                iframe.contentWindow.addEventListener(\"unload\", unloadHandler);\n            }\n        }\n\n        iframe.addEventListener(\"load\", function () {\n\n            attachUnload();\n\n            // Just in case the change wasn't dispatched during the unload event...\n            dispatchChange();\n        });\n\n        attachUnload();\n    }\n\n    resetContent() {\n        this.sanitizedUrlSrc = this.sanitizer.bypassSecurityTrustResourceUrl('about:blank');\n    }\n}\n","<div #tooltip\n    class=\"sq-selection-tooltip\" [ngClass]=\"isBottom ? 'sq-bottom-tooltip' : 'sq-top-tooltip'\"\n    [style.--left]=\"leftPin\" [ngStyle]=\"{'visibility' : visibility, 'bottom' : bottom, 'left' : left}\"\n    [style.--factor]=\"1.0/scalingFactor\">\n\n    <ng-container *ngIf=\"entityType && !selectedText\">\n        <span class=\"display\">{{ entityDisplay }} </span> <span class=\"label\">({{ entityLabel | sqMessage }}) </span>\n        <span class=\"index\">{{ entityIdx }} </span>/<span class=\"count\"> {{ entityCount }} </span>\n        <ng-container *ngIf=\"entityNavActions\">\n            <span class=\"nav-btn previous\" (click)=\"previousEntity($event)\" [ngClass]=\"{disabled: entityIdx <= 1}\" title=\"{{ 'msg#preview.previousHighlightButtonAltText' | sqMessage }}\">❬</span>\n            <span class=\"nav-btn next\" (click)=\"nextEntity($event)\" [ngClass]=\"{disabled: entityIdx >= entityCount}\" title=\"{{ 'msg#preview.nextHighlightButtonAltText' | sqMessage }}\">❭</span>\n        </ng-container>\n        <div class=\"btn-list\">\n            <button *ngFor=\"let action of entityActions\" (click)=\"entityAction(action, $event)\" [disabled]=\"action.disabled\" [hidden]=\"action.hidden\" title=\"{{ (action.title || '') | sqMessage:{values: {type: entityType, value: entityValue, display: entityDisplay} } }}\">\n                <span *ngIf=\"action.icon\" class=\"{{action.icon}}\"></span>\n                <span *ngIf=\"action.text\">{{ action.text | sqMessage:{values: {type: entityType, value: entityValue, display: entityDisplay} } }}</span>\n                <span *ngIf=\"action.iconAfter\" class=\"{{action.iconAfter}}\"></span>\n            </button>\n        </div>\n    </ng-container>\n\n\n    <ng-container *ngIf=\"selectedText\">\n        <ng-container *ngFor=\"let action of selectedTextActions\">\n            <button (click)=\"selectedTextAction(action, $event)\" [disabled]=\"action.disabled\" [hidden]=\"action.hidden\" title=\"{{ (action.title || '') | sqMessage:{values: {text: selectedText.slice(0,50)} } }}\">\n                <span *ngIf=\"action.icon\" class=\"{{action.icon}}\"></span> <span *ngIf=\"action.text\">{{ action.text | sqMessage:{values: {text: selectedText.slice(0,50)} } }}</span> <span *ngIf=\"action.iconAfter\" class=\"{{action.iconAfter}}\"></span>\n            </button>\n        </ng-container>\n    </ng-container>\n</div>\n","import {Component, Input, OnChanges, SimpleChanges, ChangeDetectorRef, NgZone, ViewChild, ElementRef} from \"@angular/core\";\nimport {DomSanitizer} from \"@angular/platform-browser\";\nimport {PreviewData} from \"@sinequa/core/web-services\";\nimport {PreviewDocument} from \"./preview-document\";\nimport {Action} from \"@sinequa/components/action\";\n\n@Component({\n    selector: \"sq-preview-tooltip\",\n    templateUrl: \"./preview-tooltip.component.html\"\n})\nexport class PreviewTooltip implements OnChanges {\n\n    @Input() previewDocument: PreviewDocument;\n    @Input() previewData: PreviewData;\n    @Input() entityActions: Action[] = [];\n    @Input() entityNavActions: boolean = true;\n    @Input() selectedTextActions: Action[] = [];\n    @Input() scalingFactor = 1.0;\n    @ViewChild('tooltip', {static: false}) tooltip : ElementRef;\n\n    // Selected text mode\n    selectedText: string = \"\";\n\n    // Entity hover mode\n    entityType: string = \"\";\n    entityValue: string;\n    entityDisplay: string;\n    entityLabel: string;\n    entityCount: number;\n    entityIdx: number;\n\n    // Tooltip fixed positioning\n    bottom: string = \"0px\";\n    left: string = \"0px\";\n    leftPin; // position of the tooltip pin relative to left\n    isBottom: boolean = false;\n\n    constructor(\n        private zone: NgZone,\n        private changeDetectorRef: ChangeDetectorRef,\n        private sanitizer: DomSanitizer){\n\n        }\n\n    /**\n     * Add mouse listeners to a new preview document in order to display the tooltip\n     * in response to specific hover of click events\n     * @param changes\n     */\n    ngOnChanges(changes: SimpleChanges){\n        if(changes[\"previewDocument\"] && !!this.previewDocument){\n\n            if (typeof this.previewDocument.document.addEventListener !== undefined) {\n                this.document.addEventListener(\"mouseup\", this.handleMouseUp, false);\n                this.document.addEventListener(\"mousedown\", this.handleMouseDown, false);\n                this.document.addEventListener(\"mousemove\", this.handleMouseMove, false);\n                this.window.addEventListener(\"scroll\", this.handleScroll, false);\n            }\n\n        }\n\n        if(changes[\"scalingFactor\"] && this.previewDocument) {\n            setTimeout(() => this.handleMouseUp());\n        }\n    }\n\n    /**\n     * Shortcut to the preview document\n     */\n    private get document(): Document{\n        return this.previewDocument.document;\n    }\n\n    /**\n     * Shortcut to the preview Window\n     */\n    private get window(): Window {\n        return this.previewDocument.getContentWindow();\n    }\n\n    /**\n     * Control the visibility of the tooltip\n     */\n    get visibility() : \"visible\" | \"hidden\" {\n        return (this.selectedText !== \"\" || this.entityType !== \"\")? \"visible\" : \"hidden\";\n    }\n\n    /**\n     * Position the tooltip above a bounding box\n     */\n    positionTooltipAbove(box: DOMRect | ClientRect){\n        this.zone.run(() => {   // Necessary to compute the right size of the tooltip when updating the text\n            const tooltipWidth = this.tooltip.nativeElement.getBoundingClientRect().width;\n            const tooltipHeight = this.tooltip.nativeElement.getBoundingClientRect().height;\n            let left = this.scalingFactor*(box.left + 0.5*box.width) - 0.5*tooltipWidth\n            left = Math.min(Math.max(left, 0), this.scalingFactor*this.document.body.clientWidth - tooltipWidth); // Avoid tooltip overflow\n            this.left = Math.round(left)+\"px\";\n\n            const leftPin = Math.round(100 * (this.scalingFactor*(box.left + 0.5*box.width) - left) / tooltipWidth);\n            this.leftPin = this.sanitizer.bypassSecurityTrustStyle(`${leftPin}%`);\n            //absolute top positioning\n            //this.bottom = Math.round(box.top-tooltipHeight-5+this.window.scrollY)+\"px\";\n            //absolute bottom positioning\n            //this.bottom = Math.round(this.document.documentElement.clientHeight - this.window.scrollY - box.top + 5)+\"px\";\n            //fixed bottom positioning\n            if (Math.round(box.top - 5 - tooltipHeight) > 0) {\n              this.isBottom = false;\n              this.bottom = Math.round(this.scalingFactor* (this.window.innerHeight - box.top) + 5)+\"px\";\n            } else {\n              this.isBottom = true;\n              this.bottom = Math.round(this.scalingFactor* (this.window.innerHeight - box.top - box.height) - tooltipHeight - 5)+\"px\";\n            }\n            this.changeDetectorRef.detectChanges();\n        });\n    }\n\n    /**\n     * Handle mouse button down: reinitilizes selection\n     */\n    handleMouseDown = (event: MouseEvent) => {\n        //if(event.target !== this.tooltip)\n        this.selectedText = \"\";\n        //this.changeDetectorRef.detectChanges();\n    }\n\n    /**\n     * Handle mouse button up: get the selected text and display a tooltip above it\n     */\n    handleMouseUp = () => {\n        const selection = this.document.getSelection();\n        this.selectedText = selection ? selection.toString().trim() : \"\";\n        if(selection && this.selectedText){\n            const range = selection.getRangeAt(0);\n            //console.log(\"Selected text: \", text);\n            //console.log(event);\n            //console.log(range.getBoundingClientRect());\n            this.changeDetectorRef.detectChanges(); // Refresh size of tooltip\n            this.positionTooltipAbove(range.getBoundingClientRect());\n        }\n        this.changeDetectorRef.detectChanges();\n    }\n\n    private _inTime: number = 0;\n    /**\n     * Handle mouse movements. If hovering an entity and no text is selected, will display a tooltip for this entity\n     */\n    handleMouseMove = (event: MouseEvent) => {\n        if(!this.selectedText && event[\"path\"]){\n            const path = <Element[]> event[\"path\"];\n            if(path.length>0){\n                const element = path[0];\n                if(element.nodeType === 1 && element.nodeName === \"SPAN\" && (element.attributes[\"data-entity-basic\"] || element.attributes[\"data-entity-display\"])){\n                    if(this.entityType !== element.className.split(\" \")[0] || this.entityDisplay !== element.textContent){  // Tooltip not already displayed\n                        this.entityType = element.className.split(\" \")[0];    // Update text (and visibility)\n                        this.entityDisplay = element.textContent || \"\";   // Tooltip content\n                        const value = element.attributes[\"data-entity-basic\"] || element.attributes[\"data-entity-display\"];\n                        this.entityValue = value.value;\n                        const highlights = this.previewData.highlightsPerCategory[this.entityType].values\n                            .find(v => v.value === value.value);\n                        this.entityCount = highlights ? highlights.locations.length : 0;\n                        this.entityLabel = this.previewData.highlightsPerCategory[this.entityType].categoryDisplayLabel;\n\n                        const idsplt = element.id.split(\"_\");\n                        const idx = parseInt(idsplt[idsplt.length-1], 10);\n                        const entity = this.findEntity(this.entityType, this.entityValue, (_, idIndex) => idIndex === idx);\n                        this.entityIdx = entity ? entity.valueIndex : 0;\n\n                        this.changeDetectorRef.detectChanges(); // Refresh size of tooltip\n                        this.positionTooltipAbove(element.getBoundingClientRect());\n                    }\n                    this._inTime = Date.now(); // Reset the timer over an entity\n                    return;\n                }\n            }\n        }\n        // We are not hovering an entity\n        if(this.entityType){    // If still displaying the tooltip...\n            const isOverTooltip = !!event[\"path\"].find(el => el.localName === \"sq-preview-tooltip\");\n            if(!isOverTooltip) {\n                if(Date.now() - this._inTime > 200){ // 200 ms tolerance before closing tooltip\n                    this.entityType = \"\";\n                    this.entityValue = \"\";\n                    this.entityDisplay = \"\";\n                    this.entityLabel = \"\";\n                    this.entityCount = 0;\n                    this.entityIdx = 0;\n                    this.changeDetectorRef.detectChanges(); // Turn off tooltip\n                }\n            }\n            else{\n                this._inTime = Date.now(); // Reset the timer over the tooltip\n            }\n        }\n    }\n\n    /**\n     * Handle scroll events\n     */\n    handleScroll = (event) => {\n        if(this.selectedText !== \"\"){\n            this.handleMouseUp(); // Reposition tooltip above selected text\n        }\n        else if(this.entityType !== \"\"){\n            this.entityType = \"\";\n            this.entityValue = \"\";\n            this.changeDetectorRef.detectChanges(); // Turn off tooltip\n        }\n    }\n\n    /**\n     * Move to the previous entity if possible\n     * @param event\n     */\n    previousEntity(event: Event){\n        event.stopPropagation(); // stop the propagation to avoid triggering the tooltip listeners\n        if(this.entityIdx > 1){\n            // Find the index of the previous entity\n            const entity = this.findEntity(this.entityType, this.entityValue, (valueIdx,_) => valueIdx === this.entityIdx-1);\n            if (entity) {\n                const idx = entity.idIndex;\n                this.previewDocument.selectHighlight(this.entityType, idx);\n            }\n        }\n    }\n\n    /**\n     * Move to the next entity if possible\n     * @param event\n     */\n    nextEntity(event: Event){\n        event.stopPropagation(); // stop the propagation to avoid triggering the tooltip listeners\n        if(this.entityIdx < this.entityCount){\n            // Find the index of the next entity\n            const entity = this.findEntity(this.entityType, this.entityValue, (valueIdx,_) => valueIdx === this.entityIdx+1);\n            if (entity) {\n                const idx = entity.idIndex;\n                this.previewDocument.selectHighlight(this.entityType, idx);\n            }\n        }\n    }\n\n    /**\n     * Executes a clicked action button in the context of a tooltip for hovered entities\n     * @param action\n     * @param event\n     */\n    entityAction(action: Action, event: Event){\n        event.stopPropagation(); // stop the propagation to avoid triggering the tooltip listeners\n        this.zone.run(() => {\n            if(action.action) {\n                action.action(action, <any> {type: this.entityType, idx: this.entityIdx, value: this.entityValue, display: this.entityDisplay});\n            }\n        });\n    }\n\n    /**\n     * Executes a clicked action button in the context of a tooltip for text selection\n     * @param action the action to execute\n     * @param event\n     */\n    selectedTextAction(action: Action, event: Event){\n        event.stopPropagation(); // stop the propagation to avoid triggering the tooltip listeners\n        this.zone.run(() => {\n            if(action.action) {\n                action.action(action, <any> {text: this.selectedText});\n            }\n        });\n    }\n\n    /**\n     * Helper function to find the indexes of a specific entity *occurrence*. Returns both the index within all\n     * of its own occurrences: valueIndex (eg. BILL GATES 3/14) AND the index corresponding to the\n     * entity id inside the document: idIndex (eg. id=\"person_32\").\n     * @param category eg. person\n     * @param value eg. BILL GATES\n     * @param predicate function testing whether it is the entity occurrence of interest\n     * @returns an object with both indexes\n     */\n    private findEntity(entityType: string, entityValue: string, predicate: (index: number, idIndex: number) => boolean)\n            : {valueIndex: number, idIndex: number} | undefined {\n        let currentIdx = 0;\n        // For each highlight in the doc\n        for(let i=0; i<this.previewData.highlightsPerLocation['length']; i++) {\n            const highlight = this.previewData.highlightsPerLocation[i];\n            const categories = Object.keys(highlight.positionInCategories);\n            // For each value of the highlight\n            for(let j=0; j<categories.length; j++){\n                // If this is the right entity type and value\n                if(categories[j] === entityType && highlight.values[j] === entityValue) {\n                    // Increase the counter\n                    currentIdx++;\n                    // If this is the idx we are looking for, return\n                    if(predicate(currentIdx, highlight.positionInCategories[entityType])){\n                        return {valueIndex: currentIdx, idIndex: highlight.positionInCategories[entityType]};\n                    }\n                }\n            }\n        }\n        return undefined;\n    }\n\n}\n","import {Injectable, InjectionToken, Inject, Type, Optional} from \"@angular/core\";\nimport {Router} from \"@angular/router\";\nimport {Observable, Subject} from \"rxjs\";\nimport {AppService, ExprBuilder, Query} from \"@sinequa/core/app-utils\";\nimport {AuthenticationService} from \"@sinequa/core/login\";\nimport {PreviewWebService, PreviewData, AuditEventType, Record, AuditEvent, Results} from \"@sinequa/core/web-services\";\nimport {JsonObject, Utils} from \"@sinequa/core/base\";\nimport {ModalService} from \"@sinequa/core/modal\";\nimport {SearchService} from \"@sinequa/components/search\";\nimport {RecentDocumentsService} from '@sinequa/components/saved-queries';\n\nexport const enum PreviewEventType {\n    Data = \"Preview_Data\",\n    Modal = \"Preview_Modal\",\n    Route = \"Preview_Route\",\n    Window = \"Preview_Window\"\n}\n\nexport interface PreviewEvent {\n    type: PreviewEventType;\n    record?: Record;\n    query: Query;\n}\n\nexport const PREVIEW_MODAL = new InjectionToken<Type<any>>(\"PREVIEW_MODAL\");\n\n\n@Injectable({\n    providedIn: \"root\"\n})\nexport class PreviewService {\n\n    private readonly _events = new Subject<PreviewEvent>();\n    private rank: number;\n\n    constructor(\n        @Optional() @Inject(PREVIEW_MODAL) public previewModal: Type<any>,\n        private router: Router,\n        private previewWebService: PreviewWebService,\n        private appService: AppService,\n        private authenticationService: AuthenticationService,\n        private searchService: SearchService,\n        private modalService: ModalService,\n        private recentDocumentsService: RecentDocumentsService,\n        public exprBuilder: ExprBuilder) {\n\n        // Subscribe to own events and add documents to the recent documents service\n        this.events.subscribe(event => {\n            if(event.record && (event.type === PreviewEventType.Modal || event.type === PreviewEventType.Route || event.type === PreviewEventType.Window)){\n                this.recentDocumentsService.addDocument(event.record, false);\n            }\n        });\n    }\n\n    /**\n     * Triggers any event among PreviewEvent\n     */\n    public get events() : Subject<PreviewEvent> {\n        return this._events;\n    }\n\n    private makeQuery(query: Query): Query {\n        query = Utils.copy(query);\n        delete query.sort;\n        delete query.scope;\n        delete query.tab;\n        delete query.basket;\n        delete query.page;\n        delete query.queryId;\n        if (query.select) {\n            query.select = query.select.filter(value => Utils.eqNC(value.facet, \"refine\"));\n            if (query.select.length === 0) {\n                delete query.select;\n            }\n        }\n        return query;\n    }\n\n    public getPreviewData(id: string, query: Query, audit = true): Observable<PreviewData> {\n        let auditEvent: AuditEvent | undefined;\n        const record = this.searchService.getRecordFromId(id);\n        const resultId = record ? this.searchService.results?.id : undefined;\n        if (audit) {\n            auditEvent = {\n                type: AuditEventType.Doc_Preview,\n                detail: this.getAuditPreviewDetail(id, query, record, resultId)\n            };\n        }\n        query = this.makeQuery(query);\n        const observable = this.previewWebService.get(id, query, auditEvent);\n        Utils.subscribe(observable,\n            (previewData) => {\n                previewData.resultId = resultId || \"\";\n                return previewData;\n            });\n        this._events.next({type: PreviewEventType.Data, record, query});\n\n        return observable;\n    }\n\n    public makeDownloadUrl(url: string): string | undefined {\n        return url ? this.appService.updateUrlForCors(url) : undefined;\n    }\n\n    openModal(record: Record, query: Query, model: any) {\n        model.record = record;\n        model.query = query;\n\n        this._events.next({type: PreviewEventType.Modal, record, query});\n\n        this.modalService.open(this.previewModal, { model });\n    }\n\n    private getQueryStr(query: Query): string {\n        query = this.makeQuery(query);\n        return query.toJsonForQueryString();\n    }\n\n    openNewWindow(record: Record, query: Query): Window | null {\n        const params = {\n            id: record.id,\n            query: this.getQueryStr(query),\n            app: this.appService.appName\n        };\n\n        if (this.authenticationService.userOverrideActive && this.authenticationService.userOverride) {\n            params[\"overrideUser\"] = this.authenticationService.userOverride.userName;\n            params[\"overrideDomain\"] = this.authenticationService.userOverride.domain;\n        }\n        const httpParams = Utils.makeHttpParams(params);\n        const url = \"#/preview?\" + httpParams.toString();\n\n        this._events.next({type: PreviewEventType.Window, record, query});\n\n        return window.open(url, \"_blank\");\n    }\n\n    openRoute(record: Record, query: Query, path = \"preview\"): Promise<Boolean> {\n\n        this._events.next({type:PreviewEventType.Route, record, query});\n        this.rank = record.rank;\n\n        return this.router.navigate([path], {\n            queryParams: {\n                id: record.id,\n                query: this.getQueryStr(query)\n            }\n        });\n    }\n\n    /**\n     * Get the page number of a splitted document's record or undefined if\n     * it is not in fact splitted. Stores the page number in the record itself ($page property)\n     * @param record \n     */\n    getPageNumber(record: Record): number | undefined {\n        const containerid: string | undefined = record.containerid;\n        if(containerid && record.id.startsWith(containerid)) {\n            const pageNumberStr = record.id.slice(containerid.length+1);\n            if(/#\\d+#/g.test(pageNumberStr)) {\n                const pageNumber = parseInt(pageNumberStr.slice(1, pageNumberStr.length-1), 10);\n                if(!isNaN(pageNumber)) {\n                    record.$page = pageNumber;\n                    return pageNumber;\n                }\n            }\n        }\n        return undefined;\n    }\n\n    /**\n     * Returns the pages of a given record id\n     * @param containerid\n     * @param query\n     */\n    fetchPages(containerid: string, query: Query): Observable<Results> {\n        query = this.makeQuery(query);\n        query.groupBy = \"\"; // If the query web service uses GROUP BY containerid\n        query.addSelect(this.exprBuilder.makeExpr(\"containerid\", containerid));\n        return this.searchService.getResults(query);\n    }\n\n    getAuditPreviewDetail(id: string, query: Query, record?: Record, resultId?: string): JsonObject {\n        const queryLanguage = this.searchService.results?.queryAnalysis?.queryLanguage\n            || this.searchService?.query?.questionLanguage\n            || this.appService?.ccquery?.questionLanguage;\n        const collectionColumn = record?.collection;\n        const collection = !!collectionColumn ? collectionColumn[0] : Utils.split(id, \"|\")[0];\n        const rank = !!record ? record.rank : this.rank || 0;\n        return {\n            \"doc-id\": id,\n            rank: rank,\n            collection: collection,\n            source: Utils.treeFirstNode(collection),\n            resultid: resultId,\n            querylang: queryLanguage,\n            text: query.text,\n            filename: record?.filename,\n            fileext: record?.fileext,\n        }\n    }\n    \n    /**\n     * returns document's preview HTML\n     * @param url \n     * @returns document's preview HTML\n     */\n    public getHtmlPreview(url:string) {\n        return this.previewWebService.getHtmlPreview(url);\n    }\n}","import {NgModule, ModuleWithProviders, Type} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {IntlModule} from \"@sinequa/core/intl\";\nimport {WebServicesModule} from \"@sinequa/core/web-services\";\nimport {UtilsModule} from \"@sinequa/components/utils\";\nimport {PreviewDocumentIframe} from \"./preview-document-iframe.component\";\nimport {PreviewTooltip} from \"./preview-tooltip.component\";\nimport {PREVIEW_MODAL} from \"./preview.service\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        IntlModule,\n        WebServicesModule,\n        UtilsModule\n    ],\n    declarations: [\n        PreviewDocumentIframe, PreviewTooltip\n    ],\n    exports: [\n        PreviewDocumentIframe, PreviewTooltip\n    ],\n})\nexport class PreviewModule {\n    static forRoot(previewModal: Type<any>) : ModuleWithProviders<PreviewModule> {\n        return {\n            ngModule: PreviewModule,\n            providers: [\n                {provide: PREVIEW_MODAL, useValue: previewModal},\n            ]\n        };\n    }\n}","<div *ngIf=\"!similarDocuments\" class=\"d-flex flex-column {{iframeClass}}\" [ngStyle]=\"{height: height}\">\n    <sq-preview-document-iframe  [sandbox]=\"sandbox\" [downloadUrl]=\"downloadUrl\" (onPreviewReady)=\"document = $event\">\n        <sq-preview-tooltip #tooltip [previewDocument]=\"document\" [previewData]=\"data\"></sq-preview-tooltip>\n    </sq-preview-document-iframe>\n</div>\n<ul class=\"list-group\" *ngIf=\"!!similarDocuments\">\n    <li *ngFor=\"let doc of similarDocuments\" class=\"list-group-item d-flex justify-content-between align-items-center\" style=\"background-color: transparent;\">\n        <sq-result-title [record]=\"doc\" [titleLinkBehavior]=\"'open'\"></sq-result-title>\n        <div class=\"d-flex\">\n            <span class=\"badge badge-pill badge-secondary\" style=\"padding-top: 5px;\">{{100*doc.globalrelevance | number:'1.0-0'}}</span>\n            <a href=\"#\" (click)=\"openSimilarDoc(doc)\" class=\"open-record ml-2\" title=\"Open document in workspace\">\n                <i class=\"fas fa-arrow-circle-right\"></i>\n            </a>\n        </div>\n    </li>\n</ul>","import {Component, Input, Output, EventEmitter, OnChanges, SimpleChanges} from \"@angular/core\";\nimport {SafeResourceUrl} from \"@angular/platform-browser\";\nimport {Query} from '@sinequa/core/app-utils';\nimport {Record, PreviewData} from \"@sinequa/core/web-services\";\nimport {PreviewService} from \"../../preview.service\";\nimport {PreviewDocument} from \"../../preview-document\";\n\n@Component({\n    selector: \"sq-facet-preview\",\n    templateUrl: \"./facet-preview.html\",\n})\nexport class BsFacetPreview implements OnChanges {\n    @Input() record: Record;\n    @Input() sandbox: string | null;\n    @Input() query: Query;\n    @Input() height: string;\n    @Input() iframeClass: string;\n    @Input() similarDocuments: Record[];\n    @Output() recordOpened = new EventEmitter<{record: Record, query: Query, startSmall?: boolean, iframeClass?: string}>();\n    data: PreviewData;\n    document: PreviewDocument;\n    downloadUrl?: SafeResourceUrl;\n\n    constructor(\n        private previewService: PreviewService) {\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes[\"record\"] || changes[\"query\"]) {\n            this.previewService.getPreviewData(this.record.id, this.query).subscribe(\n                previewData => {\n                    this.data = previewData;\n                    this.downloadUrl = this.data ? this.previewService.makeDownloadUrl(this.data.documentCachedContentUrl) : undefined;\n                });\n        }\n    }\n\n    openSimilarDoc(doc: Record) {\n        this.recordOpened.next({\n            record: doc,\n            query: this.query,\n            startSmall: true,\n            iframeClass: this.iframeClass\n        });\n        return false;\n    }\n}","<div class=\"d-flex flex-column {{iframeClass}}\" [ngStyle]=\"{'height.%': 100}\">\n    <sq-preview-document-iframe\n                                [sandbox]=\"sandbox\"\n                                [downloadUrl]=\"downloadUrl\"\n                                [scalingFactor]=\"scalingFactor\"\n                                (onPreviewReady)=\"onPreviewReady($event)\">\n    </sq-preview-document-iframe>\n</div>\n\n<ng-template #headerTpl>\n    <sq-result-title class=\"flex-grow-1 flex-basis-0\" [record]=\"record\" [originalDocTarget]=\"originalDocTarget\" titleLinkBehavior=\"open-if-url\"></sq-result-title>\n</ng-template>\n\n<ng-template #subHeaderTpl>\n    <sq-metadata *ngIf=\"metadata && metadata.length > 0\"\n        [record]=\"record\"\n        [items]=\"metadata\"\n        [showTitles]=\"true\"\n        [showIcons]=\"true\"\n        [clickable]=\"false\">\n    </sq-metadata>\n</ng-template>\n","import { Component, Input, Output, EventEmitter, OnChanges, SimpleChanges, HostBinding, AfterViewChecked } from \"@angular/core\";\nimport { SafeResourceUrl } from \"@angular/platform-browser\";\nimport { Query } from '@sinequa/core/app-utils';\nimport { Record, PreviewData } from \"@sinequa/core/web-services\";\nimport { PreviewService } from \"../../preview.service\";\nimport { PreviewDocument, HighlightFilters } from \"../../preview-document\";\nimport { AbstractFacet } from '@sinequa/components/facet';\nimport { Action } from '@sinequa/components/action';\n\n@Component({\n  selector: 'sq-facet-preview-2',\n  templateUrl: './facet-preview.component.html',\n  styleUrls: ['./facet-preview.component.scss']\n})\nexport class BsFacetPreviewComponent2 extends AbstractFacet implements OnChanges, AfterViewChecked {\n\n  @Input() record: Record;\n  @Input() query: Query;\n  @Input() iframeClass: string;\n  @Input() sandbox : string | null;\n  @Input() height = 500;\n  @Input() scalingFactor = 0.6;\n  @Input() metadata: string[] = [];\n  @Input() expandModal = true;\n  @Input() closable = true;\n  @Input() highlightActions = true;\n  @Input() customActions: Action[];\n  @Input() filters: HighlightFilters;\n  @Input() originalDocTarget: string | undefined;\n  @Output() recordClosed = new EventEmitter<void>();\n  @Output() previewLoaded = new EventEmitter<PreviewDocument>();\n  @HostBinding('style.height.px') _height: number = this.height;\n\n  private closeAction: Action;\n  private expandModalAction: Action;\n  private toggleEntitiesAction: Action;\n  private toggleExtractsAction: Action;\n  private minimizeAction: Action;\n  private maximizeAction: Action;\n\n  data?: PreviewData;\n  document?: PreviewDocument;\n  downloadUrl?: SafeResourceUrl;\n\n  private readonly scaleFactorThreshold = 0.1;\n  private loaded = false;\n\n  constructor(\n      private previewService: PreviewService) {\n\n    super();\n\n    this.closeAction = new Action({\n      icon: \"fas fa-times\",\n      title: \"msg#facet.preview.closeTitle\",\n      action: () => {\n        this.recordClosed.next();\n      }\n    });\n\n    this.expandModalAction = new Action({\n      icon: \"far fa-window-maximize\",\n      title: \"msg#facet.preview.expandTitle\",\n      action: () => {\n        this.previewService.openModal(this.record, this.query, {\n          displaySimilarDocuments: false,\n          metadata: this.metadata\n        });\n      }\n    });\n\n    this.toggleEntitiesAction = new Action({\n      icon: \"fas fa-lightbulb\",\n      title: \"msg#facet.preview.toggleEntities\",\n      selected: true,\n      action: (action) => {\n        action.selected = !action.selected;\n        if(this.data?.highlightsPerCategory) {\n          Object.keys(this.data.highlightsPerCategory)\n            .filter(value => value !== \"extractslocations\" && value !== \"matchlocations\")\n            .forEach(cat =>\n              this.document?.toggleHighlight(cat, action.selected!)\n            );\n        }\n      }\n    });\n\n    this.toggleExtractsAction = new Action({\n        icon: \"fas fa-highlighter\",\n        title: \"msg#facet.preview.toggleExtracts\",\n        selected: true,\n        action: (action) => {\n            action.selected = !action.selected;\n            this.document?.toggleHighlight(\"matchlocations\", action.selected);\n            this.document?.toggleHighlight(\"extractslocations\", action.selected);\n        }\n    });\n\n    this.maximizeAction = new Action({\n      icon: \"fas fa-search-plus\",\n      title: \"msg#facet.preview.maximize\",\n      action: () => {\n        this.scalingFactor = this.scalingFactor + this.scaleFactorThreshold;\n      }\n    });\n\n    this.minimizeAction = new Action({\n      icon: \"fas fa-search-minus\",\n      title: \"msg#facet.preview.minimize\",\n      disabled: this.scalingFactor === 0.1,\n      action: () => {\n        this.scalingFactor = Math.round(Math.max(0.1, this.scalingFactor - this.scaleFactorThreshold) * 100) / 100;\n      },\n      updater: (action) => {\n        action.disabled = this.scalingFactor === 0.1;\n      }\n    });\n\n  }\n\n  get actions(): Action[] {\n    const actions: Action[] = [];\n    if(this.customActions){\n      actions.push(...this.customActions);\n    }\n    if(this.highlightActions) {\n      actions.push(this.toggleExtractsAction, this.toggleEntitiesAction);\n    }\n    this.minimizeAction.update();\n    actions.push(this.minimizeAction, this.maximizeAction);\n    if(this.expandModal){\n      actions.push(this.expandModalAction);\n    }\n    if(this.closable){\n      actions.push(this.closeAction);\n    }\n    return actions;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes[\"record\"]) {\n      this.previewService.getPreviewData(this.record.id, this.query).subscribe(\n        previewData => {\n          this.data = previewData;\n          this.downloadUrl = this.data ? this.previewService.makeDownloadUrl(this.data.documentCachedContentUrl) : undefined;\n        });\n      this.downloadUrl = undefined;\n      this.data = undefined;\n      this.document = undefined;\n    }\n    if(changes[\"height\"] || changes[\"scalingFactor\"]) {\n      this._height = this.height;\n    }\n  }\n\n  ngAfterViewChecked() {\n    if (this.document && this.loaded) {\n      this.loaded = false;\n      // as now view is checked, emit event\n      this.previewLoaded.emit(this.document);\n    }\n  }\n\n  onPreviewReady(document: PreviewDocument) {\n    this.document = document;\n    if (this.document && this.filters) {\n      this.document.filterHighlights(this.filters);\n    }\n\n    this.loaded = true;\n  }\n}\n","<div class=\"card sq-facet\">\n    <div class=\"card-header\">{{'msg#preview.highlightsTitle' | sqMessage}}</div>\n    <ng-container *ngIf=\"noData; else normalCase\">\n        <div class=\"card-body noEntityToHighlightMessage\">\n            {{\"msg#preview.noEntityToHighlight\" | sqMessage}}\n        </div>\n    </ng-container>\n    <ng-template #normalCase>\n        <div class=\"card-body\">\n            <div class=\"currentSelection\">\n                <div class=\"selectedHighlightTitle\">{{\"msg#preview.selectedHighlight\" | sqMessage}}:</div>\n                <div class=\"currentSelectionPanel\">\n                    <div *ngIf=\"currentValue || currentCategories; else noSelection\" class=\"selectedHighlight\">\n                        <div class=\"currentCategories\">\n                            <span *ngFor=\"let categoryId of currentCategories\">\n                                <span class=\"fas fa-bullseye {{ categoryIconClass(categoryId) }} {{ categoryId }}\"></span>\n                                <span class=\"currentCategoryLabel\">{{categoryDisplayLabel(categoryId) | sqMessage: categoryLabelPipeParams(categoryId)}}</span>\n                            </span>\n                        </div>\n                        <div class=\"selectedHighlightValue\" [innerHTML]=\"currentValue\"></div>\n                    </div>\n                    <ng-template #noSelection>\n                        <div class=\"noSelectionMessage\">\n                            {{\"msg#preview.noSelectedHighlight\" | sqMessage}}\n                        </div>\n                        <div>&nbsp;</div>\n                    </ng-template>\n                </div>\n            </div>\n            <div class=\"navigation-buttons\">\n                <button class=\"btn btn-secondary\" [disabled]=\"!previewReady\" (click)=\"first()\" title=\"{{'msg#preview.firstHighlightButtonAltText' | sqMessage}}\">\n                    <span class=\"fas fa-fast-backward\"></span>\n                </button>\n                <button class=\"btn btn-secondary\" [disabled]=\"!previewReady\" (click)=\"previous()\" title=\"{{'msg#preview.previousHighlightButtonAltText' | sqMessage}}\">\n                    <span class=\"fas fa-step-backward\"></span>\n                </button>\n                <div class=\"counter-container\">\n                    <span class=\"counter\">{{current | sqNumber}} / {{total | sqNumber}}</span>\n                    <span class=\"counter ghost\">{{total | sqNumber}} / {{total | sqNumber}}</span>\n                </div>\n                <button class=\"btn btn-secondary\" [disabled]=\"!previewReady\" (click)=\"next()\" title=\"{{'msg#preview.nextHighlightButtonAltText' | sqMessage}}\">\n                    <span class=\"fas fa-step-forward\"></span>\n                </button>\n                <button class=\"btn btn-secondary\" [disabled]=\"!previewReady\" (click)=\"last()\" title=\"{{'msg#preview.lastHighlightButtonAltText' | sqMessage}}\">\n                    <span class=\"fas fa-fast-forward\"></span>\n                </button>\n            </div>\n        </div>\n        <div class=\"card-body filterPanel\">\n            <div class=\"filterPanelTitle\">\n                <span class=\"fas fa-filter\"></span>{{ \"msg#preview.highlightFilters.title\" | sqMessage }}\n            </div>\n            <div class=\"batchSelectButtonsContainer\" *ngIf=\"nonEmptyCategoryIds.length > 1\">\n                <div class=\"batchSelectButtonsPaddingPlaceholder\"></div>\n                <div class=\"batchSelectButtonsPaddingPlaceholder\"></div>\n                <div class=\"batchSelectButtons\">\n                    <div class=\"batchSelectButton\">\n                        <button class=\"btn\" [disabled]=\"!previewReady || this.allSelected\" (click)=\"selectAll()\"\n                                title=\"{{'msg#preview.highlightFilters.keepAll' | sqMessage}}\">\n                            <span class=\"far fa-check-square\"></span>\n                            {{\"msg#preview.highlightFilters.keepAll\" | sqMessage}}\n                        </button>\n                    </div>\n                    <div class=\"batchSelectButton\">\n                        <button class=\"btn\" [disabled]=\"!previewReady || this.noneSelected\" (click)=\"selectNone()\"\n                                title=\"{{'msg#preview.highlightFilters.keepNone' | sqMessage}}\">\n                            <span class=\"fas fa-times\"></span>\n                            {{\"msg#preview.highlightFilters.keepNone\" | sqMessage}}\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"filters\">\n                <div *ngFor=\"let categoryId of nonEmptyCategoryIds\" class=\"sq-highlight\">\n                    <div class=\"categoryIcon\">\n                        <span class=\"fas fa-bullseye {{ categoryIconClass(categoryId) }} {{ categoryId }}\"></span>\n                    </div>\n                    <div class=\"categoryLabel\">\n                        {{getCategoryHighlightData(categoryId)?.categoryDisplayLabelPlural | sqMessage: categoryLabelPipeParams(categoryId)}}:\n                    </div>\n                    <div class=\"categoryFilter\">\n                        <ng-container *ngIf=\"categoryHasMultipleValues(categoryId); else singleValue\">\n                            <select class=\"custom-select\" [(ngModel)]=\"navigationState.filters[categoryId]\" [compareWith]=\"compareFilters\" (ngModelChange)=\"selectFilter(categoryId, $event)\">\n                                <option [ngValue]=\"keepAllFilter\">{{getCategoryHighlightData(categoryId)?.categoryFilterAllLabel | sqMessage}} ({{getHighlightValueCount(categoryId) | sqNumber}})</option>\n                                <option [ngValue]=\"keepNoneFilter\">{{getCategoryHighlightData(categoryId)?.categoryFilterNoneLabel | sqMessage}}</option>\n                                <option class=\"selectSeparator\" disabled>&nbsp;</option>\n                                <option *ngFor=\"let entityValue of this.getCategoryHighlightData(categoryId)?.values\" [ngValue]=\"newFilter(entityValue.value)\">{{entityValue.displayValue}}</option>\n                            </select>\n                        </ng-container>\n                        <ng-template #singleValue>\n                            <select class=\"custom-select\" [(ngModel)]=\"navigationState.filters[categoryId]\" [compareWith]=\"compareFilters\" (ngModelChange)=\"selectFilter(categoryId, $event)\">\n                                <option [ngValue]=\"keepAllFilter\">\n                                    {{getCategoryHighlightData(categoryId)?.categoryFilterAllLabel | sqMessage}}\n                                    <ng-container *ngIf=\"getCategoryHighlightData(categoryId)?.values[0].displayValue as displayValue\">\n                                        ({{displayValue}})\n                                    </ng-container>\n                                </option>\n                                <option [ngValue]=\"keepNoneFilter\">{{getCategoryHighlightData(categoryId)?.categoryFilterNoneLabel | sqMessage}}</option>\n                            </select>\n                        </ng-template>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </ng-template>\n</div>","import { Component, Input, OnChanges, SimpleChanges} from \"@angular/core\";\nimport { HighlightDataPerCategory, CategoryHighlightData, HighlightDataPerLocation, PreviewData } from \"@sinequa/core/web-services\";\nimport { Utils } from \"@sinequa/core/base\";\nimport { PreviewDocument, HighlightCategoryFilterState, HighlightCategoryFilterChoice } from \"../../preview-document\";\n\n\nexport interface HighlightNavigationState {\n    current: number;\n    filters: { [key: string] : HighlightCategoryFilterState };\n}\n\n\n@Component({\n    selector: \"sq-preview-highlights\",\n    templateUrl: \"./preview-highlights.html\",\n    styleUrls: [\"./preview-highlights.scss\"]\n})\nexport class BsPreviewHighlights implements OnChanges {\n\n    @Input() previewDocument: PreviewDocument;\n    @Input() previewData: PreviewData;\n\n    // Highlight data retrieved by the server\n    public highlightDataPerCategory?: HighlightDataPerCategory;\n    private highlightDataPerLocation?: HighlightDataPerLocation;\n\n    // Selected entity & filters (the .filters[category] are the NgModel of the select elements)\n    public navigationState: HighlightNavigationState;\n\n    // highlight data resulting from filtering\n    private filteredHighlightData?: HighlightDataPerLocation;\n\n\n    ngOnChanges(changes: SimpleChanges) {\n        if(changes[\"previewData\"]){\n            this.initialize();\n        }\n        if (changes[\"previewDocument\"]) {\n            if (this.previewReady) {\n                this.moveToFirstSearchTerm();\n            }\n        }\n    }\n\n    private initialize(): void {\n        this.highlightDataPerCategory = !this.previewData ? undefined : this.previewData.highlightsPerCategory;\n        this.highlightDataPerLocation = !this.previewData ? undefined : this.previewData.highlightsPerLocation;\n        this.navigationState = new SimpleHighlightNavigationState(this.nonEmptyCategoryIds);\n        this.reset();\n    }\n\n    /**\n     * Called on init and when non-value filters are clicked\n     * Resets the navigationState entity selection.\n     * Applies the filters to the preview document.\n     * Updates the filtered data.\n     */\n    public reset(): void {\n        this.navigationState.current = -1;  // Resets the navigationState entity selection.\n        if(this.previewReady)               // Applies the filters to the preview document.\n            this.previewDocument.filterHighlights(this.navigationState.filters);\n        // Updates the filtered data.\n        this.filteredHighlightData = this.highlightDataPerLocation ?\n            new FilteredHighlightDataPerLocation(this.highlightDataPerLocation, this.navigationState.filters) : undefined;\n    }\n\n    /**\n     * Selects the first match location (highlight classes and scrolls to it)\n     */\n    private moveToFirstSearchTerm(): void {\n        if (this.filteredHighlightData) {\n            for (let i = 0, ic = this.total; i < ic; i++) {\n                const highlight = this.filteredHighlightData[i];\n                if (highlight.positionInCategories) {\n                    let category = \"term1\";\n                    let position = highlight.positionInCategories[category];\n                    if (!Utils.isNumber(position)) {\n                        category = \"matchlocations\";\n                        position = highlight.positionInCategories[category];\n                    }\n                    if (Utils.isNumber(position)) {\n                        this.navigationState.current = i;\n                        this.previewDocument.selectHighlight(category, position);\n                        break;\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Index of currently selected entity (from 1)\n     */\n    get current(): number {\n        return this.navigationState.current + 1;\n    }\n\n    /**\n     * No categories to highlight\n     */\n    get noData(): boolean {\n        return this.nonEmptyCategoryIds.length === 0;\n    }\n\n    /**\n     * Total number of highlights\n     */\n    get total(): number {\n        return this.filteredHighlightData ? this.filteredHighlightData.size() : 0;\n    }\n\n    /**\n     * @returns true when the document is ready to be interacted with\n     */\n    get previewReady(): boolean {\n        return !!this.previewDocument;\n    }\n\n    /**\n     * Returns the currently selected entity/match/extract based on the PreviewData\n     * or potentially by fetching it directly from the HTML document.\n     */\n    get currentValue(): string {\n        if (this.navigationState.current < 0 || !this.filteredHighlightData) {\n            return \"\";\n        }\n        const result: string = this.filteredHighlightData[this.navigationState.current].displayValue;\n        if (result) {\n            return result;\n        }\n        const values: string[] = this.filteredHighlightData[this.navigationState.current].values;\n        if (values && values.length > 0 && values[0] && values[0].length > 0) {\n            return values[0];\n        }\n        if (Object.keys(this.filteredHighlightData[this.navigationState.current].positionInCategories).length === 1\n                && this.filteredHighlightData[this.navigationState.current].positionInCategories[\"extractslocations\"]) {\n            return this.previewDocument.getHighlightText(\n                \"extractslocations\",\n                this.filteredHighlightData[this.navigationState.current].positionInCategories[\"extractslocations\"]);\n        }\n        return \"\";\n    }\n\n    /**\n     * Get categories of the currently selected entity/match/extract\n     * based on the filtered Highlight data per location\n     */\n    get currentCategories(): string[] {\n        const result: string[] = [];\n        if (this.navigationState.current < 0 || !this.filteredHighlightData || this.navigationState.current >= this.filteredHighlightData.size()) {\n            return result;\n        }\n        for (const categoryId in this.filteredHighlightData[this.navigationState.current].positionInCategories) {\n            result.push(categoryId);\n        }\n        return result;\n    }\n\n    public categoryIconClass(categoryId: string): string {\n        if (categoryId.startsWith(\"term\")) {\n            return \"far fa-flag\";\n        }\n        return \"sq-icon-\" + categoryId;\n    }\n\n    public getCategoryHighlightData(categoryId: string): CategoryHighlightData | undefined {\n        return this.highlightDataPerCategory ? this.highlightDataPerCategory[categoryId] : undefined;\n    }\n\n    public categoryDisplayLabel(categoryId: string): string {\n        return this.highlightDataPerCategory ? this.highlightDataPerCategory[categoryId].categoryDisplayLabel : \"\";\n    }\n\n    public categoryLabelPipeParams(categoryId: string): any {\n        if (!categoryId.startsWith(\"term\")) {\n            return {};\n        }\n        const index = Number(categoryId.slice(\"term\".length));\n        if (isNaN(index)) {\n            return {};\n        }\n        return {values: {index: index}};\n    }\n\n\n    /**\n     * Returns the list of entity categories that contain values\n     */\n    get nonEmptyCategoryIds(): string[] {\n        const result: string[] = [];\n        for (const categoryId in this.highlightDataPerCategory) {\n            if (!this.categoryIsEmpty(categoryId, this.highlightDataPerCategory)) {\n                result.push(categoryId);\n            }\n        }\n        return result;\n    }\n\n    private categoryIsEmpty(categoryId: string, highlightData : HighlightDataPerCategory): boolean {\n        return highlightData[categoryId] == null\n            || highlightData[categoryId].values == null\n            || highlightData[categoryId].values.length <= 0;\n    }\n\n    /**\n     * @returns true if there is more than one option per category\n     * @param categoryId the category id\n     */\n    public categoryHasMultipleValues(categoryId: string): boolean {\n        return this.getHighlightValueCount(categoryId) > 1;\n    }\n\n    /**\n     * @returns the number of options per category\n     * @param categoryId the category id\n     */\n    public getHighlightValueCount(categoryId: string): number {\n        if (!this.highlightDataPerCategory || this.categoryIsEmpty(categoryId, this.highlightDataPerCategory)) {\n            return 0;\n        }\n        const values = this.highlightDataPerCategory[categoryId].values;\n        if (values == null) {\n            return 0;\n        }\n        return values.length;\n    }\n\n\n    // Navigation buttons handlers\n\n    first() {\n        if (this.navigationState.current > 0) {\n            this.navigationState.current = 0;\n            this.selectHighlight();\n        }\n    }\n\n    previous() {\n        if (this.navigationState.current > 0) {\n            this.navigationState.current--;\n            this.selectHighlight();\n        }\n    }\n\n    next() {\n        if (this.navigationState.current < this.total - 1) {\n            this.navigationState.current++;\n            this.selectHighlight();\n        }\n    }\n\n    last() {\n        if (this.navigationState.current !== this.total - 1) {\n            this.navigationState.current = this.total - 1;\n            this.selectHighlight();\n        }\n    }\n\n    private selectHighlight(): void {\n        if (this.filteredHighlightData) {\n            const positionInCategories: { [categoryId: string]: number } = this.filteredHighlightData[this.navigationState.current].positionInCategories;\n            const firstCategory: string = Object.keys(positionInCategories)[0];\n            this.previewDocument.selectHighlight(firstCategory, positionInCategories[firstCategory]);\n        }\n    }\n\n    public selectAll(): void {\n        for (const categoryId in this.navigationState.filters) {\n            this.navigationState.filters[categoryId] = this.keepAllFilter;\n        }\n        this.reset();\n    }\n\n    public selectNone(): void {\n        for (const categoryId in this.navigationState.filters) {\n            this.navigationState.filters[categoryId] = this.keepNoneFilter;\n        }\n        this.reset();\n    }\n\n    get allSelected(): boolean {\n        for (const categoryId in this.navigationState.filters) {\n            const filter: HighlightCategoryFilterState = this.navigationState.filters[categoryId];\n            if (filter && filter.choice !== HighlightCategoryFilterChoice.All) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    get noneSelected(): boolean {\n        for (const categoryId in this.navigationState.filters) {\n            const filter: HighlightCategoryFilterState = this.navigationState.filters[categoryId];\n            if (!filter || filter.choice !== HighlightCategoryFilterChoice.None) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n\n    // Entity filters\n\n    // Trivial filters\n    public keepAllFilter: HighlightCategoryFilterState = new SimpleHighlightCategoryFilterState();\n    public keepNoneFilter: HighlightCategoryFilterState = new SimpleHighlightCategoryFilterState(HighlightCategoryFilterChoice.None);\n\n    // Filter created for each option\n    public newFilter(value: string) {\n        return new SimpleHighlightCategoryFilterState(value);\n    }\n\n    // A filter was clicked\n    selectFilter(categoryId: string, value: HighlightCategoryFilterState){\n        //console.log(categoryId, value);\n\n        // If a specific entity/extract is selected we want to select it, rather than filter other entities\n        if(value.choice === HighlightCategoryFilterChoice.Value){\n\n            // First, let's cancel value filters EXCEPT the one that was just selected\n            for(const key in this.navigationState.filters){\n                if(key !== categoryId && this.navigationState.filters[key] !== this.keepAllFilter && this.navigationState.filters[key] !== this.keepNoneFilter){\n                    this.navigationState.filters[key] = this.keepAllFilter;\n                }\n            }\n\n            // Search the entity ID\n            let highlight;\n            for(const key in this.highlightDataPerLocation){\n                highlight = this.highlightDataPerLocation[key];\n                if(highlight.positionInCategories[categoryId] && highlight.values.includes(value.filterValue)){\n                    break;\n                }\n            }\n\n            if(highlight){\n                this.previewDocument.selectHighlight(categoryId, highlight.positionInCategories[categoryId]);\n            }\n\n        }\n        else {\n\n            // Cancel value filters\n            for(const key in this.navigationState.filters){\n                if(this.navigationState.filters[key] !== this.keepAllFilter && this.navigationState.filters[key] !== this.keepNoneFilter){\n                    this.navigationState.filters[key] = this.keepAllFilter;\n                }\n            }\n\n            // Reset just applies the (non-value) filters as they are and removes selection\n            this.reset();\n\n        }\n    }\n\n    /**\n     * Comparator allowing to sort the filters in the select\n     */\n    public compareFilters(filter1: HighlightCategoryFilterState, filter2: HighlightCategoryFilterState): boolean {\n        return SimpleHighlightCategoryFilterState.compare(filter1, filter2);\n    }\n\n\n}\n\n\n\n\n// Implementation of data structures\n\nclass SimpleHighlightNavigationState {\n\n    current: number;\n    filters: { [key: string] : HighlightCategoryFilterState};\n\n    constructor(categories: string[]) {\n        this.current = -1;  // No selection\n        this.filters = {};\n        for (const category of categories) {\n            this.filters[category] = new SimpleHighlightCategoryFilterState(); // All entities visible by default\n        }\n    }\n}\n\n\nclass SimpleHighlightCategoryFilterState implements HighlightCategoryFilterState {\n    readonly choice: HighlightCategoryFilterChoice = HighlightCategoryFilterChoice.All;\n    private _filterValue: string = \"\";\n\n    constructor(param?: string | HighlightCategoryFilterChoice) {\n        if (param == null) {\n            return;\n        }\n        if (typeof param === \"string\") {\n            this.choice = HighlightCategoryFilterChoice.Value;\n            this._filterValue = param;\n        } else {\n            this.choice = param;\n        }\n    }\n\n    get filterValue(): string {\n        if (this.choice === HighlightCategoryFilterChoice.Value) {\n            return this._filterValue;\n        }\n        return \"\";\n    }\n\n    public static compare(filter1: HighlightCategoryFilterState, filter2: HighlightCategoryFilterState) {\n        if(filter1 && filter2) {\n            if(filter1.choice !== filter2.choice) {\n                return false;\n            }\n            return filter1.choice !== HighlightCategoryFilterChoice.Value\n                || filter1.filterValue === filter2.filterValue;\n        }\n        return filter1 === filter2;\n    }\n}\n\n\nclass FilteredHighlightDataPerLocation implements HighlightDataPerLocation {\n\n    [index: number]: {\n        start: number,\n        length: number,\n        values: string[],\n        displayValue: string,\n        positionInCategories: { [category: string]: number }\n    };\n\n    public constructor(baseData: HighlightDataPerLocation, filters: { [key: string] : HighlightCategoryFilterState }) {\n        let counter: number = 0;\n        for (const i in baseData) {\n            const categories = !baseData[i].positionInCategories ? undefined : Object.keys(baseData[i].positionInCategories);\n            if (categories && this.locationIsIncluded(baseData[i].values, categories, filters)) {\n                this[counter] = baseData[i];\n                counter++;\n            }\n        }\n    }\n\n    size(): number {\n        return Object.keys(this).length;\n    }\n\n    public locationIsIncluded(values: string[], categories: string[], filters: { [key: string] : HighlightCategoryFilterState }): boolean {\n        if (!categories) {\n            return false;\n        }\n        for (const category of categories) {\n            if (filters[category] &&\n                (filters[category].choice === HighlightCategoryFilterChoice.All\n                || filters[category].choice === HighlightCategoryFilterChoice.Value && values != null && values.includes(filters[category].filterValue))) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n","<div *ngIf=\"!!originalDocumentUrl\" class=\"card sq-facet\">\n    <div class=\"card-body\">\n        <nav>\n            <ul class=\"nav nav-pills nav-stacked\">\n                <li class=\"nav-item\">\n                    <a href=\"{{originalDocumentUrl}}\" (click)=\"click()\" class=\"nav-link originalDocumentLink\" target=\"_blank\">\n                        <span class=\"far fa-file sq-icon-file-{{record.fileext}}\"></span> {{'msg#preview.originalDocument' | sqMessage}}\n                    </a>\n                </li>\n            </ul>\n        </nav>\n    </div>\n</div>","import {Component, Input, OnChanges} from \"@angular/core\";\nimport {Record} from \"@sinequa/core/web-services\";\nimport {SearchService} from \"@sinequa/components/search\";\n\n@Component({\n    selector: \"sq-preview-links\",\n    // For highlight buttons...\n    // http://stackoverflow.com/questions/21245541/min-and-max-width-mess-up-text-align-center\n    templateUrl: \"./preview-links.html\",\n    styleUrls: [\"./preview-links.css\"]\n})\nexport class BsPreviewLinks implements OnChanges {\n    @Input() record: Record;\n    @Input() resultId: string;\n    originalDocumentUrl: string;\n\n    constructor(\n        private searchService: SearchService) {\n    }\n\n    public ngOnChanges() {\n        this.originalDocumentUrl = this.record.url1;\n    }\n\n    click() {\n        this.searchService.notifyOpenOriginalDocument(this.record, this.resultId);\n    }\n}","<sq-facet-card *ngIf=\"documents != null && documents.length > 0\" [title]=\"'msg#preview.similarDocumentsTitle'\">\n    <div class=\"card-body collapse show\" id=\"similarDocumentsBody\">\n        <ng-container *ngFor=\"let document of documents\">\n            <ng-container *ngIf=\"document\">\n                <div class=\"similarDocument\" (click)=\"onLinkClick(document)\" >\n                    <div class=\"similarDocumentIcon {{documentIconClass(document)}}\"></div>\n                    <a class=\"similarDocumentTitle\" href=\"javascript:void(0)\" >{{ document.title }}</a>\n                </div>\n            </ng-container>\n        </ng-container>\n    </div>\n</sq-facet-card>","import { Component, Input, OnChanges, ChangeDetectorRef } from \"@angular/core\";\nimport { Record, SimilarDocumentsWebService } from \"@sinequa/core/web-services\";\nimport { Query } from \"@sinequa/core/app-utils\";\nimport { PreviewService } from \"../../preview.service\";\n\n@Component({\n    selector: \"sq-similar-documents\",\n    templateUrl: \"./similar-documents.html\"\n})\nexport class BsSimilarDocuments implements OnChanges {\n    @Input() private sourceDocumentId: string;\n    @Input() private query: Query;\n    private documentList: Record[];\n\n    public get documents(): Record[] {\n        return this.documentList;\n    }\n\n    public constructor(\n        private similarDocumentsService: SimilarDocumentsWebService,\n        private previewService: PreviewService,\n        private changeDetectorRef: ChangeDetectorRef) {\n    }\n\n    public ngOnChanges(): void {\n        if (this.sourceDocumentId == null) {\n            this.documentList = [];\n            return;\n        }\n        this.similarDocumentsService.get(this.sourceDocumentId, this.query.name).subscribe(\n            (results) => {\n                this.documentList = results;\n                this.changeDetectorRef.markForCheck();\n            }\n        );\n    }\n\n    public documentIconClass(document: Record): string {\n        const documentFormat = document.fileext;\n        if (!documentFormat) {\n            return \"far fa-file\";\n        }\n        return \"far fa-file sq-icon-file-\" + document.fileext;\n    }\n\n    public onLinkClick(document: Record): void {\n        this.previewService.openNewWindow(document, this.query);\n    }\n}\n","<div *ngIf=\"!!previewData\" class=\"container-fluid sq-preview\">\n    <div class=\"row sq-row\">\n        <div class=\"col-lg-3 sq-col {{leftPaneAdditionalClasses}}\">\n            <div class=\"sq-preview-bar\">\n                <sq-preview-links class=\"d-block mb-3\"\n                    [record]=\"previewData.record\" \n                    [resultId]=\"previewData.resultId\">\n                </sq-preview-links>\n                <sq-preview-highlights class=\"d-block mb-3\"\n                    [previewDocument]=\"previewDocument\"\n                    [previewData]=\"previewData\">\n                </sq-preview-highlights>\n                <sq-facet-card [title]=\"'msg#preview.documentPropertiesTitle'\" class=\"d-block mb-3\">\n                    <div class=\"card-body collapse show\" id=\"documentPropertiesBody\">\n                        <sq-metadata *ngIf=\"previewData.record\" [record]=\"previewData.record\" [items]=\"metadata\" [showTitles]=\"false\" [showIcons]=\"true\" [clickable]=\"false\">\n                        </sq-metadata>\n                    </div>\n                </sq-facet-card>\n                <sq-similar-documents *ngIf=\"displaySimilarDocuments\" class=\"d-block mb-3\"\n                    [sourceDocumentId]=\"previewData.record.id\" [query]=\"query\">\n                </sq-similar-documents>\n            </div>\n        </div>\n        <div class=\"col-lg-9 sq-col d-flex flex-column\">\n            <sq-preview-document-iframe \n                [sandbox] = \"sandbox\" \n                [downloadUrl]=\"downloadUrl\" \n                (onPreviewReady)=\"onPreviewReady($event)\">\n                <sq-preview-tooltip #tooltip\n                    [previewDocument]=\"previewDocument\"\n                    [previewData]=\"previewDocument\">\n                </sq-preview-tooltip>\n            </sq-preview-document-iframe>\n        </div>\n    </div>\n</div>","import { Component, Input, OnChanges, SimpleChanges, ChangeDetectorRef } from \"@angular/core\";\nimport { SafeResourceUrl } from '@angular/platform-browser';\nimport { PreviewData } from \"@sinequa/core/web-services\";\nimport { Query } from \"@sinequa/core/app-utils\";\nimport { PreviewService } from \"../../preview.service\";\nimport { PreviewDocument } from \"../../preview-document\";\n\n\n@Component({\n    selector: \"sq-preview-panel\",\n    templateUrl: \"./preview-panel.html\",\n    styleUrls: [\"./preview-panel.scss\"]\n})\nexport class BsPreviewPanel implements OnChanges {\n    @Input() query: Query;\n    @Input() previewData: PreviewData;\n    @Input() sandbox: string;\n    @Input() displaySimilarDocuments: boolean;\n    @Input() metadata: string[];\n    @Input() leftPaneAdditionalClasses: string;\n\n    downloadUrl?: SafeResourceUrl;\n    previewDocument: PreviewDocument;\n\n    constructor(\n        private previewService: PreviewService,\n        private changeDetectorRef: ChangeDetectorRef) {\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes[\"previewData\"]) {\n            this.downloadUrl = this.previewData ? this.previewService.makeDownloadUrl(this.previewData.documentCachedContentUrl) : undefined;\n        }\n    }\n\n    onPreviewReady(previewDocument: PreviewDocument){\n        this.previewDocument = previewDocument;\n        this.changeDetectorRef.markForCheck();\n    }\n}","<div class=\"modal-content sq-preview-popup\">\n    <sq-modal \n        [title]=\"recordTitle\"\n        [showFooter]=\"false\">\n        <div header *ngIf=\"showPreviousNext\" class=\"previousNextDocumentButtons\">\n            <button class=\"btn btn btn-outline-primary {{!previousEnabled ? 'disabled' : ''}}\" (click)=\"previous()\">\n                <span class=\"fas fa-arrow-left\" aria-hidden=\"true\"></span><span *ngIf=\"showPreviousNextText\"> {{'msg#preview.previousDocument' | sqMessage}}</span>\n            </button>\n            <button class=\"btn btn btn-outline-primary {{!nextEnabled ? 'disabled' : ''}}\" (click)=\"next()\">\n                <span class=\"fas fa-arrow-right\" aria-hidden=\"true\"></span><span *ngIf=\"showPreviousNextText\"> {{'msg#preview.nextDocument' | sqMessage}}</span>\n            </button>\n        </div>\n        <sq-preview-panel [leftPaneAdditionalClasses]=\"'d-none d-lg-block'\" [query]=\"model.query\" [previewData]=\"previewData\" [displaySimilarDocuments]=\"model.displaySimilarDocuments\" [metadata]=\"model.metadata\">\n        </sq-preview-panel>\n    </sq-modal>\n</div>","import {Component, OnInit, OnDestroy, ChangeDetectorRef, Inject} from \"@angular/core\";\nimport {Subscription} from \"rxjs\";\nimport {Query} from \"@sinequa/core/app-utils\";\nimport {Record} from \"@sinequa/core/web-services\";\nimport {MODAL_MODEL} from \"@sinequa/core/modal\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {PreviewData} from \"@sinequa/core/web-services\";\nimport {SearchService} from \"@sinequa/components/search\";\nimport {PreviewService} from \"../../preview.service\";\nimport {UIService} from \"@sinequa/components/utils\";\n\nexport interface PreviewPopupModel {\n    record: Record;\n    query: Query;\n    displaySimilarDocuments: boolean;\n    metadata: string[];\n}\n\n@Component({\n    selector: \"sq-preview-popup\",\n    templateUrl: \"./preview-popup.html\",\n    styleUrls: [\"./preview-popup.css\"]\n})\nexport class BsPreviewPopup implements OnInit, OnDestroy {\n    private screenSize: string;\n    private resizeSubscription: Subscription;\n    previewData: PreviewData;\n    private previewDataError: boolean;\n\n    constructor(\n        @Inject(MODAL_MODEL) public model: PreviewPopupModel,\n        public searchService: SearchService,\n        public previewService: PreviewService,\n        protected uiService: UIService,\n        private changeDetectorRef: ChangeDetectorRef) {\n    }\n\n    ngOnInit() {\n        this.screenSize = this.uiService.screenSize;\n        this.resizeSubscription = Utils.subscribe(this.uiService.resizeEvent,\n            (event) => {\n                if (this.screenSize !== this.uiService.screenSize) {\n                    this.screenSize = this.uiService.screenSize;\n                    this.changeDetectorRef.markForCheck();\n                }\n            });\n        this.updatePreviewData(this.model.record.id);\n    }\n\n    public ngOnDestroy(): void {\n        this.resizeSubscription.unsubscribe();\n    }\n\n    get currentId(): string {\n        if (this.previewData && this.previewData.record) {\n            return this.previewData.record.id;\n        }\n        return \"\";\n    }\n\n    private updatePreviewData(id: string) {\n        this.previewService.getPreviewData(id, this.model.query).subscribe(\n            previewData => {\n                this.previewData = previewData;\n                this.previewDataError = false;\n                this.changeDetectorRef.markForCheck();\n            },\n            error => {\n                this.previewDataError = true;\n            }\n        );\n    }\n\n    public get recordTitle(): string {\n        if (this.previewData && this.previewData.record != null) {\n            return this.previewData.record.title;\n        }\n        return this.previewDataError ? \"msg#preview.noDocumentDataErrorPopupTitle\" : \"\";\n    }\n\n    public get showPreviousNextText(): boolean {\n        return this.uiService.screenSizeIsGreaterOrEqual(\"lg\");\n    }\n\n    public get showPreviousNext(): boolean {\n        return this.getSearchPositionInPage() >= 0 && !!this.searchService.results &&\n            !!this.searchService.results.records && this.searchService.results.records.length > 1;\n    }\n\n    public get previousEnabled(): boolean {\n        return this.getSearchPositionInPage() > 0;\n    }\n\n    public get nextEnabled(): boolean {\n        if (!this.searchService.results || !this.searchService.results.records) {\n            return false;\n        }\n        const searchPosition = this.getSearchPositionInPage();\n        return searchPosition >= 0 && searchPosition < (this.searchService.results.records.length - 1);\n    }\n\n    private getSearchPositionInPage(): number {\n        const id = this.currentId;\n        if (id && this.searchService.results && this.searchService.results.records) {\n            for (let i = 0, ic = this.searchService.results.records.length; i < ic; i++) {\n                const record = this.searchService.results.records[i];\n                if (record.id === id) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n\n    public previous() {\n        if (!this.searchService.results || !this.searchService.results.records) {\n            return;\n        }\n        const index = this.getSearchPositionInPage();\n        if (index <= 0) {\n            return;\n        }\n        const item = this.searchService.results.records[index - 1];\n        this.updatePreviewData(item.id);\n    }\n\n    public next() {\n        if (!this.searchService.results || !this.searchService.results.records) {\n            return;\n        }\n        const index = this.getSearchPositionInPage();\n        if (index === -1 || index >= (this.searchService.results.records.length - 1)) {\n            return;\n        }\n        const item = this.searchService.results.records[index + 1];\n        this.updatePreviewData(item.id);\n    }\n}","<a href=\"#\" (click)=\"click($event)\" title=\"{{title | sqMessage}}\">\n    <ng-container *ngIf=\"!!icon\">\n        <span class=\"{{icon}}\"></span>\n    </ng-container>\n    <ng-container *ngIf=\"!!text\">{{text | sqMessage}}</ng-container>\n</a>","import {Component, Input} from \"@angular/core\";\nimport {Record} from \"@sinequa/core/web-services\";\nimport {Query} from \"@sinequa/core/app-utils\";\nimport {ModalService} from \"@sinequa/core/modal\";\nimport {PreviewService} from \"../../preview.service\";\n\n@Component({\n    selector: \"sq-result-link-preview\",\n    templateUrl: \"./result-link-preview.html\"\n})\nexport class BsResultLinkPreview {\n    @Input() query: Query;\n    @Input() record: Record;\n    @Input() icon: string = \"fas fa-search\";\n    @Input() text: string = \"\";\n    @Input() title: string = \"\";\n    @Input() usePopup: boolean;\n    @Input() newWindow: boolean;\n    @Input() displaySimilarDocuments: boolean;\n    @Input() metadata: string[];\n\n    constructor(\n        public modalService: ModalService,\n        public previewService: PreviewService) {\n    }\n\n    click(event: MouseEvent) {\n        if (this.usePopup) {\n            if (event.ctrlKey) {\n                this.previewService.openNewWindow(this.record, this.query);\n            }\n            else {\n                this.previewService.openModal(this.record, this.query, {displaySimilarDocuments: this.displaySimilarDocuments, metadata: this.metadata});\n            }\n        }\n        else {\n            if(this.newWindow){\n                this.previewService.openNewWindow(this.record, this.query);\n            }\n            else {\n                this.previewService.openRoute(this.record, this.query);\n            }\n        }\n        return false;\n    }\n}","<div class=\"list-group list-group-flush entity-facet\">\n    <div class=\"list-group-item align-items-center border-0 py-1 px-3 d-flex\" *ngFor=\"let value of entityValues\">\n        <span class=\"text-muted px-1 cursor-pointer\" (click)=\"toggleEntity(value)\">\n            <i class=\"far\" [ngClass]=\"{'fa-check-square': !entityHidden(value), 'fa-square': entityHidden(value)}\"></i>\n        </span>\n        <span class=\"mr-auto mx-1\">{{ value.displayValue | sqValue:column }}</span>\n        <span class=\"text-muted small mx-1\">{{ entityCount(value) }}</span>\n        <span *ngIf=\"previewDocument\" class=\"text-muted px-1 cursor-pointer\" (click)=\"prevEntity(value)\" title=\"{{ 'msg#preview.previousHighlightButtonAltText' | sqMessage }}\"><i class=\"fas fa-chevron-left\"></i></span>\n        <span *ngIf=\"previewDocument\" class=\"text-muted px-1 cursor-pointer\" (click)=\"nextEntity(value)\" title=\"{{ 'msg#preview.nextHighlightButtonAltText' | sqMessage }}\"><i class=\"fas fa-chevron-right\"></i></span>\n    </div>\n    <div class=\"list-group-item border-0 py-1 text-center\" *ngIf=\"data.length > count\">\n        <a class=\"text-muted small\" href=\"#\" (click)=\"showAll()\" title=\"{{ 'msg#preview.showAll' | sqMessage }}\">{{ 'msg#preview.showAll' | sqMessage }}</a>\n    </div>\n</div>\n","import { Component, Input, Output, EventEmitter, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { HighlightValue, PreviewData, CCColumn } from '@sinequa/core/web-services';\nimport { PreviewDocument } from '../../preview-document';\nimport { AbstractFacet } from '@sinequa/components/facet';\nimport { Action } from '@sinequa/components/action';\nimport { AppService } from '@sinequa/core/app-utils';\n\n@Component({\n  selector: 'sq-preview-entity-facet',\n  templateUrl: './preview-entity-facet.component.html',\n  styleUrls: ['./preview-entity-facet.component.scss']\n})\nexport class BsPreviewEntityFacetComponent extends AbstractFacet implements OnInit, OnChanges {\n  @Input() entity: string;  // Required from init\n  @Input() data: HighlightValue[];  // Required from init\n  @Input() previewData: PreviewData;  // Required from init and does not change (facet is rebuilt if it does)\n  @Input() previewDocument: PreviewDocument;  // May be null at the start\n  @Input() startUnchecked: boolean;\n  @Output() itemsChecked = new EventEmitter<boolean>();\n\n  count: number = 10;\n  sortFreq: boolean = true;\n  hidden = new Map<string, boolean>();\n  nav = new Map<string, number>();\n  column: CCColumn | undefined;\n\n  checkAction: Action;\n  sortFreqAction: Action;\n  sortAlphaAction: Action;\n\n  constructor(\n    private appService:AppService\n  ) {\n    super();\n\n    this.checkAction = new Action({\n      icon: \"far fa-check-square\",\n      title: \"msg#preview.highlightFilters.keepNone\",\n      action: this.unselectAll,\n      updater: (action: Action) => {\n        let foundHidden = false;\n        let foundNotHidden = false;\n        this.data.forEach(value => {\n          foundHidden = foundHidden || this.hidden.get(value.value) || false;\n          foundNotHidden = foundNotHidden || !this.hidden.get(value.value);\n        });\n        if(!foundHidden){ // All items selected\n          action.action = this.unselectAll;\n          action.icon = \"far fa-check-square\";\n          action.title = \"msg#preview.highlightFilters.keepNone\";\n        }\n        else if(!foundNotHidden){ // All items unselected\n          action.action = this.selectAll;\n          action.icon = \"far fa-square\";\n          action.title = \"msg#preview.highlightFilters.keepAll\";\n        }\n        else { // Some items selected\n          action.action = this.selectAll;\n          action.icon = \"far fa-check-square\";\n          action.title = \"msg#preview.highlightFilters.keepAll\";\n        }\n      }\n    });\n    this.sortAlphaAction = new Action({\n      icon: \"fas fa-sort-alpha-down\",\n      title: \"msg#preview.sortAlphabetically\",\n      action: () => {\n        this.sortFreq = false;\n      }\n    });\n    this.sortFreqAction = new Action({\n      icon: \"fas fa-sort-amount-down\",\n      title: \"msg#preview.sortFrequency\",\n      action: () => {\n        this.sortFreq = true;\n      }\n    });\n  }\n\n  get actions(): Action[]{\n    const actions: Action[] = [];\n    if(this.previewDocument){\n      actions.push(this.checkAction);\n    }\n    actions.push(this.sortFreq? this.sortAlphaAction : this.sortFreqAction);\n    return actions;\n  }\n\n  /**\n   * Uncheck items if needed\n   */\n  ngOnInit(){\n    if(this.startUnchecked){\n      this.unselectAll();\n      this.checkAction.update();\n    }\n    this.column = this.appService.getColumn(this.entity);\n  }\n\n  /**\n   * Since the preview document comes after the preview data, we need to wait for that change\n   * and apply the hidden state in the document.\n   * @param changes\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if(changes[\"previewDocument\"]){\n      if(this.previewDocument){\n        this.data.forEach(val => {\n          if(this.hidden.get(val.value)){\n            this.previewDocument.toggleHighlight(this.entity, false, val.value);\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * Returns the entities to be displayed in the facet, performing truncation and sorting of the input list\n   */\n  get entityValues(): HighlightValue[] {\n    return this.data.sort((a,b) => {\n      const d = b.locations.length - a.locations.length;\n      return this.sortFreq && d !== 0?  d : a.displayValue.localeCompare(b.displayValue);\n    }).slice(0, this.count);\n  }\n\n  /**\n   * Returns the number of occurrences of a given value.\n   * If the user used the facet to navigate, the format is \"i / count\"\n   * @param value\n   */\n  entityCount(value: HighlightValue): string {\n    let count = value.locations.length + \"\";\n    const navValue = this.nav.get(value.value);\n    if(navValue !== undefined){\n      count = (navValue+1) + \" / \" + count;\n    }\n    return count;\n  }\n\n  /**\n   * Return whether the entity is hidden (unchecked) or not\n   * @param value\n   */\n  entityHidden(value: HighlightValue): boolean {\n    return !!this.hidden.get(value.value);\n  }\n\n  /**\n   * Shows all the entities in the list\n   */\n  showAll(){\n    this.count = this.data.length;\n    return false;\n  }\n\n  /**\n   * Toggles the hidden (checked/unchecked) state of a value in the list.\n   * Modifies the provided preview document.\n   * @param value\n   */\n  toggleEntity(value: HighlightValue){\n    this.hidden.set(value.value, !this.hidden.get(value.value));\n    if(this.previewDocument){\n      this.previewDocument.toggleHighlight(this.entity, !this.hidden.get(value.value), value.value);\n    }\n    this.checkAction.update();\n  }\n\n  /**\n   * Unselect all entities (set hidden)\n   */\n  unselectAll = (action?: Action) => {\n    if(this.previewDocument){\n      this.previewDocument.toggleHighlight(this.entity, false);\n    }\n    this.data.forEach((value)=> {\n      this.hidden.set(value.value, true);\n    });\n    if(action){\n      action.update();\n      this.itemsChecked.next(false);\n    }\n  }\n\n  /**\n   * Select all entities (unset hidden)\n   */\n  selectAll = (action: Action) => {\n    if(this.previewDocument){\n      this.previewDocument.toggleHighlight(this.entity, true);\n    }\n    this.data.forEach((value)=> {\n      this.hidden.set(value.value, false);\n    });\n    if(action){\n      action.update();\n      this.itemsChecked.next(true);\n    }\n  }\n\n  /**\n   * Navigate to the next value of this entity.\n   * Modifies the provided preview document.\n   * @param value\n   */\n  nextEntity(value: HighlightValue){\n    let navValue = this.nav.get(value.value);\n    if(navValue === undefined){\n      navValue = 0;\n      this.nav.set(value.value, navValue);\n    }\n    else if(navValue < value.locations.length-1){\n      navValue++;\n      this.nav.set(value.value, navValue);\n    }\n    this.selectEntity(this.entity, value.value, navValue);\n  }\n\n  /**\n   * Navigate to the next value of this entity.\n   * Modifies the provided preview document.\n   * @param value\n   */\n  prevEntity(value: HighlightValue){\n    let navValue = this.nav.get(value.value);\n    if(navValue === undefined){\n      navValue = 0;\n      this.nav.set(value.value, navValue);\n    }\n    else if(navValue > 0){\n      navValue--;\n      this.nav.set(value.value, navValue);\n    }\n    this.selectEntity(this.entity, value.value, navValue);\n  }\n\n  /**\n   * Navigate to the given occurrence of an entity in a specific category\n   * Modifies the provided preview document.\n   * @param category\n   * @param value\n   * @param i\n   */\n  selectEntity(category: string, value: string, i: number){\n    const indexes = this.getEntityIndexes(category, value);\n    this.previewDocument.selectHighlight(category, indexes[i]);\n  }\n\n  /**\n   * Helper function to find the indexes of all occurrences of a entity value in the document\n   * @param category\n   * @param value\n   */\n  private getEntityIndexes(category: string, value: string) {\n    const indexes: number[] = [];\n    for (let i = 0; i < this.previewData.highlightsPerLocation['length']; i++) {\n      const highlight = this.previewData.highlightsPerLocation[i];\n      const categories = Object.keys(highlight.positionInCategories);\n      for (const currentCategory of categories) {\n        if (currentCategory === category) {\n          for (const highlightValue of highlight.values) {\n            if (highlightValue === value) {\n              indexes.push(highlight.positionInCategories[category]);\n            }\n          }\n        }\n      }\n    }\n    return indexes;\n  }\n}\n","<ng-container *ngFor=\"let entity of _entities\">\n    <sq-facet-card *ngIf=\"entityValues(entity).length\" class=\"d-block my-3\" [title]=\"entityDisplay(entity)\" [icon]=\"entityIcon(entity)\" [collapsible]=\"collapsible\" [buttonsStyle]=\"style\">\n        <sq-preview-entity-facet #facet \n            [entity]=\"entity\" \n            [data]=\"entityValues(entity)\" \n            [previewData]=\"previewData\" \n            [previewDocument]=\"previewDocument\"\n            [startUnchecked]=\"startUnchecked[entity]\"\n            (itemsChecked)=\"itemsChecked(entity, $event)\">\n        </sq-preview-entity-facet>\n    </sq-facet-card>\n</ng-container>","import { Component, Input, OnChanges, Output, EventEmitter } from '@angular/core';\nimport { CategoryHighlightData, HighlightValue, PreviewData } from '@sinequa/core/web-services';\nimport { PreviewDocument } from '../../preview-document';\n\n@Component({\n  selector: 'sq-preview-entity-panel',\n  templateUrl: './preview-entity-panel.component.html',\n  styleUrls: ['./preview-entity-panel.component.scss']\n})\nexport class BsPreviewEntityPanelComponent implements OnChanges {\n\n  /**\n   * Preview data\n   */\n  @Input() previewData: PreviewData;\n\n  /**\n   * Preview document\n   */\n  @Input() previewDocument: PreviewDocument;\n\n  /**\n   * What is the style of the facets\n   */\n  @Input() style: string;\n\n  /**\n   * Whether the facets are collapsible\n   */\n  @Input() collapsible: boolean = true;\n\n  /**\n   * Allows to uncheck all items from specific facets\n   */\n  @Input() startUnchecked: {[entity: string]: boolean} = {};\n\n  /**\n   * The list of entities to display (if ignored, will be deducted from the preview data)\n   */\n  @Input() entities: string[];\n\n  /**\n   * Triggers an event when check all / check none is use in a facet\n   */\n  @Output() facetChecked = new EventEmitter<{entity: string, checked: boolean}>();\n\n  _entities: string[] = [];\n\n  constructor() { }\n\n  /**\n   * Extracts the list of entities from the preview data\n   */\n  ngOnChanges() {\n    if(this.entities && !!this.previewData){ // If the list of entities is provided as input\n      this._entities = this.entities;\n    }\n    else if(this.previewData){ // The list of entities is deduced from the preview data\n      this._entities = Object.keys(this.previewData.highlightsPerCategory).filter(value => value !== \"extractslocations\");\n    }\n    else {  // No entity to show\n      this._entities = [];\n    }\n  }\n\n  /**\n   * Return the data for a specific entity category\n   * @param entity\n   */\n  data(entity: string): CategoryHighlightData {\n    return this.previewData.highlightsPerCategory[entity];\n  }\n\n  /**\n   * Returns the display value of a specific entity\n   * @param entity\n   */\n  entityDisplay(entity: string): string {\n    return this.data(entity).categoryDisplayLabelPlural || this.data(entity).categoryDisplayLabel || entity;\n  }\n\n  /**\n   * Returns the icon of a specific entity\n   * @param entity\n   */\n  entityIcon(entity: string): string {\n    return \"sq-icon-\"+entity;\n  }\n\n  /**\n   * Returns the list of values of a specific entity\n   * @param entity\n   */\n  entityValues(entity: string): HighlightValue[] {\n    return this.data(entity).values;\n  }\n\n  /**\n   * Called by child facet when items are checked/unchecked\n   * @param entity\n   * @param checked\n   */\n  itemsChecked(entity: string, checked: boolean){\n    this.facetChecked.next({entity: entity, checked: checked});\n  }\n\n}\n","<ng-container *ngIf=\"previewData\">\n    <div class=\"d-flex justify-content-between p-2\" *ngIf=\"extracts?.length > 0\">\n        <button class=\"btn btn-light\" (click)=\"previousExtract()\" [disabled]=\"currentIndex < 1\">\n            <i class=\"fas fa-arrow-left\"></i>&nbsp;{{ 'msg#preview.previousDocument' | sqMessage}}\n        </button>\n        <div class=\"btn-group\" [sq-action-buttons]=\"{items: [sortAction], autoAdjust: true}\" ></div>\n        <button class=\"btn btn-light float-right\" (click)=\"nextExtract()\" [disabled]=\"currentIndex >= extracts.length-1\">\n            {{ 'msg#preview.nextDocument' | sqMessage}}&nbsp;<i class=\"fas fa-arrow-right\"></i>\n        </button>\n    </div>\n\n    <div *ngIf=\"loading\" class=\"d-flex justify-content-center align-items-center h-100\">\n        <div class=\"spinner-grow\" role=\"status\"></div>\n    </div>\n    <div class=\"text-center text-muted\" *ngIf=\"!loading && extracts?.length === 0; else extractsTpl\">\n        <span>{{ 'msg#preview.noextract' | sqMessage}}</span>\n    </div>\n    \n    <ng-template #extractsTpl>\n        <cdk-virtual-scroll-viewport #scrollViewport [itemSize]=\"64\" style=\"height: 100%;\">\n            <div *cdkVirtualFor=\"let extract of extracts; let i = index\" class=\"pl-2 pr-2\">\n                <a  href=\"#\" \n                    class=\"card my-1 list-group-item-action\"\n                    [ngClass]=\"{'active': i === currentIndex}\"\n                    (click)=\"scrollExtract(extract, i)\">\n                    <p class=\"card-body m-0\" [innerHTML]=\"extract.text\"></p>\n                </a>\n            </div>\n        </cdk-virtual-scroll-viewport>\n    </ng-template>\n</ng-container>\n\n<div class=\"text-center\" *ngIf=\"!previewData\">\n    {{ 'msg#preview.loading' | sqMessage}}\n</div>","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject, Input, OnChanges, OnDestroy, SimpleChanges, ViewChild } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport {DOCUMENT} from '@angular/common';\nimport {CdkVirtualScrollViewport} from '@angular/cdk/scrolling';\nimport {Subscription} from 'rxjs';\n\nimport { HighlightValue, PreviewData } from '@sinequa/core/web-services';\nimport {Action} from \"@sinequa/components/action\";\n\nimport { PreviewDocument } from '../../preview-document';\nimport {PreviewService} from '../../preview.service';\n\nexport class Extract {\n  text: SafeHtml; // Sanitized HTML text\n  startIndex : number; // this is the start index of the extracts within the Document Text  \n  relevanceIndex : number; // 0 the most relevant to N the less relevant\n  textIndex : number; // index of the extract in the text. e.g 0 is the first extract displayed in the document\n}\n\n@Component({\n  selector: 'sq-preview-extracts-panel',\n  templateUrl: './preview-extracts-panel.component.html',\n  styleUrls: ['./preview-extracts-panel.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BsPreviewExtractsPanelComponent implements OnChanges, OnDestroy {\n  @Input() previewData: PreviewData;\n  @Input() previewDocument: PreviewDocument;\n  @Input() downloadUrl: string;\n  @Input() style: \"light\"|\"dark\" = \"light\";\n  @ViewChild(\"scrollViewport\") cdkScrollViewport: CdkVirtualScrollViewport;\n\n  sortAction : Action;\n  extracts: Extract[] = [];\n  currentIndex = -1;\n  loading = false;\n  loadCompleteSubscription: Subscription;\n\n  constructor(\n    @Inject(DOCUMENT) document: Document,\n    private previewService: PreviewService,\n    private cdr: ChangeDetectorRef,\n    private domSanitizer: DomSanitizer) { }\n\n  ngOnDestroy() {\n    if(this.loadCompleteSubscription) {\n      this.loadCompleteSubscription.unsubscribe();\n    }\n  }\n    \n  /**\n   * Extracts the list of extracts from the preview document\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    this.extracts = [];\n    if (this.previewData && this.previewDocument) {\n      const extracts = this.previewData.highlightsPerCategory[\"extractslocations\"]?.values; //Extract locations Array ordered by \"relevance\"\n      if (!!extracts && extracts.length > 0) {\n        this.extractAll(extracts, this.previewDocument);\n        return;\n      }\n    }\n    \n    if(this.previewData && this.downloadUrl){\n      const extracts = this.previewData.highlightsPerCategory[\"extractslocations\"]?.values; //Extract locations Array ordered by \"relevance\"\n      if(!!extracts && extracts.length > 0){\n        this.loading = true;\n\n        if (this.previewDocument) {\n          this.extractAll(extracts, this.previewDocument)\n        } else {\n          this.previewService.getHtmlPreview(this.downloadUrl)\n            .subscribe((value) => {\n              const previewDocument = this.createDocument(value);\n              this.extractAll(extracts, previewDocument);\n            });\n        }\n      }\n    }\n  }\n  \n  private createDocument(value: string): PreviewDocument {\n    const doc = document.implementation.createHTMLDocument(\"\");\n    doc.write(value);\n    doc.close();\n    let previewDocument = new PreviewDocument(doc);\n\n    const count = previewDocument.document.querySelectorAll(\"[id^='extractslocations']\").length;\n    if (count === 0 && this.previewDocument) {\n      // use previous document to retrieve extracts\n      previewDocument = this.previewDocument;\n    }\n    \n    return previewDocument;\n  }\n\n  private extractAll(extracts:HighlightValue[], previewDocument: PreviewDocument) {\n    // Init the extracts Array and storing the relevancy index = i because extractsLocations is already ordered by relevance\n    // but extract's text is sort by \"start\", that why text is set to empty here\n    this.extracts = extracts[0].locations.map((el, i) => ({\n      text: \"\",\n      startIndex: el.start,\n      relevanceIndex: i,  // used to sort by relevance index\n      textIndex: 0\n    }));\n\n    // next sort the array by startIndex to extract the correct extract's text\n    // and set the textIndex\n    this.extracts.sort((a, b) => a.startIndex - b.startIndex) // Sorting by start index (text index)\n    .forEach((el, i) => {\n      el.text = this.sanitize(previewDocument.getHighlightText(\"extractslocations\", i)); // get the text\n      el.textIndex = i // Storing the TextIndex to be able to select extracts\n    });\n\n    // do not take item without text\n    this.extracts = this.extracts.filter(el => el.text !== '');\n    \n    // finally sort extracts by relevance\n    this.extracts.sort((a,b) => a.relevanceIndex - b.relevanceIndex);\n    \n    this.buildSortAction();\n          \n    this.loading = false;\n    this.currentIndex = -1;\n    this.cdr.detectChanges();\n  }\n\n  /**\n   * Build Sort Action for Extracts\n   * @param i \n   */\n  buildSortAction(){\n    this.sortAction = new Action({\n      title: \"msg#sortSelector.sortByTitle\",\n      text:  \"msg#preview.relevanceSortHighlightButtonText\",\n      children: [\n        new Action({\n          icon: 'fas fa-sort-amount-down',\n          text: \"msg#preview.relevanceSortHighlightButtonText\",\n          action: (item: Action, event: Event) => {\n            // return a new map to re-render the collection\n            this.extracts = this.extracts.map(el => el).sort((a, b) => a.relevanceIndex - b.relevanceIndex);\n            this.sortAction.text = item.text;\n            this.currentIndex = -1;\n            }\n        }),\n        new Action({\n          icon: 'fas fa-sort-amount-down',\n          text: \"msg#preview.textOrderSortHighlightButtonText\",\n          action: (item: Action, event: Event) => {\n            // return a new map to re-render the collection\n            this.extracts = this.extracts.map(el => el).sort((a,b) => a.textIndex-b.textIndex);\n            this.sortAction.text = item.text;\n            this.currentIndex = -1;\n          }\n        })\n      ]\n    });\n\n  }\n\n  /**\n   * Scroll to a specific extract\n   * @param i\n   */\n  scrollExtract(extract: Extract, index?: number) {\n    if (index !== undefined) {\n      this.currentIndex = index;\n    }\n\n    if (this.previewDocument) {\n      // extracts are always at textIndex position whatever the sort\n      this.previewDocument.selectHighlight(\"extractslocations\", extract.textIndex);\n    }\n    return false;\n  }\n\n  /**\n   * Sanitize the text of a HTML formatted extract\n   * @param text\n   */\n  sanitize(text: string): SafeHtml | string {\n    return text !== \"\" ? this.domSanitizer.bypassSecurityTrustHtml(text.replace(/sq\\-current/, \"\")) : \"\";\n  }\n\n  /**\n   * Select the previous extract in the list\n   */\n  previousExtract(){\n    this.currentIndex--;\n    this.scrollTo();\n  }\n\n  /**\n   * Select the next extract in the list\n   */\n  nextExtract(){\n    this.currentIndex++;\n    this.scrollTo();\n  }\n  \n  private scrollTo() {\n    this.cdkScrollViewport.scrollToIndex(this.currentIndex);\n    const extract = this.extracts[this.currentIndex];\n    this.scrollExtract(extract);\n  }\n}\n","import { Component, EventEmitter, Input, Output, OnChanges } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl } from '@angular/forms';\nimport { Query } from '@sinequa/core/app-utils';\n\n@Component({\n  selector: 'sq-preview-search-form',\n  templateUrl: './preview-search-form.component.html',\n  styleUrls: ['./preview-search-form.component.scss']\n})\nexport class BsPreviewSearchFormComponent implements OnChanges {\n  @Input() query: Query;\n  @Output() searchText = new EventEmitter<string>();\n\n  // Search form\n  readonly form: FormGroup;\n  readonly searchControl: FormControl;\n\n  constructor(\n    private formBuilder: FormBuilder) {\n\n    this.searchControl = new FormControl('');\n    this.form = this.formBuilder.group({\n      search: this.searchControl\n    });\n  }\n\n  /**\n   * Updates the text of the search form when the query changes\n   */\n  ngOnChanges() {\n    this.searchControl.setValue((!this.query || !this.query.text) ? \"\" : this.query.text);\n  }\n\n  /**\n   * Emits an event for the parent component to search this next text\n   */\n  search() {\n    this.searchText.next(this.searchControl.value || \"\");\n  }\n}\n","<form novalidate [formGroup]=\"form\">\n    <div class=\"input-group mb-3\">\n        <div class=\"input-group-prepend\">\n            <label for=\"search-input\" class=\"input-group-text\">{{ 'msg#preview.search' | sqMessage }}</label>\n        </div>\n\n        <input id=\"search-input\" type=\"text\" placeholder=\"{{ 'msg#searchForm.searchFor' | sqMessage }}\" formControlName=\"search\" class=\"form-control\" sqAutofocus>\n\n        <div class=\"input-group-append\">\n            <button class=\"btn btn-primary\" type=\"submit\" (click)=\"search()\" \n                title=\"{{ 'msg#searchForm.search' | sqMessage }}\">\n                <i class=\"fas fa-fw fa-search\"></i>\n            </button>\n        </div>\n    </div>\n</form>","<div class=\"list-group\" *ngIf=\"sortedPages\">\n\n    <!-- First page link if needed-->\n    <a href=\"#\" class=\"card my-1 list-group-item-action\"\n        (click)=\"selectPage(1)\"\n        *ngIf=\"!hasFirst\">\n        <div class=\"card-body\">\n            <span class=\"small text-muted\">{{ 'msg#preview.page' | sqMessage:{values:{page: 1} } }}</span>\n            <div class=\"text-center my-3\" *ngIf=\"_pendingPage === 1\">\n                <div class=\"spinner-grow\" role=\"status\"></div>\n            </div>\n        </div>\n    </a>\n\n    <!-- For each page in the document -->\n    <ng-container *ngFor=\"let page of sortedPages\">\n\n        <!-- Link to page other than current -->\n        <a href=\"#\" class=\"card my-1 list-group-item-action\"\n            (click)=\"selectPage(page.$page)\"\n            *ngIf=\"currentPage !== page.$page\">\n            <div class=\"card-body\" >\n                <span class=\"small text-muted\">{{ 'msg#preview.page' | sqMessage:{values:{page: page.$page} } }}</span>\n                <p [innerHTML]=\"page.relevantExtracts\" *ngIf=\"_pendingPage !== page.$page\"></p>\n                <div class=\"text-center my-3\" *ngIf=\"_pendingPage === page.$page\">\n                    <div class=\"spinner-grow\" role=\"status\"></div>\n                </div>\n            </div>\n        </a>\n\n        <!-- For current page we display extracts -->\n        <ng-container *ngIf=\"currentPage === page.$page\">\n            <a href=\"#\" class=\"card my-1 list-group-item-action\"\n                *ngIf=\"!hasPrevious\"\n                (click)=\"selectPrevious()\">\n                <div class=\"card-body\">\n                    <span class=\"small text-muted\">{{ 'msg#preview.page' | sqMessage:{values:{page: currentPage - 1} } }} ({{ 'msg#preview.previousDocument' | sqMessage }})</span>\n                    <div class=\"text-center my-3\" *ngIf=\"_pendingPage === currentPage - 1\">\n                        <div class=\"spinner-grow\" role=\"status\"></div>\n                    </div>\n                </div>\n            </a>\n            <div class=\"card my-1\" #currentPageEl>\n                <div class=\"card-body m-0\">\n                    <span class=\"small font-weight-bold mb-1\">{{ 'msg#preview.page' | sqMessage:{values:{page: currentPage} } }} ({{ 'msg#preview.current' | sqMessage }})</span>\n                    <sq-preview-extracts-panel \n                        *ngIf=\"!_pendingPreviewDocument\" \n                        class=\"d-flex flex-column\"\n                        style=\"height: 300px;\"\n                        [previewData]=\"previewData\"\n                        [previewDocument]=\"previewDocument\"\n                        [style]=\"style\">\n                    </sq-preview-extracts-panel>\n                </div>\n            </div>\n            <a href=\"#\" class=\"card my-1 list-group-item-action\"\n                *ngIf=\"!hasNext\"\n                (click)=\"selectNext()\">\n                <div class=\"card-body\">\n                    <span class=\"small text-muted\">{{ 'msg#preview.page' | sqMessage:{values:{page: currentPage + 1} } }} ({{ 'msg#preview.nextDocument' | sqMessage }})</span>\n                    <div class=\"text-center my-3\" *ngIf=\"_pendingPage === currentPage + 1\">\n                        <div class=\"spinner-grow\" role=\"status\"></div>\n                    </div>\n                </div>\n            </a>\n        </ng-container>\n\n    </ng-container>\n</div>","import { Component, Input, Output, OnChanges, SimpleChanges, EventEmitter, ViewChildren, ElementRef, QueryList } from \"@angular/core\";\nimport { PreviewDocument } from \"../../preview-document\";\nimport { PreviewService } from \"../../preview.service\";\nimport { PreviewData, Results, Record } from \"@sinequa/core/web-services\";\n\n@Component({\n    selector: 'sq-preview-pages-panel',\n    templateUrl: './preview-pages-panel.component.html'\n})\nexport class BsPreviewPagesPanelComponent implements OnChanges {\n    @Input() pages: Results;\n    @Input() previewData: PreviewData;\n    @Input() previewDocument: PreviewDocument;\n    @Input() style: \"light\"|\"dark\" = \"light\";\n    @Output() gotopage = new EventEmitter<number>();\n\n    @ViewChildren('currentPageEl', {read: ElementRef}) currentPageEl: QueryList<ElementRef>;\n\n    sortedPages: Record[];\n\n    containerid: string;\n    currentPage: number;\n\n    hasFirst: boolean;\n    hasPrevious: boolean;\n    hasNext: boolean;\n\n    _pendingPreviewDocument: boolean = true;\n    _pendingPages: boolean = true;\n    _pendingPage?: number;\n\n    constructor(public previewService: PreviewService) {\n\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n\n        // PreviewData should change first, which triggers the new previewDocument and pages\n        if(changes[\"previewData\"]) {\n            this._pendingPreviewDocument = true;\n            this._pendingPages = true;\n        }\n\n        if(changes[\"previewDocument\"]) {\n            this._pendingPreviewDocument = false;\n        }\n\n        if(changes[\"pages\"]) {\n            this._pendingPages = false;\n        }\n\n        // ngOnChanges is called multiple times due to async updates of the Inputs()\n        // The _pending variables let us wait for all these inputs to come in before apply the changes\n        if(!this._pendingPreviewDocument && !this._pendingPages) {\n            this._pendingPage = undefined;\n\n            if(this.previewData) {\n                this.currentPage = this.previewData.record.$page!;\n                this.containerid = this.previewData.record.containerid!;\n            }\n    \n            if(this.pages && this.currentPage && this.containerid) {\n\n                this.sortedPages = this.pages.records;\n    \n                // Parse the page number from each record id\n                this.sortedPages.forEach(record => {\n                    this.previewService.getPageNumber(record);\n                    if(!record.$page) {\n                        throw new Error(\"Record is not page... \"+ record.id);\n                    }\n                });\n    \n                // Insert current page if missing (possible when navigating to previous/next page)\n                if(!this.sortedPages.find(page => page.$page === this.currentPage)) {\n                    this.sortedPages.push(this.previewData.record);\n                }\n    \n                // Sort the pages\n                this.sortedPages.sort((a,b) => a.$page! - b.$page!);\n    \n                // Update current page neighbours\n                this.hasFirst = !!this.sortedPages.find(page => page.$page! === 1 || this.currentPage === 2 ); // include 2nd page, because is covered by the previous page below\n                this.hasPrevious = this.currentPage === 1 || !!this.sortedPages.find(page => page.$page === this.currentPage - 1);\n                this.hasNext = !!this.sortedPages.find(page => page.$page === this.currentPage + 1);\n            }\n\n            // SetTimeout is needed to scroll only after the DOM changes\n            setTimeout(() => {\n                this.currentPageEl?.first?.nativeElement.scrollIntoView({behaviour: \"smooth\", block: \"start\"});\n            });\n        }\n\n    }\n\n    selectPage(page: number) {\n        this.gotopage.next(page);\n        this._pendingPage = page;\n        return false;\n    }\n\n    selectPrevious() {\n        return this.selectPage(this.currentPage-1);\n    }\n\n    selectNext() {\n        return this.selectPage(this.currentPage+1);\n    }\n}","<form novalidate [formGroup]=\"form\" *ngIf=\"pageNumber\" class=\"mb-2\">\n    <div [sqValidation]=\"{form: form, controlName: 'page'}\" class=\"input-group mb-1\">\n        <div class=\"input-group-prepend\">\n            <label for=\"page-input\" class=\"input-group-text\">{{ 'msg#preview.gotopage' | sqMessage}}</label>\n        </div>\n        <input id=\"page-input\" type=\"text\" class=\"form-control\" placeholder=\"page\" formControlName=\"page\" autocomplete=\"off\" spellcheck=\"off\">\n        <div class=\"input-group-append\">\n            <button class=\"btn btn-primary\" type=\"submit\" (click)=\"submit()\" >\n                <i class=\"fas fa-fw fa-arrow-right\"></i>\n            </button>\n        </div>\n    </div>\n</form>","import { Component, EventEmitter, Input, OnChanges, Output } from \"@angular/core\";\nimport { FormBuilder, FormControl, FormGroup } from \"@angular/forms\";\nimport { ValidationService } from \"@sinequa/core/validation\";\n\n@Component({\n    selector: 'sq-preview-page-form',\n    templateUrl: './preview-page-form.component.html'\n})\nexport class BsPreviewPageFormComponent implements OnChanges{\n    @Input() pageNumber?: number;\n    @Output() gotopage = new EventEmitter<number>();\n\n    form: FormGroup;\n    pageControl: FormControl;\n\n    constructor(\n        formBuilder: FormBuilder,\n        validationService: ValidationService\n    ) {\n        this.pageControl = new FormControl('', [validationService.integerValidator(), validationService.minValidator(1)]);\n        this.form = formBuilder.group({\n          page: this.pageControl\n        });\n    }\n\n    ngOnChanges() {\n        this.pageControl.setValue(this.pageNumber);\n    }\n\n    submit() {\n        const page = parseInt(this.pageControl.value, 10);\n        if(!isNaN(page) && page !== this.pageNumber) {\n            // remember the page number submitted\n            // this allow us to submit again the previous page \n            // when page not exists and/or an error is triggered\n            this.pageNumber = page;\n            this.gotopage.next(page);\n        }\n    }\n\n}","import {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {ScrollingModule} from \"@angular/cdk/scrolling\";\n\nimport {IntlModule} from \"@sinequa/core/intl\";\nimport {WebServicesModule} from \"@sinequa/core/web-services\";\nimport {ValidationModule} from \"@sinequa/core/validation\";\n\nimport {UtilsModule} from \"@sinequa/components/utils\";\nimport {CollapseModule} from \"@sinequa/components/collapse\";\nimport {MetadataModule} from \"@sinequa/components/metadata\";\nimport {BsModalModule} from \"@sinequa/components/modal\";\nimport {BsFacetModule} from \"@sinequa/components/facet\";\nimport {ResultModule} from \"@sinequa/components/result\";\nimport {BsActionModule} from \"@sinequa/components/action\";\nimport {PreviewModule} from \"../preview.module\";\nimport {BsPreviewHighlights} from \"./preview-highlights/preview-highlights\";\nimport {BsPreviewLinks} from \"./preview-links/preview-links\";\nimport {BsPreviewPopup} from \"./preview-popup/preview-popup\";\nimport {BsPreviewPanel} from \"./preview-panel/preview-panel\";\nimport {BsResultLinkPreview} from \"./result-link-preview/result-link-preview\";\nimport {BsFacetPreview} from \"./facet-preview/facet-preview\";\nimport {BsSimilarDocuments} from \"./similar-documents/similar-documents\";\nimport {BsFacetPreviewComponent2 } from './facet-preview-2/facet-preview.component';\nimport {BsPreviewEntityFacetComponent} from './preview-entity-facet/preview-entity-facet.component';\nimport {BsPreviewEntityPanelComponent} from './preview-entity-panel/preview-entity-panel.component';\nimport {BsPreviewExtractsPanelComponent} from './preview-extracts-panel/preview-extracts-panel.component';\nimport {BsPreviewSearchFormComponent} from './preview-search-form/preview-search-form.component';\nimport {BsPreviewPagesPanelComponent} from './preview-pages-panel/preview-pages-panel.component';\nimport {BsPreviewPageFormComponent} from './preview-page-form/preview-page-form.component';\n\nimport {PREVIEW_MODAL} from '../preview.service';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule, ReactiveFormsModule,\n        ScrollingModule,\n\n        IntlModule,\n        WebServicesModule,\n        ValidationModule,\n\n        UtilsModule,\n        CollapseModule,\n        MetadataModule,\n        BsModalModule,\n        BsFacetModule,\n        ResultModule,\n        BsActionModule,\n        PreviewModule\n    ],\n    declarations: [\n        BsPreviewHighlights, BsPreviewLinks,\n        BsPreviewPopup, BsPreviewPanel, BsResultLinkPreview,\n        BsFacetPreview, BsFacetPreviewComponent2,\n        BsSimilarDocuments,\n        BsPreviewEntityFacetComponent,\n        BsPreviewEntityPanelComponent,\n        BsPreviewExtractsPanelComponent,\n        BsPreviewSearchFormComponent,\n        BsPreviewPagesPanelComponent,\n        BsPreviewPageFormComponent\n    ],\n    exports: [\n        PreviewModule,\n        BsPreviewHighlights, BsPreviewLinks,\n        BsPreviewPopup, BsPreviewPanel, BsResultLinkPreview,\n        BsFacetPreview, BsFacetPreviewComponent2,\n        BsSimilarDocuments,\n        BsPreviewEntityFacetComponent,\n        BsPreviewEntityPanelComponent,\n        BsPreviewExtractsPanelComponent,\n        BsPreviewSearchFormComponent,\n        BsPreviewPagesPanelComponent,\n        BsPreviewPageFormComponent\n    ],\n    providers: [\n        {provide: PREVIEW_MODAL, useValue: BsPreviewPopup}\n    ]\n})\nexport class BsPreviewModule {\n}","export default {\n    \"preview\": {\n        \"noDocumentDataErrorPopupTitle\": \"Error loading document's data\",\n        \"highlightsTitle\": \"Highlights\",\n        \"noEntityToHighlight\": \"No highlighted entity in document\",\n        \"termXLabel\": \"Search term {index, number}\",\n        \"otherTerms\": \"Other terms\",\n        \"previousDocument\": \"Previous\",\n        \"nextDocument\": \"Next\",\n        \"originalDocument\": \"Original document\",\n        \"selectedHighlight\": \"Selected highlight\",\n        \"noSelectedHighlight\": \"No highlight selected\",\n        \"firstHighlightButtonAltText\": \"First\",\n        \"previousHighlightButtonAltText\": \"Previous\",\n        \"nextHighlightButtonAltText\": \"Next\",\n        \"relevanceSortHighlightButtonText\": \"Relevance\",\n        \"textOrderSortHighlightButtonText\": \"Text order\",\n        \"lastHighlightButtonAltText\": \"Last\",\n        \"highlightFilters\": {\n            \"title\": \"Filters\",\n            \"keepAll\": \"All\",\n            \"keepNone\": \"None\",\n            \"keepAllInCategory\": \"All\",\n            \"keepNoneInCategory\": \"None\"\n        },\n        \"documentPropertiesTitle\": \"Details\",\n        \"similarDocumentsTitle\": \"Similar documents\",\n        \"showAll\": \"Show all values\",\n        \"sortAlphabetically\": \"Sort alphabetically\",\n        \"sortFrequency\": \"Sort by frequency\",\n        \"loading\": \"Loading...\",\n        \"noextract\": \"No extract\",\n        \"search\": \"Search\",\n        \"gotopage\": \"Go to page\",\n        \"page\": \"Page {page}\",\n        \"current\": \"current\"\n    },\n    \"facet\": {\n        \"preview\": {\n            \"closeTitle\": \"Close\",\n            \"expandTitle\": \"Maximize\",\n            \"minimize\": \"Zoom out\",\n            \"maximize\": \"Zoom in\",\n            \"toggleExtracts\": \"Toggle relevant extracts highlighting\",\n            \"toggleEntities\": \"Toggle entities highlighting\"\n        }\n    }\n};\n","import {Utils} from \"@sinequa/core/base\";\nimport {enSearch, frSearch, deSearch} from \"@sinequa/components/search\";\nimport {enCollapse, frCollapse, deCollapse} from \"@sinequa/components/collapse\";\nimport {enMetadata, frMetadata, deMetadata} from \"@sinequa/components/metadata\";\nimport {enModal, frModal, deModal} from \"@sinequa/components/modal\";\nimport {enFacet, frFacet, deFacet} from \"@sinequa/components/facet\";\nimport {enResult, frResult, deResult} from \"@sinequa/components/result\";\n\nimport _enPreview from \"./en\";\nimport _frPreview from \"./fr\";\nimport _dePreview from \"./de\";\n\nconst enPreview = Utils.merge({}, _enPreview, enSearch, enCollapse, enMetadata, enModal, enFacet, enResult);\nconst frPreview = Utils.merge({}, _frPreview, frSearch, frCollapse, frMetadata, frModal, frFacet, frResult);\nconst dePreview = Utils.merge({}, _dePreview, deSearch, deCollapse, deMetadata, deModal, deFacet, deResult);\n\nexport { enPreview, frPreview, dePreview };\n","export default {\n    \"preview\": {\n        \"noDocumentDataErrorPopupTitle\": \"Echec d'accès aux données de ce document\",\n        \"highlightsTitle\": \"Surlignage\",\n        \"noEntityToHighlight\": \"Aucune entité affichée dans ce document\",\n        \"termXLabel\": \"Terme recherché {index, number}\",\n        \"otherTerms\": \"Autres termes\",\n        \"previousDocument\": \"Précédent\",\n        \"nextDocument\": \"Suivant\",\n        \"originalDocument\": \"Document original\",\n        \"selectedHighlight\": \"Elément sélectionné\",\n        \"noSelectedHighlight\": \"Aucun élément sélectionné\",\n        \"firstHighlightButtonAltText\": \"Premier élément\",\n        \"previousHighlightButtonAltText\": \"Elément précédent\",\n        \"nextHighlightButtonAltText\": \"Elément suivant\",\n        \"relevanceSortHighlightButtonText\": \"Pertinence\",\n        \"textOrderSortHighlightButtonText\": \"Ordre du texte\",\n        \"lastHighlightButtonAltText\": \"Dernier élément\",\n        \"highlightFilters\": {\n            \"title\": \"Filtres\",\n            \"keepAll\": \"Tout inclure\",\n            \"keepNone\": \"Tout exclure\",\n            \"keepAllInCategory\": \"Toutes les entités\",\n            \"keepNoneInCategory\": \"Aucune entité\"\n        },\n        \"documentPropertiesTitle\": \"Détails\",\n        \"similarDocumentsTitle\": \"Documents similaires\",\n        \"showAll\": \"Montrer toutes les valeurs\",\n        \"sortAlphabetically\": \"Trier par ordre alphabetique\",\n        \"sortFrequency\": \"Trier par fréquence\",\n        \"loading\": \"Chargement...\",\n        \"noextract\": \"Pas d'extrait\",\n        \"search\": \"Recherche\",\n        \"gotopage\": \"Aller à la page\",\n        \"page\": \"Page {page}\",\n        \"current\": \"actuel\"\n    },\n    \"facet\": {\n        \"preview\": {\n            \"closeTitle\": \"Fermer\",\n            \"expandTitle\": \"Maximiser\",\n            \"minimize\": \"Réduire\",\n            \"maximize\": \"Agrandir\",\n            \"toggleExtracts\": \"Surlignage des extraits pertinents\",\n            \"toggleEntities\": \"Surlignage des entités\"\n        }\n    }\n};\n","export default {\n    \"preview\": {\n        \"noDocumentDataErrorPopupTitle\": \"Fehler beim Laden der Dokumentdaten\",\n        \"highlightsTitle\": \"Markierungen\",\n        \"noEntityToHighlight\": \"Keine Markierungen im Dokument verfügbar\",\n        \"termXLabel\": \"Suchbegriff\",\n        \"otherTerms\": \"Andere Begriffe\",\n        \"previousDocument\": \"Vorheriges Dokument\",\n        \"nextDocument\": \"Nächstes Dokument\",\n        \"originalDocument\": \"Originales Dokument\",\n        \"selectedHighlight\": \"Ausgewählte Markierung\",\n        \"noSelectedHighlight\": \"Keine Markierung ausgewählt\",\n        \"firstHighlightButtonAltText\": \"Erste Markierung\",\n        \"previousHighlightButtonAltText\": \"Vorherige Markierung\",\n        \"nextHighlightButtonAltText\": \"Nächste Markierung\",\n        \"lastHighlightButtonAltText\": \"Letzte Markierung\",\n        \"highlightFilters\": {\n            \"title\": \"Filter\",\n            \"keepAll\": \"Alle\",\n            \"keepNone\": \"Keine\",\n            \"keepAllInCategory\": \"Alle\",\n            \"keepNoneInCategory\": \"Keine\"\n        },\n        \"documentPropertiesTitle\": \"Dokumenteigenschaften\",\n        \"similarDocumentsTitle\": \"Ähnliche Dokumente\",\n        \"showAll\": \"Zeige alle Werte\",\n        \"sortAlphabetically\": \"Alphabetische Sortierung\",\n        \"sortFrequency\": \"Sortierung nach Häufigkeit\",\n        \"loading\": \"Laden...\",\n        \"noextract\": \"kein Auszug\",\n        \"search\": \"Suche\",\n        \"gotopage\": \"Zur Seite gehen\",\n        \"page\": \"Seite {page}\",\n        \"current\": \"aktuell\"\n    },\n    \"facet\": {\n        \"preview\": {\n            \"closeTitle\": \"Schließen\",\n            \"expandTitle\": \"Maximieren\",\n            \"minimize\": \"Rauszoomen\",\n            \"maximize\": \"hineinzoomen\",\n            \"toggleExtracts\": \"Schalten Sie die Hervorhebung relevanter Auszüge um\",\n            \"toggleEntities\": \"Schalten Sie die Hervorhebung von Objekten\"\n        }\n    }\n};\n"]}