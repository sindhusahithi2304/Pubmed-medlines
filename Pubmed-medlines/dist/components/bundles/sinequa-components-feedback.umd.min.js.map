{"version":3,"sources":["../../../projects/components/feedback/feedback.service.ts","../projects/components/feedback/bootstrap/feedback-menu/feedback-menu.ts","../projects/components/feedback/bootstrap/feedback-menu/feedback-menu.html","../../projects/components/feedback/bootstrap/feedback.module.ts","../../projects/components/feedback/messages/en.ts","../../projects/components/feedback/messages/index.ts","../../projects/components/feedback/messages/fr.ts","../../projects/components/feedback/messages/de.ts"],"names":["AuditFeedbackType","FeedbackService","auditService","modalService","appService","notificationsService","this","prototype","sendUserFeedback","type","message","thankUser","_this","event","detail","app","appName","Utils","subscribe","notify","result","success","buildFeedbackAction","Action","text","title","icon","headerGroup","children","createAction","action","openFeedbackModal","model","output","buttons","rowCount","prompt","then","trim","i0","ɵɵinject","i1","AuditWebService","i2$1","ModalService","i3","AppService","i4","NotificationsService","factory","ɵfac","providedIn","BsFeedbackMenu","feedbackService","ngOnInit","items","options","autoAdjust","rightAligned","size","style","ɵɵdirectiveInject","selectors","inputs","decls","vars","consts","template","rf","ctx","i0.ɵɵelement","i0.ɵɵproperty","BsFeedbackModule","imports","CommonModule","IntlModule","BsActionModule","ValidationModule","BsModalModule","declarations","exports","enFeedback","merge","feedback","content","ui","lang","other","thankyou","quality","label","relevance","labels","public","private","enModal","frFeedback","frModal","deFeedback","deModal"],"mappings":"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","sourcesContent":["import {Injectable} from \"@angular/core\";\nimport {AuditWebService, AuditEvent} from \"@sinequa/core/web-services\";\nimport {AppService} from \"@sinequa/core/app-utils\";\nimport {NotificationsService} from \"@sinequa/core/notification\";\nimport {ModalService, ModalResult} from \"@sinequa/core/modal\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {Action} from \"@sinequa/components/action\";\n\nexport const AuditFeedbackType = \"UserFeedback\";\n\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class FeedbackService {\n\n    constructor(\n        public auditService: AuditWebService,\n        public modalService: ModalService,\n        public appService: AppService,\n        public notificationsService: NotificationsService\n        ) {\n    }\n\n    public sendUserFeedback(type: string, message: string, thankUser: boolean){\n        const event : AuditEvent = {\n            type: AuditFeedbackType,\n            detail: {\n                app: this.appService.appName,\n                message: type,\n                detail: message\n            }\n        };\n        Utils.subscribe(this.auditService.notify([event]),\n            (result) => {\n                if(thankUser)\n                    this.notificationsService.success(\"msg#feedback.thankyou\");\n        });\n    }\n\n    public buildFeedbackAction() : Action[] {\n        return [new Action({\n            text: \"msg#feedback.text\",\n            title: \"msg#feedback.title\",\n            icon: \"fas fa-comment\",\n            headerGroup: true,\n            children: [\n                this.createAction(\"content\", \"msg#feedback.content.text\", \"msg#feedback.content.title\", \"far fa-file-alt fa-fw\"),\n                this.createAction(\"ui\", \"msg#feedback.ui.text\", \"msg#feedback.ui.title\", \"fas fa-desktop fa-fw\"),\n                this.createAction(\"lang\", \"msg#feedback.lang.text\", \"msg#feedback.lang.title\", \"far fa-comments fa-fw\"),\n                this.createAction(\"other\", \"msg#feedback.other.text\", \"msg#feedback.other.title\", \"far fa-lightbulb fa-fw\"),\n            ]\n        })];\n    }\n\n    public createAction(type:string, text:string, title:string, icon:string) : Action {\n        return new Action({\n            text: text,\n            title: title,\n            icon: icon,\n            action: () => this.openFeedbackModal(type, title)\n        });\n    }\n\n    public openFeedbackModal(type: string, title: string){\n        const model = {title: 'msg#feedback.title', message: title, output: '', buttons: [], rowCount: 5};\n        this.modalService.prompt(model)\n            .then((result) => {\n                if (result === ModalResult.OK && model.output.trim() !== \"\") {\n                    this.sendUserFeedback(type, model.output, true);\n                }\n            });\n    }\n}","import {Component, OnInit, Input, ChangeDetectionStrategy} from \"@angular/core\";\nimport {Action, ActionButtonsOptions} from \"@sinequa/components/action\";\nimport {FeedbackService} from \"../../feedback.service\";\n\n@Component({\n    selector: \"sq-feedback-menu\",\n    templateUrl: \"./feedback-menu.html\",\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BsFeedbackMenu implements OnInit {\n\n    @Input() size: string;\n    @Input() style: string;\n    @Input() rightAligned: boolean;\n\n    items: Action[];\n    options: ActionButtonsOptions;\n\n    constructor(\n        public feedbackService: FeedbackService) {\n    }\n\n    ngOnInit() {\n        this.items = this.feedbackService.buildFeedbackAction();\n        this.options = {\n            items: this.items, \n            autoAdjust: true, \n            rightAligned: this.rightAligned, \n            size: this.size, \n            style: this.style\n        };\n    }\n\n\n}","<div [sq-action-buttons]=\"options\"></div>","import {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\n\nimport {IntlModule} from \"@sinequa/core/intl\";\nimport {ValidationModule} from \"@sinequa/core/validation\";\nimport {BsActionModule} from \"@sinequa/components/action\";\nimport {BsModalModule} from \"@sinequa/components/modal\";\n\nimport {BsFeedbackMenu} from \"./feedback-menu/feedback-menu\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        IntlModule,\n        BsActionModule,\n        ValidationModule,\n        BsModalModule\n    ],\n    declarations: [\n        BsFeedbackMenu\n    ],\n    exports: [\n        BsFeedbackMenu\n    ]\n})\nexport class BsFeedbackModule {\n}\n","export default {\n    \"feedback\":{\n        \"text\" : \"\",\n        \"title\" : \"Send feedback to the Sinequa admin\",\n        \"content\" : {\n            \"text\" : \"Content\",\n            \"title\" : \"Propose to add new content or improve the current content\"\n        },\n        \"ui\" : {\n            \"text\" : \"User Interface\",\n            \"title\" : \"Propose improvements to the User Interface\"\n        },\n        \"lang\" : {\n            \"text\" : \"Language\",\n            \"title\" : \"Propose language processing improvements, like new words, synonyms to add to the dictionaries (this affects directly the relevance of the search engine)\"\n        },\n        \"other\" : {\n            \"text\" : \"Other\",\n            \"title\" : \"Submit feature requests, and other improvement ideas\"\n        },\n        \"thankyou\": \"Thank you for your feedback!\",\n        \"quality\" : {\n            \"label\" : \"Quality of the document:\"\n        },\n        \"relevance\" : {\n            \"label\" : \"Relevance of the document:\"\n        },\n        \"labels\" : {\n            \"public\" : {\n                \"label\" : \"Tags:\"\n            },\n            \"private\" : {\n                \"label\" : \"Private tags:\"\n            }\n        }\n    }\n};\n","import {Utils} from \"@sinequa/core/base\";\nimport {enModal, frModal, deModal} from \"@sinequa/components/modal\";\nimport _enFeedback from \"./en\";\nimport _frFeedback from \"./fr\";\nimport _deFeedback from \"./de\";\n\nconst enFeedback = Utils.merge({}, _enFeedback, enModal);\nconst frFeedback = Utils.merge({}, _frFeedback, frModal);\nconst deFeedback = Utils.merge({}, _deFeedback, deModal);\n\nexport { enFeedback, frFeedback, deFeedback };\n","export default {\n    \"feedback\":{\n        \"text\" : \"\",\n        \"title\" : \"Envoyer un feedback à l'admin Sinequa\",\n        \"content\" : {\n            \"text\" : \"Contenu\",\n            \"title\" : \"Proposer d'ajouter du contenu ou d'améliorer le contenu actuel\"\n        },\n        \"ui\" : {\n            \"text\" : \"Interface Utilisateur\",\n            \"title\" : \"Proposer des améliorations d'interfaces utilisateur\"\n        },\n        \"lang\" : {\n            \"text\" : \"Langage\",\n            \"title\" : \"Proposer des améliorations linguistiques, comme des nouveaux mots et synonymes à ajouter aux dictionaires (cela affecte directement la pertinence du moteur de recherche)\"\n        },\n        \"other\" : {\n            \"text\" : \"Autre\",\n            \"title\" : \"Proposer des fonctionnalités supplémentaires et autres idées d'améliorations\"\n        },\n        \"thankyou\": \"Merci pour votre commentaire !\",\n        \"quality\" : {\n            \"label\" : \"Qualité du document:\"\n        },\n        \"relevance\" : {\n            \"label\" : \"Pertinence du document:\"\n        },\n        \"labels\" : {\n            \"public\" : {\n                \"label\" : \"Tags:\"\n            },\n            \"private\" : {\n                \"label\" : \"Tags privés:\"\n            }\n        }\n    },\n};\n","export default {\n    \"feedback\":{\n        \"text\" : \"\",\n        \"title\": \"Sende Rückmeldung an den Sinequa-Admin\",\n        \"content\": {\n          \"text\": \"Inhalt\",\n          \"title\": \"Vorschlag zum Hinzufügen neuer Inhalte oder zur Verbesserung vorhandener Inhalte\"\n        },\n        \"ui\": {\n          \"text\": \"Benutzeroberfläche\",\n          \"title\": \"Schlage Verbesserungen für die Benutzeroberfläche vor\"\n        },\n        \"lang\": {\n          \"text\": \"Sprache\",\n          \"title\": \"Schlage Verbesserungen für die Sprachverarbeitung vor wie neue Worte oder Synonyme, die zu den Wörterbüchern hinzugefügt werden sollen (dies hat direkte Auswirkungen auf die Relevanzberechnung der Suchmaschine)\"\n        },\n        \"other\": {\n          \"text\": \"Andere\",\n          \"title\": \"Reichen Sie einen Vorschlag für eine zusätzliche Funktion oder andere Verbesserungvorschläge ein\"\n        },\n        \"thankyou\": \"Vielen Dank für Ihre Rückmeldung!\",\n        \"quality\": {\n          \"label\": \"Qualität des Dokuments:\"\n        },\n        \"relevance\": {\n          \"label\": \"Relevanz des Dokuments:\"\n        },\n        \"labels\" : {\n            \"public\": {\n              \"label\": \"Etiketten:\"\n            },\n            \"private\": {\n              \"label\": \"Private Etiketten:\"\n            }\n        }\n    }\n};\n"]}