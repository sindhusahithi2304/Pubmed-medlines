{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","../../projects/components/metadata/metadata-access-lists-item-single-access-list/metadata-access-lists-item-single-access-list.html","../../projects/components/metadata/metadata-access-lists-item-single-access-list/metadata-access-lists-item-single-access-list.ts","../../projects/components/metadata/metadata-access-lists-item/metadata-access-lists-item.html","../../projects/components/metadata/metadata-access-lists-item/metadata-access-lists-item.ts","../../projects/components/metadata/showmore/showmore.html","../../projects/components/metadata/showmore/showmore.ts","../../projects/components/metadata/metadata-item/metadata-item.html","../../projects/components/metadata/metadata-item/metadata-item.ts","../../projects/components/metadata/metadata/metadata.html","../../projects/components/metadata/metadata/metadata.ts","../../../projects/components/metadata/metadata.module.ts","../../projects/components/metadata/messages/en.ts","../../projects/components/metadata/messages/index.ts","../../projects/components/metadata/messages/fr.ts","../../projects/components/metadata/messages/de.ts"],"names":["Object","create","__values","o","s","Symbol","iterator","m","i","call","length","next","value","done","TypeError","__read","n","r","e","ar","push","error","__spread","arguments","concat","i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵadvance","i0.ɵɵtextInterpolate","i0.ɵɵtemplate","i0.ɵɵproperty","MetadataAccessListsItemSingleAccessList","this","collapsed","defineProperty","prototype","authorized","collapseClick","event","preventDefault","i0.ɵɵelement","i0.ɵɵpropertyInterpolate","i_r1","ctx_r2","accessLists","authorizedLists","ctx_r3","deniedLists","i0.ɵɵelementContainerStart","i0.ɵɵelementContainerEnd","selectors","inputs","index","accessList","decls","vars","consts","template","rf","ctx","i0.ɵɵlistener","$event","i0.ɵɵtextInterpolate1","MetadataAccessListsItem","Showmore","isShowMore","isBigQuestion","ngOnInit","longQuestion","question","shortQuestion","substring","display","showMore","stopPropagation","i0.ɵɵclassMapInterpolate2","i0.ɵɵclassMapInterpolate1","i0.ɵɵattribute","i0.ɵɵclassMap","_r33","_r11","_r6","MetadataItem","appService","formatService","showTitle","showIcon","showCounts","clickable","tabular","collapseRows","_select","EventEmitter","needsCollapse","valueItems","isEmpty","ensureScalarValue","Utils","column","AppService","isBoolean","isNumber","ngOnChanges","changes","getColumn","item","itemLabelMessageParams","values","label","isTree","isEntity","isCsv","record","getColumnAlias","paths","paths_1","paths_1_1","path","parts","split","splice","map","entityItems","_b","apply","Array","_c","collapsable","undefined","accesslists","accessListIndices","classes","getLabel","select","subIndex","slice","unshift","join","emit","valueItem","FacetService","treepathLast","toggleCollapse","item_r1","ctx_r0","showTitles","showIcons","i0","ɵɵdirectiveInject","i1$1","FormatService","hostVars","hostBindings","Metadata","searchService","searchOnClick","addFieldSelect","search","i2$1","SearchService","MetadataModule","imports","CommonModule","IntlModule","UtilsModule","CollapseModule","declarations","exports","enMetadata","merge","metadata","extractslocationsLabel","extractslocationsPluralLabel","geoLabel","geoPluralLabel","personLabel","personPluralLabel","companyLabel","companyPluralLabel","treepathLabel","treepathPluralLabel","matchlocationsLabel","matchlocationsPluralLabel","titleLabel","titlePluralLabel","authorsLabel","authorsPluralLabel","filenameLabel","filenamePluralLabel","modifiedLabel","modifiedPluralLabel","sizeLabel","sizePluralLabel","docformatLabel","docformatPluralLabel","documentlanguagesLabel","documentlanguagesPluralLabel","geo_label","geo_plural_label","person_label","person_plural_label","company_label","company_plural_label","treepath_label","treepath_plural_label","title_label","title_plural_label","authors_label","authors_plural_label","filename_label","filename_plural_label","modified_label","modified_plural_label","size_label","size_plural_label","docformat_label","docformat_plural_label","documentlanguages_label","documentlanguages_plural_label","authorizedListTitleText","authorizedListHeader","deniedListTitleText","deniedListHeader","separator","treeSeparator","treeNodeSeparator","listSeparator","empty_boolean","empty_number","enFacet","enCollapse","frMetadata","frFacet","frCollapse","deMetadata","deFacet","deCollapse"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","<div class=\"accessListHeader\">\n    {{ headerMessage | sqMessage:{values: {value: index} } }}\n    <a href=\"#\" (click)=\"collapseClick($event)\">\n        <sq-collapse-button class=\"collapseButton\" [collapsed]=\"collapsed\">\n        </sq-collapse-button>\n    </a>\n</div>\n<sq-collapse [collapsed]=\"collapsed\">\n    <ng-template>\n        <div class=\"accessListBody\">\n            <div class=\"principalList\">\n                <div *ngFor=\"let principal of accessList\" class=\"principal\">\n                    <div class=\"domain\">{{ principal.domain }}</div>\n                    <div class=\"separator\"> | </div>\n                    <div class=\"id\">{{ principal.id }}</div>\n                </div>\n            </div>\n        </div>    \n    </ng-template>\n</sq-collapse>\n","import { Component, Input } from \"@angular/core\";\nimport { Principal } from \"@sinequa/core/web-services\";\n\n@Component({\n    selector: \"sq-metadata-access-lists-item-single-access-list\",\n    templateUrl: \"./metadata-access-lists-item-single-access-list.html\",\n    styleUrls: [\"./metadata-access-lists-item-single-access-list.css\"]\n})\nexport class MetadataAccessListsItemSingleAccessList {\n\n    @Input() private readonly authorized: boolean;\n    @Input() public readonly index: number;\n    @Input() public readonly accessList: Principal[];\n    public collapsed = true;\n\n    public get headerMessage(): string {\n        return \"msg#metadata.accessLists.\" + (this.authorized ? \"authorizedListHeader\" : \"deniedListHeader\");\n    }\n\n    public collapseClick(event: Event) {\n        this.collapsed = !this.collapsed;\n        event.preventDefault();\n    }\n}\n","<ng-container *ngFor=\"let i of accessLists.accessListIndices\" >\n    <div class=\"accessList\" *ngIf=\"accessLists.authorizedLists[i]\">\n        <div class=\"accessListIcon authorizedListIcon far fa-check-circle\" title=\"{{ 'msg#metadata.accessLists.authorizedListTitleText' | sqMessage }}\"></div>\n        <div class=\"accessListValue\">\n            <sq-metadata-access-lists-item-single-access-list [authorized]=\"true\" [index]=\"i\" [accessList]=\"accessLists.authorizedLists[i]\">\n            </sq-metadata-access-lists-item-single-access-list>\n        </div>\n    </div>\n    <div class=\"accessList\" *ngIf=\"accessLists.deniedLists[i]\">\n        <div class=\"accessListIcon deniedListIcon fas fa-minus-circle\" title=\"{{ 'msg#metadata.accessLists.deniedListTitleText' | sqMessage }}\"></div>\n        <div class=\"accessListValue\">\n            <sq-metadata-access-lists-item-single-access-list [authorized]=\"false\" [index]=\"i\" [accessList]=\"accessLists.deniedLists[i]\">\n            </sq-metadata-access-lists-item-single-access-list>\n        </div>\n    </div>\n</ng-container>","import { Component, Input } from \"@angular/core\";\nimport { DocumentAccessLists } from \"@sinequa/core/web-services\";\n\n@Component({\n    selector: \"sq-metadata-access-lists-item\",\n    templateUrl: \"./metadata-access-lists-item.html\",\n    styleUrls: [\"./metadata-access-lists-item.css\"]\n})\nexport class MetadataAccessListsItem {\n    @Input() public accessLists: DocumentAccessLists;\n}","<span [innerHTML]=\"shortQuestion\" *ngIf=\"!isShowMore\"></span>\r\n\r\n<span [innerHTML]=\"longQuestion\" *ngIf=\"isShowMore || !isBigQuestion\"> </span>\r\n\r\n<span class=\"showMore\" *ngIf=\"isBigQuestion\" (click)=\"showMore($event)\">\r\n  {{ isShowMore ? 'show less' : 'show more' }}</span>","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'sq-showmore',\r\n    templateUrl: './showmore.html',\r\n    styleUrls: ['./showmore.scss'],\r\n})\r\nexport class Showmore implements OnInit {\r\n    @Input() question: string;\r\n    // @Input() searchTextArray: string[];\r\n    shortQuestion: string;\r\n    longQuestion: string;\r\n    isShowMore = false;\r\n    isBigQuestion = false;\r\n    display: string;\r\n\r\n    constructor() { }\r\n\r\n    ngOnInit(): void {\r\n        this.longQuestion = this.question;\r\n        // this.searchTextArray.forEach(element => {\r\n        //     const re = new RegExp(element, \"gi\");\r\n        //     this.longQuestion = this.longQuestion.replace(re,\r\n        //         '<span class=\"highlighted\">' + element + \"</span>\"\r\n        //     );\r\n        // });\r\n        if (this.question.length > 300) {\r\n            this.isBigQuestion = true;\r\n            this.shortQuestion = this.question.substring(0, 400) + \"...\";\r\n            // this.searchTextArray.forEach(element => {\r\n            //     const re = new RegExp(element, \"gi\");\r\n            //     this.shortQuestion = this.shortQuestion.replace(re, '<span class=\"highlighted\">' + element + \"</span>\");\r\n            // });\r\n            this.display = this.shortQuestion;\r\n        } else {\r\n            this.display = this.longQuestion;\r\n\r\n        }\r\n    }\r\n    showMore(event: Event) {\r\n        event.stopPropagation(); this.isShowMore = !this.isShowMore;\r\n        if (this.isShowMore) this.display = this.longQuestion; else this.display = this.shortQuestion;\r\n    }\r\n}","<div *ngIf=\"!isEmpty\" class=\"sq-metadata-item {{itemClasses}}\">\r\n    <!-- Icon -->\r\n    <span *ngIf=\"showIcon && !!item\" class=\"sq-metadata-item-icon sq-icon-{{item}} {{docFormatIconClass}} fa-fw pr-2\"\r\n        [title]=\"label | sqMessage\">\r\n    </span>\r\n\r\n    <!-- Label (title)-->\r\n    <span *ngIf=\"showTitle && !!item\" class=\"sq-metadata-item-label pr-2\">{{'msg#metadata.item.label' | sqMessage:itemLabelMessageParams}}</span>\r\n    \r\n    <span class=\"sq-metadata-item-values\" [ngClass]=\"{collapsed: !!collapsed}\" #values>\r\n        <!-- Collapse button -->\r\n        <a *ngIf=\"collapseRows && needsCollapse\" href=\"#\" (click)=\"toggleCollapse()\" class=\"collapse-button mr-1\">\r\n            <i class=\"fas fa-fw fa-chevron-{{collapsed? 'right' : 'down'}}\"></i>\r\n        </a>\r\n        \r\n        <!-- Access list metadata -->\r\n        <sq-metadata-access-lists-item *ngIf=\"isAccessLists; else default\" [accessLists]=\"accessListsData\">\r\n        </sq-metadata-access-lists-item>\r\n\r\n        <!-- Other types of metadata -->\r\n        <ng-template #default>\r\n            <ng-container *ngIf=\"isTree; else isNotTree\">\r\n                <!-- Tree (displayed as breadcrumbs)-->\r\n                <ng-container *ngFor=\"let valueItem of valueItems; let $index = index\">\r\n                    <ol class=\"breadcrumb\" *ngIf=\"!!valueItem.parts && valueItem.parts.length > 0\">\r\n                        <li *ngFor=\"let part of valueItem.parts; let $subIndex = index\">\r\n                            <a    *ngIf=\"clickable\"  class=\"badge badge-pill\" [ngClass]=\"'sq-metadata-item-' + item\" href=\"#\" (click)=\"select($index, $subIndex)\">{{part | sqValue:column}}</a>\r\n                            <span *ngIf=\"!clickable\" [ngClass]=\"'sq-metadata-item-' + item\">{{part | sqValue:column}}</span>\r\n                            <span *ngIf=\"$subIndex < valueItem.parts.length - 1\" class=\"sq-metadata-item-tree-node-separator\">{{'msg#metadata.item.treeNodeSeparator' | sqMessage}}</span>\r\n                        </li>\r\n                    </ol>\r\n                    <span *ngIf=\"$index < valueItems.length - 1\" class=\"sq-metadata-item-tree-separator\">{{'msg#metadata.item.treeSeparator' | sqMessage}}</span>\r\n                </ng-container>\r\n            </ng-container>\r\n\r\n            <!-- Not a Tree-->\r\n            <ng-template #isNotTree>\r\n                <ng-container *ngIf=\"clickable; else notTreeNonClickable\">\r\n                    <!-- Clickable -->\r\n                    <a  *ngFor=\"let valueItem of valueItems; let $index = index\"\r\n                        class=\"badge badge-pill {{'sq-metadata-item-' + item}} mr-1\"\r\n                        [href]=\"valueItem.value\"\r\n                        (click)=\"select($index)\"\r\n                        [attr.title]=\"showTitle? null : (label | sqMessage)\"\r\n                        target=\"_blank\">{{valueItem | sqValue:column}}\r\n                        <span *ngIf=\"showCounts && valueItem.count\"\r\n                            class=\"counter badge badge-light ml-1\"\r\n                            [title]=\"valueItem.count + ' occurrences in document'\">{{valueItem.count}}</span>\r\n                    </a>\r\n\r\n                </ng-container>\r\n                <ng-template #notTreeNonClickable>\r\n                    <!-- Not clickable -->\r\n                    <ng-container *ngFor=\"let valueItem of valueItems; let $index = index\">                     \r\n                          <span class=\"{{'sq-metadata-item-' + item}}\"\r\n                            [attr.title]=\"showTitle? null : (label | sqMessage)\">\r\n\r\n                            <sq-showmore [question]=\"valueItem.value\"></sq-showmore>\r\n                            <!-- {{valueItem | sqValue:column}} -->\r\n                            <span *ngIf=\"showCounts && valueItem.count\"\r\n                                class=\"small\"\r\n                                [title]=\"valueItem.count + ' occurrences in document'\">({{valueItem.count}})</span>\r\n                        </span>\r\n                        <span *ngIf=\"$index < valueItems.length - 1\" class=\"sq-metadata-item-list-separator\">{{'msg#metadata.item.listSeparator' | sqMessage}}</span>\r\n                    </ng-container>\r\n                </ng-template>\r\n            </ng-template>\r\n        </ng-template>\r\n    </span>\r\n</div>","import {Component, Input, Output, HostBinding, OnChanges, SimpleChanges, EventEmitter} from \"@angular/core\";\r\nimport {Utils} from \"@sinequa/core/base\";\r\nimport {AppService, FormatService, ValueItem} from \"@sinequa/core/app-utils\";\r\nimport {Record, EntityItem, DocumentAccessLists, CCColumn} from \"@sinequa/core/web-services\";\r\nimport {FacetService} from \"@sinequa/components/facet\";\r\n\r\nexport interface TreeValueItem extends ValueItem {\r\n    parts: ValueItem[];\r\n}\r\n\r\n@Component({\r\n    selector: \"sq-metadata-item\",\r\n    templateUrl: \"./metadata-item.html\",\r\n    styleUrls: ['./metadata-item.scss']\r\n})\r\nexport class MetadataItem implements OnChanges {\r\n    @Input() record: Record;\r\n    @Input() item: string;\r\n    @Input() showTitle = true;\r\n    @Input() showIcon: boolean = false;\r\n    @Input() showCounts: boolean = true;\r\n    @Input() clickable: boolean = true;\r\n    @Input() tabular: boolean = true;\r\n    @Input() collapseRows: boolean = true;\r\n    @Output(\"select\") _select = new EventEmitter<{item: string, valueItem: ValueItem}>();\r\n    @HostBinding('hidden') get hidden(): boolean { return this.isEmpty; }\r\n    valueItems: (ValueItem | TreeValueItem)[];\r\n    column: CCColumn | undefined;\r\n    isTree: boolean;\r\n    isEntity: boolean;\r\n    isCsv: boolean;\r\n    itemLabelMessageParams: any;\r\n    collapsed: boolean;\r\n    needsCollapse: boolean = false;\r\n\r\n    constructor(\r\n        public appService: AppService,\r\n        public formatService: FormatService) {\r\n        this.valueItems = [];\r\n    }\r\n\r\n    ensureScalarValue(value: any): any {\r\n        if (Utils.isEmpty(value) && this.column) {\r\n            if (AppService.isBoolean(this.column)) {\r\n                value = 'msg#metadata.item.empty_boolean';\r\n            }\r\n            else if (AppService.isNumber(this.column)) {\r\n                value = 'msg#metadata.item.empty_number';\r\n            }\r\n        }\r\n        return value;\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (!this.column) {\r\n            this.column = this.appService.getColumn(this.item);\r\n            this.itemLabelMessageParams = {values: {label: this.label}};\r\n        }\r\n        this.valueItems = [];\r\n        this.isTree = !!this.column && AppService.isTree(this.column);\r\n        this.isEntity = !!this.column && AppService.isEntity(this.column);\r\n        this.isCsv = !!this.column && AppService.isCsv(this.column);\r\n        const values = this.record[this.appService.getColumnAlias(this.column, this.item)];\r\n        if (this.isTree) {\r\n            const paths: string[] = values;\r\n            if (paths) {\r\n                for (const path of paths) {\r\n                    const parts = path.split(\"/\");\r\n                    if (parts.length > 0 && parts[0] === \"\") {\r\n                        parts.splice(0, 1);\r\n                    }\r\n                    if (parts.length > 0 && parts[parts.length - 1] === \"\") {\r\n                        parts.splice(parts.length - 1, 1);\r\n                    }\r\n                    const item: TreeValueItem = {value: path, parts: parts.map(value => ({value: value}))};\r\n                    this.valueItems.push(item);\r\n                }\r\n            }\r\n        }\r\n        else if (this.isEntity) {\r\n            const entityItems: EntityItem[] = values;\r\n            if (entityItems) {\r\n                this.valueItems.push(...entityItems);\r\n            }\r\n        }\r\n        else if (this.isCsv) {\r\n            if (values && values instanceof Array) {\r\n                this.valueItems.push(...values.map<ValueItem>(value => ({value: value})));\r\n            }\r\n            else if (!Utils.isEmpty(values)) {\r\n                this.valueItems.push({value: values});\r\n            }\r\n        }\r\n        else {\r\n            const value = this.ensureScalarValue(values);\r\n            if (!Utils.isEmpty(value)) {\r\n                this.valueItems.push({value: value});\r\n            }\r\n        }\r\n        \r\n        const collapsable = (this.isEntity || this.isCsv) && !this.isTree; // Tree columns are multivalues, and therefore isCsv=true\r\n        if (changes.collapseRows || this.collapsed === undefined) {\r\n            this.collapsed = collapsable && this.collapseRows;\r\n        }\r\n        this.needsCollapse = collapsable && this.collapseRows && this.tabular && this.valueItems.length > 1; // We display the collapse button as soon as the number of values is >1 which does not take into account the actualy width of each value...\r\n    }\r\n\r\n    public get isEmpty(): boolean {\r\n        if (!this.item) {\r\n            return true;\r\n        }\r\n        if (this.item === \"accesslists\") {\r\n            if (!this.record.accesslists || !this.record.accesslists.accessListIndices\r\n                || this.record.accesslists.accessListIndices.length === 0) {\r\n                return true;\r\n            }\r\n        }\r\n        else {\r\n            if (this.valueItems.length === 0) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public get itemClasses(): string {\r\n        let classes = \"sq-text\";\r\n        if (this.clickable) {\r\n            classes += \" sq-clickable\";\r\n        }\r\n        if (this.tabular) {\r\n            classes += \" sq-tabular\";\r\n        }\r\n        return classes;\r\n    }\r\n\r\n    public get label(): string {\r\n        return this.appService.getLabel(this.item);\r\n    }\r\n\r\n    public get isAccessLists(): boolean {\r\n        return this.item === \"accesslists\";\r\n    }\r\n\r\n    public get accessListsData(): DocumentAccessLists {\r\n        return this.record.accesslists;\r\n    }\r\n\r\n    public get docFormatIconClass(): string {\r\n        if (this.item == null || this.item !== \"docformat\" && this.item !== \"fileext\") {\r\n            return \"\";\r\n        }\r\n        const value: string = this.record[this.item];\r\n        if (!value) {\r\n            return \"far fa-file\";\r\n        }\r\n        return \"far fa-file sq-icon-file-\" + value;\r\n    }\r\n\r\n    select(index: number, subIndex = 0) {\r\n        if (this.isTree) {\r\n            const valueItem = <TreeValueItem>this.valueItems[index];\r\n            const parts = valueItem.parts.map((item) => item.value).slice(0, subIndex + 1);\r\n            if (parts.length > 0) {\r\n                parts.unshift(\"\");\r\n                parts.push(\"\");\r\n            }\r\n            const path = parts.join(\"/\");\r\n            this._select.emit({item: this.item, valueItem: {value: path + \"*\", display: FacetService.treepathLast(path)}});\r\n        }\r\n        else {\r\n            this._select.emit({item: this.item, valueItem: this.valueItems[index]});\r\n        }\r\n        return false; // prevent default\r\n    }\r\n\r\n    toggleCollapse() {\r\n        this.collapsed = !this.collapsed;\r\n        return false;\r\n    }\r\n}\r\n","<sq-metadata-item *ngFor=\"let item of items; let $index = index\"\r\n    [record]=\"record\"\r\n    [item]=\"item\"\r\n    (select)=\"select($event.item, $event.valueItem)\"\r\n    [showTitle]=\"showTitles\"\r\n    [showIcon]=\"showIcons\"\r\n    [showCounts]=\"showCounts\"\r\n    [clickable]=\"clickable\"\r\n    [tabular]=\"tabular\"\r\n    [collapseRows]=\"collapseRows\">\r\n    <span *ngIf=\"!tabular && $index < items.length - 1\" class=\"ml-1 mr-2\">{{'msg#metadata.item.separator' | sqMessage}}</span>\r\n</sq-metadata-item>\r\n","import {Component, Input, Output, EventEmitter, HostBinding} from \"@angular/core\";\nimport {SearchService} from \"@sinequa/components/search\";\nimport {AppService, ValueItem} from \"@sinequa/core/app-utils\";\nimport {Record} from \"@sinequa/core/web-services\";\n\n@Component({\n    selector: \"sq-metadata\",\n    templateUrl: \"./metadata.html\",\n    styleUrls: [\"./metadata.scss\"]\n})\nexport class Metadata {\n    @Input() record: Record;\n    @Input() items: string[];\n    @Input() showTitles: boolean = true;\n    @Input() showIcons: boolean = false;\n    @Input() showCounts: boolean = true;\n    @Input() clickable: boolean = true;\n    @HostBinding(\"class.sq-tabular\") @Input() tabular: boolean = true;\n    @Input() collapseRows: boolean = true;\n    @Input() searchOnClick: boolean = true;\n    \n    @Output(\"select\") _select = new EventEmitter<{item: string, valueItem: ValueItem}>();\n\n    constructor(\n        public appService: AppService, \n        public searchService: SearchService) {\n    }\n\n    select(item: string, valueItem: ValueItem) {\n        if(this.searchOnClick) {\n            this.searchService.addFieldSelect(item, valueItem);\n            this.searchService.search();\n        }\n        this._select.emit({item: item, valueItem: valueItem});\n    }\n}","import {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\n\nimport {IntlModule} from \"@sinequa/core/intl\";\nimport {UtilsModule} from \"@sinequa/components/utils\";\nimport {CollapseModule} from \"@sinequa/components/collapse\";\n\nimport {Metadata} from \"./metadata/metadata\";\nimport {MetadataItem} from \"./metadata-item/metadata-item\";\nimport {MetadataAccessListsItem} from \"./metadata-access-lists-item/metadata-access-lists-item\";\nimport {MetadataAccessListsItemSingleAccessList} from \"./metadata-access-lists-item-single-access-list/metadata-access-lists-item-single-access-list\";\nimport { Showmore } from \"./showmore/showmore\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        IntlModule,\n        UtilsModule,\n        CollapseModule,\n    ],\n    declarations: [\n        Metadata, MetadataItem,Showmore,\n        MetadataAccessListsItem, MetadataAccessListsItemSingleAccessList\n    ],\n    exports: [\n        Metadata, MetadataItem,Showmore\n    ],\n})\nexport class MetadataModule {\n}","export default {\n    metadata: {\n        extractslocationsLabel: \"Relevant extract\",\n        extractslocationsPluralLabel: \"Relevant extracts\",\n        geoLabel: \"Place\",\n        geoPluralLabel: \"Places\",\n        personLabel: \"Person\",\n        personPluralLabel: \"People\",\n        companyLabel: \"Company\",\n        companyPluralLabel: \"Companies\",\n        treepathLabel: \"Source\",\n        treepathPluralLabel: \"Sources\",\n        matchlocationsLabel: \"Search term\",\n        matchlocationsPluralLabel: \"Search terms\",\n        titleLabel: \"Title\",\n        titlePluralLabel: \"Titles\",\n        authorsLabel: \"Author\",\n        authorsPluralLabel: \"Authors\",\n        filenameLabel: \"Filename\",\n        filenamePluralLabel: \"Filenames\",\n        modifiedLabel: \"Date\",\n        modifiedPluralLabel: \"Dates\",\n        sizeLabel: \"Size\",\n        sizePluralLabel: \"Sizes\",\n        docformatLabel: \"Format\",\n        docformatPluralLabel: \"Formats\",\n        documentlanguagesLabel: \"Language\",\n        documentlanguagesPluralLabel: \"Languages\",\n        geo_label: \"Place\",\n        geo_plural_label: \"Places\",\n        person_label: \"Person\",\n        person_plural_label: \"People\",\n        company_label: \"Company\",\n        company_plural_label: \"Companies\",\n        treepath_label: \"Source\",\n        treepath_plural_label: \"Sources\",\n        title_label: \"Title\",\n        title_plural_label: \"Titles\",\n        authors_label: \"Author\",\n        authors_plural_label: \"Authors\",\n        filename_label: \"Filename\",\n        filename_plural_label: \"Filenames\",\n        modified_label: \"Date\",\n        modified_plural_label: \"Dates\",\n        size_label: \"Size\",\n        size_plural_label: \"Sizes\",\n        docformat_label: \"Format\",\n        docformat_plural_label: \"Formats\",\n        documentlanguages_label: \"Language\",\n        documentlanguages_plural_label: \"Languages\",\n        accessLists: {\n            authorizedListTitleText: \"Authorized access list\",\n            authorizedListHeader: \"Authorized access list {value, number}\",\n            deniedListTitleText: \"Denied access list\",\n            deniedListHeader: \"Denied access list {value, number}\"\n        },\n        item: {\n            label: \"{label}:\",\n            separator: \"|\",\n            treeSeparator: \" ; \",\n            treeNodeSeparator: \"/\",\n            listSeparator: \", \",\n            empty_boolean: 'false',\n            empty_number: '0'\n        }\n    },\n};\n","import {Utils} from \"@sinequa/core/base\";\nimport {enFacet, frFacet, deFacet} from \"@sinequa/components/facet\";\nimport {enCollapse, frCollapse, deCollapse} from \"@sinequa/components/collapse\";\n\nimport _enMetadata from \"./en\";\nimport _frMetadata from \"./fr\";\nimport _deMetadata from \"./de\";\n\nconst enMetadata = Utils.merge({}, _enMetadata, enFacet, enCollapse);\nconst frMetadata = Utils.merge({}, _frMetadata, frFacet, frCollapse);\nconst deMetadata = Utils.merge({}, _deMetadata, deFacet, deCollapse);\n\nexport { enMetadata, frMetadata, deMetadata };\n","export default {\n    metadata: {\n        extractslocationsLabel: \"Extrait pertinent\",\n        extractslocationsPluralLabel: \"Extraits pertinents\",\n        geoLabel: \"Lieu\",\n        geoPluralLabel: \"Lieux\",\n        personLabel: \"Personne\",\n        personPluralLabel: \"Personnes\",\n        companyLabel: \"Société\",\n        companyPluralLabel: \"Sociétés\",\n        treepathLabel: \"Source\",\n        treepathPluralLabel: \"Sources\",\n        matchlocationsLabel: \"Terme recherché\",\n        matchlocationsPluralLabel: \"Termes recherchés\",\n        titleLabel: \"Titre\",\n        titlePluralLabel: \"Titres\",\n        authorsLabel: \"Auteur\",\n        authorsPluralLabel: \"Auteurs\",\n        filenameLabel: \"Nom de fichier\",\n        filenamePluralLabel: \"Noms de fichiers\",\n        modifiedLabel: \"Date\",\n        modifiedPluralLabel: \"Dates\",\n        sizeLabel: \"Taille\",\n        sizePluralLabel: \"Tailles\",\n        docformatLabel: \"Format\",\n        docformatPluralLabel: \"Formats\",\n        documentlanguagesLabel: \"Langue\",\n        documentlanguagesPluralLabel: \"Langues\",\n        geo_label: \"Lieu\",\n        geo_plural_label: \"Lieux\",\n        person_label: \"Personne\",\n        person_plural_label: \"Personnes\",\n        company_label: \"Société\",\n        company_plural_label: \"Sociétés\",\n        treepath_label: \"Source\",\n        treepath_plural_label: \"Sources\",\n        title_label: \"Titre\",\n        title_plural_label: \"Titres\",\n        authors_label: \"Auteur\",\n        authors_plural_label: \"Auteurs\",\n        filename_label: \"Nom de fichier\",\n        filename_plural_label: \"Noms de fichiers\",\n        modified_label: \"Date\",\n        modified_plural_label: \"Dates\",\n        size_label: \"Taille\",\n        size_plural_label: \"Tailles\",\n        docformat_label: \"Format\",\n        docformat_plural_label: \"Formats\",\n        documentlanguages_label: \"Langue\",\n        documentlanguages_plural_label: \"Langues\",\n        accessLists: {\n            authorizedListTitleText: \"Accès autorisés\",\n            authorizedListHeader: \"Liste d'accès autorisés {value, number}\",\n            deniedListTitleText: \"Accès refusés\",\n            deniedListHeader: \"Liste d'accès refusés {value, number}\"\n        },\n        item: {\n            label: \"{label}:\",\n            separator: \"|\",\n            treeSeparator: \" ; \",\n            treeNodeSeparator: \"/\",\n            listSeparator: \", \",\n            empty_boolean: 'false',\n            empty_number: '0'\n        }\n    },\n};\n","export default {\n    metadata: {\n        extractslocationsLabel: \"Relevanter Extrakt\",\n        extractslocationsPluralLabel: \"Relevante Extrakte\",\n        geoLabel: \"Ort\",\n        geoPluralLabel: \"Orte\",\n        personLabel: \"Person\",\n        personPluralLabel: \"Personen\",\n        companyLabel: \"Firma\",\n        companyPluralLabel: \"Firmen\",\n        treepathLabel: \"Quelle\",\n        treepathPluralLabel: \"Quellen\",\n        matchlocationsLabel: \"Suchbegriff\",\n        matchlocationsPluralLabel: \"Suchbegriffe\",\n        titleLabel: \"Titel\",\n        titlePluralLabel: \"Titel\",\n        authorsLabel: \"Autor\",\n        authorsPluralLabel: \"Autoren\",\n        filenameLabel: \"Dateiname\",\n        filenamePluralLabel: \"Dateinamen\",\n        modifiedLabel: \"Datum\",\n        modifiedPluralLabel: \"Datumsangaben\",\n        sizeLabel: \"Größe\",\n        sizePluralLabel: \"Größen\",\n        docformatLabel: \"Format\",\n        docformatPluralLabel: \"Formate\",\n        documentlanguagesLabel: \"Sprache\",\n        documentlanguagesPluralLabel: \"Sprachen\",\n        geo_label: \"Ort\",\n        geo_plural_label: \"Orte\",\n        person_label: \"Person\",\n        person_plural_label: \"Personen\",\n        company_label: \"Firma\",\n        company_plural_label: \"Firmen\",\n        treepath_label: \"Quelle\",\n        treepath_plural_label: \"Quellen\",\n        title_label: \"Titel\",\n        title_plural_label: \"Titel\",\n        authors_label: \"Autor\",\n        authors_plural_label: \"Autoren\",\n        filename_label: \"Dateiname\",\n        filename_plural_label: \"Dateinamen\",\n        modified_label: \"Datum\",\n        modified_plural_label: \"Datumsangaben\",\n        size_label: \"Größe\",\n        size_plural_label: \"Größen\",\n        docformat_label: \"Format\",\n        docformat_plural_label: \"Formate\",\n        documentlanguages_label: \"Sprache\",\n        documentlanguages_plural_label: \"Sprachen\",\n        accessLists: {\n            authorizedListTitleText: \"Liste der erlaubten Zugriffe\",\n            authorizedListHeader: \"Liste der erlaubten Zugriffe {value, number}\",\n            deniedListTitleText: \"Liste der unerlaubten Zugriffe\",\n            deniedListHeader: \"Liste der unerlaubten Zugriffe {value, number}\"\n        },\n        item: {\n            label: \"{label}:\",\n            separator: \"|\",\n            treeSeparator: \" ; \",\n            treeNodeSeparator: \"/\",\n            listSeparator: \", \",\n            empty_boolean: 'false',\n            empty_number: '0'\n        }\n    }\n};\n"]}