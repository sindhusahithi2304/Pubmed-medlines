{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","../../../projects/components/comments/comments.web.service.ts","../../../projects/components/comments/creation-date.pipe.ts","../../../projects/components/comments/markdown.pipe.ts","../../../projects/components/comments/comments.component.html","../../../projects/components/comments/comments.component.ts","../../../projects/components/comments/comments.module.ts","../../projects/components/comments/messages/de.ts","../../projects/components/comments/messages/en.ts","../../projects/components/comments/messages/fr.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","create","CommentsWebService","startConfig","httpClient","_this","_super","call","this","endpoint","__","constructor","prototype","__extends","getComments","docid","post","makeUrl","action","pipe","pluck","getCommentCount","getCommentCounts","docids","length","of","createComment","message","replyto","updateComment","commentid","deleteComment","markAsDeleted","likeComment","HttpService","i0","ɵɵinject","START_CONFIG","i1","SqHttpClient","factory","ɵfac","providedIn","CreationDatePipe","intlService","transform","comment","creation","formatDate","formatTime","msg","formatMessage","date","modified","ɵɵdirectiveInject","i1$1","IntlService","pure","MarkdownPipe","value","marked","i0.ɵɵelementContainer","i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵadvance","i0.ɵɵtextInterpolate1","i0.ɵɵtemplate","i0.ɵɵlistener","i0.ɵɵelement","i0.ɵɵproperty","ɵɵpureFunction1","_c0","ctx_r0","comments","i0.ɵɵtextInterpolate","i0.ɵɵelementContainerStart","i0.ɵɵelementContainerEnd","$event","stopPropagation","comment_r10","subcomments","CommentsComponent","commentsWebService","modalService","principalService","theme","ngOnChanges","simpleChanges","user","principal","subscribe","addComment","replyTo","model","title","buttons","output","validators","Validators","required","rowCount","prompt","then","result","trim","push","res","likes","likedByUser","editComment","_a","confirm","confirmType","ModalButton","primary","c","deleted","userid","username","remove","i","splice","i2","ModalService","PrincipalWebService","selectors","inputs","features","ɵɵNgOnChangesFeature","decls","vars","consts","template","rf","ctx","CommentsModule","imports","CommonModule","WebServicesModule","IntlModule","LoginModule","UtilsModule","CollapseModule","declarations","exports","created","add","write","like","reply","edit","delete","markdownNotice","noComment","deleteNotice"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Inject, Injectable } from \"@angular/core\";\r\nimport { HttpService, SqHttpClient, StartConfig, START_CONFIG } from \"@sinequa/core/web-services\";\r\nimport { Observable, of } from \"rxjs\";\r\nimport { pluck } from \"rxjs/operators\";\r\n\r\ndeclare interface CoreComment {\r\n    commentid: string;\r\n    docid: string;\r\n    replyto: string;\r\n    creation: string;\r\n    modified: string;\r\n    subcomments?: Comment[];\r\n}\r\n\r\nexport interface DeletedComment extends CoreComment{\r\n    deleted: true;\r\n}\r\n\r\nexport interface NormalComment extends CoreComment {\r\n    message: string;\r\n    userid: string;\r\n    username: string;\r\n    likes: number;\r\n    likedByUser: boolean;\r\n}\r\n\r\nexport type Comment = NormalComment | DeletedComment;\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class CommentsWebService extends HttpService {\r\n    protected endpoint = 'plugin/CommentsWebService';\r\n\r\n    constructor(\r\n        @Inject(START_CONFIG) startConfig: StartConfig,\r\n        protected httpClient: SqHttpClient) {\r\n        super(startConfig);\r\n    }\r\n\r\n    /**\r\n     * Return the list of comments for a given document\r\n     * @param docid \r\n     * @returns \r\n     */\r\n    getComments(docid: string): Observable<Comment[]> {\r\n        return this.httpClient.post<{comments: Comment[]}>(\r\n            this.makeUrl(this.endpoint), {docid, action: 'read'}\r\n        ).pipe(pluck('comments'));\r\n    }\r\n\r\n    /**\r\n     * Return the number of comments for a given document\r\n     * @param docid \r\n     * @returns \r\n     */\r\n    getCommentCount(docid: string): Observable<number> {\r\n        return this.httpClient.post<{count: number}>(\r\n            this.makeUrl(this.endpoint), {docid, action: 'count'}\r\n        ).pipe(pluck('count'));\r\n    }\r\n\r\n    /**\r\n     * Return the number of comments for a list of documents\r\n     * @param docids \r\n     * @returns \r\n     */\r\n    getCommentCounts(docids: string[]): Observable<{[id: string]: number}> {\r\n        if(docids.length === 0) {\r\n            return of({});\r\n        }\r\n        return this.httpClient.post<{counts: {[id: string]: number}}>(\r\n            this.makeUrl(this.endpoint), {docid: docids[0], docids, action: 'count'}\r\n        ).pipe(pluck('counts'));\r\n    }\r\n\r\n    /**\r\n     * Create a comment with given message for a given document\r\n     * @param docid \r\n     * @param message \r\n     * @param replyto \r\n     * @returns \r\n     */\r\n    createComment(docid: string, message: string, replyto?: string): Observable<NormalComment> {\r\n        return this.httpClient.post<{comment: NormalComment}>(\r\n            this.makeUrl(this.endpoint), {docid, message, replyto, action: 'create'}\r\n        ).pipe(pluck('comment'));\r\n    }\r\n\r\n    /**\r\n     * Modify the content of a comment\r\n     * @param docid \r\n     * @param commentid \r\n     * @param message \r\n     * @returns \r\n     */\r\n    updateComment(docid: string, commentid: string, message: string) {\r\n        return this.httpClient.post<{comment: NormalComment}>(\r\n            this.makeUrl(this.endpoint), {docid, commentid, message, action: 'update'}\r\n        ).pipe(pluck('comment'));\r\n    }\r\n\r\n    /**\r\n     * Delete a specific comment\r\n     * @param docid \r\n     * @param commentid \r\n     * @param markAsDeleted \r\n     * @returns \r\n     */\r\n    deleteComment(docid: string, commentid: string, markAsDeleted: boolean): Observable<void> {\r\n        return this.httpClient.post<void>(\r\n            this.makeUrl(this.endpoint), {docid, commentid, markAsDeleted, action: 'delete'}\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Add a like to a comment\r\n     * @param docid \r\n     * @param commentid \r\n     * @returns \r\n     */\r\n    likeComment(docid: string, commentid: string): Observable<NormalComment> {\r\n        return this.httpClient.post<{comment: NormalComment}>(\r\n            this.makeUrl(this.endpoint), {docid, commentid, action: 'like'}\r\n        ).pipe(pluck('comment'));\r\n    }\r\n}","import { Pipe, PipeTransform } from \"@angular/core\";\r\nimport { IntlService } from \"@sinequa/core/intl\";\r\nimport { Comment } from \"./comments.web.service\";\r\n\r\n@Pipe({\r\n    name: \"sqCreationDate\"\r\n})\r\nexport class CreationDatePipe implements PipeTransform {\r\n\r\n    constructor(\r\n        public intlService: IntlService\r\n    ){}\r\n\r\n    transform(comment: Comment): string {\r\n        const creation = this.intlService.formatDate(comment.creation) + \" \" + this.intlService.formatTime(comment.creation);\r\n        let msg = this.intlService.formatMessage(\"msg#comments.created\", {date: creation});\r\n        if(comment.modified !== comment.creation) {\r\n            const modified = this.intlService.formatDate(comment.modified) + \" \" + this.intlService.formatTime(comment.modified);\r\n            msg += \" - \" + this.intlService.formatMessage(\"msg#comments.modified\", {date: modified});\r\n        }\r\n        return msg;\r\n    }\r\n}","import { Pipe, PipeTransform } from \"@angular/core\";\r\nimport * as marked from \"marked\";\r\n\r\n@Pipe({\r\n  name: \"sqMarkdown\"\r\n})\r\nexport class MarkdownPipe implements PipeTransform {\r\n  transform(value: any): any {\r\n    if (value && value.length > 0) {\r\n      return marked(value);\r\n    }\r\n    return value;\r\n  }\r\n}","<div *ngIf=\"comments\" class=\"comments\" [ngClass]=\"theme\">\r\n    <ng-container *ngTemplateOutlet=\"commentsTpl; context:{$implicit: comments}\"></ng-container>\r\n\r\n    <div *ngIf=\"comments.length === 0\" class=\"font-italic text-center my-4\">\r\n        {{ 'msg#comments.noComment' | sqMessage }}\r\n    </div>\r\n\r\n    <div>\r\n        <button class=\"btn btn-primary d-block mx-auto mt-3\" (click)=\"addComment()\">\r\n            <i class=\"fas fa-comment\"></i>\r\n            {{ 'msg#comments.write' | sqMessage }}\r\n        </button>\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf=\"!comments\">\r\n    <div class=\"spinner-grow d-block mx-auto mt-4\" role=\"status\">\r\n        <span class=\"sr-only\">{{ 'msg#preview.loading' | sqMessage }}</span>\r\n    </div>\r\n</div>\r\n\r\n\r\n<ng-template #commentsTpl let-comments>\r\n\r\n    <ng-container *ngFor=\"let comment of comments\">\r\n\r\n        <div class=\"message pl-2 py-1 pr-2\">\r\n            <div class=\"mt-2 d-flex\" [ngClass]=\"{'text-muted':comment.deleted}\" (click)=\"comment.$collapsed = !comment.$collapsed\">\r\n                <i class=\"fas fa-user-circle mr-1\"></i>\r\n                <span class=\"text-truncate small font-weight-bold mr-2\" *ngIf=\"!comment.deleted\">{{comment.username}}</span>\r\n                <span class=\"text-truncate small font-weight-bold mr-2\" *ngIf=\"comment.deleted\">{{ 'msg#comments.deleted' | sqMessage }}</span>\r\n                <span class=\"small text-muted ml-auto\" [title]=\"comment | sqCreationDate\">{{comment.modified | sqRelativeTime}}<ng-container *ngIf=\"comment.modified !== comment.creation\">*</ng-container></span>\r\n                <sq-collapse-button [collapsed]=\"comment.$collapsed\" (state)=\"comment.$collapsed = $event\" (click)=\"$event.stopPropagation()\" class=\"ml-1 small\"></sq-collapse-button>\r\n            </div>\r\n\r\n            <sq-collapse [collapsed]=\"comment.$collapsed\">\r\n\r\n                <ng-template>\r\n            \r\n                    <div class=\"message-body\" *ngIf=\"!comment.deleted\" [innerHTML]=\"comment.message | sqMarkdown\"></div>\r\n                    <div class=\"text-muted\" *ngIf=\"comment.deleted\">{{ 'msg#comments.deleted' | sqMessage }}</div>\r\n            \r\n                    <div class=\"d-flex justify-content-end\">\r\n                        <div class=\"btn-group\" role=\"group\" *ngIf=\"!comment.deleted\" (click)=\"$event.stopPropagation()\">\r\n                            <button class=\"btn btn-sm\" (click)=\"likeComment(comment)\" [ngClass]=\"{'btn-success': comment.likedByUser, 'btn-outline-secondary': !comment.likedByUser}\">\r\n                                <i class=\"fas fa-thumbs-up\"></i>\r\n                                <span *ngIf=\"comment.likes > 0\">&nbsp;{{comment.likes}}</span>\r\n                                <span *ngIf=\"comment.likes === 0\">&nbsp;{{ 'msg#comments.like' | sqMessage }}</span>\r\n                            </button>\r\n                            <button class=\"btn btn-sm btn-outline-secondary\" (click)=\"addComment(comment)\">\r\n                                <i class=\"fas fa-reply\"></i>\r\n                                <span>&nbsp;{{ 'msg#comments.reply' | sqMessage }}</span>\r\n                            </button>\r\n                            <button class=\"btn btn-sm btn-outline-secondary\" (click)=\"editComment(comment)\" *ngIf=\"user?.userId === comment.userid || user?.isAdministrator\">\r\n                                <i class=\"fas fa-edit\"></i>\r\n                                <span>&nbsp;{{ 'msg#comments.edit' | sqMessage }}</span>\r\n                            </button>\r\n                            <button class=\"btn btn-sm btn-outline-secondary\" (click)=\"deleteComment(comment)\" *ngIf=\"user?.userId === comment.userid || user?.isAdministrator\">\r\n                                <i class=\"fas fa-trash-alt\"></i>\r\n                                <span>&nbsp;{{ 'msg#comments.delete' | sqMessage }}</span>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </ng-template>\r\n\r\n            </sq-collapse>\r\n        </div>\r\n\r\n        <div *ngIf=\"!comment.$collapsed && comment.subcomments\" class=\"subcomments ml-2\">\r\n            <ng-container *ngTemplateOutlet=\"commentsTpl; context:{$implicit: comment.subcomments}\"></ng-container>\r\n        </div>\r\n\r\n    </ng-container>\r\n\r\n</ng-template>","import { Component, Input, OnChanges, SimpleChanges } from \"@angular/core\";\r\nimport { Validators } from \"@angular/forms\";\r\nimport { ConfirmType, ModalButton, ModalResult, ModalService } from \"@sinequa/core/modal\";\r\nimport { Principal, PrincipalWebService } from \"@sinequa/core/web-services\";\r\nimport { CommentsWebService, Comment, NormalComment } from \"./comments.web.service\";\r\n\r\n@Component({\r\n    selector: 'sq-comments',\r\n    templateUrl: './comments.component.html',\r\n    styleUrls: ['./comments.component.scss']\r\n})\r\nexport class CommentsComponent implements OnChanges {\r\n    @Input() docid: string;\r\n    @Input() theme: 'light' | 'dark' = 'light';\r\n\r\n    comments: Comment[];\r\n    user?: Principal;\r\n\r\n    constructor(\r\n        public commentsWebService: CommentsWebService,\r\n        public modalService: ModalService,\r\n        public principalService: PrincipalWebService\r\n    ){\r\n\r\n    }\r\n\r\n    ngOnChanges(simpleChanges: SimpleChanges) {\r\n        if(simpleChanges.docid && this.docid) {\r\n            this.user = this.principalService.principal;\r\n            this.commentsWebService.getComments(this.docid)\r\n                .subscribe(comments => this.comments = comments);\r\n        }\r\n    }\r\n\r\n    addComment(replyTo?: Comment) {\r\n        const model = {\r\n            title: replyTo? 'msg#comments.replyTo' : 'msg#comments.add',\r\n            message: 'msg#comments.markdownNotice',\r\n            buttons: [],\r\n            output: '',\r\n            validators: [Validators.required],\r\n            rowCount: 5\r\n        }\r\n        this.modalService.prompt(model).then(result => {\r\n            if(result === ModalResult.OK && model.output.trim() !== \"\") {\r\n                this.commentsWebService.createComment(this.docid, model.output, replyTo?.commentid).subscribe(comment => {\r\n                    if(replyTo) {\r\n                        if(!replyTo.subcomments) {\r\n                            replyTo.subcomments = [];\r\n                        }\r\n                        replyTo.subcomments.push(comment);\r\n                    }\r\n                    else {\r\n                        this.comments.push(comment);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    likeComment(comment: NormalComment) {\r\n        this.commentsWebService.likeComment(comment.docid, comment.commentid)\r\n            .subscribe(res => {\r\n                comment.likes = res.likes;\r\n                comment.likedByUser = res.likedByUser;\r\n            });\r\n    }\r\n\r\n    editComment(comment: NormalComment) {\r\n        const model = {\r\n            title: 'msg#comments.editComment',\r\n            message: 'msg#comments.markdownNotice',\r\n            buttons: [],\r\n            output: comment.message,\r\n            validators: [Validators.required],\r\n            rowCount: 5\r\n        }\r\n        this.modalService.prompt(model).then(result => {\r\n            if(result === ModalResult.OK && model.output.trim() !== \"\") {\r\n                this.commentsWebService.updateComment(comment.docid, comment.commentid, model.output)\r\n                    .subscribe(res => {\r\n                        comment.message = res.message;\r\n                        comment.modified = res.modified;\r\n                        comment.likes = res.likes;\r\n                        comment.likedByUser = res.likedByUser;\r\n                    });\r\n            }\r\n        });\r\n    }\r\n\r\n    deleteComment(comment: NormalComment) {\r\n        // If the comment has subcomments, only mark it as deleted\r\n        const markAsDeleted = !!comment.subcomments?.length;\r\n\r\n        this.modalService.confirm({\r\n            message: \"msg#comments.deleteNotice\",\r\n            confirmType: ConfirmType.Warning,\r\n            buttons: [\r\n                new ModalButton({\r\n                    result: ModalResult.Yes,\r\n                    primary: true\r\n                }),\r\n                new ModalButton({\r\n                    result: ModalResult.Cancel\r\n                })\r\n            ]\r\n        }).then(res => {\r\n            if(res === ModalResult.Yes) {\r\n                this.commentsWebService.deleteComment(comment.docid, comment.commentid, markAsDeleted)\r\n                    .subscribe(res => {\r\n                        if(markAsDeleted) {\r\n                            let c = comment as any;\r\n                            c.deleted = true;\r\n                            delete c.message;\r\n                            delete c.userid;\r\n                            delete c.username;\r\n                            delete c.likes;\r\n                            delete c.likedByUser;\r\n                        }\r\n                        else {\r\n                            this.remove(this.comments, comment);\r\n                        }\r\n                    });\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    protected remove(comments: Comment[], comment: Comment): boolean {\r\n        for(let i=0; i<comments.length; i++) {\r\n            if(comments[i] === comment) {\r\n                comments.splice(i,1);\r\n                return true;\r\n            }\r\n            const subcomments = comments[i].subcomments;\r\n            if(subcomments) {\r\n                if(this.remove(subcomments, comment)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}","import { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { CollapseModule } from \"@sinequa/components/collapse\";\r\nimport { UtilsModule } from \"@sinequa/components/utils\";\r\nimport { IntlModule } from \"@sinequa/core/intl\";\r\nimport { LoginModule } from \"@sinequa/core/login\";\r\nimport { WebServicesModule } from \"@sinequa/core/web-services\";\r\nimport { CommentsComponent } from \"./comments.component\";\r\nimport { CreationDatePipe } from \"./creation-date.pipe\";\r\nimport { MarkdownPipe } from \"./markdown.pipe\";\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n\r\n        WebServicesModule,\r\n        IntlModule,\r\n        LoginModule,\r\n\r\n        UtilsModule,\r\n        CollapseModule\r\n    ],\r\n    declarations: [\r\n        CommentsComponent,\r\n        CreationDatePipe,\r\n        MarkdownPipe\r\n    ],\r\n    exports: [\r\n        CommentsComponent,\r\n        MarkdownPipe\r\n    ],\r\n})\r\nexport class CommentsModule {\r\n}","export default {\r\n    \"comments\": {\r\n        \"created\": \"Erstellt am {date}\",\r\n        \"modified\": \"Geändert am {date}\",\r\n        \"replyTo\": \"Auf einen Kommentar antworten\",\r\n        \"add\": \"Einen Kommentar hinzufügen\",\r\n        \"write\": \"Schreibe einen Kommentar\",\r\n        \"like\": \"Mögen\",\r\n        \"reply\": \"Antworten\",\r\n        \"edit\": \"Bearbeiten\",\r\n        \"delete\": \"Löschen\",\r\n        \"editComment\": \"Bearbeiten Sie Ihren Kommentar\",\r\n        \"markdownNotice\": \"(Markdown-Syntax unterstützt)\",\r\n        \"noComment\": \"Noch kein Kommentar\",\r\n        \"deleteNotice\": \"Möchten Sie diesen Kommentar wirklich löschen? (Antworten bleiben sichtbar)\",\r\n        \"deleted\": \"[gelöscht]\"\r\n    }\r\n}","export default {\r\n    \"comments\": {\r\n        \"created\": \"Created on {date}\",\r\n        \"modified\": \"Modified on {date}\",\r\n        \"replyTo\": \"Reply to comment\",\r\n        \"add\": \"Add a comment\",\r\n        \"write\": \"Write a comment\",\r\n        \"like\": \"Like\",\r\n        \"reply\": \"Reply\",\r\n        \"edit\": \"Edit\",\r\n        \"delete\": \"Delete\",\r\n        \"editComment\": \"Edit your comment\",\r\n        \"markdownNotice\": \"(Markdown syntax supported)\",\r\n        \"noComment\": \"No comment yet\",\r\n        \"deleteNotice\": \"Are you sure you want to delete this comment? (replies will remain visible)\",\r\n        \"deleted\": \"[deleted]\"\r\n    }\r\n}","export default {\r\n    \"comments\": {\r\n        \"created\": \"Créé le {date}\",\r\n        \"modified\": \"Modifié le {date}\",\r\n        \"replyTo\": \"Répondre à un commentaire\",\r\n        \"add\": \"Ajouter un commentaire\",\r\n        \"write\": \"Écrire un commentaire\",\r\n        \"like\": \"Aimer\",\r\n        \"reply\": \"Répondre\",\r\n        \"edit\": \"Éditer\",\r\n        \"delete\": \"Supprimer\",\r\n        \"editComment\": \"Éditer votre commentaire\",\r\n        \"markdownNotice\": \"(Syntaxe Markdown supportée)\",\r\n        \"noComment\": \"Pas encore de commentaire\",\r\n        \"deleteNotice\": \"Êtes-vous certain de vouloir supprimer ce commentaire? (les réponses resteront visibles)\",\r\n        \"deleted\": \"[supprimé]\"\r\n    }\r\n}"]}