{"version":3,"file":"sinequa-components-search.js","sources":["../../../projects/components/search/breadcrumbs.ts","../../../projects/components/search/search.service.ts","../../../projects/components/search/first-page.service.ts","../projects/components/search/bootstrap/breadcrumbs/breadcrumbs.html","../projects/components/search/bootstrap/breadcrumbs/breadcrumbs.ts","../projects/components/search/bootstrap/did-you-mean/did-you-mean.html","../projects/components/search/bootstrap/did-you-mean/did-you-mean.ts","../projects/components/search/bootstrap/page-size-selector/page-size-selector.html","../projects/components/search/bootstrap/page-size-selector/page-size-selector.ts","../projects/components/search/bootstrap/pager/pager.html","../projects/components/search/bootstrap/pager/pager.ts","../projects/components/search/bootstrap/sort-selector/sort-selector.ts","../projects/components/search/bootstrap/sort-selector/sort-selector.html","../projects/components/search/bootstrap/tabs/tabs.html","../projects/components/search/bootstrap/tabs/tabs.ts","../projects/components/search/bootstrap/loading-bar/loading-bar.ts","../projects/components/search/bootstrap/scroller/scroller.ts","../projects/components/search/bootstrap/load-more/load-more.html","../projects/components/search/bootstrap/load-more/load-more.ts","../../projects/components/search/bootstrap/search.module.ts","../../projects/components/search/messages/en.ts","../../projects/components/search/messages/fr.ts","../../projects/components/search/messages/de.ts","../../../projects/components/search/sinequa-components-search.ts"],"sourcesContent":["import {Query, AppService, ExprParser, Expr, ExprValueInitializer} from \"@sinequa/core/app-utils\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {SearchService} from \"./search.service\";\n\nexport interface BreadcrumbsItem {\n    expr: Expr | undefined;\n    display: Expr | string; // Either expr or a label (error string, basket name or <empty search>)\n    facet?: string; // associated facet, if any\n    active?: boolean; // true if the active item\n    hidden?: boolean; // true for \"empty search\" item when !ccquery.allowEmptySearch\n}\n\n/**\n * Description of the Breadcrumbs class - link to {@link SearchService}\n */\nexport class Breadcrumbs {\n    appService: AppService;\n    searchService: SearchService;\n    items: BreadcrumbsItem[]; // always starts with the text expression followed by any selects\n    advanced: Expr[];\n    query: Query; // the associated query. Will be different to the current query if any item other than the last is selected\n    fields: Set<string>;\n\n    static create(appService: AppService, searchService: SearchService, query: Query): Breadcrumbs {\n        const breadcrumbs = new Breadcrumbs(appService, searchService, query);\n        return breadcrumbs.init();\n    }\n\n    private constructor(appService: AppService, searchService: SearchService, query: Query) {\n        this.appService = appService;\n        this.searchService = searchService;\n        this.query = query.copy();\n        this.items = [];\n        this.advanced = [];\n        this.fields = new Set<string>();\n    }\n\n    get activeIndex(): number {\n        return this.items.findIndex(item => item.active);\n    }\n\n    get activeItem(): BreadcrumbsItem | undefined {\n        const index = this.activeIndex;\n        if (index !== -1) {\n            return this.items[index];\n        }\n        return undefined;\n    }\n\n    get text(): Expr | string {\n        return this.items[0].display;\n    }\n\n    get textExpr(): Expr | undefined {\n        return this.items[0].expr;\n    }\n\n    get selects(): BreadcrumbsItem[] {\n        return this.items.slice(1);\n    }\n\n    get activeSelects(): BreadcrumbsItem[] {\n        return this.items.slice(1, this.activeIndex + 1);\n    }\n\n    get activeItems():  BreadcrumbsItem[] {\n        return this.items.slice(0, this.activeIndex + 1);\n    }\n\n    get isEmpty(): boolean {\n        if (this.items.length === 0) {\n            return true;\n        }\n        if (this.items.length === 1 && this.items[0].hidden) {\n            return true;\n        }\n        return false;\n    }\n\n    find(expr: Expr | ExprValueInitializer): Expr | undefined {\n        let expr1 = expr as Expr;\n        const init = expr as ExprValueInitializer;\n        if (!(expr instanceof Expr)) {\n            expr1 = new Expr(init);\n        }\n        if (!expr1.every((expr2) => {\n            const field = expr2.exprContext.appService.resolveColumnAlias(expr2.field);\n            return !field || this.fields.has(field);\n        })) {\n            return undefined;\n        }\n        for (const expr3 of this.advanced) {\n            const expr2 = expr3.find(expr1);\n            if (expr2) {\n                return expr2;\n            }\n        }\n        for (const select of this.selects) {\n            if (select.expr) {\n                const expr2 = select.expr.find(expr1);\n                if (expr2) {\n                    return expr2;\n                }\n            }\n        }\n        if (this.textExpr) {\n            let expr2 = this.textExpr.find(expr1, (expr3) => expr3.isStructured);\n            if (expr2) {\n                return expr2;\n            }\n            expr2 = this.textExpr.find(expr1, (expr3) => !expr3.isStructured);\n            if (expr2) {\n                return expr2;\n            }\n        }\n        return undefined;\n    }\n\n    findSelect(facet: string, exprOrField?: Expr | string): Expr | undefined {\n        // Active selects only, most recent first\n        const activeSelects = this.activeSelects;\n        for (let i = activeSelects.length - 1; i >= 0; i--) {\n            const select = activeSelects[i];\n            if (select.expr && (!facet || Utils.eqNC(facet, select.facet || \"\"))) {\n                if (!exprOrField ) {\n                    return select.expr;\n                }\n                if (Utils.isString(exprOrField)) {\n                    if (Utils.eqNC(exprOrField, select.expr.field || \"\")) {\n                        return select.expr;\n                    }\n                }\n                else {\n                    const expr1 = select.expr.find(exprOrField);\n                    if (expr1) {\n                        return expr1;\n                    }\n                }\n            }\n        }\n        return undefined;\n    }\n\n    private addFields(expr: Expr | undefined) {\n        if (expr) {\n            const fields = expr.getFields();\n            fields.forEach((field) => {\n                this.fields.add(field);\n            });\n        }\n    }\n\n    private makeBreadcrumbsItemFromExpr(text: string): BreadcrumbsItem {\n        let expr = this.appService.parseExpr(text);\n        if (!(expr instanceof Expr)) {\n            expr = this.appService.parseExpr(ExprParser.escape(text));\n        }\n        if (expr instanceof Expr) {\n            return {expr, display: expr};\n        }\n        else {\n            return {expr: undefined, display: expr};\n        }\n    }\n\n    private initItems() {\n        // Text\n        if (this.query && this.query.text) {\n            const item = this.makeBreadcrumbsItemFromExpr(this.query.text);\n            this.items.push(item);\n            this.addFields(item.expr);\n        }\n        else {\n            this.items.push({\n                expr: undefined,\n                display: this.query && this.query.basket ? this.query.basket : \"msg#breadcrumbs.emptySearch\",\n                hidden: this.appService.ccquery && !this.appService.ccquery.allowEmptySearch &&\n                    this.searchService.isEmptySearchIgnoreSelects(this.query)\n            });\n        }\n        // Selects\n        if (this.query && this.query.select) {\n            for (const select of this.query.select) {\n                const item = this.makeBreadcrumbsItemFromExpr(select.expression);\n                item.facet = select.facet;\n                this.items.push(item);\n                this.addFields(item.expr);\n            }\n        }\n        // Set last item active\n        this.items[this.items.length - 1].active = true;\n    }\n\n    private init(): Breadcrumbs {\n        this.initItems();\n        return this;\n    }\n\n    selectItem(item: BreadcrumbsItem): Query | undefined {\n        const index = this.items.indexOf(item);\n        if (this.query && index !== -1) {\n            const query = this.query.copy();\n            if (query.select) {\n                query.select.splice(index);\n            }\n            this.items.forEach(item1 => item1.active = false);\n            item.active = true;\n            return query;\n        }\n        return undefined;\n    }\n\n    removeItem(item: BreadcrumbsItem): BreadcrumbsItem | undefined {\n        const index = this.items.indexOf(item);\n        if (this.query && index !== -1) {\n            let next: BreadcrumbsItem | undefined;\n            if (index === 0) { // Text\n                if (this.query.text || this.query.basket) {\n                    delete this.query.text;\n                    delete this.query.basket;\n                    item.expr = undefined;\n                    item.display = \"msg#breadcrumbs.emptySearch\";\n                    item.hidden = this.appService.ccquery && !this.appService.ccquery.allowEmptySearch &&\n                        this.searchService.isEmptySearchIgnoreSelects(this.query);\n                }\n                if (!item.hidden) {\n                    next = this.activeItem;\n                }\n                else if (this.items.length > 1) {\n                    next = this.items[this.items.length - 1];\n                }\n            }\n            else {\n                // Find next item to activate, if necessary\n                const activeIndex = this.activeIndex;\n                if (activeIndex >= index) {\n                    if (activeIndex > index) {\n                        next = this.items[activeIndex];\n                    }\n                    else {\n                        if (index === this.items.length - 1) {\n                            next = this.items[index - 1];\n                        }\n                        else {\n                            next = this.items[index + 1];\n                        }\n                        if (next.hidden) {\n                            next = undefined;\n                        }\n                    }\n                }\n                if (this.query.select) {\n                    this.query.select.splice(index - 1, 1);\n                }\n                this.items.splice(index, 1);\n            }\n            return next;\n        }\n        return undefined;\n    }\n\n    update(query: Query) {\n        if (!this.query) {\n            this.query = query.copy();\n        }\n        this.query.text = query.text;\n        this.query.basket = query.basket;\n        if (!this.query.text && !this.query.basket) {\n            const item = this.items[0];\n            item.expr = undefined;\n            item.display = \"msg#breadcrumbs.emptySearch\";\n            item.hidden = this.appService.ccquery && !this.appService.ccquery.allowEmptySearch &&\n                this.searchService.isEmptySearchIgnoreSelects(this.query);\n        }\n    }\n}\n","import {Injectable, InjectionToken, Inject, Optional, OnDestroy} from \"@angular/core\";\nimport {Router, NavigationStart, NavigationEnd, Params} from \"@angular/router\";\nimport {Subject, BehaviorSubject, Observable, Subscription, of, throwError} from \"rxjs\";\nimport {map, catchError  } from \"rxjs/operators\";\nimport {QueryWebService, AuditWebService, CCQuery, QueryIntentData, Results, Record, Tab, DidYouMeanKind,\n    QueryIntentAction, QueryIntent, QueryAnalysis, IMulti, CCTab,\n    AuditEvents, AuditEventType, AuditEvent} from \"@sinequa/core/web-services\";\nimport {AppService, FormatService, ValueItem, Query, ExprParser, Expr, ExprBuilder} from \"@sinequa/core/app-utils\";\nimport {NotificationsService} from \"@sinequa/core/notification\";\nimport {LoginService} from \"@sinequa/core/login\";\nimport {IntlService} from \"@sinequa/core/intl\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {Breadcrumbs, BreadcrumbsItem} from './breadcrumbs';\n\nexport interface SearchOptions {\n    routes?: string[];\n    skipSearchRoutes?: string[];\n    homeRoute?: string;\n    deactivateRouting?: boolean;\n    preventQueryNameChanges?: boolean;\n}\n\nexport const SEARCH_OPTIONS = new InjectionToken<SearchOptions>(\"SEARCH_OPTIONS\");\n\n@Injectable({\n    providedIn: \"root\"\n})\nexport class SearchService implements OnDestroy {\n    protected _query: Query | undefined;\n    queryStringParams: Params = {};\n    results: Results | undefined;\n    breadcrumbs: Breadcrumbs | undefined;\n    searchActive: boolean;\n\n    protected loginSubscription: Subscription;\n    protected routerSubscription: Subscription;\n    protected appSubscription: Subscription;\n    protected fetchingLoadMore = false;\n    protected _events = new Subject<SearchService.Events>();\n    protected _queryStream = new BehaviorSubject<Query | undefined>(undefined);\n    protected _resultsStream = new BehaviorSubject<Results | undefined>(undefined);\n\n    constructor(\n        @Optional() @Inject(SEARCH_OPTIONS) protected options: SearchOptions,\n        protected router: Router,\n        protected appService: AppService,\n        protected queryService: QueryWebService,\n        protected loginService: LoginService,\n        protected intlService: IntlService,\n        protected formatService: FormatService,\n        protected auditService: AuditWebService,\n        protected notificationsService: NotificationsService,\n        protected exprBuilder: ExprBuilder) {\n\n        if (!this.options) {\n            this.options = {\n                routes: [\"search\"]\n            };\n        }\n\n        this.results = undefined;\n        this.breadcrumbs = undefined;\n\n        this.loginSubscription = this.loginService.events.subscribe(\n            (value) => {\n                if (value.type === \"session-changed\") {\n                    this.handleLogin();\n                }\n            });\n        this.routerSubscription = this.router.events.subscribe(\n            (event) => {\n                if (event instanceof NavigationStart) {\n                    // Restore state on back/forward until this issue is fixed: https://github.com/angular/angular/issues/28108\n                    const currentNavigation = this.router.getCurrentNavigation();\n                    if (currentNavigation && event.navigationTrigger === \"popstate\" &&\n                        !currentNavigation.extras.state && event.restoredState) {\n                        currentNavigation.extras.state = event.restoredState;\n                    }\n                }\n                else if (event instanceof NavigationEnd) {\n                    this.handleNavigation();\n                }\n            });\n        this.appSubscription = this.appService.events.subscribe(\n            (event) => {\n                if (event.type === \"query-changed\") {\n                    if (this._query && (!this.appService.ccquery || (this._query.name !== this.appService.ccquery.name))) {\n                        this.clearQuery();\n                    }\n                }\n            });\n    }\n\n    ngOnDestroy() {\n        this.loginSubscription.unsubscribe();\n        this.routerSubscription.unsubscribe();\n        this.appSubscription.unsubscribe();\n        this._events.complete();\n        this._queryStream.complete();\n        this._resultsStream.complete();\n    }\n\n    get events(): Observable<SearchService.Events> {\n        return this._events;\n    }\n\n    get queryStream(): Observable<Query | undefined> {\n        return this._queryStream;\n    }\n\n    get resultsStream(): Observable<Results | undefined> {\n        return this._resultsStream.asObservable();\n    }\n\n    getTabConfig(name: string): CCTab | undefined {\n        if (this.appService.ccquery && this.appService.ccquery.tabSearch && this.appService.ccquery.tabSearch.tabs) {\n            return this.appService.ccquery.tabSearch.tabs.find(t => Utils.eqNC(t.name, name));\n        }\n        return undefined;\n    }\n\n    get query(): Query {\n        if (!this._query) {\n            this._query = this.makeQuery();\n            this._events.next({type: \"new-query\", query: this._query});\n        }\n        return this._query;\n    }\n\n    public setQuery(query: Query | undefined, newQuery = true) {\n        if (query === this._query) {\n            return;\n        }\n        this._query = query;\n        if (this._query) {\n            let ccquery: CCQuery | undefined;\n            if (this.options.preventQueryNameChanges) {\n                ccquery = this.appService.ccquery || this.appService.defaultCCQuery;\n            }\n            else {\n                ccquery = this.appService.getCCQuery(this._query.name);\n                if (!ccquery) {\n                    console.warn(`Query '${this._query.name}' not found`);\n                    ccquery = this.appService.defaultCCQuery;\n                }\n            }\n            if (ccquery) {\n                this._query.name = ccquery.name;\n                if (this.appService.ccquery !== ccquery) {\n                    this.appService.ccquery = ccquery;\n                }\n            }\n        }\n        if (newQuery) {\n            this._events.next({type: \"new-query\", query: this._query});\n        }\n    }\n\n    public clearQuery() {\n        this.setQuery(undefined);\n    }\n\n    public updateBreadcrumbs(results: Results | undefined, options: SearchService.SetResultsOptions) {\n        if (!results) {\n            this.breadcrumbs = undefined;\n            return;\n        }\n        if (!this.breadcrumbs || (!options.resuseBreadcrumbs && !options.advanced)) {\n            this.breadcrumbs = Breadcrumbs.create(this.appService, this, this.query);\n        }\n        else if (options.advanced) {\n            this.breadcrumbs.update(this.query);\n        }\n    }\n\n    private _setResults(results: Results | undefined, options: SearchService.SetResultsOptions = {}) {\n        if (results === this.results) {\n            return;\n        }\n        this._events.next({type: \"before-new-results\", results});\n        this.results = results;\n        this.treatQueryIntents(results);\n        this.updateBreadcrumbs(results, options);\n        if (this.results) {\n            if (this.results.tab) {\n                this.query.tab = this.results.tab;\n            }\n            if (this.results.attributes && this.results.attributes.queryid) {\n                this.query.queryId = this.results.attributes.queryid;\n            }\n        }\n        this._events.next({type: \"new-results\", results: this.results});\n        this._resultsStream.next(this.results);\n    }\n\n    public setResults(results: Results) {\n        return this._setResults(results);\n    }\n\n    // TODO: queryintents in their own service ?\n\n    private treatQueryIntents (results: Results | undefined) {\n        if (results && results.queryAnalysis && results.queryIntents) {\n            const queryIntents = results.queryIntents;\n            for (const intent of queryIntents) {\n                if (intent.actions) {\n                    for (const action of intent.actions) {\n                        const event: SearchService.ProcessQueryIntentActionEvent = {type: \"process-query-intent-action\", action: action, intent: intent, analysis: results.queryAnalysis};\n                        this._events.next(event);\n                        if (!event.actionProcessed) {\n                            if (!!action.data) {\n                                switch (action.type) {\n                                    case \"tab\":\n                                        if (results.queryAnalysis.initial && this.query &&\n                                            !Utils.eqNC(this.query.tab || \"\", action.data)) {\n                                            this.selectTab(action.data, {skipLocationChange: true});\n                                        }\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    get haveRecords(): boolean {\n        return !!this.results && !!this.results.records && this.results.records.length > 0;\n    }\n\n    get rowCount(): number {\n        return (!!this.results && this.results.rowCount) ? this.results.rowCount : 0;\n    }\n\n    get totalRowCount(): number {\n        return (!!this.results && this.results.totalRowCount) ? this.results.totalRowCount : 0;\n    }\n\n    get pageSize(): number {\n        if (this.query && this.query.pageSize) {\n            return this.query.pageSize;\n        }\n        if (this.appService.ccquery && this.appService.ccquery.pageSize) {\n            return this.appService.ccquery.pageSize;\n        }\n        return SearchService.DefaultPageSize;\n    }\n\n    get page(): number {\n        if (!this.results) {\n            return 1;\n        }\n        return this.results.page;\n    }\n\n    get pageCount(): number {\n        if (!this.results || !this.results.rowCount) {\n            return 0;\n        }\n        return Math.ceil(this.results.rowCount / this.results.pageSize);\n    }\n\n    makeQuery(recentQuery?: Query): Query {\n        const ccquery = this.appService.ccquery;\n        const query = new Query(ccquery ? ccquery.name : \"_unknown\");\n        if(recentQuery){\n            Object.assign(query, recentQuery);\n        }\n        this._events.next({type: \"make-query\", query: query});\n        return query;\n    }\n\n    protected makeAuditEvent(event: AuditEvent): AuditEvent {\n        this._events.next({type: \"make-audit-event\", event: event});\n        return event;\n    }\n\n    selectBreadcrumbsItem(item: BreadcrumbsItem) {\n        if (this.breadcrumbs) {\n            const query = this.breadcrumbs.selectItem(item);\n            if (query) {\n                this.setQuery(query, false);\n                this.search({reuseBreadcrumbs: true}); // audit?\n            }\n        }\n    }\n\n    removeBreadcrumbsItem(item: BreadcrumbsItem) {\n        if (this.breadcrumbs) {\n            const next = this.breadcrumbs.removeItem(item);\n            if (this.isEmptySearch(this.breadcrumbs.query)) {\n                this.clear();\n                return;\n            }\n            if (next) {\n                this.selectBreadcrumbsItem(next);\n            }\n        }\n    }\n\n    removeSelect(index: number) {\n        if (this.breadcrumbs) {\n            const item = this.breadcrumbs.items[index + 1];\n            this.removeBreadcrumbsItem(item);\n        }\n    }\n\n    removeText() {\n        if (this.breadcrumbs) {\n            const item = this.breadcrumbs.items[0];\n            this.removeBreadcrumbsItem(item);\n        }\n    }\n\n    clear(navigate = true, path?: string) {\n        this.clearQuery();\n        path = path || this.options.homeRoute;\n        this._setResults(undefined);\n        this._events.next({type: \"clear\", path});\n        if (navigate) {\n            this.navigate({path: path || this.options.homeRoute});\n        }\n    }\n\n    home(path = this.options.homeRoute) {\n        this.clear(true, path);\n    }\n\n    protected makeQueryIntentData(queryIntentData: QueryIntentData): QueryIntentData {\n        this._events.next({type: \"make-query-intent-data\", intentData: queryIntentData});\n        return queryIntentData;\n    }\n\n    isEmptySearchIgnoreSelects(query: Query | undefined): boolean {\n        if (!query) {\n            return true;\n        }\n        if (!query.action || query.action === \"search\") {\n            // Test isFirstPage\n            if (query.isFirstPage) {\n                return false;\n            }\n            // Test empty text\n            if (query.text && Utils.trim(query.text)) {\n                return false;\n            }\n            // Test basket\n            if (query.basket) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }\n\n    isEmptySearch(query: Query | undefined): boolean {\n        if (!query) {\n            return true;\n        }\n        if (!query.action || query.action === \"search\") {\n            if (!this.isEmptySearchIgnoreSelects(query)) {\n                return false;\n            }\n            // Test no facet selection\n            if (query.select && query.select.length > 0) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }\n\n    checkEmptySearch(queries: Query | Query[]): boolean {\n        if (this.appService.ccquery && !this.appService.ccquery.allowEmptySearch) {\n            if (!Utils.isArray(queries)) {\n                queries = [queries];\n            }\n            for (const query of queries) {\n                if (this.isEmptySearch(query)) {\n                    this.notificationsService.info(\"msg#search.emptySearchNotification\");\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n\n    getResults(\n        query: Query, auditEvents?: AuditEvents,\n        options: SearchService.GetResultsOptions = {}): Observable<Results> {\n        if (!this.checkEmptySearch(query)) {\n            return throwError(\"empty search\");\n        }\n        if (!options.searchInactive) {\n            this.searchActive = true;\n        }\n        const tab = this.getCurrentTab();\n        return this.queryService.getResults(query, auditEvents,\n            this.makeQueryIntentData({\n                tab: !!tab ? tab.name : undefined,\n                queryIntents: options.queryIntents,\n                queryAnalysis: options.queryAnalysis\n            })\n        ).pipe(\n            map((results) => {\n                this.searchActive = false;\n                return results;\n            })\n        );\n    }\n\n    getMultipleResults(queries: Query[], auditEvents?: AuditEvents): Observable<IMulti<Results>> {\n        if (!this.checkEmptySearch(queries)) {\n            return of({results: []});\n        }\n        return this.queryService.getMultipleResults(queries, auditEvents);\n    }\n\n    navigate(options?: SearchService.NavigationOptions, audit?: AuditEvents): Promise<boolean> {\n        if (!options) {\n            options = {};\n        }\n        if (!options.analyzeQueryText && this.results) {\n            options.queryIntents = this.results.queryIntents;\n            options.queryAnalysis = this.results.queryAnalysis;\n        }\n        if (!this.routingActive) {\n            this.handleNavigation(options, audit);\n            return Promise.resolve(true);\n        }\n        else {\n            // Save currentPath and currentSearch\n            let url = Utils.makeURL(this.router.url);\n            const currentPath = url.pathname;\n            url.searchParams.delete(\"$refresh\");\n            const currentSearch = decodeURIComponent(url.search);\n            // Set up queryParams and add current query\n            const queryParams = Utils.copy(this.queryStringParams);\n            if (this._query) {\n                queryParams.query = this._query.toJsonForQueryString();\n            }\n            // Set up history state\n            const state: SearchService.HistoryState = {\n                audit,\n                navigationOptions: options\n            };\n            const extras = {\n                queryParams,\n                state,\n                skipLocationChange: options.skipLocationChange\n            };\n            // Calculate new search\n            let path = options.path;\n            if (!path) {\n                path = currentPath;\n            }\n            url = Utils.makeURL(path);\n            path = url.pathname; // normalized\n            for (const key of Object.keys(queryParams)) {\n                url.searchParams.set(key, queryParams[key]);\n            }\n            const search = decodeURIComponent(url.search);\n            // If path and search are both the same as current then force navigation (without adding to history)\n            if (Utils.eq(currentPath, path) && Utils.eq(currentSearch, search)) {\n                // We want to force the navigation so that the query will be processed\n                extras.queryParams.$refresh = Utils.now.getTime();\n                // But don't update the browser url\n                extras.skipLocationChange = true;\n            }\n            return this.router.navigate([path], extras);\n        }\n    }\n\n    protected getHistoryState(): SearchService.HistoryState {\n        const navigation = this.router.getCurrentNavigation();\n        if (navigation) {\n            return navigation.extras && navigation.extras.state || {};\n        }\n        return window.history.state || {};\n    }\n\n    public isSearchRouteActive(): boolean {\n        const url = Utils.makeURL(this.router.url);\n        return this.isSearchRoute(url.pathname);\n    }\n\n    protected isSearchRoute(pathname: string): boolean {\n        return this.checkSearchRoute(pathname, this.options.routes);\n    }\n\n    protected isSkipSearchRoute(pathname: string): boolean {\n        return this.checkSearchRoute(pathname, this.options.skipSearchRoutes);\n    }\n\n    private checkSearchRoute(pathname: string, routes: string[] | undefined): boolean {\n        if (routes) {\n            for (const route of routes) {\n                if (Utils.endsWith(pathname, Utils.addUrl(\"/\", route))) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    public getQueryFromUrl(): Query | undefined {\n        let query: Query | undefined;\n        const url = Utils.makeURL(this.router.url);\n        if (this.isSearchRoute(url.pathname)) {\n            const jquery = url.searchParams.get(\"query\");\n            if (jquery) {\n                try {\n                    query = this.makeQuery().fromJson(jquery);\n                }\n                catch {}\n            }\n        }\n        return query;\n    }\n\n    protected ensureQueryFromUrl(): Query | undefined {\n        const query = this.getQueryFromUrl();\n        if (!query) {\n            this.clear(false);\n            return undefined;\n        }\n        else {\n            // The url query should be the same as the current query on SearchService unless\n            // it's the initial navigation or if the url is changed manually.\n            // In any case, we always set the query from the url. We only send a new-query\n            // event if the current query is empty so that we don't systematically create a\n            // new query \"session\" (ml-audit)\n            this.setQuery(query, !this._query);\n            return query;\n        }\n    }\n\n    protected handleLogin(): Promise<boolean> {\n        if (!this.loginService.complete) {\n            return Promise.resolve(false);\n        }\n        if (!!this.ensureQueryFromUrl()) {\n            return this.navigate();\n        }\n        else {\n            return Promise.resolve(true);\n        }\n    }\n\n    get routingActive(): boolean {\n        return !this.options.deactivateRouting;\n    }\n\n    set routingActive(value: boolean) {\n        this.options.deactivateRouting = !value;\n    }\n\n    protected makeAuditEventFromCurrentQuery(): AuditEvent | undefined {\n        const lastSelect = this.query.lastSelect();\n        if (lastSelect) {\n            const lastExpr = this.appService.parseExpr(lastSelect.expression);\n            if (lastExpr instanceof Expr) {\n                if (lastExpr.field === \"refine\") {\n                    return this.makeAuditEvent({\n                        type: AuditEventType.Search_Refine,\n                        detail: {\n                            text: lastExpr.value,\n                            itembox: lastSelect.facet,\n                            \"from-result-id\": !!this.results ? this.results.id : null\n                        }\n                    });\n                }\n                else {\n                    return this.makeAuditEvent({\n                        type: AuditEventType.Search_Select_Item,\n                        detail: {\n                            item: lastSelect as any,\n                            itembox: lastSelect.facet,\n                            itemcolumn: lastExpr.field,\n                            isitemexclude: lastExpr.not,\n                            \"from-result-id\": !!this.results ? this.results.id : null\n                        }\n                    });\n                }\n            }\n        }\n        else {\n            if (this.query.basket) {\n                return this.makeAuditEvent({\n                    type: AuditEventType.Basket_Open,\n                    detail: {\n                        basket: this.query.basket\n                    }\n                });\n            }\n            else {\n                return this.makeAuditEvent({\n                    type: AuditEventType.Search_Text,\n                    detail: {\n                        text: this.query.text,\n                        scope: this.query.scope\n                    }\n                });\n            }\n        }\n        return undefined;\n    }\n\n    protected handleNavigation(navigationOptions?: SearchService.NavigationOptions, audit?: AuditEvents): Promise<boolean> {\n        if (!this.loginService.complete) {\n            return Promise.resolve(false);\n        }\n        if (!this.appService.ccquery) {\n            return Promise.resolve(false);\n        }\n        let query = this._query;\n        if (this.routingActive) {\n            query = this.ensureQueryFromUrl();\n        }\n        this._events.next({type: \"update-query\", query});\n        this._queryStream.next(query);\n        if (!query) {\n            return Promise.resolve(true);\n        }\n        if (this.routingActive) {\n            const state = this.getHistoryState();\n            // console.log(\"history.state:\", state);\n            audit = state.audit;\n            navigationOptions = state.navigationOptions;\n        }\n        navigationOptions = navigationOptions || {};\n        const pathName = navigationOptions.path ? navigationOptions.path : Utils.makeURL(this.router.url).pathname;\n        if(navigationOptions.skipSearch || this.isSkipSearchRoute(pathName)) {\n            return Promise.resolve(true);\n        }\n        if (!audit) {\n            audit = this.makeAuditEventFromCurrentQuery();\n            if (audit && audit.type === AuditEventType.Search_Text) {\n                delete navigationOptions.queryIntents;\n                delete navigationOptions.queryAnalysis;\n            }\n        }\n        let observable = this.getResults(this.query, audit,\n            {\n                queryIntents: navigationOptions.queryIntents,\n                queryAnalysis: navigationOptions.queryAnalysis\n            });\n        Utils.subscribe(observable,\n            (results) => {\n                navigationOptions = navigationOptions || {};\n                this._setResults(results, {\n                    resuseBreadcrumbs: navigationOptions.reuseBreadcrumbs,\n                });\n                return results;\n            });\n        if (navigationOptions.selectTab) {\n            const afterSelectTabEvent: SearchService.AfterSelectTabEvent = {\n                type: \"after-select-tab\",\n                observable\n            };\n            this._events.next(afterSelectTabEvent);\n            observable = afterSelectTabEvent.observable;\n        }\n        return observable.pipe(\n            map(() => true),\n            catchError(() => of(false))).toPromise();\n    }\n\n    search(navigationOptions?: SearchService.NavigationOptions, audit?: AuditEvents): Promise<boolean> {\n        delete this.query.page;\n        delete this.query.spellingCorrectionMode;\n        return this.navigate(navigationOptions, audit);\n    }\n\n    searchText(path?: string): Promise<boolean> {\n        // Check for empty search preemptively to avoid clearing the current results in the most\n        // common case of the user entering empty search text in the search box\n        // The lower level check in getResults will handle less obvious cases (url editing etc)\n        if (!this.checkEmptySearch(this.query)) {\n            return Promise.resolve(false);\n        }\n        return this.search(\n            {\n                path,\n                analyzeQueryText: true\n            },\n            this.makeAuditEvent({\n                type: AuditEventType.Search_Text,\n                detail: {\n                    text: this.query.text,\n                    scope: this.query.scope,\n                    language: this.intlService.currentLocale.name\n                }\n            }));\n    }\n\n    searchRefine(text: string): Promise<boolean> {\n        // add \"refine\" name to facet value is mandatory as it's used in preview's query\n        this.query.addSelect(this.exprBuilder.makeRefineExpr(text), \"refine\");\n        return this.search(undefined,\n            this.makeAuditEvent({\n                type: AuditEventType.Search_Refine,\n                detail: {\n                    text: text,\n                    itembox: \"refine\",\n                    \"from-result-id\": !!this.results ? this.results.id : null\n                }\n            }));\n    }\n\n    gotoPage(page: number): Promise<boolean> {\n        this.query.page = page;\n        return this.navigate(undefined, this.makeAuditEvent({\n            type: AuditEventType.Search_GotoPage,\n            detail: {\n                page: page,\n                \"from-result-id\": !!this.results ? this.results.id : null\n            }\n        }));\n    }\n\n    /**\n     * Load more results and append them to previous results\n     */\n    loadMore() {\n        if(!this.fetchingLoadMore) {\n            let page = this.query.page || this.page;\n            page += (page <= this.pageCount) ? 1 : 0;\n            if (page <= this.pageCount) {\n                this.fetchingLoadMore = true;\n                this.query.page = page;\n\n                const auditEvents = this.makeAuditEvent({\n                    type: AuditEventType.Search_GotoPage,\n                    detail: {\n                        page: page,\n                        \"from-result-id\": !!this.results ? this.results.id : null\n                    }\n                })\n\n                this.getResults(this.query, auditEvents)\n                .subscribe(results => {\n                    if(this.results && results) {\n                        this.results.records = [...this.results?.records || [], ...results.records] || [];\n                        this._resultsStream.next(this.results);\n                    }\n                    this.fetchingLoadMore = false;\n                });\n            }\n        }\n    }\n\n    /**\n     * @returns true if more are available otherwise false\n     */\n    hasMore(): boolean {\n        const page = this.query.page || this.page;\n        return (page < this.pageCount);\n    }\n\n    didYouMean(text: string, context: \"search\" | \"refine\", kind: DidYouMeanKind): Promise<boolean> {\n        if (context === \"search\") {\n            this.query.text = text;\n        }\n        else {\n            const refineSelect = this.query.findSelect(\"refine\");\n            if (refineSelect) {\n                refineSelect.expression = \"refine:\" + ExprParser.escape(text);\n            }\n        }\n        this.query.spellingCorrectionMode = \"dymonly\";\n        return this.navigate(undefined, this.makeAuditEvent({\n            type: kind === DidYouMeanKind.Original ? AuditEventType.Search_DidYouMean_Original : AuditEventType.Search_DidYouMean_Correction,\n            detail: {\n                text: text\n            }\n        }));\n    }\n\n    getCurrentRecordIds(): string[]{\n        if (this.results && this.results.records) {\n            return this.results.records.map(record => record.id);\n        }\n        return [];\n    }\n\n    getRecordFromId(id: string): Record | undefined {\n        if (this.results && this.results.records) {\n            return this.results.records.find(record => Utils.eq(record.id, id));\n        }\n        return undefined;\n    }\n\n    addFieldSelect(field: string, items: ValueItem | ValueItem[], options?: SearchService.AddSelectOptions): boolean {\n        if (items && (!Utils.isArray(items) || items.length > 0)) {\n            let expr = this.exprBuilder.makeFieldExpr(field, items, options?.and);\n            if (options?.not) {\n                expr = this.exprBuilder.makeNotExpr(expr);\n            }\n            this.query.addSelect(expr, options?.facetName);\n            return true;\n        }\n        return false;\n    }\n\n\n    get lastRefineText(): string {\n        if (this.breadcrumbs) {\n            const refineExpr = this.breadcrumbs.findSelect(\"refine\");\n            if (refineExpr) {\n                return ExprParser.unescape(refineExpr.toString(false));\n            }\n        }\n        return \"\";\n    }\n\n    get hasRelevance(): boolean {\n        if (!this.breadcrumbs) {\n            return false;\n        }\n        if (this.breadcrumbs.textExpr?.hasRelevance) {\n            return true;\n        }\n        const refineExpr = this.breadcrumbs.findSelect(\"refine\");\n        return refineExpr?.hasRelevance || false;\n    }\n\n    selectTab(arg: string | Tab, options: SearchService.NavigationOptions = {}): Promise<boolean> {\n        options.selectTab = true;\n        const tabName = typeof arg === 'string' ? arg : arg.name;\n        this.query.tab = tabName;\n        delete this.query.queryId; // SBA-154\n        this._events.next({type: \"before-select-tab\", query: this.query});\n        return this.search(options,\n            this.makeAuditEvent({\n                type: AuditEventType.Search_GotoTab,\n                detail: {\n                    tab: tabName,\n                    \"from-result-id\": !!this.results ? this.results.id : null\n                }\n            }));\n    }\n\n    selectScope(scope: string) {\n        this.query.scope = scope;\n    }\n\n    getTab(tabName: string): Tab | undefined {\n        if (this.results && this.results.tabs) {\n            for (const tab of this.results.tabs) {\n                if (Utils.equals(tab.name, tabName)) {\n                    return tab;\n                }\n            }\n        }\n        return undefined;\n    }\n\n    getCurrentTab(): Tab | undefined {\n        if (this.results && this.results.tab) {\n            return this.getTab(this.results.tab);\n        }\n        return undefined;\n    }\n\n    notifyOpenOriginalDocument(record: Record, resultId?: string): void {\n        const results = this.results && this.results.records && this.results.records.includes(record) ? this.results : undefined;\n        this._events.next({ type: \"open-original-document\", record });\n        const querylang = this.results?.queryAnalysis?.queryLanguage\n            || this.query?.questionLanguage\n            || this.appService?.ccquery?.questionLanguage;\n        this.auditService.notifyDocument(\n            AuditEventType.Click_ResultLink,\n            record,\n            results || resultId || \"\",\n            {\n                text: this.query.text,\n                querylang,\n            },\n            {\n                queryhash: results ? results.rfmQueryHash : undefined,\n                querytext: this.query.text,\n                querylang: querylang\n            }\n        );\n    }\n\n    checkBeforeSearch(cancelReasons?: string[]): boolean {\n        const beforeSearch: SearchService.BeforeSearchEvent = {type: \"before-search\"};\n        this._events.next(beforeSearch);\n        if (cancelReasons && beforeSearch.cancelReasons) {\n            cancelReasons.splice(0, 0, ...beforeSearch.cancelReasons);\n        }\n        return !beforeSearch.cancel;\n    }\n}\n\nexport module SearchService {\n    export interface GetResultsOptions {\n        queryIntents?: QueryIntent[];\n        queryAnalysis?: QueryAnalysis;\n        searchInactive?: boolean;   // default \"false\"\n    }\n\n    export interface SetResultsOptions {\n        resuseBreadcrumbs?: boolean;\n        advanced?: boolean;\n    }\n\n    export interface AddSelectOptions {\n        not?: boolean;      // default \"false\"\n        and?: boolean;      // default \"false\"\n        facetName?: string; // default: undefined\n    }\n\n    export interface NavigationOptions {\n        path?: string; // absolute path, current path used if not specified\n        reuseBreadcrumbs?: boolean;\n        selectTab?: boolean;\n        analyzeQueryText?: boolean;\n        queryIntents?: QueryIntent[];\n        queryAnalysis?: QueryAnalysis;\n        skipLocationChange?: boolean;\n        skipSearch?: boolean;\n    }\n\n    export interface HistoryState {\n        audit?: AuditEvents;\n        navigationOptions?: NavigationOptions;\n    }\n\n    export interface Event {\n        type: \"new-query\" | \"update-query\" | \"make-query\" | \"before-new-results\" | \"new-results\" | \"make-query-intent-data\" |\n            \"process-query-intent-action\" | \"make-audit-event\" |\n            \"before-select-tab\" | \"after-select-tab\" | \"clear\" | \"open-original-document\" | \"before-search\";\n    }\n\n    export interface NewQueryEvent extends Event {\n        type: \"new-query\";\n        query: Query | undefined;\n    }\n\n    export interface UpdateQueryEvent extends Event {\n        type: \"update-query\";\n        query: Query | undefined;\n    }\n\n    export interface MakeQueryEvent extends Event {\n        type: \"make-query\";\n        query: Query;\n    }\n\n    export interface BeforeNewResultsEvent extends Event {\n        type: \"before-new-results\";\n        results: Results | undefined;\n    }\n\n    export interface NewResultsEvent extends Event {\n        type: \"new-results\";\n        results: Results | undefined;\n    }\n\n    export interface MakeQueryIntentDataEvent extends Event {\n        type: \"make-query-intent-data\";\n        intentData: QueryIntentData;\n    }\n\n    export interface ProcessQueryIntentActionEvent extends Event {\n        type: \"process-query-intent-action\";\n        action: QueryIntentAction;\n        intent: QueryIntent;\n        analysis: QueryAnalysis;\n        actionProcessed?: boolean;\n    }\n\n    export interface MakeAuditEventEvent extends Event {\n        type: \"make-audit-event\";\n        event: AuditEvent;\n    }\n\n    export interface BeforeSelectTabEvent extends Event {\n        type: \"before-select-tab\";\n        query: Query;\n    }\n\n    export interface AfterSelectTabEvent extends Event {\n        type: \"after-select-tab\";\n        observable: Observable<Results>;\n    }\n\n    export interface ClearEvent extends Event {\n        type: \"clear\";\n        path?: string;\n    }\n\n    export interface OpenOriginalDocument extends Event {\n        type: \"open-original-document\";\n        record: Record;\n    }\n\n    export interface BeforeSearchEvent extends Event {\n        type: \"before-search\";\n        cancel?: boolean;\n        cancelReasons?: string[];\n    }\n\n    export type Events =\n        NewQueryEvent |\n        UpdateQueryEvent |\n        MakeQueryEvent |\n        BeforeNewResultsEvent |\n        NewResultsEvent |\n        MakeQueryIntentDataEvent |\n        ProcessQueryIntentActionEvent |\n        MakeAuditEventEvent |\n        BeforeSelectTabEvent |\n        AfterSelectTabEvent |\n        ClearEvent |\n        OpenOriginalDocument |\n        BeforeSearchEvent;\n\n    export const DefaultPageSize = 20;\n}\n","import {Injectable, InjectionToken, Optional, Inject, OnDestroy} from \"@angular/core\";\nimport {Router} from \"@angular/router\";\nimport {SearchService} from \"./search.service\";\nimport {Subscription, Observable, of} from 'rxjs';\nimport {Utils} from \"@sinequa/core/base\";\nimport {AuditEventType, Results} from \"@sinequa/core/web-services\";\n\nexport interface FirstPageOptions {\n    displayOnHomePage?: boolean;\n}\n\nexport const FIRST_PAGE_OPTIONS = new InjectionToken<FirstPageOptions>(\"FIRST_PAGE_OPTIONS\");\n\n@Injectable({\n    providedIn: \"root\"\n})\nexport class FirstPageService implements OnDestroy {\n    private searchSubscription: Subscription;\n    firstPage: Results;\n\n    constructor(\n        @Optional() @Inject(FIRST_PAGE_OPTIONS) protected options: FirstPageOptions,\n        protected searchService: SearchService,\n        protected router: Router\n    ) {\n        if (!this.options) {\n            this.options = {};\n        }\n        this.searchSubscription = this.searchService.events.subscribe(\n            (event) => {\n                if (event.type === \"clear\") {\n                    if (this.displayOnHomePage(event.path)) {\n                        Utils.subscribe(this.getFirstPage(),\n                            (results) => {\n                                this.searchService.setResults(results);\n                            });\n                    }\n                }\n            }\n        );\n    }\n\n    ngOnDestroy() {\n        this.searchSubscription.unsubscribe();\n    }\n\n    /**\n     * @ignore\n     * legacy\n     */\n    get isFirstPage(): boolean {\n        return this.isCurrentSearchResults;\n    }\n\n    get isCurrentSearchResults(): boolean {\n        return !!this.searchService.results && this.searchService.results === this.firstPage;\n    }\n\n    displayOnHomePage(path?: string): boolean {\n        if (Utils.isArray(this.options.displayOnHomePage)) {\n            if (!path) {\n                const url = Utils.makeURL(this.router.url);\n                path = url.pathname;\n            }\n            for (const path1 of this.options.displayOnHomePage) {\n                if (Utils.endsWith(path, Utils.addUrl(\"/\", path1))) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        else {\n            return !!this.options.displayOnHomePage;\n        }\n    }\n\n    getFirstPage(): Observable<Results> {\n        if (this.firstPage) {\n            return of<Results>(this.firstPage);\n        }\n        const query = this.searchService.makeQuery();\n        query.isFirstPage = true;\n        const observable = this.searchService.getResults(query, {\n            type: AuditEventType.Search_FirstPage\n        }, {\n            searchInactive: true\n        });\n        Utils.subscribe(observable,\n            (results) => {\n                this.firstPage = results;\n                return results;\n            });\n        return observable;\n    }\n}\n","<ol class=\"breadcrumb\">\n    <li class=\"breadcrumb-item\">\n        <a href=\"#\" (click)=\"home()\" title=\"Home\"><span class=\"fas fa-home\"></span></a>\n    </li>\n    <ng-container *ngFor=\"let item of searchService.breadcrumbs?.items\">\n        <li *ngIf=\"!item.hidden\" class=\"breadcrumb-item {{item.active ? 'active' : ''}} sq-breadcrumb-item  sq-breadcrumb-item-{{getField(item)}}\"><!--\n            --><a *ngIf=\"!item.active\" href=\"#\" (click)=\"selectItem(item)\" [innerHTML]=\"item.display | sqExpr:{withFields: displayFieldNames, asHTML: true}\"></a><!--\n            --><span *ngIf=\"item.active\" [innerHTML]=\"item.display | sqExpr:{withFields: displayFieldNames, asHTML: true}\"></span>\n            <span *ngIf=\"allowDeletion\" class=\"fas fa-times\" role=\"button\" (click)=\"removeItem(item)\" title=\"{{'msg#breadcrumbs.itemRemove' | sqMessage}}\"></span>\n        </li>\n    </ng-container>\n</ol>","import {Component, Input} from \"@angular/core\";\nimport {Results} from \"@sinequa/core/web-services\";\nimport {SearchService} from \"../../search.service\";\nimport {BreadcrumbsItem} from \"../../breadcrumbs\";\n\n@Component({\n    selector: \"sq-breadcrumbs\",\n    templateUrl: \"./breadcrumbs.html\",\n    styleUrls: [\"./breadcrumbs.css\"]\n})\nexport class BsBreadcrumbs {\n    @Input() results: Results;\n    @Input() allowDeletion: boolean = true;\n    @Input() displayFieldNames: boolean = true;\n\n    constructor(\n        public searchService: SearchService) {\n    }\n\n    getField(item: BreadcrumbsItem): string {\n        if (item.expr) {\n            if (item.expr.field) {\n                return item.expr.field;\n            }\n            else {\n                if (!item.expr.isStructured) {\n                    return \"text\";\n                }\n                else {\n                    const fields = item.expr.getFields();\n                    return fields.join(\"-\");\n                }\n            }\n        }\n        return \"unknown\";\n    }\n\n    home() {\n        this.searchService.home();\n        return false;\n    }\n\n    selectItem(item: BreadcrumbsItem) {\n        this.searchService.selectBreadcrumbsItem(item);\n        return false;\n    }\n\n    removeItem(item: BreadcrumbsItem) {\n        this.searchService.removeBreadcrumbsItem(item);\n    }\n}","<div *ngIf=\"!!item\" class=\"sq-did-you-mean sq-text {{'sq-' + context}}\" [ngSwitch]=\"results.didYouMean.spellingCorrectionMode\">\n    <ng-container *ngSwitchCase=\"'DYMOnly'\">\n        {{'msg#didYouMean.dymonlyBeforeCorrected' | sqMessage}}<a class=\"sq-did-you-mean-corrected\" href=\"#\" (click)=\"selectCorrected()\">{{item.corrected}}</a>{{'msg#didYouMean.dymonlyAfterCorrected' | sqMessage}}\n    </ng-container>\n    <ng-container *ngSwitchCase=\"'Correct'\">\n        {{'msg#didYouMean.correctBeforeCorrected' | sqMessage}}<a class=\"sq-did-you-mean-corrected\" href=\"#\" (click)=\"selectCorrected()\">{{item.corrected}}</a>{{'msg#didYouMean.correctBeforeOriginal' | sqMessage}}<a class=\"sq-did-you-mean-original\" href=\"#\" (click)=\"selectOriginal()\">{{item.original}}</a>{{'msg#didYouMean.correctAfterOriginal' | sqMessage}}\n    </ng-container>\n    <ng-container *ngSwitchCase=\"'Smart'\">\n        {{'msg#didYouMean.smartBeforeOriginal' | sqMessage}}<a class=\"sq-did-you-mean-original\" href=\"#\" (click)=\"selectOriginal()\">{{item.original}}</a>{{'msg#didYouMean.smartBeforeCorrected' | sqMessage}}<a class=\"sq-did-you-mean-original\" href=\"#\" (click)=\"selectCorrected()\">{{item.corrected}}</a>{{'msg#didYouMean.smartAfterCorrected' | sqMessage}}\n    </ng-container>\n</div>","import {Component, Input, OnChanges, SimpleChanges} from \"@angular/core\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {Results, DidYouMeanItem, DidYouMeanKind} from \"@sinequa/core/web-services\";\nimport {SearchService} from \"../../search.service\";\n\n@Component({\n    selector: \"sq-did-you-mean\",\n    templateUrl: \"./did-you-mean.html\",\n    styleUrls: [\"./did-you-mean.css\"]\n})\nexport class BsDidYouMean implements OnChanges {\n    @Input() results: Results;\n    @Input() context: \"search\" | \"refine\" = \"search\";\n    item: DidYouMeanItem | undefined;\n\n    constructor(\n        public searchService: SearchService) {\n    }\n\n    private handleResults() {\n        this.item = undefined;\n        if (this.results && this.results.didYouMean) {\n            if (this.context === \"search\") {\n                const item = this.results.didYouMean.text;\n                if (item && item.corrected) {\n                    this.item = item;\n                }\n            }\n            else {\n                const refineSelect = this.searchService.query.findSelect(\"refine\");\n                if (refineSelect && Utils.startsWith(refineSelect.expression, \"refine:\") && !!this.results.didYouMean.refine) {\n                    const dymItem = this.results.didYouMean.refine[this.results.didYouMean.refine.length - 1];\n                    if (dymItem.corrected) {\n                        this.item = dymItem;\n                    }\n                }\n            }\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (!!changes[\"results\"]) {\n            this.handleResults();\n        }\n    }\n\n    selectOriginal() {\n        if (this.item) {\n            this.searchService.didYouMean(this.item.original, this.context, DidYouMeanKind.Original);\n        }\n        return false;\n    }\n\n    selectCorrected() {\n        if (this.item) {\n            this.searchService.didYouMean(this.item.corrected, this.context, DidYouMeanKind.Corrected);\n        }\n        return false;\n    }\n}","<div class=\"btn-toolbar\" *ngIf=\"!!results\">\n    <div class=\"btn-group\"\n        [sq-action-buttons]=\"{\n            items: [pageSizingAction],\n            autoAdjust: true,\n            rightAligned: rightAligned\n        }\"></div>\n</div>\n","import {Component, OnChanges, SimpleChanges, Input} from '@angular/core';\nimport {Results} from \"@sinequa/core/web-services\";\nimport {AppService} from \"@sinequa/core/app-utils\";\nimport {Action} from \"@sinequa/components/action\";\nimport {SearchService} from \"../../search.service\";\n//import {ResultsView} from '@sinequa/components/results-view';\n\n// TODO restore functionality of storing page size in user settings ?\n\n/**\n * Component for choosing the page size of the results view\n *\n */\n@Component({\n    selector: 'sq-page-size-selector',\n    templateUrl: './page-size-selector.html'\n})\nexport class BsPageSizeSelector implements OnChanges {\n    @Input() results: Results;\n    //@Input() resultsView: ResultsView;\n    @Input() showInRegularView: boolean = true;\n    @Input() showInCustomization: boolean;\n    @Input() pageSizes: number[];\n    @Input() rightAligned: boolean;\n\n    public pageSizingAction: Action;\n\n    private availableSizes: number[];\n    private currentPageSize: number;\n\n    constructor(\n        private appService: AppService,\n        private searchService: SearchService\n    ) { }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        this.refreshVisualisation();\n    }\n\n    /*\n    private get globalPageSize(): number {\n        const globalQueryParams = this.userSettingsService.getUserSettings().queryParams;\n        return globalQueryParams ? globalQueryParams.pageSize : undefined;\n    }\n    */\n\n    private get configPageSize(): number {\n        return this.appService.ccquery ? this.appService.ccquery.pageSize : 0;\n    }\n\n    private get defaultPageSize(): number {\n        //let res = this.globalPageSize;\n        //if (!res) {\n        let res = this.configPageSize;\n        if (!res) {\n            res = SearchService.DefaultPageSize;\n        }\n        //}\n\n        return res;\n    }\n\n    private buildPageSizingAction(): Action {\n        this.availableSizes = this.pageSizes ? this.pageSizes.slice(0) : [];\n        this.availableSizes.sort((a, b) => a - b);\n        const children: Action[] = [];\n\n        children.push(new Action({\n            text: 'msg#pageSizeSelector.defaultPageSize',\n            messageParams: { values: { size: this.defaultPageSize } },\n            data: undefined, // To make sure that setCurrentSize() always chooses the default choice text.\n            action: (item: Action, event: Event) => {\n                this.updatePageSize(item.data);\n            }\n        }));\n\n        for (const size of this.availableSizes) {\n            children.push(new Action({\n                text: size.toString(),\n                data: size,\n                action: (item: Action, event: Event) => {\n                    this.updatePageSize(item.data);\n                }\n            }));\n        }\n\n        return new Action({\n            icon: 'fas fa-arrows-alt-v',\n            text: 'msg#pageSizeSelector.pageSizeChoice',\n            children: children\n        });\n    }\n\n    private refreshVisualisation(): void {\n        this.pageSizingAction = this.buildPageSizingAction();\n        if (this.results) {\n            //const queryParams = this.userSettingsService.getViewQueryParams(this.resultsView.name);\n            //this.currentPageSize = queryParams.pageSize;\n            this.setCurrentSize(this.currentPageSize);\n        }\n    }\n\n    private setCurrentSize(size: number): void {\n        if (!size) {\n            this.pageSizingAction.text = 'msg#pageSizeSelector.defaultPageSizeChoice';\n            this.pageSizingAction.messageParams = { values: { size: this.defaultPageSize } };\n        }\n        else {\n            const selectedAction = this.pageSizingAction.children?.find(action => action.data === size);\n            this.pageSizingAction.text = 'msg#pageSizeSelector.pageSizeChoice';\n            this.pageSizingAction.messageParams = { values: { size: selectedAction?.data } };\n        }\n    }\n\n    private updatePageSize(size: number): void {\n        if (this.currentPageSize !== size) {\n            //this.userSettingsService.saveResultsViewPageSize(this.resultsView.name, size);\n            this.currentPageSize = size;\n\n            this.searchService.query.pageSize = size;\n            this.searchService.search();\n        }\n\n        this.setCurrentSize(size);\n    }\n}\n","<ul class=\"pagination my-0\" *ngIf=\"pageCount > 1\">\n    <li *ngFor=\"let item of items\" \n        title=\"{{item.title | sqMessage:{values: {page: item.page} } }}\" \n        class=\"page-item\" \n        [ngClass]=\"{'active': item.active, 'disabled': item.disabled, 'sq-navigation': item.isNavigation, 'sq-page': item.isPage, 'sq-ellipsis': item.isEllipsis}\" \n        (click)=\"gotoPage(item.page)\">\n        <a href=\"javascript:void(0)\" class=\"page-link\"> \n            <span>{{item.display | sqNumber}}</span>\n        </a>            \n    </li>\n</ul>","import {Component, Input, OnChanges, SimpleChanges} from \"@angular/core\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {Results} from \"@sinequa/core/web-services\";\nimport {SearchService} from \"../../search.service\";\n\n@Component({\n    selector: \"sq-pager\",\n    templateUrl: \"./pager.html\",\n})\nexport class BsPager implements OnChanges {\n    @Input() results: Results;\n    @Input() showNavigation: boolean = true;\n    @Input() showFirstLast: boolean = true;\n    @Input() showPages: boolean = true;\n    @Input() endPages: number = 1;\n    @Input() pages: number = 5;\n\n    items: BsPager.Item[] | undefined;\n\n    private currentPage: number;\n    pageCount: number = 0;\n\n    static FIRST_PAGE = \"«\";\n    static PREVIOUS_PAGE = \"‹\";\n    static NEXT_PAGE = \"›\";\n    static LAST_PAGE = \"»\";\n    static ELLIPSIS = \"…\";\n\n    constructor(\n        private searchService: SearchService) {\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes[\"results\"]) {\n            this.makeItems();\n        }\n    }\n\n    makeItems() {\n        this.pageCount = this.searchService.pageCount;\n        this.currentPage = this.searchService.page;\n        if (this.pageCount === 0) {\n            this.items = undefined;\n            return;\n        }\n        let endPages = this.endPages;\n        if (!endPages || endPages <= 0) {\n            endPages = 1;\n        }\n\n        const endWidth = endPages + 1; // +1 for the …\n\n        let pages = this.pages;\n        if (!pages) {\n            pages = 3 + endWidth * 2;\n        }\n        if (pages < 3 + endWidth * 2) {\n            pages = 3 + endWidth * 2; // 3 is the minimum number of pages to show between the … separators\n        }\n        let split1 = -1, split2 = -1;\n        if (this.pageCount <= pages) {\n            pages = this.pageCount;\n        }\n        else {\n            // pages must be an odd number to accommodate:  (First page) … (Current page - 1) (Current page) (Current page + 1) … (Last page)\n            pages = Math.floor(pages / 2) * 2 + 1;\n            const mid = pages - endWidth * 2;\n            const delta = Math.floor(mid / 2);\n            if ((this.currentPage - delta) > endPages + 1 + 1) {\n                split1 = this.currentPage - delta;\n            }\n            if ((this.currentPage + delta) < (this.pageCount - endWidth)) {\n                split2 = this.currentPage + delta;\n            }\n            if (split1 === -1 && split2 !== -1) {\n                split2 += endPages + 1 + 1 - (this.currentPage - delta);\n            }\n            else if (split2 === -1 && split1 !== -1)  {\n                split1 -= (this.currentPage + delta) - (this.pageCount - endWidth);\n            }\n        }\n        this.items = [];\n        if (this.showNavigation) {\n            if (this.showFirstLast) {\n                this.items.push(new BsPager.Item(1, this.currentPage, BsPager.FIRST_PAGE, \"msg#pager.firstPage\"));\n            }\n            this.items.push(new BsPager.Item(this.currentPage > 1 ? this.currentPage - 1 : 1, this.currentPage, BsPager.PREVIOUS_PAGE, \"msg#pager.previousPage\"));\n        }\n        if (this.showPages) {\n            for (let i = 1, ic = split1 !== -1 ? endPages : split2 !== -1 ? split2 : this.pageCount; i <= ic; i++) {\n                this.items.push(new BsPager.Item(i, this.currentPage));\n            }\n            if (split1 !== -1) {\n                this.items.push(new BsPager.Item(0, this.currentPage, BsPager.ELLIPSIS));\n                for (let i = split1, ic = split2 !== -1 ? split2 : this.pageCount; i <= ic; i++) {\n                    this.items.push(new BsPager.Item(i, this.currentPage));\n                }\n            }\n            if (split2 !== -1) {\n                this.items.push(new BsPager.Item(0, this.currentPage, BsPager.ELLIPSIS));\n                for (let i = this.pageCount - endPages + 1, ic = this.pageCount; i <= ic; i++) {\n                    this.items.push(new BsPager.Item(i, this.currentPage));\n                }\n            }\n        }\n        if (this.showNavigation) {\n            this.items.push(new BsPager.Item(this.currentPage < this.pageCount ? this.currentPage + 1 : this.pageCount, this.currentPage, BsPager.NEXT_PAGE, \"msg#pager.nextPage\"));\n            if (this.showFirstLast) {\n                this.items.push(new BsPager.Item(this.pageCount, this.currentPage, BsPager.LAST_PAGE, \"msg#pager.lastPage\"));\n            }\n        }\n    }\n\n    gotoPage(page: number) {\n        if (page !== this.currentPage && page > 0) {\n            this.searchService.gotoPage(page);\n        }\n    }\n}\n\nexport namespace BsPager {\n    export class Item {\n        constructor(\n            public page: number,\n            public currentPage: number,\n            public display?: string | number,\n            public title?: string) {\n            if (display) {\n                this.display = display;\n            }\n            else {\n                this.display = page;\n            }\n            if (Utils.isUndefined(title) && page) {\n                this.title = \"msg#pager.pageNumberTitle\";\n            }\n        }\n\n        get active(): boolean {\n            return this.isPage && (this.currentPage === this.page);\n        }\n\n        get disabled(): boolean {\n            return this.isEllipsis || ((this.currentPage === this.page) && this.isNavigation);\n        }\n\n        get isNavigation(): boolean {\n            return this.display === BsPager.FIRST_PAGE ||\n                this.display === BsPager.PREVIOUS_PAGE ||\n                this.display === BsPager.NEXT_PAGE ||\n                this.display === BsPager.LAST_PAGE;\n        }\n\n        get isPage(): boolean {\n            return !!this.page && !this.isNavigation;\n        }\n\n        get isEllipsis(): boolean {\n            return this.display === BsPager.ELLIPSIS;\n        }\n    }\n}","import {Component, Input, OnChanges, SimpleChanges} from \"@angular/core\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {AppService} from \"@sinequa/core/app-utils\";\nimport {AuditEvent, AuditEventType, CCSortingChoice, Results} from \"@sinequa/core/web-services\";\nimport {Action} from \"@sinequa/components/action\";\nimport {SearchService} from \"../../search.service\";\n\n@Component({\n    selector: \"sq-sort-selector\",\n    templateUrl: \"./sort-selector.html\"\n})\nexport class BsSortSelector implements OnChanges {\n    @Input() results: Results;  // Needed to detect Changes\n    @Input() rightAligned: boolean;\n    @Input() style: string;\n    @Input() size: string;\n    sortAction: Action | undefined;\n\n    constructor(\n        public appService: AppService,\n        public searchService: SearchService) {\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes[\"results\"]) {\n            this.buildSortAction();\n        }\n    }\n\n    private setCurrentSort(name: string) {\n        if (this.sortAction) {\n            const sortingChoices = this.getSortingChoices();\n            const current = sortingChoices && sortingChoices.find((value) => {\n                return Utils.eqNC(value.name, name);\n            });\n            if (current) {\n                const queryOrderBy = this.searchService.query.orderBy;\n                this.sortAction.text = !!queryOrderBy ? \"msg#sortSelector.sortOther\" : current.display || current.name;\n                this.sortAction.icon = !!queryOrderBy ? 'fas fa-sort'\n                    : this.isAscendingSort(current.orderByClause) ? 'fas fa-sort-amount-up'\n                    : this.isDescendingSort(current.orderByClause) ? 'fas fa-sort-amount-down' : 'fas fa-sort';\n            }\n            else {\n                this.sortAction.text = \"msg#sortSelector.sortOther\";\n                this.sortAction.icon = \"fas fa-sort\";\n            }\n            this.sortAction.messageParams = {values: {text: this.sortAction.text}}; // for title\n        }\n    }\n\n    private selectSort(sortingChoice: CCSortingChoice) {\n        this.setCurrentSort(sortingChoice.name);\n        this.searchService.query.sort = sortingChoice.name;\n        const audit: AuditEvent = {\n            type: AuditEventType.Search_Sort,\n            detail: {\n                sort: sortingChoice.name,\n                orderByClause: sortingChoice.orderByClause,\n            }\n        };\n        this.searchService.search(undefined, audit);\n    }\n\n    private buildSortAction() {\n        const sortingChoices = this.getSortingChoices();\n        if (!sortingChoices || sortingChoices.length === 0) {\n            this.sortAction = undefined;\n            return;\n        }\n        this.sortAction = new Action({\n            title: \"msg#sortSelector.sortByTitle\",\n            children: sortingChoices\n                .filter(sortingChoice => this.searchService.hasRelevance || !Utils.includes(sortingChoice.orderByClause, \"globalrelevance\"))\n                .map(sortingChoice => new Action({\n                    icon: this.isAscendingSort(sortingChoice.orderByClause) ? 'fas fa-sort-amount-up'\n                            : this.isDescendingSort(sortingChoice.orderByClause) ? 'fas fa-sort-amount-down' : '',\n                    text: sortingChoice.display || sortingChoice.name,\n                    data: sortingChoice,\n                    action: (item: Action, event: Event) => {\n                        this.selectSort(item.data);\n                    }\n                }))\n        });\n        if (!!this.searchService.results) {\n            this.setCurrentSort(this.searchService.results.sort);\n        }\n    }\n\n    private isAscendingSort(orderByClause: string): boolean {\n        if (!orderByClause) {\n            return false;\n        }\n\n        const lastElement: string = orderByClause.substring(orderByClause.lastIndexOf(' ') + 1);\n        return Utils.eqNC('asc', lastElement);\n    }\n\n    private isDescendingSort(orderByClause: string): boolean {\n        if (!orderByClause) {\n            return false;\n        }\n\n        const lastElement: string = orderByClause.substring(orderByClause.lastIndexOf(' ') + 1);\n        return Utils.eqNC('desc', lastElement);\n    }\n\n    private isTabSearch(): boolean {\n        const query = this.appService.ccquery;\n        if (!query)\n            return false;\n        const tabSearch = query.tabSearch;\n        return !(!tabSearch || !tabSearch.column || !tabSearch.isActive ||\n            !tabSearch.tabs || tabSearch.tabs.length === 0);\n    }\n\n    private getSortingChoices(): CCSortingChoice[] | null | undefined {\n        if (this.isTabSearch()) {\n            const tabName = this.searchService.results && this.searchService.results.tab;\n            if (tabName && this.appService.ccquery) {\n                for (const t of this.appService.ccquery.tabSearch.tabs) {\n                    if (t.name === tabName) {\n                        const s = t.sortingChoices;\n                        if (s && s.length > 0)\n                            return s;\n                        else\n                            break;\n                    }\n                }\n            }\n        }\n        const q = this.appService.ccquery;\n        return q && q.sortingChoices;\n    }\n}","<div class=\"btn-toolbar\" role=\"toolbar\" aria-label=\"Toolbar\">\n    <div class=\"btn-group\" [hidden]=\"!searchService.haveRecords || !sortAction\" [sq-action-buttons]=\"{items: [sortAction], style: style, autoAdjust: true, rightAligned: rightAligned, size: size}\"></div>\n</div>","<ul *ngIf=\"!!searchtabs || !!customtabs\" class=\"nav nav-tabs mb-1\">\n    <ng-container *ngIf=\"!!searchtabs\">\n        <li *ngFor=\"let tab of searchtabs\" class=\"nav-item\">\n            <a href=\"#\" class=\"nav-link\" [ngClass]=\"{'active' : tab == currentTab, 'disabled': tab.count == 0}\" (click)=\"selectTab(tab)\">\n                <i [ngClass]=\"iconMap[tab.name]\"></i>\n                {{(tab.display || tab.name) | sqMessage}} \n                <span class=\"count\">({{tab.count | sqNumber}})</span>\n            </a>\n        </li>\n    </ng-container>\n    <ng-container *ngIf=\"!!customtabs\">\n        <li *ngFor=\"let tab of customtabs\" class=\"nav-item\">\n            <a href=\"#\" class=\"nav-link\" [ngClass]=\"{'active' : tab == currentTab, 'disabled': tab.count == 0}\" (click)=\"selectTab(tab, false)\">\n                <i [ngClass]=\"iconMap[tab.name]\"></i>\n                {{(tab.display || tab.name) | sqMessage}}\n                <span class=\"count\" *ngIf=\"tab.count >= 0\">({{tab.count | sqNumber}})</span>\n            </a>\n        </li>\n    </ng-container>\n</ul>","import {Component, Input, Output, OnChanges, SimpleChanges, EventEmitter} from \"@angular/core\";\nimport {Results, Tab} from \"@sinequa/core/web-services\";\nimport {SearchService} from \"../../search.service\";\n\n@Component({\n    selector: \"sq-tabs\",\n    templateUrl: \"./tabs.html\"\n})\nexport class BsTabs implements OnChanges {\n\n    @Input() results: Results;\n\n    /**\n     * List of custom tabs (complementing the search query tabs)\n     * Actions can be performed on click via the events Output.\n     *\n     * When the results are updated (new search text, facet\n     * selection...), the custom tab selection is discarded.\n     * If the custom action updates the results, the tab selection\n     * will revert to previous state unless the query is updated.\n     */\n    @Input() customtabs: Tab[];\n\n    /**\n     * Associate icon to a tab name ({tab1 : 'icon class 1', tab2 : ...})\n     */\n    @Input() iconMap: {[key: string]: string} = {};\n\n    /**\n     * Emits an event when a tab is selected\n     */\n    @Output() events = new EventEmitter<Tab>();\n\n    currentTab: Tab | undefined;\n    searchtabs: Tab[] | undefined;\n\n    constructor(\n        private searchService: SearchService) {\n    }\n\n    update() {\n        if (this.results && this.results.tabs) {\n            this.currentTab = this.searchService.getCurrentTab();\n            this.searchtabs = this.results.tabs;\n        }\n        else {\n            this.currentTab = undefined;\n            this.searchtabs = undefined;\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (!!changes[\"results\"]) {\n            this.update();\n        }\n    }\n\n    selectTab(tab: Tab, search = true) {\n        if (tab !== this.currentTab) {\n            if(search){\n                this.searchService.selectTab(tab); // the currentTab will be updated in update()\n            } else {\n                this.currentTab = tab;\n            }\n            this.events.next(tab);\n        }\n        return false;   // Stop following href\n    }\n}","import {Component, Input} from '@angular/core';\nimport {SearchService} from \"../../search.service\";\n\n// From https://stackoverflow.com/questions/34773266/how-to-write-css-keyframes-to-indeterminate-material-design-progress-bar\n\n@Component({\n    selector: 'sq-loading-bar',\n    template: `\n<div class=\"slider\" *ngIf=\"isActive()\">\n\t<div class=\"line\"></div>\n  <div class=\"subline inc\"></div>\n  <div class=\"subline dec\"></div>\n</div>\n    `,\n    styles: [`\n\n.slider{\n  position:absolute;\n  width:100%;\n  height:3px;\n  overflow: hidden;\n  z-index: 3;\n}\n\n.line{\n  position:absolute;\n  opacity: 0.4;\n  background:#4a8df8;\n  width:150%;\n  height:5px;\n}\n\n.subline{\n  position:absolute;\n  background:#4a8df8;\n  height:5px;\n}\n.inc{\nanimation: increase 1s infinite;\n}\n.dec{\nanimation: decrease 1s 0.25s infinite;\n}\n\n@keyframes increase {\n from { left: -5%; width: 5%; }\n to { left: 130%; width: 100%;}\n}\n@keyframes decrease {\n from { left: -80%; width: 80%; }\n to { left: 110%; width: 10%;}\n}\n    `]\n})\nexport class BsLoadingBar {\n  /**\n   * active can provided as a boolean to activate the loading bar.\n   * If it is not provided, the SearchService searchActive property is used.\n   */\n  @Input() active?: boolean;\n\n  constructor(\n    public searchService: SearchService\n  ) { }\n\n  isActive() {\n    return this.active === undefined ? this.searchService.searchActive : this.active;\n  }\n}\n","  import {Component, ElementRef, ViewChild, Input, OnDestroy, AfterViewInit} from '@angular/core';\r\n  import {SearchService} from '../../search.service';\r\n\r\n  @Component({\r\n    selector: 'sq-scroller',\r\n    template: `<div #anchor style=\"height:5px\"></div>`\r\n  })\r\n  export class BsScroller implements AfterViewInit, OnDestroy {\r\n  @Input() options = {};\r\n  @ViewChild('anchor') anchor: ElementRef<HTMLElement>;\r\n\r\n  private observer: IntersectionObserver;\r\n\r\n  constructor(private searchService: SearchService) {}\r\n\r\n  ngAfterViewInit() {\r\n    const options = {\r\n      root: null,\r\n      ...this.options\r\n    };\r\n\r\n    this.observer = new IntersectionObserver(([entry]) => {\r\n      if(entry.isIntersecting) {\r\n        this.searchService.loadMore();\r\n      }\r\n    }, options);\r\n\r\n    this.observer.observe(this.anchor.nativeElement);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.observer.disconnect();\r\n  }\r\n\r\n}","<div *ngIf=\"hasMore\" class=\"btn-group\" [sq-action-buttons]=\"{items: [loadMoreAction], style: buttonsStyle, size: actionsSize, rightAligned: false}\"></div>\r\n","import {Component, Input, OnDestroy, OnInit} from '@angular/core';\r\nimport {Action, IAction} from '@sinequa/components/action';\r\nimport {Subscription} from 'rxjs';\r\n\r\nimport {SearchService} from '../../search.service';\r\n\r\n@Component({\r\n  selector: \"sq-load-more\",\r\n  templateUrl: \"./load-more.html\"\r\n})\r\nexport class BsLoadMore implements OnInit, OnDestroy {\r\n  @Input() buttonsStyle = \"outline-primary\";\r\n  @Input() actionsSize = \"sm\"\r\n\r\n  private subscription: Subscription = new Subscription();\r\n  loadMoreAction: IAction;\r\n  hasMore = false;\r\n\r\n  constructor(private searchService: SearchService) {\r\n    this.loadMoreAction = new Action({\r\n      text: \"msg#facet.loadMore\",\r\n      title: \"msg#facet.loadMore\",\r\n      action: (action) => {\r\n        this.searchService.loadMore();\r\n        action.update();\r\n      },\r\n      updater:() => {\r\n        // hide button while fetching new data\r\n        this.hasMore = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.subscription = this.searchService.resultsStream\r\n      .subscribe(results => {\r\n        this.hasMore = this.searchService.hasMore();\r\n      });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n}","import {NgModule, ModuleWithProviders} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\n\nimport {WebServicesModule} from \"@sinequa/core/web-services\";\nimport {IntlModule} from \"@sinequa/core/intl\";\nimport {LoginModule} from \"@sinequa/core/login\";\nimport {UtilsModule} from \"@sinequa/components/utils\";\nimport {BsActionModule} from \"@sinequa/components/action\";\nimport {SearchOptions, SEARCH_OPTIONS} from \"../search.service\";\n\nimport {BsDidYouMean} from \"./did-you-mean/did-you-mean\";\nimport {BsBreadcrumbs} from \"./breadcrumbs/breadcrumbs\";\nimport {BsPager} from \"./pager/pager\";\nimport {BsPageSizeSelector} from \"./page-size-selector/page-size-selector\";\nimport {BsSortSelector} from \"./sort-selector/sort-selector\";\nimport {BsTabs} from \"./tabs/tabs\";\nimport {BsLoadingBar} from \"./loading-bar/loading-bar\";\nimport {BsScroller} from \"./scroller/scroller\"\nimport {BsLoadMore} from './load-more/load-more';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule, ReactiveFormsModule,\n\n        WebServicesModule,\n        IntlModule,\n        LoginModule,\n\n        UtilsModule,\n        BsActionModule\n    ],\n    declarations: [\n        BsDidYouMean,\n        BsBreadcrumbs, BsPager, BsPageSizeSelector, BsSortSelector,\n        BsTabs, BsLoadingBar,\n        BsScroller, BsLoadMore\n    ],\n    exports: [\n        BsDidYouMean,\n        BsBreadcrumbs, BsPager, BsPageSizeSelector, BsSortSelector,\n        BsTabs, BsLoadingBar,\n        BsScroller, BsLoadMore\n    ],\n})\nexport class BsSearchModule {\n    static forRoot(searchOptions: SearchOptions) : ModuleWithProviders<BsSearchModule> {\n        return {\n            ngModule: BsSearchModule,\n            providers: [\n                // Provide SEARCH_OPTIONS\n                {provide: SEARCH_OPTIONS, useValue: searchOptions},\n            ]\n        };\n    }\n}\n","export default {\n    \"search\": {\n        \"emptySearchNotification\": \"Please enter some search terms to perform a search\",\n        \"alreadyFiltered\": \"Already selected\"\n    },\n\n    \"breadcrumbs\": {\n        \"emptySearch\": \"<empty search>\",\n        \"itemRemove\": \"Remove\"\n    },\n\n    \"didYouMean\": {\n        \"dymonlyBeforeCorrected\": \"Did you mean: \",\n        \"dymonlyAfterCorrected\": \"?\",\n        \"correctBeforeCorrected\": \"Showing results for: \",\n        \"correctBeforeOriginal\": \". Search instead for: \",\n        \"correctAfterOriginal\": \"\",\n        \"smartBeforeOriginal\": \"Showing results for: \",\n        \"smartBeforeCorrected\": \" and \",\n        \"smartAfterCorrected\": \"\"\n    },\n\n    \"pageSizeSelector\": {\n        \"pageSizeChoice\": \"{size, number} per page\",\n        \"defaultPageSize\": \"Default ({size, number})\",\n        \"defaultPageSizeChoice\": \"{size, number} per page (default)\"\n    },\n\n    \"pager\": {\n        \"pageNumberTitle\": \"Page {page, number}\",\n        \"firstPage\": \"First page\",\n        \"nextPage\": \"Next page\",\n        \"previousPage\": \"Previous page\",\n        \"lastPage\": \"Last page\"\n    },\n\n    \"sortSelector\": {\n        \"sortByTitle\": \"Sort by: {text}\",\n        \"sortOther\": \"<Other>\"\n    },\n\n    \"sort\": {\n        \"relevance\": \"Relevance\",\n        \"date\": \"Date\",\n        \"filename\": \"File name\",\n        \"title\": \"Title\"\n    },\n\n    \"queryIntent\": {\n        \"externalServiceTimeoutError\": \"This result page is incomplete due to an internal timeout. Please retry later.\"\n    }\n};\n","export default {\n    \"search\": {\n        \"emptySearchNotification\": \"Veuillez saisir des termes de recherche pour effectuer une recherche\",\n        \"alreadySelected\": \"Déjà sélectionné\"\n    },\n\n    \"breadcrumbs\": {\n        \"emptySearch\": \"<recherche vide>\",\n        \"itemRemove\": \"Supprimer\"\n    },\n\n    \"didYouMean\": {\n        \"dymonlyBeforeCorrected\": \"Essayez avec cette orthographe : \",\n        \"dymonlyAfterCorrected\": \"\",\n        \"correctBeforeCorrected\": \"Résultats pour : \",\n        \"correctBeforeOriginal\": \". Essayez avec l'orthographe : \",\n        \"correctAfterOriginal\": \"\",\n        \"smartBeforeOriginal\": \"Résultats pour : \",\n        \"smartBeforeCorrected\": \" et \",\n        \"smartAfterCorrected\": \"\"\n    },\n\n    \"pageSizeSelector\": {\n        \"pageSizeChoice\": \"{size, number} par page\",\n        \"defaultPageSize\": \"Défaut ({size, number})\",\n        \"defaultPageSizeChoice\": \"{size, number} par page (défaut)\"\n    },\n\n    \"pager\": {\n        \"pageNumberTitle\": \"Page {page, number}\",\n        \"firstPage\": \"Première page\",\n        \"nextPage\": \"Page suivante\",\n        \"previousPage\": \"Page précédente\",\n        \"lastPage\": \"Dernière page\"\n    },\n\n    \"sortSelector\": {\n        \"sortByTitle\": \"Trier par: {text}\",\n        \"sortOther\": \"<Autre>\"\n    },\n\n    \"sort\": {\n        \"relevance\": \"Pertinence\",\n        \"date\": \"Date\",\n        \"filename\": \"Nom de fichier\",\n        \"title\": \"Titre\"\n    },\n\n    \"queryIntent\": {\n        \"externalServiceTimeoutError\": \"Cette page de résultat est incomplète due à un délai d'attente interne dépassé. S'il vous plaît, réessayez plus tard.\"\n    }\n};\n","export default {\n    \"search\": {\n        \"emptySearchNotification\": \"Bitte geben Sie einige Suchbegriffe ein, um eine Suche durchzuführen\",\n        \"alreadyFiltered\": \"bereits ausgewählt\"\n    },\n\n    \"breadcrumbs\": {\n        \"emptySearch\": \"<Suche ohne Suchbegriff>\",\n        \"itemRemove\": \"Entfernen\"\n    },\n\n    \"didYouMean\": {\n        \"dymonlyBeforeCorrected\": \"Meinten Sie: \",\n        \"dymonlyAfterCorrected\": \"?\",\n        \"correctBeforeCorrected\": \"Zeige Ergebnisse für [\",\n        \"correctBeforeOriginal\": \"]. Zeige stattdessen Ergebnisse für [\",\n        \"correctAfterOriginal\": \"]\",\n        \"smartBeforeOriginal\": \"Zeige Ergebnisse für [\",\n        \"smartBeforeCorrected\": \"] und [\",\n        \"smartAfterCorrected\": \"]\"\n    },\n\n    \"pageSizeSelector\": {\n        \"pageSizeChoice\": \"{size, number} pro Seite\",\n        \"defaultPageSize\": \"Standard ({size, number})\",\n        \"defaultPageSizeChoice\": \"{size, number} pro Seite (standard)\"\n    },\n\n    \"pager\": {\n        \"pageNumberTitle\": \"Seite {page, number}\",\n        \"firstPage\": \"Erste Seite\",\n        \"nextPage\": \"Nächste Seite\",\n        \"previousPage\": \"Vorherige Seite\",\n        \"lastPage\": \"Letzte Seite\"\n    },\n\n    \"sortSelector\": {\n        \"sortByTitle\": \"Sortieren nach: {text}\",\n        \"sortOther\": \"<Andere>\"\n    },\n\n    \"sort\": {\n        \"relevance\": \"Relevanz\",\n        \"date\": \"Datum\",\n        \"filename\": \"Dateiname\",\n        \"title\": \"Titel\"\n    },\n\n    \"queryIntent\": {\n        \"externalServiceTimeoutError\": \"Diese Ergebnisseite ist aufgrund eines internen Zeitlimits unvollständig. Bitte versuchen Sie es später noch einmal.\"\n    }\n};\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i0.ɵɵelementStart","i0.ɵɵlistener","i0.ɵɵelementEnd","i0.ɵɵproperty","i0.ɵɵelement","i0.ɵɵpropertyInterpolate","i0.ɵɵtemplate","i0.ɵɵclassMapInterpolate2","i0.ɵɵadvance","i0.ɵɵelementContainerStart","i0.ɵɵelementContainerEnd","i0.ɵɵtext","i0.ɵɵtextInterpolate1","i0.ɵɵtextInterpolate","i0.ɵɵclassMapInterpolate1"],"mappings":";;;;;;;;;;;;;;;AAYA;;;MAGa,WAAW;IAapB,YAAoB,UAAsB,EAAE,aAA4B,EAAE,KAAY;QAClF,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QACnC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;QAC1B,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,IAAI,GAAG,EAAU,CAAC;KACnC;IAZD,OAAO,MAAM,CAAC,UAAsB,EAAE,aAA4B,EAAE,KAAY;QAC5E,MAAM,WAAW,GAAG,IAAI,WAAW,CAAC,UAAU,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC;QACtE,OAAO,WAAW,CAAC,IAAI,EAAE,CAAC;KAC7B;IAWD,IAAI,WAAW;QACX,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC;KACpD;IAED,IAAI,UAAU;QACV,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC;QAC/B,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;YACd,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;SAC5B;QACD,OAAO,SAAS,CAAC;KACpB;IAED,IAAI,IAAI;QACJ,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;KAChC;IAED,IAAI,QAAQ;QACR,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;KAC7B;IAED,IAAI,OAAO;QACP,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;KAC9B;IAED,IAAI,aAAa;QACb,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC;KACpD;IAED,IAAI,WAAW;QACX,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC;KACpD;IAED,IAAI,OAAO;QACP,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;YACzB,OAAO,IAAI,CAAC;SACf;QACD,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE;YACjD,OAAO,IAAI,CAAC;SACf;QACD,OAAO,KAAK,CAAC;KAChB;IAED,IAAI,CAAC,IAAiC;QAClC,IAAI,KAAK,GAAG,IAAY,CAAC;QACzB,MAAM,IAAI,GAAG,IAA4B,CAAC;QAC1C,IAAI,EAAE,IAAI,YAAY,IAAI,CAAC,EAAE;YACzB,KAAK,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC;SAC1B;QACD,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,KAAK;YACnB,MAAM,KAAK,GAAG,KAAK,CAAC,WAAW,CAAC,UAAU,CAAC,kBAAkB,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAC3E,OAAO,CAAC,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;SAC3C,CAAC,EAAE;YACA,OAAO,SAAS,CAAC;SACpB;QACD,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,QAAQ,EAAE;YAC/B,MAAM,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAChC,IAAI,KAAK,EAAE;gBACP,OAAO,KAAK,CAAC;aAChB;SACJ;QACD,KAAK,MAAM,MAAM,IAAI,IAAI,CAAC,OAAO,EAAE;YAC/B,IAAI,MAAM,CAAC,IAAI,EAAE;gBACb,MAAM,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACtC,IAAI,KAAK,EAAE;oBACP,OAAO,KAAK,CAAC;iBAChB;aACJ;SACJ;QACD,IAAI,IAAI,CAAC,QAAQ,EAAE;YACf,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,KAAK,KAAK,KAAK,CAAC,YAAY,CAAC,CAAC;YACrE,IAAI,KAAK,EAAE;gBACP,OAAO,KAAK,CAAC;aAChB;YACD,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,KAAK,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;YAClE,IAAI,KAAK,EAAE;gBACP,OAAO,KAAK,CAAC;aAChB;SACJ;QACD,OAAO,SAAS,CAAC;KACpB;IAED,UAAU,CAAC,KAAa,EAAE,WAA2B;;QAEjD,MAAM,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;QACzC,KAAK,IAAI,CAAC,GAAG,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;YAChD,MAAM,MAAM,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;YAChC,IAAI,MAAM,CAAC,IAAI,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,EAAE;gBAClE,IAAI,CAAC,WAAW,EAAG;oBACf,OAAO,MAAM,CAAC,IAAI,CAAC;iBACtB;gBACD,IAAI,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE;oBAC7B,IAAI,KAAK,CAAC,IAAI,CAAC,WAAW,EAAE,MAAM,CAAC,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC,EAAE;wBAClD,OAAO,MAAM,CAAC,IAAI,CAAC;qBACtB;iBACJ;qBACI;oBACD,MAAM,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;oBAC5C,IAAI,KAAK,EAAE;wBACP,OAAO,KAAK,CAAC;qBAChB;iBACJ;aACJ;SACJ;QACD,OAAO,SAAS,CAAC;KACpB;IAEO,SAAS,CAAC,IAAsB;QACpC,IAAI,IAAI,EAAE;YACN,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;YAChC,MAAM,CAAC,OAAO,CAAC,CAAC,KAAK;gBACjB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;aAC1B,CAAC,CAAC;SACN;KACJ;IAEO,2BAA2B,CAAC,IAAY;QAC5C,IAAI,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QAC3C,IAAI,EAAE,IAAI,YAAY,IAAI,CAAC,EAAE;YACzB,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;SAC7D;QACD,IAAI,IAAI,YAAY,IAAI,EAAE;YACtB,OAAO,EAAC,IAAI,EAAE,OAAO,EAAE,IAAI,EAAC,CAAC;SAChC;aACI;YACD,OAAO,EAAC,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAC,CAAC;SAC3C;KACJ;IAEO,SAAS;;QAEb,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE;YAC/B,MAAM,IAAI,GAAG,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAC/D,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACtB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC7B;aACI;YACD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;gBACZ,IAAI,EAAE,SAAS;gBACf,OAAO,EAAE,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,6BAA6B;gBAC5F,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,gBAAgB;oBACxE,IAAI,CAAC,aAAa,CAAC,0BAA0B,CAAC,IAAI,CAAC,KAAK,CAAC;aAChE,CAAC,CAAC;SACN;;QAED,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;YACjC,KAAK,MAAM,MAAM,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;gBACpC,MAAM,IAAI,GAAG,IAAI,CAAC,2BAA2B,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;gBACjE,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;gBAC1B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACtB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC7B;SACJ;;QAED,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC;KACnD;IAEO,IAAI;QACR,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,OAAO,IAAI,CAAC;KACf;IAED,UAAU,CAAC,IAAqB;QAC5B,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACvC,IAAI,IAAI,CAAC,KAAK,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;YAC5B,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;YAChC,IAAI,KAAK,CAAC,MAAM,EAAE;gBACd,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;aAC9B;YACD,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC;YAClD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,OAAO,KAAK,CAAC;SAChB;QACD,OAAO,SAAS,CAAC;KACpB;IAED,UAAU,CAAC,IAAqB;QAC5B,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACvC,IAAI,IAAI,CAAC,KAAK,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;YAC5B,IAAI,IAAiC,CAAC;YACtC,IAAI,KAAK,KAAK,CAAC,EAAE;gBACb,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;oBACtC,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;oBACvB,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;oBACzB,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;oBACtB,IAAI,CAAC,OAAO,GAAG,6BAA6B,CAAC;oBAC7C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,gBAAgB;wBAC9E,IAAI,CAAC,aAAa,CAAC,0BAA0B,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iBACjE;gBACD,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;oBACd,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC;iBAC1B;qBACI,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;oBAC5B,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;iBAC5C;aACJ;iBACI;;gBAED,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;gBACrC,IAAI,WAAW,IAAI,KAAK,EAAE;oBACtB,IAAI,WAAW,GAAG,KAAK,EAAE;wBACrB,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;qBAClC;yBACI;wBACD,IAAI,KAAK,KAAK,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;4BACjC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;yBAChC;6BACI;4BACD,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;yBAChC;wBACD,IAAI,IAAI,CAAC,MAAM,EAAE;4BACb,IAAI,GAAG,SAAS,CAAC;yBACpB;qBACJ;iBACJ;gBACD,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;oBACnB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;iBAC1C;gBACD,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;aAC/B;YACD,OAAO,IAAI,CAAC;SACf;QACD,OAAO,SAAS,CAAC;KACpB;IAED,MAAM,CAAC,KAAY;QACf,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACb,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;SAC7B;QACD,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;QAC7B,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;QACjC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;YACxC,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAC3B,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;YACtB,IAAI,CAAC,OAAO,GAAG,6BAA6B,CAAC;YAC7C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,gBAAgB;gBAC9E,IAAI,CAAC,aAAa,CAAC,0BAA0B,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACjE;KACJ;;;MC5PQ,cAAc,GAAG,IAAI,cAAc,CAAgB,gBAAgB,EAAE;MAKrE,aAAa;IAetB,YACkD,OAAsB,EAC1D,MAAc,EACd,UAAsB,EACtB,YAA6B,EAC7B,YAA0B,EAC1B,WAAwB,EACxB,aAA4B,EAC5B,YAA6B,EAC7B,oBAA0C,EAC1C,WAAwB;QATY,YAAO,GAAP,OAAO,CAAe;QAC1D,WAAM,GAAN,MAAM,CAAQ;QACd,eAAU,GAAV,UAAU,CAAY;QACtB,iBAAY,GAAZ,YAAY,CAAiB;QAC7B,iBAAY,GAAZ,YAAY,CAAc;QAC1B,gBAAW,GAAX,WAAW,CAAa;QACxB,kBAAa,GAAb,aAAa,CAAe;QAC5B,iBAAY,GAAZ,YAAY,CAAiB;QAC7B,yBAAoB,GAApB,oBAAoB,CAAsB;QAC1C,gBAAW,GAAX,WAAW,CAAa;QAvBtC,sBAAiB,GAAW,EAAE,CAAC;QAQrB,qBAAgB,GAAG,KAAK,CAAC;QACzB,YAAO,GAAG,IAAI,OAAO,EAAwB,CAAC;QAC9C,iBAAY,GAAG,IAAI,eAAe,CAAoB,SAAS,CAAC,CAAC;QACjE,mBAAc,GAAG,IAAI,eAAe,CAAsB,SAAS,CAAC,CAAC;QAc3E,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACf,IAAI,CAAC,OAAO,GAAG;gBACX,MAAM,EAAE,CAAC,QAAQ,CAAC;aACrB,CAAC;SACL;QAED,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;QACzB,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;QAE7B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,SAAS,CACvD,CAAC,KAAK;YACF,IAAI,KAAK,CAAC,IAAI,KAAK,iBAAiB,EAAE;gBAClC,IAAI,CAAC,WAAW,EAAE,CAAC;aACtB;SACJ,CAAC,CAAC;QACP,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAClD,CAAC,KAAK;YACF,IAAI,KAAK,YAAY,eAAe,EAAE;;gBAElC,MAAM,iBAAiB,GAAG,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE,CAAC;gBAC7D,IAAI,iBAAiB,IAAI,KAAK,CAAC,iBAAiB,KAAK,UAAU;oBAC3D,CAAC,iBAAiB,CAAC,MAAM,CAAC,KAAK,IAAI,KAAK,CAAC,aAAa,EAAE;oBACxD,iBAAiB,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC,aAAa,CAAC;iBACxD;aACJ;iBACI,IAAI,KAAK,YAAY,aAAa,EAAE;gBACrC,IAAI,CAAC,gBAAgB,EAAE,CAAC;aAC3B;SACJ,CAAC,CAAC;QACP,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,SAAS,CACnD,CAAC,KAAK;YACF,IAAI,KAAK,CAAC,IAAI,KAAK,eAAe,EAAE;gBAChC,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,KAAK,IAAI,CAAC,MAAM,CAAC,IAAI,KAAK,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE;oBAClG,IAAI,CAAC,UAAU,EAAE,CAAC;iBACrB;aACJ;SACJ,CAAC,CAAC;KACV;IAED,WAAW;QACP,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,CAAC;QACrC,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,CAAC;QACtC,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC;QACnC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;QACxB,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;QAC7B,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC;KAClC;IAED,IAAI,MAAM;QACN,OAAO,IAAI,CAAC,OAAO,CAAC;KACvB;IAED,IAAI,WAAW;QACX,OAAO,IAAI,CAAC,YAAY,CAAC;KAC5B;IAED,IAAI,aAAa;QACb,OAAO,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;KAC7C;IAED,YAAY,CAAC,IAAY;QACrB,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,SAAS,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,EAAE;YACxG,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;SACrF;QACD,OAAO,SAAS,CAAC;KACpB;IAED,IAAI,KAAK;QACL,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YACd,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;YAC/B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,IAAI,CAAC,MAAM,EAAC,CAAC,CAAC;SAC9D;QACD,OAAO,IAAI,CAAC,MAAM,CAAC;KACtB;IAEM,QAAQ,CAAC,KAAwB,EAAE,QAAQ,GAAG,IAAI;QACrD,IAAI,KAAK,KAAK,IAAI,CAAC,MAAM,EAAE;YACvB,OAAO;SACV;QACD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,IAAI,CAAC,MAAM,EAAE;YACb,IAAI,OAA4B,CAAC;YACjC,IAAI,IAAI,CAAC,OAAO,CAAC,uBAAuB,EAAE;gBACtC,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,IAAI,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC;aACvE;iBACI;gBACD,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;gBACvD,IAAI,CAAC,OAAO,EAAE;oBACV,OAAO,CAAC,IAAI,CAAC,UAAU,IAAI,CAAC,MAAM,CAAC,IAAI,aAAa,CAAC,CAAC;oBACtD,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC;iBAC5C;aACJ;YACD,IAAI,OAAO,EAAE;gBACT,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;gBAChC,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,KAAK,OAAO,EAAE;oBACrC,IAAI,CAAC,UAAU,CAAC,OAAO,GAAG,OAAO,CAAC;iBACrC;aACJ;SACJ;QACD,IAAI,QAAQ,EAAE;YACV,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,IAAI,CAAC,MAAM,EAAC,CAAC,CAAC;SAC9D;KACJ;IAEM,UAAU;QACb,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;KAC5B;IAEM,iBAAiB,CAAC,OAA4B,EAAE,OAAwC;QAC3F,IAAI,CAAC,OAAO,EAAE;YACV,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;YAC7B,OAAO;SACV;QACD,IAAI,CAAC,IAAI,CAAC,WAAW,KAAK,CAAC,OAAO,CAAC,iBAAiB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;YACxE,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;SAC5E;aACI,IAAI,OAAO,CAAC,QAAQ,EAAE;YACvB,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACvC;KACJ;IAEO,WAAW,CAAC,OAA4B,EAAE,UAA2C,EAAE;QAC3F,IAAI,OAAO,KAAK,IAAI,CAAC,OAAO,EAAE;YAC1B,OAAO;SACV;QACD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,oBAAoB,EAAE,OAAO,EAAC,CAAC,CAAC;QACzD,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;QAChC,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;QACzC,IAAI,IAAI,CAAC,OAAO,EAAE;YACd,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE;gBAClB,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC;aACrC;YACD,IAAI,IAAI,CAAC,OAAO,CAAC,UAAU,IAAI,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,OAAO,EAAE;gBAC5D,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,OAAO,CAAC;aACxD;SACJ;QACD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,aAAa,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC;QAChE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KAC1C;IAEM,UAAU,CAAC,OAAgB;QAC9B,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;KACpC;;IAIO,iBAAiB,CAAE,OAA4B;QACnD,IAAI,OAAO,IAAI,OAAO,CAAC,aAAa,IAAI,OAAO,CAAC,YAAY,EAAE;YAC1D,MAAM,YAAY,GAAG,OAAO,CAAC,YAAY,CAAC;YAC1C,KAAK,MAAM,MAAM,IAAI,YAAY,EAAE;gBAC/B,IAAI,MAAM,CAAC,OAAO,EAAE;oBAChB,KAAK,MAAM,MAAM,IAAI,MAAM,CAAC,OAAO,EAAE;wBACjC,MAAM,KAAK,GAAgD,EAAC,IAAI,EAAE,6BAA6B,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,CAAC,aAAa,EAAC,CAAC;wBAClK,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;wBACzB,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE;4BACxB,IAAI,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE;gCACf,QAAQ,MAAM,CAAC,IAAI;oCACf,KAAK,KAAK;wCACN,IAAI,OAAO,CAAC,aAAa,CAAC,OAAO,IAAI,IAAI,CAAC,KAAK;4CAC3C,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,EAAE,EAAE,MAAM,CAAC,IAAI,CAAC,EAAE;4CAChD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,EAAE,EAAC,kBAAkB,EAAE,IAAI,EAAC,CAAC,CAAC;yCAC3D;wCACD,MAAM;iCACb;6BACJ;yBACJ;qBACJ;iBACJ;aACJ;SACJ;KACJ;IAED,IAAI,WAAW;QACX,OAAO,CAAC,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;KACtF;IAED,IAAI,QAAQ;QACR,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC,CAAC;KAChF;IAED,IAAI,aAAa;QACb,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,aAAa,IAAI,IAAI,CAAC,OAAO,CAAC,aAAa,GAAG,CAAC,CAAC;KAC1F;IAED,IAAI,QAAQ;QACR,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;YACnC,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;SAC9B;QACD,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,QAAQ,EAAE;YAC7D,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,QAAQ,CAAC;SAC3C;QACD,OAAO,aAAa,CAAC,eAAe,CAAC;KACxC;IAED,IAAI,IAAI;QACJ,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACf,OAAO,CAAC,CAAC;SACZ;QACD,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;KAC5B;IAED,IAAI,SAAS;QACT,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;YACzC,OAAO,CAAC,CAAC;SACZ;QACD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;KACnE;IAED,SAAS,CAAC,WAAmB;QACzB,MAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC;QACxC,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC,IAAI,GAAG,UAAU,CAAC,CAAC;QAC7D,IAAG,WAAW,EAAC;YACX,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;SACrC;QACD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,YAAY,EAAE,KAAK,EAAE,KAAK,EAAC,CAAC,CAAC;QACtD,OAAO,KAAK,CAAC;KAChB;IAES,cAAc,CAAC,KAAiB;QACtC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,kBAAkB,EAAE,KAAK,EAAE,KAAK,EAAC,CAAC,CAAC;QAC5D,OAAO,KAAK,CAAC;KAChB;IAED,qBAAqB,CAAC,IAAqB;QACvC,IAAI,IAAI,CAAC,WAAW,EAAE;YAClB,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAChD,IAAI,KAAK,EAAE;gBACP,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;gBAC5B,IAAI,CAAC,MAAM,CAAC,EAAC,gBAAgB,EAAE,IAAI,EAAC,CAAC,CAAC;aACzC;SACJ;KACJ;IAED,qBAAqB,CAAC,IAAqB;QACvC,IAAI,IAAI,CAAC,WAAW,EAAE;YAClB,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAC/C,IAAI,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE;gBAC5C,IAAI,CAAC,KAAK,EAAE,CAAC;gBACb,OAAO;aACV;YACD,IAAI,IAAI,EAAE;gBACN,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;aACpC;SACJ;KACJ;IAED,YAAY,CAAC,KAAa;QACtB,IAAI,IAAI,CAAC,WAAW,EAAE;YAClB,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;YAC/C,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;SACpC;KACJ;IAED,UAAU;QACN,IAAI,IAAI,CAAC,WAAW,EAAE;YAClB,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACvC,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;SACpC;KACJ;IAED,KAAK,CAAC,QAAQ,GAAG,IAAI,EAAE,IAAa;QAChC,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,GAAG,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;QACtC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;QAC5B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC;QACzC,IAAI,QAAQ,EAAE;YACV,IAAI,CAAC,QAAQ,CAAC,EAAC,IAAI,EAAE,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,EAAC,CAAC,CAAC;SACzD;KACJ;IAED,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS;QAC9B,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;KAC1B;IAES,mBAAmB,CAAC,eAAgC;QAC1D,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,wBAAwB,EAAE,UAAU,EAAE,eAAe,EAAC,CAAC,CAAC;QACjF,OAAO,eAAe,CAAC;KAC1B;IAED,0BAA0B,CAAC,KAAwB;QAC/C,IAAI,CAAC,KAAK,EAAE;YACR,OAAO,IAAI,CAAC;SACf;QACD,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,MAAM,KAAK,QAAQ,EAAE;;YAE5C,IAAI,KAAK,CAAC,WAAW,EAAE;gBACnB,OAAO,KAAK,CAAC;aAChB;;YAED,IAAI,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;gBACtC,OAAO,KAAK,CAAC;aAChB;;YAED,IAAI,KAAK,CAAC,MAAM,EAAE;gBACd,OAAO,KAAK,CAAC;aAChB;YACD,OAAO,IAAI,CAAC;SACf;QACD,OAAO,KAAK,CAAC;KAChB;IAED,aAAa,CAAC,KAAwB;QAClC,IAAI,CAAC,KAAK,EAAE;YACR,OAAO,IAAI,CAAC;SACf;QACD,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,MAAM,KAAK,QAAQ,EAAE;YAC5C,IAAI,CAAC,IAAI,CAAC,0BAA0B,CAAC,KAAK,CAAC,EAAE;gBACzC,OAAO,KAAK,CAAC;aAChB;;YAED,IAAI,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;gBACzC,OAAO,KAAK,CAAC;aAChB;YACD,OAAO,IAAI,CAAC;SACf;QACD,OAAO,KAAK,CAAC;KAChB;IAED,gBAAgB,CAAC,OAAwB;QACrC,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,gBAAgB,EAAE;YACtE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;gBACzB,OAAO,GAAG,CAAC,OAAO,CAAC,CAAC;aACvB;YACD,KAAK,MAAM,KAAK,IAAI,OAAO,EAAE;gBACzB,IAAI,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE;oBAC3B,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,oCAAoC,CAAC,CAAC;oBACrE,OAAO,KAAK,CAAC;iBAChB;aACJ;SACJ;QACD,OAAO,IAAI,CAAC;KACf;IAED,UAAU,CACN,KAAY,EAAE,WAAyB,EACvC,UAA2C,EAAE;QAC7C,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,EAAE;YAC/B,OAAO,UAAU,CAAC,cAAc,CAAC,CAAC;SACrC;QACD,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE;YACzB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;SAC5B;QACD,MAAM,GAAG,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QACjC,OAAO,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,KAAK,EAAE,WAAW,EAClD,IAAI,CAAC,mBAAmB,CAAC;YACrB,GAAG,EAAE,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,IAAI,GAAG,SAAS;YACjC,YAAY,EAAE,OAAO,CAAC,YAAY;YAClC,aAAa,EAAE,OAAO,CAAC,aAAa;SACvC,CAAC,CACL,CAAC,IAAI,CACF,GAAG,CAAC,CAAC,OAAO;YACR,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,OAAO,OAAO,CAAC;SAClB,CAAC,CACL,CAAC;KACL;IAED,kBAAkB,CAAC,OAAgB,EAAE,WAAyB;QAC1D,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,EAAE;YACjC,OAAO,EAAE,CAAC,EAAC,OAAO,EAAE,EAAE,EAAC,CAAC,CAAC;SAC5B;QACD,OAAO,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;KACrE;IAED,QAAQ,CAAC,OAAyC,EAAE,KAAmB;QACnE,IAAI,CAAC,OAAO,EAAE;YACV,OAAO,GAAG,EAAE,CAAC;SAChB;QACD,IAAI,CAAC,OAAO,CAAC,gBAAgB,IAAI,IAAI,CAAC,OAAO,EAAE;YAC3C,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC;YACjD,OAAO,CAAC,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC;SACtD;QACD,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;YACrB,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;YACtC,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;SAChC;aACI;;YAED,IAAI,GAAG,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YACzC,MAAM,WAAW,GAAG,GAAG,CAAC,QAAQ,CAAC;YACjC,GAAG,CAAC,YAAY,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;YACpC,MAAM,aAAa,GAAG,kBAAkB,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;;YAErD,MAAM,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;YACvD,IAAI,IAAI,CAAC,MAAM,EAAE;gBACb,WAAW,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE,CAAC;aAC1D;;YAED,MAAM,KAAK,GAA+B;gBACtC,KAAK;gBACL,iBAAiB,EAAE,OAAO;aAC7B,CAAC;YACF,MAAM,MAAM,GAAG;gBACX,WAAW;gBACX,KAAK;gBACL,kBAAkB,EAAE,OAAO,CAAC,kBAAkB;aACjD,CAAC;;YAEF,IAAI,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;YACxB,IAAI,CAAC,IAAI,EAAE;gBACP,IAAI,GAAG,WAAW,CAAC;aACtB;YACD,GAAG,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAC1B,IAAI,GAAG,GAAG,CAAC,QAAQ,CAAC;YACpB,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE;gBACxC,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,EAAE,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;aAC/C;YACD,MAAM,MAAM,GAAG,kBAAkB,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;;YAE9C,IAAI,KAAK,CAAC,EAAE,CAAC,WAAW,EAAE,IAAI,CAAC,IAAI,KAAK,CAAC,EAAE,CAAC,aAAa,EAAE,MAAM,CAAC,EAAE;;gBAEhE,MAAM,CAAC,WAAW,CAAC,QAAQ,GAAG,KAAK,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;;gBAElD,MAAM,CAAC,kBAAkB,GAAG,IAAI,CAAC;aACpC;YACD,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,CAAC,CAAC;SAC/C;KACJ;IAES,eAAe;QACrB,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE,CAAC;QACtD,IAAI,UAAU,EAAE;YACZ,OAAO,UAAU,CAAC,MAAM,IAAI,UAAU,CAAC,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;SAC7D;QACD,OAAO,MAAM,CAAC,OAAO,CAAC,KAAK,IAAI,EAAE,CAAC;KACrC;IAEM,mBAAmB;QACtB,MAAM,GAAG,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAC3C,OAAO,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;KAC3C;IAES,aAAa,CAAC,QAAgB;QACpC,OAAO,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;KAC/D;IAES,iBAAiB,CAAC,QAAgB;QACxC,OAAO,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;KACzE;IAEO,gBAAgB,CAAC,QAAgB,EAAE,MAA4B;QACnE,IAAI,MAAM,EAAE;YACR,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE;gBACxB,IAAI,KAAK,CAAC,QAAQ,CAAC,QAAQ,EAAE,KAAK,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,EAAE;oBACpD,OAAO,IAAI,CAAC;iBACf;aACJ;SACJ;QACD,OAAO,KAAK,CAAC;KAChB;IAEM,eAAe;QAClB,IAAI,KAAwB,CAAC;QAC7B,MAAM,GAAG,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAC3C,IAAI,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;YAClC,MAAM,MAAM,GAAG,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;YAC7C,IAAI,MAAM,EAAE;gBACR,IAAI;oBACA,KAAK,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;iBAC7C;gBACD,WAAM,GAAE;aACX;SACJ;QACD,OAAO,KAAK,CAAC;KAChB;IAES,kBAAkB;QACxB,MAAM,KAAK,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;QACrC,IAAI,CAAC,KAAK,EAAE;YACR,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAClB,OAAO,SAAS,CAAC;SACpB;aACI;;;;;;YAMD,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACnC,OAAO,KAAK,CAAC;SAChB;KACJ;IAES,WAAW;QACjB,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE;YAC7B,OAAO,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;SACjC;QACD,IAAI,CAAC,CAAC,IAAI,CAAC,kBAAkB,EAAE,EAAE;YAC7B,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC;SAC1B;aACI;YACD,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;SAChC;KACJ;IAED,IAAI,aAAa;QACb,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC;KAC1C;IAED,IAAI,aAAa,CAAC,KAAc;QAC5B,IAAI,CAAC,OAAO,CAAC,iBAAiB,GAAG,CAAC,KAAK,CAAC;KAC3C;IAES,8BAA8B;QACpC,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC;QAC3C,IAAI,UAAU,EAAE;YACZ,MAAM,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;YAClE,IAAI,QAAQ,YAAY,IAAI,EAAE;gBAC1B,IAAI,QAAQ,CAAC,KAAK,KAAK,QAAQ,EAAE;oBAC7B,OAAO,IAAI,CAAC,cAAc,CAAC;wBACvB,IAAI;wBACJ,MAAM,EAAE;4BACJ,IAAI,EAAE,QAAQ,CAAC,KAAK;4BACpB,OAAO,EAAE,UAAU,CAAC,KAAK;4BACzB,gBAAgB,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,GAAG,IAAI;yBAC5D;qBACJ,CAAC,CAAC;iBACN;qBACI;oBACD,OAAO,IAAI,CAAC,cAAc,CAAC;wBACvB,IAAI;wBACJ,MAAM,EAAE;4BACJ,IAAI,EAAE,UAAiB;4BACvB,OAAO,EAAE,UAAU,CAAC,KAAK;4BACzB,UAAU,EAAE,QAAQ,CAAC,KAAK;4BAC1B,aAAa,EAAE,QAAQ,CAAC,GAAG;4BAC3B,gBAAgB,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,GAAG,IAAI;yBAC5D;qBACJ,CAAC,CAAC;iBACN;aACJ;SACJ;aACI;YACD,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;gBACnB,OAAO,IAAI,CAAC,cAAc,CAAC;oBACvB,IAAI;oBACJ,MAAM,EAAE;wBACJ,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM;qBAC5B;iBACJ,CAAC,CAAC;aACN;iBACI;gBACD,OAAO,IAAI,CAAC,cAAc,CAAC;oBACvB,IAAI;oBACJ,MAAM,EAAE;wBACJ,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI;wBACrB,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK;qBAC1B;iBACJ,CAAC,CAAC;aACN;SACJ;QACD,OAAO,SAAS,CAAC;KACpB;IAES,gBAAgB,CAAC,iBAAmD,EAAE,KAAmB;QAC/F,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE;YAC7B,OAAO,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;SACjC;QACD,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE;YAC1B,OAAO,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;SACjC;QACD,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;QACxB,IAAI,IAAI,CAAC,aAAa,EAAE;YACpB,KAAK,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;SACrC;QACD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,cAAc,EAAE,KAAK,EAAC,CAAC,CAAC;QACjD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC9B,IAAI,CAAC,KAAK,EAAE;YACR,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;SAChC;QACD,IAAI,IAAI,CAAC,aAAa,EAAE;YACpB,MAAM,KAAK,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;;YAErC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;YACpB,iBAAiB,GAAG,KAAK,CAAC,iBAAiB,CAAC;SAC/C;QACD,iBAAiB,GAAG,iBAAiB,IAAI,EAAE,CAAC;QAC5C,MAAM,QAAQ,GAAG,iBAAiB,CAAC,IAAI,GAAG,iBAAiB,CAAC,IAAI,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC;QAC3G,IAAG,iBAAiB,CAAC,UAAU,IAAI,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,EAAE;YACjE,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;SAChC;QACD,IAAI,CAAC,KAAK,EAAE;YACR,KAAK,GAAG,IAAI,CAAC,8BAA8B,EAAE,CAAC;YAC9C,IAAI,KAAK,IAAI,KAAK,CAAC,IAAI,sCAAiC;gBACpD,OAAO,iBAAiB,CAAC,YAAY,CAAC;gBACtC,OAAO,iBAAiB,CAAC,aAAa,CAAC;aAC1C;SACJ;QACD,IAAI,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAC9C;YACI,YAAY,EAAE,iBAAiB,CAAC,YAAY;YAC5C,aAAa,EAAE,iBAAiB,CAAC,aAAa;SACjD,CAAC,CAAC;QACP,KAAK,CAAC,SAAS,CAAC,UAAU,EACtB,CAAC,OAAO;YACJ,iBAAiB,GAAG,iBAAiB,IAAI,EAAE,CAAC;YAC5C,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE;gBACtB,iBAAiB,EAAE,iBAAiB,CAAC,gBAAgB;aACxD,CAAC,CAAC;YACH,OAAO,OAAO,CAAC;SAClB,CAAC,CAAC;QACP,IAAI,iBAAiB,CAAC,SAAS,EAAE;YAC7B,MAAM,mBAAmB,GAAsC;gBAC3D,IAAI,EAAE,kBAAkB;gBACxB,UAAU;aACb,CAAC;YACF,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;YACvC,UAAU,GAAG,mBAAmB,CAAC,UAAU,CAAC;SAC/C;QACD,OAAO,UAAU,CAAC,IAAI,CAClB,GAAG,CAAC,MAAM,IAAI,CAAC,EACf,UAAU,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;KAChD;IAED,MAAM,CAAC,iBAAmD,EAAE,KAAmB;QAC3E,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;QACvB,OAAO,IAAI,CAAC,KAAK,CAAC,sBAAsB,CAAC;QACzC,OAAO,IAAI,CAAC,QAAQ,CAAC,iBAAiB,EAAE,KAAK,CAAC,CAAC;KAClD;IAED,UAAU,CAAC,IAAa;;;;QAIpB,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;YACpC,OAAO,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;SACjC;QACD,OAAO,IAAI,CAAC,MAAM,CACd;YACI,IAAI;YACJ,gBAAgB,EAAE,IAAI;SACzB,EACD,IAAI,CAAC,cAAc,CAAC;YAChB,IAAI;YACJ,MAAM,EAAE;gBACJ,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI;gBACrB,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK;gBACvB,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI;aAChD;SACJ,CAAC,CAAC,CAAC;KACX;IAED,YAAY,CAAC,IAAY;;QAErB,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,QAAQ,CAAC,CAAC;QACtE,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,EACxB,IAAI,CAAC,cAAc,CAAC;YAChB,IAAI;YACJ,MAAM,EAAE;gBACJ,IAAI,EAAE,IAAI;gBACV,OAAO,EAAE,QAAQ;gBACjB,gBAAgB,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,GAAG,IAAI;aAC5D;SACJ,CAAC,CAAC,CAAC;KACX;IAED,QAAQ,CAAC,IAAY;QACjB,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;QACvB,OAAO,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,IAAI,CAAC,cAAc,CAAC;YAChD,IAAI;YACJ,MAAM,EAAE;gBACJ,IAAI,EAAE,IAAI;gBACV,gBAAgB,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,GAAG,IAAI;aAC5D;SACJ,CAAC,CAAC,CAAC;KACP;;;;IAKD,QAAQ;QACJ,IAAG,CAAC,IAAI,CAAC,gBAAgB,EAAE;YACvB,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC;YACxC,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,SAAS,IAAI,CAAC,GAAG,CAAC,CAAC;YACzC,IAAI,IAAI,IAAI,IAAI,CAAC,SAAS,EAAE;gBACxB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;gBAC7B,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;gBAEvB,MAAM,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC;oBACpC,IAAI;oBACJ,MAAM,EAAE;wBACJ,IAAI,EAAE,IAAI;wBACV,gBAAgB,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,GAAG,IAAI;qBAC5D;iBACJ,CAAC,CAAA;gBAEF,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,WAAW,CAAC;qBACvC,SAAS,CAAC,OAAO;;oBACd,IAAG,IAAI,CAAC,OAAO,IAAI,OAAO,EAAE;wBACxB,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,CAAC,GAAG,OAAA,IAAI,CAAC,OAAO,0CAAE,OAAO,KAAI,EAAE,EAAE,GAAG,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;wBAClF,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;qBAC1C;oBACD,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;iBACjC,CAAC,CAAC;aACN;SACJ;KACJ;;;;IAKD,OAAO;QACH,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC;QAC1C,QAAQ,IAAI,GAAG,IAAI,CAAC,SAAS,EAAE;KAClC;IAED,UAAU,CAAC,IAAY,EAAE,OAA4B,EAAE,IAAoB;QACvE,IAAI,OAAO,KAAK,QAAQ,EAAE;YACtB,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;SAC1B;aACI;YACD,MAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;YACrD,IAAI,YAAY,EAAE;gBACd,YAAY,CAAC,UAAU,GAAG,SAAS,GAAG,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;aACjE;SACJ;QACD,IAAI,CAAC,KAAK,CAAC,sBAAsB,GAAG,SAAS,CAAC;QAC9C,OAAO,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,IAAI,CAAC,cAAc,CAAC;YAChD,IAAI,EAAE,IAAI,KAAK,cAAc,CAAC,QAAQ;YACtC,MAAM,EAAE;gBACJ,IAAI,EAAE,IAAI;aACb;SACJ,CAAC,CAAC,CAAC;KACP;IAED,mBAAmB;QACf,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;YACtC,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,IAAI,MAAM,CAAC,EAAE,CAAC,CAAC;SACxD;QACD,OAAO,EAAE,CAAC;KACb;IAED,eAAe,CAAC,EAAU;QACtB,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;YACtC,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,IAAI,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;SACvE;QACD,OAAO,SAAS,CAAC;KACpB;IAED,cAAc,CAAC,KAAa,EAAE,KAA8B,EAAE,OAAwC;QAClG,IAAI,KAAK,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE;YACtD,IAAI,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,GAAG,CAAC,CAAC;YACtE,IAAI,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,GAAG,EAAE;gBACd,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;aAC7C;YACD,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,SAAS,CAAC,CAAC;YAC/C,OAAO,IAAI,CAAC;SACf;QACD,OAAO,KAAK,CAAC;KAChB;IAGD,IAAI,cAAc;QACd,IAAI,IAAI,CAAC,WAAW,EAAE;YAClB,MAAM,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;YACzD,IAAI,UAAU,EAAE;gBACZ,OAAO,UAAU,CAAC,QAAQ,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;aAC1D;SACJ;QACD,OAAO,EAAE,CAAC;KACb;IAED,IAAI,YAAY;;QACZ,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACnB,OAAO,KAAK,CAAC;SAChB;QACD,UAAI,IAAI,CAAC,WAAW,CAAC,QAAQ,0CAAE,YAAY,EAAE;YACzC,OAAO,IAAI,CAAC;SACf;QACD,MAAM,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;QACzD,OAAO,CAAA,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,YAAY,KAAI,KAAK,CAAC;KAC5C;IAED,SAAS,CAAC,GAAiB,EAAE,UAA2C,EAAE;QACtE,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC;QACzB,MAAM,OAAO,GAAG,OAAO,GAAG,KAAK,QAAQ,GAAG,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC;QACzD,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,OAAO,CAAC;QACzB,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;QAC1B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,mBAAmB,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAC,CAAC,CAAC;QAClE,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,EACtB,IAAI,CAAC,cAAc,CAAC;YAChB,IAAI;YACJ,MAAM,EAAE;gBACJ,GAAG,EAAE,OAAO;gBACZ,gBAAgB,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,GAAG,IAAI;aAC5D;SACJ,CAAC,CAAC,CAAC;KACX;IAED,WAAW,CAAC,KAAa;QACrB,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;KAC5B;IAED,MAAM,CAAC,OAAe;QAClB,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;YACnC,KAAK,MAAM,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;gBACjC,IAAI,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,OAAO,CAAC,EAAE;oBACjC,OAAO,GAAG,CAAC;iBACd;aACJ;SACJ;QACD,OAAO,SAAS,CAAC;KACpB;IAED,aAAa;QACT,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE;YAClC,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;SACxC;QACD,OAAO,SAAS,CAAC;KACpB;IAED,0BAA0B,CAAC,MAAc,EAAE,QAAiB;;QACxD,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;QACzH,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,wBAAwB,EAAE,MAAM,EAAE,CAAC,CAAC;QAC9D,MAAM,SAAS,GAAG,aAAA,IAAI,CAAC,OAAO,0CAAE,aAAa,0CAAE,aAAa,YACrD,IAAI,CAAC,KAAK,0CAAE,gBAAgB,CAAA;4BAC5B,IAAI,CAAC,UAAU,0CAAE,OAAO,0CAAE,gBAAgB,CAAA,CAAC;QAClD,IAAI,CAAC,YAAY,CAAC,cAAc,4CAE5B,MAAM,EACN,OAAO,IAAI,QAAQ,IAAI,EAAE,EACzB;YACI,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI;YACrB,SAAS;SACZ,EACD;YACI,SAAS,EAAE,OAAO,GAAG,OAAO,CAAC,YAAY,GAAG,SAAS;YACrD,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI;YAC1B,SAAS,EAAE,SAAS;SACvB,CACJ,CAAC;KACL;IAED,iBAAiB,CAAC,aAAwB;QACtC,MAAM,YAAY,GAAoC,EAAC,IAAI,EAAE,eAAe,EAAC,CAAC;QAC9E,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAChC,IAAI,aAAa,IAAI,YAAY,CAAC,aAAa,EAAE;YAC7C,aAAa,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,YAAY,CAAC,aAAa,CAAC,CAAC;SAC7D;QACD,OAAO,CAAC,YAAY,CAAC,MAAM,CAAC;KAC/B;;0EAp2BQ,aAAa,WAgBE,cAAc;kDAhB7B,aAAa,WAAb,aAAa,mBAFV,MAAM;+CAET,aAAa;cAHzB,UAAU;eAAC;gBACR,UAAU,EAAE,MAAM;aACrB;;sBAiBQ,QAAQ;;sBAAI,MAAM;uBAAC,cAAc;;AAu1B1C,WAAc,aAAa;IA4HV,6BAAe,GAAG,EAAE,CAAC;AACtC,CAAC,EA7Ha,aAAa,KAAb,aAAa;;MCv3Bd,kBAAkB,GAAG,IAAI,cAAc,CAAmB,oBAAoB,EAAE;MAKhF,gBAAgB;IAIzB,YACsD,OAAyB,EACjE,aAA4B,EAC5B,MAAc;QAF0B,YAAO,GAAP,OAAO,CAAkB;QACjE,kBAAa,GAAb,aAAa,CAAe;QAC5B,WAAM,GAAN,MAAM,CAAQ;QAExB,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACf,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;SACrB;QACD,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,SAAS,CACzD,CAAC,KAAK;YACF,IAAI,KAAK,CAAC,IAAI,KAAK,OAAO,EAAE;gBACxB,IAAI,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;oBACpC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,EAAE,EAC/B,CAAC,OAAO;wBACJ,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;qBAC1C,CAAC,CAAC;iBACV;aACJ;SACJ,CACJ,CAAC;KACL;IAED,WAAW;QACP,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,CAAC;KACzC;;;;;IAMD,IAAI,WAAW;QACX,OAAO,IAAI,CAAC,sBAAsB,CAAC;KACtC;IAED,IAAI,sBAAsB;QACtB,OAAO,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,KAAK,IAAI,CAAC,SAAS,CAAC;KACxF;IAED,iBAAiB,CAAC,IAAa;QAC3B,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,EAAE;YAC/C,IAAI,CAAC,IAAI,EAAE;gBACP,MAAM,GAAG,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;gBAC3C,IAAI,GAAG,GAAG,CAAC,QAAQ,CAAC;aACvB;YACD,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAAE;gBAChD,IAAI,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,KAAK,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,EAAE;oBAChD,OAAO,IAAI,CAAC;iBACf;aACJ;YACD,OAAO,KAAK,CAAC;SAChB;aACI;YACD,OAAO,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC;SAC3C;KACJ;IAED,YAAY;QACR,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,OAAO,EAAE,CAAU,IAAI,CAAC,SAAS,CAAC,CAAC;SACtC;QACD,MAAM,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC;QAC7C,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC;QACzB,MAAM,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,KAAK,EAAE;YACpD,IAAI;SACP,EAAE;YACC,cAAc,EAAE,IAAI;SACvB,CAAC,CAAC;QACH,KAAK,CAAC,SAAS,CAAC,UAAU,EACtB,CAAC,OAAO;YACJ,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC;YACzB,OAAO,OAAO,CAAC;SAClB,CAAC,CAAC;QACP,OAAO,UAAU,CAAC;KACrB;;gFA7EQ,gBAAgB,WAKD,kBAAkB;qDALjC,gBAAgB,WAAhB,gBAAgB,mBAFb,MAAM;+CAET,gBAAgB;cAH5B,UAAU;eAAC;gBACR,UAAU,EAAE,MAAM;aACrB;;sBAMQ,QAAQ;;sBAAI,MAAM;uBAAC,kBAAkB;;;;;;ICf/BA,yBAA8I;IAA7GC,wOAA0B;;IAAmFC,cAAI;;;;IAAtFC,8HAAiF;;;IAC7IC,wBAAmH;;;;;IAAzFD,8HAAiF;;;;IAC9GH,6BAA+I;IAAhFC,iPAA0B;;IAAsDC,cAAO;;IAA5DG,+EAAoD;;;IAHlJL,uBAA2I;IACpIM,2EAAkJ;IAClJA,iFAAmH;IACtHA,iFAAsJ;IAC1JJ,cAAK;;;;IAJoBK,oJAAiH;IAC/HC,YAAkB;IAAlBL,mCAAkB;IACfK,YAAiB;IAAjBL,kCAAiB;IACpBK,YAAmB;IAAnBL,wCAAmB;;;IAJlCM,0BACI;IAAAH,wEAIK;IACTI,uBAAe;;;IALNF,YAAkB;IAAlBL,mCAAkB;;MCKlB,aAAa;IAKtB,YACW,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;QAJ9B,kBAAa,GAAY,IAAI,CAAC;QAC9B,sBAAiB,GAAY,IAAI,CAAC;KAI1C;IAED,QAAQ,CAAC,IAAqB;QAC1B,IAAI,IAAI,CAAC,IAAI,EAAE;YACX,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;gBACjB,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;aAC1B;iBACI;gBACD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;oBACzB,OAAO,MAAM,CAAC;iBACjB;qBACI;oBACD,MAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC;oBACrC,OAAO,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBAC3B;aACJ;SACJ;QACD,OAAO,SAAS,CAAC;KACpB;IAED,IAAI;QACA,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;QAC1B,OAAO,KAAK,CAAC;KAChB;IAED,UAAU,CAAC,IAAqB;QAC5B,IAAI,CAAC,aAAa,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;QAC/C,OAAO,KAAK,CAAC;KAChB;IAED,UAAU,CAAC,IAAqB;QAC5B,IAAI,CAAC,aAAa,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;KAClD;;0EAvCQ,aAAa;+CAAb,aAAa;QDV1BH,0BACI;QAAAA,0BACI;QAAAA,yBAA0C;QAA9BC,kFAAS,UAAM,IAAC;QAAcG,uBAAiC;QAAAF,cAAI;QACnFA,cAAK;QACLI,6EAMe;QACnBJ,cAAK;;QAP8BM,YAAmC;QAAnCL,yGAAmC;;+CCMzD,aAAa;cALzB,SAAS;eAAC;gBACP,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,oBAAoB;gBACjC,SAAS,EAAE,CAAC,mBAAmB,CAAC;aACnC;6DAEY,OAAO;kBAAf,KAAK;YACG,aAAa;kBAArB,KAAK;YACG,iBAAiB;kBAAzB,KAAK;;;;;ICZNM,0BACI;IAAAE,SAAuD;;IAAAX,yBAA0E;IAA5BC,uLAA2B;IAACU,SAAkB;IAAAT,cAAI;IAAAS,SAC3J;;IAAAD,uBAAe;;;IADXF,YAAuD;IAAvDI,uFAAuD;IAA0EJ,YAAkB;IAAlBK,wCAAkB;IAAIL,YAC3J;IAD2JI,sFAC3J;;;;IACAH,0BACI;IAAAE,SAAuD;;IAAAX,yBAA0E;IAA5BC,uLAA2B;IAACU,SAAkB;IAAAT,cAAI;IAAAS,SAAsD;;IAAAX,yBAAwE;IAA3BC,sLAA0B;IAACU,SAAiB;IAAAT,cAAI;IAAAS,SAC9S;;IAAAD,uBAAe;;;IADXF,YAAuD;IAAvDI,uFAAuD;IAA0EJ,YAAkB;IAAlBK,wCAAkB;IAAIL,YAAsD;IAAtDK,4EAAsD;IAAwEL,YAAiB;IAAjBK,uCAAiB;IAAIL,YAC9S;IAD8SI,sFAC9S;;;;IACAH,0BACI;IAAAE,SAAoD;;IAAAX,yBAAwE;IAA3BC,uLAA0B;IAACU,SAAiB;IAAAT,cAAI;IAAAS,SAAqD;;IAAAX,yBAAyE;IAA5BC,0LAA2B;IAACU,SAAkB;IAAAT,cAAI;IAAAS,SACzS;;IAAAD,uBAAe;;;IADXF,YAAoD;IAApDI,oFAAoD;IAAwEJ,YAAiB;IAAjBK,uCAAiB;IAAIL,YAAqD;IAArDK,2EAAqD;IAAyEL,YAAkB;IAAlBK,wCAAkB;IAAIL,YACzS;IADySI,qFACzS;;;IATJZ,2BACI;IAAAM,kFAEe;IACfA,oFAEe;IACfA,oFAEe;IACnBJ,cAAM;;;IAVcY,8EAAmD;IAACX,wEAAsD;IAC3GK,YAAuB;IAAvBL,qCAAuB;IAGvBK,YAAuB;IAAvBL,qCAAuB;IAGvBK,YAAqB;IAArBL,mCAAqB;;MCG3B,YAAY;IAKrB,YACW,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;QAJ9B,YAAO,GAAwB,QAAQ,CAAC;KAKhD;IAEO,aAAa;QACjB,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;QACtB,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE;YACzC,IAAI,IAAI,CAAC,OAAO,KAAK,QAAQ,EAAE;gBAC3B,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC;gBAC1C,IAAI,IAAI,IAAI,IAAI,CAAC,SAAS,EAAE;oBACxB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;iBACpB;aACJ;iBACI;gBACD,MAAM,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;gBACnE,IAAI,YAAY,IAAI,KAAK,CAAC,UAAU,CAAC,YAAY,CAAC,UAAU,EAAE,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,MAAM,EAAE;oBAC1G,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;oBAC1F,IAAI,OAAO,CAAC,SAAS,EAAE;wBACnB,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC;qBACvB;iBACJ;aACJ;SACJ;KACJ;IAED,WAAW,CAAC,OAAsB;QAC9B,IAAI,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;YACtB,IAAI,CAAC,aAAa,EAAE,CAAC;SACxB;KACJ;IAED,cAAc;QACV,IAAI,IAAI,CAAC,IAAI,EAAE;YACX,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,EAAE,cAAc,CAAC,QAAQ,CAAC,CAAC;SAC5F;QACD,OAAO,KAAK,CAAC;KAChB;IAED,eAAe;QACX,IAAI,IAAI,CAAC,IAAI,EAAE;YACX,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,EAAE,cAAc,CAAC,SAAS,CAAC,CAAC;SAC9F;QACD,OAAO,KAAK,CAAC;KAChB;;wEAhDQ,YAAY;8CAAZ,YAAY;QDVzBG,0DAUM;;QAVAH,8BAAY;;+CCUL,YAAY;cALxB,SAAS;eAAC;gBACP,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,qBAAqB;gBAClC,SAAS,EAAE,CAAC,oBAAoB,CAAC;aACpC;6DAEY,OAAO;kBAAf,KAAK;YACG,OAAO;kBAAf,KAAK;;;;;;ICZVH,2BACI;IAAAI,sBAKa;IACjBF,cAAM;;;IALEM,YAIE;IAJFL,iIAIE;;ACDV;AAEA;AAEA;;;;MAQa,kBAAkB;IAa3B,YACY,UAAsB,EACtB,aAA4B;QAD5B,eAAU,GAAV,UAAU,CAAY;QACtB,kBAAa,GAAb,aAAa,CAAe;;QAZ/B,sBAAiB,GAAY,IAAI,CAAC;KAatC;IAEL,WAAW,CAAC,OAAsB;QAC9B,IAAI,CAAC,oBAAoB,EAAE,CAAC;KAC/B;;;;;;;IASD,IAAY,cAAc;QACtB,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC,CAAC;KACzE;IAED,IAAY,eAAe;;;QAGvB,IAAI,GAAG,GAAG,IAAI,CAAC,cAAc,CAAC;QAC9B,IAAI,CAAC,GAAG,EAAE;YACN,GAAG,GAAG,aAAa,CAAC,eAAe,CAAC;SACvC;;QAGD,OAAO,GAAG,CAAC;KACd;IAEO,qBAAqB;QACzB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;QACpE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;QAC1C,MAAM,QAAQ,GAAa,EAAE,CAAC;QAE9B,QAAQ,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC;YACrB,IAAI,EAAE,sCAAsC;YAC5C,aAAa,EAAE,EAAE,MAAM,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,eAAe,EAAE,EAAE;YACzD,IAAI,EAAE,SAAS;YACf,MAAM,EAAE,CAAC,IAAY,EAAE,KAAY;gBAC/B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAClC;SACJ,CAAC,CAAC,CAAC;QAEJ,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,cAAc,EAAE;YACpC,QAAQ,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC;gBACrB,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE;gBACrB,IAAI,EAAE,IAAI;gBACV,MAAM,EAAE,CAAC,IAAY,EAAE,KAAY;oBAC/B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBAClC;aACJ,CAAC,CAAC,CAAC;SACP;QAED,OAAO,IAAI,MAAM,CAAC;YACd,IAAI,EAAE,qBAAqB;YAC3B,IAAI,EAAE,qCAAqC;YAC3C,QAAQ,EAAE,QAAQ;SACrB,CAAC,CAAC;KACN;IAEO,oBAAoB;QACxB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,qBAAqB,EAAE,CAAC;QACrD,IAAI,IAAI,CAAC,OAAO,EAAE;;;YAGd,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;SAC7C;KACJ;IAEO,cAAc,CAAC,IAAY;;QAC/B,IAAI,CAAC,IAAI,EAAE;YACP,IAAI,CAAC,gBAAgB,CAAC,IAAI,GAAG,4CAA4C,CAAC;YAC1E,IAAI,CAAC,gBAAgB,CAAC,aAAa,GAAG,EAAE,MAAM,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,eAAe,EAAE,EAAE,CAAC;SACpF;aACI;YACD,MAAM,cAAc,SAAG,IAAI,CAAC,gBAAgB,CAAC,QAAQ,0CAAE,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC;YAC5F,IAAI,CAAC,gBAAgB,CAAC,IAAI,GAAG,qCAAqC,CAAC;YACnE,IAAI,CAAC,gBAAgB,CAAC,aAAa,GAAG,EAAE,MAAM,EAAE,EAAE,IAAI,EAAE,cAAc,aAAd,cAAc,uBAAd,cAAc,CAAE,IAAI,EAAE,EAAE,CAAC;SACpF;KACJ;IAEO,cAAc,CAAC,IAAY;QAC/B,IAAI,IAAI,CAAC,eAAe,KAAK,IAAI,EAAE;;YAE/B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;YAE5B,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC;YACzC,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC;SAC/B;QAED,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;KAC7B;;oFA3GQ,kBAAkB;oDAAlB,kBAAkB;QDjB/BG,gEAOM;;QAPoBH,iCAAe;;+CCiB5B,kBAAkB;cAJ9B,SAAS;eAAC;gBACP,QAAQ,EAAE,uBAAuB;gBACjC,WAAW,EAAE,2BAA2B;aAC3C;mFAEY,OAAO;kBAAf,KAAK;YAEG,iBAAiB;kBAAzB,KAAK;YACG,mBAAmB;kBAA3B,KAAK;YACG,SAAS;kBAAjB,KAAK;YACG,YAAY;kBAApB,KAAK;;;;;;;;ICtBNH,0BAKI;IADAC,4MAA6B;;IAC7BD,yBACI;IAAAA,yBAAM;IAAAW,SAA2B;;IAAAT,cAAO;IAC5CA,cAAI;IACRA,cAAK;;;IAPDG,qIAAgE;IAEhEF,2IAA0J;IAGhJK,YAA2B;IAA3BK,qDAA2B;;;IAP7Cb,0BACI;IAAAM,yDAQK;IACTJ,cAAK;;;IAToBM,YAAQ;IAARL,mCAAQ;;MCQpB,OAAO;IAmBhB,YACY,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;QAlB/B,mBAAc,GAAY,IAAI,CAAC;QAC/B,kBAAa,GAAY,IAAI,CAAC;QAC9B,cAAS,GAAY,IAAI,CAAC;QAC1B,aAAQ,GAAW,CAAC,CAAC;QACrB,UAAK,GAAW,CAAC,CAAC;QAK3B,cAAS,GAAW,CAAC,CAAC;KAUrB;IAED,WAAW,CAAC,OAAsB;QAC9B,IAAI,OAAO,CAAC,SAAS,CAAC,EAAE;YACpB,IAAI,CAAC,SAAS,EAAE,CAAC;SACpB;KACJ;IAED,SAAS;QACL,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC;QAC9C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;QAC3C,IAAI,IAAI,CAAC,SAAS,KAAK,CAAC,EAAE;YACtB,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;YACvB,OAAO;SACV;QACD,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC7B,IAAI,CAAC,QAAQ,IAAI,QAAQ,IAAI,CAAC,EAAE;YAC5B,QAAQ,GAAG,CAAC,CAAC;SAChB;QAED,MAAM,QAAQ,GAAG,QAAQ,GAAG,CAAC,CAAC;QAE9B,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACvB,IAAI,CAAC,KAAK,EAAE;YACR,KAAK,GAAG,CAAC,GAAG,QAAQ,GAAG,CAAC,CAAC;SAC5B;QACD,IAAI,KAAK,GAAG,CAAC,GAAG,QAAQ,GAAG,CAAC,EAAE;YAC1B,KAAK,GAAG,CAAC,GAAG,QAAQ,GAAG,CAAC,CAAC;SAC5B;QACD,IAAI,MAAM,GAAG,CAAC,CAAC,EAAE,MAAM,GAAG,CAAC,CAAC,CAAC;QAC7B,IAAI,IAAI,CAAC,SAAS,IAAI,KAAK,EAAE;YACzB,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC;SAC1B;aACI;;YAED,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACtC,MAAM,GAAG,GAAG,KAAK,GAAG,QAAQ,GAAG,CAAC,CAAC;YACjC,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;YAClC,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,KAAK,IAAI,QAAQ,GAAG,CAAC,GAAG,CAAC,EAAE;gBAC/C,MAAM,GAAG,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;aACrC;YACD,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,KAAK,KAAK,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,EAAE;gBAC1D,MAAM,GAAG,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;aACrC;YACD,IAAI,MAAM,KAAK,CAAC,CAAC,IAAI,MAAM,KAAK,CAAC,CAAC,EAAE;gBAChC,MAAM,IAAI,QAAQ,GAAG,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,CAAC;aAC3D;iBACI,IAAI,MAAM,KAAK,CAAC,CAAC,IAAI,MAAM,KAAK,CAAC,CAAC,EAAG;gBACtC,MAAM,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,KAAK,KAAK,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,CAAC;aACtE;SACJ;QACD,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,IAAI,CAAC,cAAc,EAAE;YACrB,IAAI,IAAI,CAAC,aAAa,EAAE;gBACpB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,WAAW,EAAE,OAAO,CAAC,UAAU,EAAE,qBAAqB,CAAC,CAAC,CAAC;aACrG;YACD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,CAAC,GAAG,IAAI,CAAC,WAAW,GAAG,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,WAAW,EAAE,OAAO,CAAC,aAAa,EAAE,wBAAwB,CAAC,CAAC,CAAC;SACzJ;QACD,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,MAAM,KAAK,CAAC,CAAC,GAAG,QAAQ,GAAG,MAAM,KAAK,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,EAAE;gBACnG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;aAC1D;YACD,IAAI,MAAM,KAAK,CAAC,CAAC,EAAE;gBACf,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,WAAW,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACzE,KAAK,IAAI,CAAC,GAAG,MAAM,EAAE,EAAE,GAAG,MAAM,KAAK,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,EAAE;oBAC7E,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;iBAC1D;aACJ;YACD,IAAI,MAAM,KAAK,CAAC,CAAC,EAAE;gBACf,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,WAAW,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACzE,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,GAAG,QAAQ,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,EAAE;oBAC3E,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;iBAC1D;aACJ;SACJ;QACD,IAAI,IAAI,CAAC,cAAc,EAAE;YACrB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,WAAW,EAAE,OAAO,CAAC,SAAS,EAAE,oBAAoB,CAAC,CAAC,CAAC;YACxK,IAAI,IAAI,CAAC,aAAa,EAAE;gBACpB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,WAAW,EAAE,OAAO,CAAC,SAAS,EAAE,oBAAoB,CAAC,CAAC,CAAC;aAChH;SACJ;KACJ;IAED,QAAQ,CAAC,IAAY;QACjB,IAAI,IAAI,KAAK,IAAI,CAAC,WAAW,IAAI,IAAI,GAAG,CAAC,EAAE;YACvC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;SACrC;KACJ;;AA/FM,kBAAU,GAAG,GAAG,CAAC;AACjB,qBAAa,GAAG,GAAG,CAAC;AACpB,iBAAS,GAAG,GAAG,CAAC;AAChB,iBAAS,GAAG,GAAG,CAAC;AAChB,gBAAQ,GAAG,GAAG,CAAC;8DAjBb,OAAO;yCAAP,OAAO;QDTpBG,mDAUK;;QAVwBH,qCAAmB;;+CCSnC,OAAO;cAJnB,SAAS;eAAC;gBACP,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,cAAc;aAC9B;6DAEY,OAAO;kBAAf,KAAK;YACG,cAAc;kBAAtB,KAAK;YACG,aAAa;kBAArB,KAAK;YACG,SAAS;kBAAjB,KAAK;YACG,QAAQ;kBAAhB,KAAK;YACG,KAAK;kBAAb,KAAK;;AAyGV,WAAiB,OAAO;IACpB,MAAa,IAAI;QACb,YACW,IAAY,EACZ,WAAmB,EACnB,OAAyB,EACzB,KAAc;YAHd,SAAI,GAAJ,IAAI,CAAQ;YACZ,gBAAW,GAAX,WAAW,CAAQ;YACnB,YAAO,GAAP,OAAO,CAAkB;YACzB,UAAK,GAAL,KAAK,CAAS;YACrB,IAAI,OAAO,EAAE;gBACT,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;aAC1B;iBACI;gBACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;aACvB;YACD,IAAI,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,IAAI,EAAE;gBAClC,IAAI,CAAC,KAAK,GAAG,2BAA2B,CAAC;aAC5C;SACJ;QAED,IAAI,MAAM;YACN,OAAO,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,WAAW,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC;SAC1D;QAED,IAAI,QAAQ;YACR,OAAO,IAAI,CAAC,UAAU,KAAK,CAAC,IAAI,CAAC,WAAW,KAAK,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,YAAY,CAAC,CAAC;SACrF;QAED,IAAI,YAAY;YACZ,OAAO,IAAI,CAAC,OAAO,KAAK,OAAO,CAAC,UAAU;gBACtC,IAAI,CAAC,OAAO,KAAK,OAAO,CAAC,aAAa;gBACtC,IAAI,CAAC,OAAO,KAAK,OAAO,CAAC,SAAS;gBAClC,IAAI,CAAC,OAAO,KAAK,OAAO,CAAC,SAAS,CAAC;SAC1C;QAED,IAAI,MAAM;YACN,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC;SAC5C;QAED,IAAI,UAAU;YACV,OAAO,IAAI,CAAC,OAAO,KAAK,OAAO,CAAC,QAAQ,CAAC;SAC5C;KACJ;IAvCY,YAAI,OAuChB,CAAA;AACL,CAAC,EAzCgB,OAAO,KAAP,OAAO;;;;MC7GX,cAAc;IAOvB,YACW,UAAsB,EACtB,aAA4B;QAD5B,eAAU,GAAV,UAAU,CAAY;QACtB,kBAAa,GAAb,aAAa,CAAe;KACtC;IAED,WAAW,CAAC,OAAsB;QAC9B,IAAI,OAAO,CAAC,SAAS,CAAC,EAAE;YACpB,IAAI,CAAC,eAAe,EAAE,CAAC;SAC1B;KACJ;IAEO,cAAc,CAAC,IAAY;QAC/B,IAAI,IAAI,CAAC,UAAU,EAAE;YACjB,MAAM,cAAc,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;YAChD,MAAM,OAAO,GAAG,cAAc,IAAI,cAAc,CAAC,IAAI,CAAC,CAAC,KAAK;gBACxD,OAAO,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACvC,CAAC,CAAC;YACH,IAAI,OAAO,EAAE;gBACT,MAAM,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,OAAO,CAAC;gBACtD,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,CAAC,CAAC,YAAY,GAAG,4BAA4B,GAAG,OAAO,CAAC,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC;gBACvG,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,CAAC,CAAC,YAAY,GAAG,aAAa;sBAC/C,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,aAAa,CAAC,GAAG,uBAAuB;0BACrE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,aAAa,CAAC,GAAG,yBAAyB,GAAG,aAAa,CAAC;aAClG;iBACI;gBACD,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,4BAA4B,CAAC;gBACpD,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,aAAa,CAAC;aACxC;YACD,IAAI,CAAC,UAAU,CAAC,aAAa,GAAG,EAAC,MAAM,EAAE,EAAC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,EAAC,EAAC,CAAC;SAC1E;KACJ;IAEO,UAAU,CAAC,aAA8B;QAC7C,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QACxC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,GAAG,aAAa,CAAC,IAAI,CAAC;QACnD,MAAM,KAAK,GAAe;YACtB,IAAI;YACJ,MAAM,EAAE;gBACJ,IAAI,EAAE,aAAa,CAAC,IAAI;gBACxB,aAAa,EAAE,aAAa,CAAC,aAAa;aAC7C;SACJ,CAAC;QACF,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;KAC/C;IAEO,eAAe;QACnB,MAAM,cAAc,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAChD,IAAI,CAAC,cAAc,IAAI,cAAc,CAAC,MAAM,KAAK,CAAC,EAAE;YAChD,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;YAC5B,OAAO;SACV;QACD,IAAI,CAAC,UAAU,GAAG,IAAI,MAAM,CAAC;YACzB,KAAK,EAAE,8BAA8B;YACrC,QAAQ,EAAE,cAAc;iBACnB,MAAM,CAAC,aAAa,IAAI,IAAI,CAAC,aAAa,CAAC,YAAY,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,aAAa,EAAE,iBAAiB,CAAC,CAAC;iBAC3H,GAAG,CAAC,aAAa,IAAI,IAAI,MAAM,CAAC;gBAC7B,IAAI,EAAE,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,aAAa,CAAC,GAAG,uBAAuB;sBACvE,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,aAAa,CAAC,GAAG,yBAAyB,GAAG,EAAE;gBAC7F,IAAI,EAAE,aAAa,CAAC,OAAO,IAAI,aAAa,CAAC,IAAI;gBACjD,IAAI,EAAE,aAAa;gBACnB,MAAM,EAAE,CAAC,IAAY,EAAE,KAAY;oBAC/B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBAC9B;aACJ,CAAC,CAAC;SACV,CAAC,CAAC;QACH,IAAI,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE;YAC9B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;SACxD;KACJ;IAEO,eAAe,CAAC,aAAqB;QACzC,IAAI,CAAC,aAAa,EAAE;YAChB,OAAO,KAAK,CAAC;SAChB;QAED,MAAM,WAAW,GAAW,aAAa,CAAC,SAAS,CAAC,aAAa,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QACxF,OAAO,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;KACzC;IAEO,gBAAgB,CAAC,aAAqB;QAC1C,IAAI,CAAC,aAAa,EAAE;YAChB,OAAO,KAAK,CAAC;SAChB;QAED,MAAM,WAAW,GAAW,aAAa,CAAC,SAAS,CAAC,aAAa,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QACxF,OAAO,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;KAC1C;IAEO,WAAW;QACf,MAAM,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC;QACtC,IAAI,CAAC,KAAK;YACN,OAAO,KAAK,CAAC;QACjB,MAAM,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;QAClC,OAAO,EAAE,CAAC,SAAS,IAAI,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,SAAS,CAAC,QAAQ;YAC3D,CAAC,SAAS,CAAC,IAAI,IAAI,SAAS,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC;KACvD;IAEO,iBAAiB;QACrB,IAAI,IAAI,CAAC,WAAW,EAAE,EAAE;YACpB,MAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG,CAAC;YAC7E,IAAI,OAAO,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE;gBACpC,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,EAAE;oBACpD,IAAI,CAAC,CAAC,IAAI,KAAK,OAAO,EAAE;wBACpB,MAAM,CAAC,GAAG,CAAC,CAAC,cAAc,CAAC;wBAC3B,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,GAAG,CAAC;4BACjB,OAAO,CAAC,CAAC;;4BAET,MAAM;qBACb;iBACJ;aACJ;SACJ;QACD,MAAM,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC;QAClC,OAAO,CAAC,IAAI,CAAC,CAAC,cAAc,CAAC;KAChC;;4EAzHQ,cAAc;gDAAd,cAAc;QCX3BH,2BACI;QAAAI,sBAAsM;QAC1MF,cAAM;;QADqBM,YAAoD;QAApDL,uEAAoD,kIAAA;;+CDUlE,cAAc;cAJ1B,SAAS;eAAC;gBACP,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,sBAAsB;aACtC;mFAEY,OAAO;kBAAf,KAAK;YACG,YAAY;kBAApB,KAAK;YACG,KAAK;kBAAb,KAAK;YACG,IAAI;kBAAZ,KAAK;;;;;;IEbFH,0BACI;IAAAA,yBACI;IADgGC,mNAAwB;IACxHG,oBAAqC;IACrCO,SACA;;IAAAX,4BAAoB;IAAAW,SAA0B;;IAAAT,cAAO;IACzDA,cAAI;IACRA,cAAK;;;;IAL4BM,YAAsE;IAAtEL,gGAAsE;IAC5FK,YAA6B;IAA7BL,kDAA6B;IAChCK,YACA;IADAI,8EACA;IAAoBJ,YAA0B;IAA1BI,6DAA0B;;;IAL1DH,0BACI;IAAAH,uEAMK;IACTI,uBAAe;;;IAPSF,YAAa;IAAbL,wCAAa;;;IAazBH,4BAA2C;IAAAW,SAA0B;;IAAAT,cAAO;;;IAAjCM,YAA0B;IAA1BI,6DAA0B;;;;IAJ7EZ,0BACI;IAAAA,yBACI;IADgGC,mNAAwB,KAAK,KAAE;IAC/HG,oBAAqC;IACrCO,SACA;;IAAAL,+EAA4E;IAChFJ,cAAI;IACRA,cAAK;;;;IAL4BM,YAAsE;IAAtEL,gGAAsE;IAC5FK,YAA6B;IAA7BL,kDAA6B;IAChCK,YACA;IADAI,8EACA;IAAqBJ,YAAoB;IAApBL,qCAAoB;;;IALrDM,0BACI;IAAAH,sEAMK;IACTI,uBAAe;;;IAPSF,YAAa;IAAbL,wCAAa;;;IAXzCH,0BACI;IAAAM,2EAQe;IACfA,2EAQe;IACnBJ,cAAK;;;IAlBcM,YAAkB;IAAlBL,uCAAkB;IASlBK,YAAkB;IAAlBL,uCAAkB;;MCFxB,MAAM;IA4Bf,YACY,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;;;;QAX/B,YAAO,GAA4B,EAAE,CAAC;;;;QAKrC,WAAM,GAAG,IAAI,YAAY,EAAO,CAAC;KAO1C;IAED,MAAM;QACF,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;YACnC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,EAAE,CAAC;YACrD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;SACvC;aACI;YACD,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;YAC5B,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;SAC/B;KACJ;IAED,WAAW,CAAC,OAAsB;QAC9B,IAAI,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;YACtB,IAAI,CAAC,MAAM,EAAE,CAAC;SACjB;KACJ;IAED,SAAS,CAAC,GAAQ,EAAE,MAAM,GAAG,IAAI;QAC7B,IAAI,GAAG,KAAK,IAAI,CAAC,UAAU,EAAE;YACzB,IAAG,MAAM,EAAC;gBACN,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;aACrC;iBAAM;gBACH,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;aACzB;YACD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACzB;QACD,OAAO,KAAK,CAAC;KAChB;;4DA3DQ,MAAM;wCAAN,MAAM;QDRnBG,kDAmBK;;QAnBAH,wDAAkC;;+CCQ1B,MAAM;cAJlB,SAAS;eAAC;gBACP,QAAQ,EAAE,SAAS;gBACnB,WAAW,EAAE,aAAa;aAC7B;6DAGY,OAAO;kBAAf,KAAK;YAWG,UAAU;kBAAlB,KAAK;YAKG,OAAO;kBAAf,KAAK;YAKI,MAAM;kBAAf,MAAM;;;;ICvBXH,2BACC;IAAAI,sBAAwB;IACvBA,sBAA+B;IAC/BA,sBAA+B;IACjCF,cAAM;;AATN;MAmDa,YAAY;IAOvB,YACS,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;KAChC;IAEL,QAAQ;QACN,OAAO,IAAI,CAAC,MAAM,KAAK,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC;KAClF;;wEAbU,YAAY;8CAAZ,YAAY;QA9CzBI,0DAIM;;QAJeH,kCAAgB;;+CA8CxB,YAAY;cAjDxB,SAAS;eAAC;gBACP,QAAQ,EAAE,gBAAgB;gBAC1B,QAAQ,EAAE;;;;;;KAMT;gBACD,MAAM,EAAE,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAsCR,CAAC;aACL;6DAMU,MAAM;kBAAd,KAAK;;;;MCpDO,UAAU;IAMvB,YAAoB,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;QALvC,YAAO,GAAG,EAAE,CAAC;KAK8B;IAEpD,eAAe;QACb,MAAM,OAAO,mBACX,IAAI,EAAE,IAAI,IACP,IAAI,CAAC,OAAO,CAChB,CAAC;QAEF,IAAI,CAAC,QAAQ,GAAG,IAAI,oBAAoB,CAAC,CAAC,CAAC,KAAK,CAAC;YAC/C,IAAG,KAAK,CAAC,cAAc,EAAE;gBACvB,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC;aAC/B;SACF,EAAE,OAAO,CAAC,CAAC;QAEZ,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;KAClD;IAED,WAAW;QACT,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC;KAC5B;;oEAzBY,UAAU;4CAAV,UAAU;;;;;;QAFVC,yBAAsC;;+CAEtC,UAAU;cAJtB,SAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,QAAQ,EAAE,wCAAwC;aACnD;6DAEQ,OAAO;kBAAf,KAAK;YACe,MAAM;kBAA1B,SAAS;mBAAC,QAAQ;;;;;;ICTrBA,sBAA0J;;;IAAnHD,qJAA4G;;MCUtI,UAAU;IAQrB,YAAoB,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;QAPvC,iBAAY,GAAG,iBAAiB,CAAC;QACjC,gBAAW,GAAG,IAAI,CAAA;QAEnB,iBAAY,GAAiB,IAAI,YAAY,EAAE,CAAC;QAExD,YAAO,GAAG,KAAK,CAAC;QAGd,IAAI,CAAC,cAAc,GAAG,IAAI,MAAM,CAAC;YAC/B,IAAI,EAAE,oBAAoB;YAC1B,KAAK,EAAE,oBAAoB;YAC3B,MAAM,EAAE,CAAC,MAAM;gBACb,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC;gBAC9B,MAAM,CAAC,MAAM,EAAE,CAAC;aACjB;YACD,OAAO,EAAC;;gBAEN,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;aACtB;SACF,CAAC,CAAC;KACJ;IAED,QAAQ;QACN,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa;aACjD,SAAS,CAAC,OAAO;YAChB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;SAC7C,CAAC,CAAC;KACN;IAED,WAAW;QACT,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;KACjC;;oEAhCU,UAAU;4CAAV,UAAU;QDVvBG,wDAA0J;;QAApJH,+BAAa;;+CCUN,UAAU;cAJtB,SAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,kBAAkB;aAChC;6DAEU,YAAY;kBAApB,KAAK;YACG,WAAW;kBAAnB,KAAK;;;MCkCK,cAAc;IACvB,OAAO,OAAO,CAAC,aAA4B;QACvC,OAAO;YACH,QAAQ,EAAE,cAAc;YACxB,SAAS,EAAE;;gBAEP,EAAC,OAAO,EAAE,cAAc,EAAE,QAAQ,EAAE,aAAa,EAAC;aACrD;SACJ,CAAC;KACL;;+CATQ,cAAc;wGAAd,cAAc,kBAxBd;YACL,YAAY;YACZ,WAAW,EAAE,mBAAmB;YAEhC,iBAAiB;YACjB,UAAU;YACV,WAAW;YAEX,WAAW;YACX,cAAc;SACjB;qFAcQ,cAAc,mBAZnB,YAAY;QACZ,aAAa,EAAE,OAAO,EAAE,kBAAkB,EAAE,cAAc;QAC1D,MAAM,EAAE,YAAY;QACpB,UAAU,EAAE,UAAU,aAdtB,YAAY;QACZ,WAAW,EAAE,mBAAmB;QAEhC,iBAAiB;QACjB,UAAU;QACV,WAAW;QAEX,WAAW;QACX,cAAc,aASd,YAAY;QACZ,aAAa,EAAE,OAAO,EAAE,kBAAkB,EAAE,cAAc;QAC1D,MAAM,EAAE,YAAY;QACpB,UAAU,EAAE,UAAU;+CAGjB,cAAc;cAzB1B,QAAQ;eAAC;gBACN,OAAO,EAAE;oBACL,YAAY;oBACZ,WAAW,EAAE,mBAAmB;oBAEhC,iBAAiB;oBACjB,UAAU;oBACV,WAAW;oBAEX,WAAW;oBACX,cAAc;iBACjB;gBACD,YAAY,EAAE;oBACV,YAAY;oBACZ,aAAa,EAAE,OAAO,EAAE,kBAAkB,EAAE,cAAc;oBAC1D,MAAM,EAAE,YAAY;oBACpB,UAAU,EAAE,UAAU;iBACzB;gBACD,OAAO,EAAE;oBACL,YAAY;oBACZ,aAAa,EAAE,OAAO,EAAE,kBAAkB,EAAE,cAAc;oBAC1D,MAAM,EAAE,YAAY;oBACpB,UAAU,EAAE,UAAU;iBACzB;aACJ;;;AC7CD,SAAe;IACX,QAAQ,EAAE;QACN,yBAAyB,EAAE,oDAAoD;QAC/E,iBAAiB,EAAE,kBAAkB;KACxC;IAED,aAAa,EAAE;QACX,aAAa,EAAE,gBAAgB;QAC/B,YAAY,EAAE,QAAQ;KACzB;IAED,YAAY,EAAE;QACV,wBAAwB,EAAE,gBAAgB;QAC1C,uBAAuB,EAAE,GAAG;QAC5B,wBAAwB,EAAE,uBAAuB;QACjD,uBAAuB,EAAE,wBAAwB;QACjD,sBAAsB,EAAE,EAAE;QAC1B,qBAAqB,EAAE,uBAAuB;QAC9C,sBAAsB,EAAE,OAAO;QAC/B,qBAAqB,EAAE,EAAE;KAC5B;IAED,kBAAkB,EAAE;QAChB,gBAAgB,EAAE,yBAAyB;QAC3C,iBAAiB,EAAE,0BAA0B;QAC7C,uBAAuB,EAAE,mCAAmC;KAC/D;IAED,OAAO,EAAE;QACL,iBAAiB,EAAE,qBAAqB;QACxC,WAAW,EAAE,YAAY;QACzB,UAAU,EAAE,WAAW;QACvB,cAAc,EAAE,eAAe;QAC/B,UAAU,EAAE,WAAW;KAC1B;IAED,cAAc,EAAE;QACZ,aAAa,EAAE,iBAAiB;QAChC,WAAW,EAAE,SAAS;KACzB;IAED,MAAM,EAAE;QACJ,WAAW,EAAE,WAAW;QACxB,MAAM,EAAE,MAAM;QACd,UAAU,EAAE,WAAW;QACvB,OAAO,EAAE,OAAO;KACnB;IAED,aAAa,EAAE;QACX,6BAA6B,EAAE,gFAAgF;KAClH;CACJ;;ACnDD,SAAe;IACX,QAAQ,EAAE;QACN,yBAAyB,EAAE,sEAAsE;QACjG,iBAAiB,EAAE,kBAAkB;KACxC;IAED,aAAa,EAAE;QACX,aAAa,EAAE,kBAAkB;QACjC,YAAY,EAAE,WAAW;KAC5B;IAED,YAAY,EAAE;QACV,wBAAwB,EAAE,mCAAmC;QAC7D,uBAAuB,EAAE,EAAE;QAC3B,wBAAwB,EAAE,mBAAmB;QAC7C,uBAAuB,EAAE,iCAAiC;QAC1D,sBAAsB,EAAE,EAAE;QAC1B,qBAAqB,EAAE,mBAAmB;QAC1C,sBAAsB,EAAE,MAAM;QAC9B,qBAAqB,EAAE,EAAE;KAC5B;IAED,kBAAkB,EAAE;QAChB,gBAAgB,EAAE,yBAAyB;QAC3C,iBAAiB,EAAE,yBAAyB;QAC5C,uBAAuB,EAAE,kCAAkC;KAC9D;IAED,OAAO,EAAE;QACL,iBAAiB,EAAE,qBAAqB;QACxC,WAAW,EAAE,eAAe;QAC5B,UAAU,EAAE,eAAe;QAC3B,cAAc,EAAE,iBAAiB;QACjC,UAAU,EAAE,eAAe;KAC9B;IAED,cAAc,EAAE;QACZ,aAAa,EAAE,mBAAmB;QAClC,WAAW,EAAE,SAAS;KACzB;IAED,MAAM,EAAE;QACJ,WAAW,EAAE,YAAY;QACzB,MAAM,EAAE,MAAM;QACd,UAAU,EAAE,gBAAgB;QAC5B,OAAO,EAAE,OAAO;KACnB;IAED,aAAa,EAAE;QACX,6BAA6B,EAAE,uHAAuH;KACzJ;CACJ;;ACnDD,SAAe;IACX,QAAQ,EAAE;QACN,yBAAyB,EAAE,sEAAsE;QACjG,iBAAiB,EAAE,oBAAoB;KAC1C;IAED,aAAa,EAAE;QACX,aAAa,EAAE,0BAA0B;QACzC,YAAY,EAAE,WAAW;KAC5B;IAED,YAAY,EAAE;QACV,wBAAwB,EAAE,eAAe;QACzC,uBAAuB,EAAE,GAAG;QAC5B,wBAAwB,EAAE,wBAAwB;QAClD,uBAAuB,EAAE,uCAAuC;QAChE,sBAAsB,EAAE,GAAG;QAC3B,qBAAqB,EAAE,wBAAwB;QAC/C,sBAAsB,EAAE,SAAS;QACjC,qBAAqB,EAAE,GAAG;KAC7B;IAED,kBAAkB,EAAE;QAChB,gBAAgB,EAAE,0BAA0B;QAC5C,iBAAiB,EAAE,2BAA2B;QAC9C,uBAAuB,EAAE,qCAAqC;KACjE;IAED,OAAO,EAAE;QACL,iBAAiB,EAAE,sBAAsB;QACzC,WAAW,EAAE,aAAa;QAC1B,UAAU,EAAE,eAAe;QAC3B,cAAc,EAAE,iBAAiB;QACjC,UAAU,EAAE,cAAc;KAC7B;IAED,cAAc,EAAE;QACZ,aAAa,EAAE,wBAAwB;QACvC,WAAW,EAAE,UAAU;KAC1B;IAED,MAAM,EAAE;QACJ,WAAW,EAAE,UAAU;QACvB,MAAM,EAAE,OAAO;QACf,UAAU,EAAE,WAAW;QACvB,OAAO,EAAE,OAAO;KACnB;IAED,aAAa,EAAE;QACX,6BAA6B,EAAE,sHAAsH;KACxJ;CACJ;;ACnDD;;;;;;"}