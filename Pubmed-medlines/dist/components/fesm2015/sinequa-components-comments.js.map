{"version":3,"file":"sinequa-components-comments.js","sources":["../../../projects/components/comments/comments.web.service.ts","../../../projects/components/comments/creation-date.pipe.ts","../../../projects/components/comments/markdown.pipe.ts","../../../projects/components/comments/comments.component.html","../../../projects/components/comments/comments.component.ts","../../../projects/components/comments/comments.module.ts","../../projects/components/comments/messages/en.ts","../../projects/components/comments/messages/fr.ts","../../projects/components/comments/messages/de.ts","../../../projects/components/comments/sinequa-components-comments.ts"],"sourcesContent":["import { Inject, Injectable } from \"@angular/core\";\r\nimport { HttpService, SqHttpClient, StartConfig, START_CONFIG } from \"@sinequa/core/web-services\";\r\nimport { Observable, of } from \"rxjs\";\r\nimport { pluck } from \"rxjs/operators\";\r\n\r\ndeclare interface CoreComment {\r\n    commentid: string;\r\n    docid: string;\r\n    replyto: string;\r\n    creation: string;\r\n    modified: string;\r\n    subcomments?: Comment[];\r\n}\r\n\r\nexport interface DeletedComment extends CoreComment{\r\n    deleted: true;\r\n}\r\n\r\nexport interface NormalComment extends CoreComment {\r\n    message: string;\r\n    userid: string;\r\n    username: string;\r\n    likes: number;\r\n    likedByUser: boolean;\r\n}\r\n\r\nexport type Comment = NormalComment | DeletedComment;\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class CommentsWebService extends HttpService {\r\n    protected endpoint = 'plugin/CommentsWebService';\r\n\r\n    constructor(\r\n        @Inject(START_CONFIG) startConfig: StartConfig,\r\n        protected httpClient: SqHttpClient) {\r\n        super(startConfig);\r\n    }\r\n\r\n    /**\r\n     * Return the list of comments for a given document\r\n     * @param docid \r\n     * @returns \r\n     */\r\n    getComments(docid: string): Observable<Comment[]> {\r\n        return this.httpClient.post<{comments: Comment[]}>(\r\n            this.makeUrl(this.endpoint), {docid, action: 'read'}\r\n        ).pipe(pluck('comments'));\r\n    }\r\n\r\n    /**\r\n     * Return the number of comments for a given document\r\n     * @param docid \r\n     * @returns \r\n     */\r\n    getCommentCount(docid: string): Observable<number> {\r\n        return this.httpClient.post<{count: number}>(\r\n            this.makeUrl(this.endpoint), {docid, action: 'count'}\r\n        ).pipe(pluck('count'));\r\n    }\r\n\r\n    /**\r\n     * Return the number of comments for a list of documents\r\n     * @param docids \r\n     * @returns \r\n     */\r\n    getCommentCounts(docids: string[]): Observable<{[id: string]: number}> {\r\n        if(docids.length === 0) {\r\n            return of({});\r\n        }\r\n        return this.httpClient.post<{counts: {[id: string]: number}}>(\r\n            this.makeUrl(this.endpoint), {docid: docids[0], docids, action: 'count'}\r\n        ).pipe(pluck('counts'));\r\n    }\r\n\r\n    /**\r\n     * Create a comment with given message for a given document\r\n     * @param docid \r\n     * @param message \r\n     * @param replyto \r\n     * @returns \r\n     */\r\n    createComment(docid: string, message: string, replyto?: string): Observable<NormalComment> {\r\n        return this.httpClient.post<{comment: NormalComment}>(\r\n            this.makeUrl(this.endpoint), {docid, message, replyto, action: 'create'}\r\n        ).pipe(pluck('comment'));\r\n    }\r\n\r\n    /**\r\n     * Modify the content of a comment\r\n     * @param docid \r\n     * @param commentid \r\n     * @param message \r\n     * @returns \r\n     */\r\n    updateComment(docid: string, commentid: string, message: string) {\r\n        return this.httpClient.post<{comment: NormalComment}>(\r\n            this.makeUrl(this.endpoint), {docid, commentid, message, action: 'update'}\r\n        ).pipe(pluck('comment'));\r\n    }\r\n\r\n    /**\r\n     * Delete a specific comment\r\n     * @param docid \r\n     * @param commentid \r\n     * @param markAsDeleted \r\n     * @returns \r\n     */\r\n    deleteComment(docid: string, commentid: string, markAsDeleted: boolean): Observable<void> {\r\n        return this.httpClient.post<void>(\r\n            this.makeUrl(this.endpoint), {docid, commentid, markAsDeleted, action: 'delete'}\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Add a like to a comment\r\n     * @param docid \r\n     * @param commentid \r\n     * @returns \r\n     */\r\n    likeComment(docid: string, commentid: string): Observable<NormalComment> {\r\n        return this.httpClient.post<{comment: NormalComment}>(\r\n            this.makeUrl(this.endpoint), {docid, commentid, action: 'like'}\r\n        ).pipe(pluck('comment'));\r\n    }\r\n}","import { Pipe, PipeTransform } from \"@angular/core\";\r\nimport { IntlService } from \"@sinequa/core/intl\";\r\nimport { Comment } from \"./comments.web.service\";\r\n\r\n@Pipe({\r\n    name: \"sqCreationDate\"\r\n})\r\nexport class CreationDatePipe implements PipeTransform {\r\n\r\n    constructor(\r\n        public intlService: IntlService\r\n    ){}\r\n\r\n    transform(comment: Comment): string {\r\n        const creation = this.intlService.formatDate(comment.creation) + \" \" + this.intlService.formatTime(comment.creation);\r\n        let msg = this.intlService.formatMessage(\"msg#comments.created\", {date: creation});\r\n        if(comment.modified !== comment.creation) {\r\n            const modified = this.intlService.formatDate(comment.modified) + \" \" + this.intlService.formatTime(comment.modified);\r\n            msg += \" - \" + this.intlService.formatMessage(\"msg#comments.modified\", {date: modified});\r\n        }\r\n        return msg;\r\n    }\r\n}","import { Pipe, PipeTransform } from \"@angular/core\";\r\nimport * as marked from \"marked\";\r\n\r\n@Pipe({\r\n  name: \"sqMarkdown\"\r\n})\r\nexport class MarkdownPipe implements PipeTransform {\r\n  transform(value: any): any {\r\n    if (value && value.length > 0) {\r\n      return marked(value);\r\n    }\r\n    return value;\r\n  }\r\n}","<div *ngIf=\"comments\" class=\"comments\" [ngClass]=\"theme\">\r\n    <ng-container *ngTemplateOutlet=\"commentsTpl; context:{$implicit: comments}\"></ng-container>\r\n\r\n    <div *ngIf=\"comments.length === 0\" class=\"font-italic text-center my-4\">\r\n        {{ 'msg#comments.noComment' | sqMessage }}\r\n    </div>\r\n\r\n    <div>\r\n        <button class=\"btn btn-primary d-block mx-auto mt-3\" (click)=\"addComment()\">\r\n            <i class=\"fas fa-comment\"></i>\r\n            {{ 'msg#comments.write' | sqMessage }}\r\n        </button>\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf=\"!comments\">\r\n    <div class=\"spinner-grow d-block mx-auto mt-4\" role=\"status\">\r\n        <span class=\"sr-only\">{{ 'msg#preview.loading' | sqMessage }}</span>\r\n    </div>\r\n</div>\r\n\r\n\r\n<ng-template #commentsTpl let-comments>\r\n\r\n    <ng-container *ngFor=\"let comment of comments\">\r\n\r\n        <div class=\"message pl-2 py-1 pr-2\">\r\n            <div class=\"mt-2 d-flex\" [ngClass]=\"{'text-muted':comment.deleted}\" (click)=\"comment.$collapsed = !comment.$collapsed\">\r\n                <i class=\"fas fa-user-circle mr-1\"></i>\r\n                <span class=\"text-truncate small font-weight-bold mr-2\" *ngIf=\"!comment.deleted\">{{comment.username}}</span>\r\n                <span class=\"text-truncate small font-weight-bold mr-2\" *ngIf=\"comment.deleted\">{{ 'msg#comments.deleted' | sqMessage }}</span>\r\n                <span class=\"small text-muted ml-auto\" [title]=\"comment | sqCreationDate\">{{comment.modified | sqRelativeTime}}<ng-container *ngIf=\"comment.modified !== comment.creation\">*</ng-container></span>\r\n                <sq-collapse-button [collapsed]=\"comment.$collapsed\" (state)=\"comment.$collapsed = $event\" (click)=\"$event.stopPropagation()\" class=\"ml-1 small\"></sq-collapse-button>\r\n            </div>\r\n\r\n            <sq-collapse [collapsed]=\"comment.$collapsed\">\r\n\r\n                <ng-template>\r\n            \r\n                    <div class=\"message-body\" *ngIf=\"!comment.deleted\" [innerHTML]=\"comment.message | sqMarkdown\"></div>\r\n                    <div class=\"text-muted\" *ngIf=\"comment.deleted\">{{ 'msg#comments.deleted' | sqMessage }}</div>\r\n            \r\n                    <div class=\"d-flex justify-content-end\">\r\n                        <div class=\"btn-group\" role=\"group\" *ngIf=\"!comment.deleted\" (click)=\"$event.stopPropagation()\">\r\n                            <button class=\"btn btn-sm\" (click)=\"likeComment(comment)\" [ngClass]=\"{'btn-success': comment.likedByUser, 'btn-outline-secondary': !comment.likedByUser}\">\r\n                                <i class=\"fas fa-thumbs-up\"></i>\r\n                                <span *ngIf=\"comment.likes > 0\">&nbsp;{{comment.likes}}</span>\r\n                                <span *ngIf=\"comment.likes === 0\">&nbsp;{{ 'msg#comments.like' | sqMessage }}</span>\r\n                            </button>\r\n                            <button class=\"btn btn-sm btn-outline-secondary\" (click)=\"addComment(comment)\">\r\n                                <i class=\"fas fa-reply\"></i>\r\n                                <span>&nbsp;{{ 'msg#comments.reply' | sqMessage }}</span>\r\n                            </button>\r\n                            <button class=\"btn btn-sm btn-outline-secondary\" (click)=\"editComment(comment)\" *ngIf=\"user?.userId === comment.userid || user?.isAdministrator\">\r\n                                <i class=\"fas fa-edit\"></i>\r\n                                <span>&nbsp;{{ 'msg#comments.edit' | sqMessage }}</span>\r\n                            </button>\r\n                            <button class=\"btn btn-sm btn-outline-secondary\" (click)=\"deleteComment(comment)\" *ngIf=\"user?.userId === comment.userid || user?.isAdministrator\">\r\n                                <i class=\"fas fa-trash-alt\"></i>\r\n                                <span>&nbsp;{{ 'msg#comments.delete' | sqMessage }}</span>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </ng-template>\r\n\r\n            </sq-collapse>\r\n        </div>\r\n\r\n        <div *ngIf=\"!comment.$collapsed && comment.subcomments\" class=\"subcomments ml-2\">\r\n            <ng-container *ngTemplateOutlet=\"commentsTpl; context:{$implicit: comment.subcomments}\"></ng-container>\r\n        </div>\r\n\r\n    </ng-container>\r\n\r\n</ng-template>","import { Component, Input, OnChanges, SimpleChanges } from \"@angular/core\";\r\nimport { Validators } from \"@angular/forms\";\r\nimport { ConfirmType, ModalButton, ModalResult, ModalService } from \"@sinequa/core/modal\";\r\nimport { Principal, PrincipalWebService } from \"@sinequa/core/web-services\";\r\nimport { CommentsWebService, Comment, NormalComment } from \"./comments.web.service\";\r\n\r\n@Component({\r\n    selector: 'sq-comments',\r\n    templateUrl: './comments.component.html',\r\n    styleUrls: ['./comments.component.scss']\r\n})\r\nexport class CommentsComponent implements OnChanges {\r\n    @Input() docid: string;\r\n    @Input() theme: 'light' | 'dark' = 'light';\r\n\r\n    comments: Comment[];\r\n    user?: Principal;\r\n\r\n    constructor(\r\n        public commentsWebService: CommentsWebService,\r\n        public modalService: ModalService,\r\n        public principalService: PrincipalWebService\r\n    ){\r\n\r\n    }\r\n\r\n    ngOnChanges(simpleChanges: SimpleChanges) {\r\n        if(simpleChanges.docid && this.docid) {\r\n            this.user = this.principalService.principal;\r\n            this.commentsWebService.getComments(this.docid)\r\n                .subscribe(comments => this.comments = comments);\r\n        }\r\n    }\r\n\r\n    addComment(replyTo?: Comment) {\r\n        const model = {\r\n            title: replyTo? 'msg#comments.replyTo' : 'msg#comments.add',\r\n            message: 'msg#comments.markdownNotice',\r\n            buttons: [],\r\n            output: '',\r\n            validators: [Validators.required],\r\n            rowCount: 5\r\n        }\r\n        this.modalService.prompt(model).then(result => {\r\n            if(result === ModalResult.OK && model.output.trim() !== \"\") {\r\n                this.commentsWebService.createComment(this.docid, model.output, replyTo?.commentid).subscribe(comment => {\r\n                    if(replyTo) {\r\n                        if(!replyTo.subcomments) {\r\n                            replyTo.subcomments = [];\r\n                        }\r\n                        replyTo.subcomments.push(comment);\r\n                    }\r\n                    else {\r\n                        this.comments.push(comment);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    likeComment(comment: NormalComment) {\r\n        this.commentsWebService.likeComment(comment.docid, comment.commentid)\r\n            .subscribe(res => {\r\n                comment.likes = res.likes;\r\n                comment.likedByUser = res.likedByUser;\r\n            });\r\n    }\r\n\r\n    editComment(comment: NormalComment) {\r\n        const model = {\r\n            title: 'msg#comments.editComment',\r\n            message: 'msg#comments.markdownNotice',\r\n            buttons: [],\r\n            output: comment.message,\r\n            validators: [Validators.required],\r\n            rowCount: 5\r\n        }\r\n        this.modalService.prompt(model).then(result => {\r\n            if(result === ModalResult.OK && model.output.trim() !== \"\") {\r\n                this.commentsWebService.updateComment(comment.docid, comment.commentid, model.output)\r\n                    .subscribe(res => {\r\n                        comment.message = res.message;\r\n                        comment.modified = res.modified;\r\n                        comment.likes = res.likes;\r\n                        comment.likedByUser = res.likedByUser;\r\n                    });\r\n            }\r\n        });\r\n    }\r\n\r\n    deleteComment(comment: NormalComment) {\r\n        // If the comment has subcomments, only mark it as deleted\r\n        const markAsDeleted = !!comment.subcomments?.length;\r\n\r\n        this.modalService.confirm({\r\n            message: \"msg#comments.deleteNotice\",\r\n            confirmType: ConfirmType.Warning,\r\n            buttons: [\r\n                new ModalButton({\r\n                    result: ModalResult.Yes,\r\n                    primary: true\r\n                }),\r\n                new ModalButton({\r\n                    result: ModalResult.Cancel\r\n                })\r\n            ]\r\n        }).then(res => {\r\n            if(res === ModalResult.Yes) {\r\n                this.commentsWebService.deleteComment(comment.docid, comment.commentid, markAsDeleted)\r\n                    .subscribe(res => {\r\n                        if(markAsDeleted) {\r\n                            let c = comment as any;\r\n                            c.deleted = true;\r\n                            delete c.message;\r\n                            delete c.userid;\r\n                            delete c.username;\r\n                            delete c.likes;\r\n                            delete c.likedByUser;\r\n                        }\r\n                        else {\r\n                            this.remove(this.comments, comment);\r\n                        }\r\n                    });\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    protected remove(comments: Comment[], comment: Comment): boolean {\r\n        for(let i=0; i<comments.length; i++) {\r\n            if(comments[i] === comment) {\r\n                comments.splice(i,1);\r\n                return true;\r\n            }\r\n            const subcomments = comments[i].subcomments;\r\n            if(subcomments) {\r\n                if(this.remove(subcomments, comment)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}","import { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { CollapseModule } from \"@sinequa/components/collapse\";\r\nimport { UtilsModule } from \"@sinequa/components/utils\";\r\nimport { IntlModule } from \"@sinequa/core/intl\";\r\nimport { LoginModule } from \"@sinequa/core/login\";\r\nimport { WebServicesModule } from \"@sinequa/core/web-services\";\r\nimport { CommentsComponent } from \"./comments.component\";\r\nimport { CreationDatePipe } from \"./creation-date.pipe\";\r\nimport { MarkdownPipe } from \"./markdown.pipe\";\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n\r\n        WebServicesModule,\r\n        IntlModule,\r\n        LoginModule,\r\n\r\n        UtilsModule,\r\n        CollapseModule\r\n    ],\r\n    declarations: [\r\n        CommentsComponent,\r\n        CreationDatePipe,\r\n        MarkdownPipe\r\n    ],\r\n    exports: [\r\n        CommentsComponent,\r\n        MarkdownPipe\r\n    ],\r\n})\r\nexport class CommentsModule {\r\n}","export default {\r\n    \"comments\": {\r\n        \"created\": \"Created on {date}\",\r\n        \"modified\": \"Modified on {date}\",\r\n        \"replyTo\": \"Reply to comment\",\r\n        \"add\": \"Add a comment\",\r\n        \"write\": \"Write a comment\",\r\n        \"like\": \"Like\",\r\n        \"reply\": \"Reply\",\r\n        \"edit\": \"Edit\",\r\n        \"delete\": \"Delete\",\r\n        \"editComment\": \"Edit your comment\",\r\n        \"markdownNotice\": \"(Markdown syntax supported)\",\r\n        \"noComment\": \"No comment yet\",\r\n        \"deleteNotice\": \"Are you sure you want to delete this comment? (replies will remain visible)\",\r\n        \"deleted\": \"[deleted]\"\r\n    }\r\n}","export default {\r\n    \"comments\": {\r\n        \"created\": \"Créé le {date}\",\r\n        \"modified\": \"Modifié le {date}\",\r\n        \"replyTo\": \"Répondre à un commentaire\",\r\n        \"add\": \"Ajouter un commentaire\",\r\n        \"write\": \"Écrire un commentaire\",\r\n        \"like\": \"Aimer\",\r\n        \"reply\": \"Répondre\",\r\n        \"edit\": \"Éditer\",\r\n        \"delete\": \"Supprimer\",\r\n        \"editComment\": \"Éditer votre commentaire\",\r\n        \"markdownNotice\": \"(Syntaxe Markdown supportée)\",\r\n        \"noComment\": \"Pas encore de commentaire\",\r\n        \"deleteNotice\": \"Êtes-vous certain de vouloir supprimer ce commentaire? (les réponses resteront visibles)\",\r\n        \"deleted\": \"[supprimé]\"\r\n    }\r\n}","export default {\r\n    \"comments\": {\r\n        \"created\": \"Erstellt am {date}\",\r\n        \"modified\": \"Geändert am {date}\",\r\n        \"replyTo\": \"Auf einen Kommentar antworten\",\r\n        \"add\": \"Einen Kommentar hinzufügen\",\r\n        \"write\": \"Schreibe einen Kommentar\",\r\n        \"like\": \"Mögen\",\r\n        \"reply\": \"Antworten\",\r\n        \"edit\": \"Bearbeiten\",\r\n        \"delete\": \"Löschen\",\r\n        \"editComment\": \"Bearbeiten Sie Ihren Kommentar\",\r\n        \"markdownNotice\": \"(Markdown-Syntax unterstützt)\",\r\n        \"noComment\": \"Noch kein Kommentar\",\r\n        \"deleteNotice\": \"Möchten Sie diesen Kommentar wirklich löschen? (Antworten bleiben sichtbar)\",\r\n        \"deleted\": \"[gelöscht]\"\r\n    }\r\n}","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i0.ɵɵelementContainer","i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵadvance","i0.ɵɵtextInterpolate1","i0.ɵɵtemplate","i0.ɵɵlistener","i0.ɵɵelement","i0.ɵɵproperty","i0.ɵɵtextInterpolate","i0.ɵɵelementContainerStart","i0.ɵɵelementContainerEnd"],"mappings":"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"}