{"version":3,"file":"sinequa-components-result.js","sources":["../../projects/components/result/result-extracts/result-extracts.html","../../projects/components/result/result-extracts/result-extracts.ts","../../projects/components/result/result-icon/result-icon.ts","../../projects/components/result/result-icon/result-icon.html","../../projects/components/result/result-missing-terms/result-missing-terms.html","../../projects/components/result/result-missing-terms/result-missing-terms.ts","../../projects/components/result/result-title/result-title.html","../../projects/components/result/result-title/result-title.ts","../../projects/components/result/result-source/result-source.html","../../projects/components/result/result-source/result-source.ts","../../projects/components/result/result-thumbnail/result-thumbnail.html","../../projects/components/result/result-thumbnail/result-thumbnail.ts","../../projects/components/result/user-rating/user-rating.html","../../projects/components/result/user-rating/user-rating.ts","../../projects/components/result/sponsored-results/sponsored-results.html","../../projects/components/result/sponsored-results/sponsored-results.ts","../../projects/components/result/results-counter/results-counter.ts","../../projects/components/result/results-counter/results-counter.html","../../../projects/components/result/result-module.ts","../../projects/components/result/messages/en.ts","../../projects/components/result/messages/fr.ts","../../projects/components/result/messages/de.ts","../../projects/components/result/messages/index.ts","../../../projects/components/result/sinequa-components-result.ts"],"sourcesContent":["<ng-container *ngIf=\"text || longExtracts\">\n    <p *ngIf=\"!longExtracts\" class=\"{{extractsClass}} sq-text\">\n        <span *ngIf=\"record.modified && !hideDate\" class=\"extracts-date\">{{record.modified | sqDate:dateFormat}}{{!!text ? ' - ' : ''}}</span>\n        <span class=\"extracts-text\" [innerHTML]=\"text\"></span>\n    </p>\n    <ng-container *ngIf=\"longExtracts\">\n        <p *ngIf=\"record.modified && !hideDate\" class=\"{{extractsClass}} extracts-date sq-text\">{{record.modified | sqDate:dateFormat}}</p>\n        <ul *ngIf=\"longExtracts\" class=\"{{extractsClass}} sq-text\">\n            <li *ngFor=\"let extract of longExtracts\" [innerHTML]=\"extract\"></li>\n        </ul>\n    </ng-container>\n    <a *ngIf=\"showLinesExpander\" class=\"sq-text\" href=\"#\" (click)=\"collapseClick($event)\">\n        <sq-collapse-button [collapsed]=\"collapsed\"></sq-collapse-button>\n    </a>\n</ng-container>\n","import {Component, Input, OnChanges, SimpleChanges} from \"@angular/core\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {Record} from \"@sinequa/core/web-services\";\n\n@Component({\n    selector: \"sq-result-extracts\",\n    templateUrl: \"./result-extracts.html\",\n    styles: [`\np, ul {\n    margin: 0;\n    color: #676767;\n    font-size: 0.9em;\n}\n    `]\n})\nexport class ResultExtracts implements OnChanges {\n    @Input() record: Record;\n    @Input() limitLinesDisplayed: boolean;\n    @Input() showLinesExpander: boolean;\n    @Input() showTextAlways: boolean;\n    @Input() showLongExtracts: boolean;\n    @Input() hideDate: boolean;\n    @Input() maxLongExtracts: number;\n    @Input() dateFormat: Intl.DateTimeFormatOptions = {year: 'numeric', month: 'short', day: 'numeric'};\n    collapsed: boolean = true;\n    text: string | undefined;\n    longExtracts: string[] | undefined;\n    extractsClass: string;\n\n    setup() {\n        this.text = undefined;\n        this.longExtracts = undefined;\n        if (this.showTextAlways) {\n            this.text = Utils.encodeHTML(this.record.text);\n            this.extractsClass = \"sq-text-extracts\";\n        }\n        else {\n            if (this.showLongExtracts && (this.record[\"extracts\"] || this.record[\"extractsperpartname\"] )) {\n                this.longExtracts = [];\n                // extractsperpartname is a complex structure where extracts are stored in an object: \"highlight.data\"\n                // in a csv field (';' separator)\n                let recordExtracts = this.record[\"extracts\"] || this.record[\"extractsperpartname\"].highlight[0].data.split(\";\");\n                if (this.maxLongExtracts) {\n                    recordExtracts = recordExtracts.slice(0, this.maxLongExtracts * 3);\n                }\n                for (let i = 0; i < recordExtracts.length; i += 3) {\n                    this.longExtracts.push(recordExtracts[i].replace(/\\{b\\}/g, \"<strong>\").replace(/\\{nb\\}/g, \"</strong>\"));\n                }\n                this.extractsClass = \"sq-long-extracts\";\n            }\n            else if (this.record.relevantExtracts) {\n                this.text = this.record.relevantExtracts;\n                this.extractsClass = \"sq-relevant-extracts\";\n            }\n            else {\n                this.text = Utils.encodeHTML(this.record.text);\n                this.extractsClass = \"sq-text-extracts\";\n            }\n        }\n\n        if (!this.limitLinesDisplayed || !this.collapsed) {\n            this.extractsClass += \" sq-show-all\";\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        this.setup();\n    }\n\n    collapseClick(event: Event) {\n        this.collapsed = !this.collapsed;\n        this.setup();\n        event.preventDefault();\n    }\n}","import {Component, Input} from \"@angular/core\";\nimport {Record} from \"@sinequa/core/web-services\";\n\n/**\n * This component requires a global CSS file to map file extensions (doc, ppt, xls, etc.)\n * to Font Awesome icons via a class `sq-icon-file-{{fileext}}`\n */\n\n@Component({\n    selector: \"sq-result-icon\",\n    templateUrl: \"./result-icon.html\"\n})\nexport class ResultIcon {\n    /**\n     * Record which file extension is displayed as an icon\n     */\n    @Input() record: Record;\n\n    /**\n     * Integer controlling the icon's size\n     */\n    @Input() size: number = 1; \n}","<span class=\"far fa-file sq-icon-file-{{record.fileext}} fa-{{size}}x fa-fw\" title=\"{{record.fileext}}\"></span>","<ng-container *ngIf=\"missingTerms.length > 0\">\n    <span class=\"sq-missing-terms-label sq-text\">{{'msg#results.missingTerms' | sqMessage}}</span>\n    <span class=\"sq-missing-terms sq-text\">\n        <span *ngFor=\"let term of missingTerms\" class=\"sq-missing-term\"> {{term}}</span>\n    </span>\n</ng-container>\n","import {Component, Input, OnChanges, SimpleChanges} from \"@angular/core\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {Record} from \"@sinequa/core/web-services\";\n\n@Component({\n    selector: \"sq-result-missing-terms\",\n    templateUrl: \"./result-missing-terms.html\",\n    styleUrls: [\"./result-missing-terms.css\"]\n})\nexport class ResultMissingTerms implements OnChanges {\n    @Input() record: Record;\n    missingTerms: string[];\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes[\"record\"]) {\n            this.missingTerms = [];\n            if (this.record.termspresence) {\n                for (const tp of this.record.termspresence) {\n                    if (Utils.eqNC(tp.presence, \"missing\")) {\n                        this.missingTerms.push(tp.term);\n                    }\n                }\n            }\n        }\n    }\n}","<!-- Display a regular SPAN if the component is supposed to have a link behavior but has no URL -->\n<span *ngIf=\"hasSpanBehaviour\" class=\"sq-result-title\" title=\"{{this.record.title}}\" [innerHTML]=\"title\"></span>\n<!-- Display a link if a URL exists or the component is used to trigger an action -->\n<a *ngIf=\"!hasSpanBehaviour\" class=\"sq-result-title\" title=\"{{this.record.title}}\" href=\"{{href}}\" target=\"{{target}}\" [innerHTML]=\"title\" (click)=\"click()\"></a>\n","import {ViewEncapsulation, Component, Input, OnChanges, SimpleChanges, Output, EventEmitter} from \"@angular/core\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {Record} from \"@sinequa/core/web-services\";\nimport {AppService} from \"@sinequa/core/app-utils\";\nimport {SearchService} from \"@sinequa/components/search\";\n\n\n@Component({\n    selector: \"sq-result-title\",\n    templateUrl: \"./result-title.html\",\n    styles: [`\nsq-result-title {\n    font-size: 1.25rem;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n}\n.match-highlight {\n    font-weight: bold;\n    font-style: italic;\n}\n    `],\n    encapsulation: ViewEncapsulation.None   // Currently necessary for the match-highlight\n})\nexport class ResultTitle implements OnChanges {\n    /** The record which title we want to display */\n    @Input() record: Record;\n    /**\n     * \"open\" mode: Display a link which opens the original document (url1) if available, or emits a titleClicked event to perform an action otherwise\n     * \"action\" mode: Display a link which emits a titleClicked event to perform an action\n     * \"open-if-url\" mode: Display a link which opens the original document (url1) if available, or displays a SPAN with the title otherwise\n     * \"display\" mode: Only display a SPAN element (no link)\n     */\n    @Input() titleLinkBehavior: \"open\" | \"action\" | \"open-if-url\" | \"display\" = \"open\";\n    /** Optional field name containing the title. Otherwise displayTitle or title are used */\n    @Input() field: string = \"\";\n    /** Optional custom target used in the link */\n    @Input() originalDocTarget: string | undefined;\n    /** Event emitter to perform actions at the parent level */\n    @Output() titleClicked = new EventEmitter<boolean>();   // TODO: Custom options to get title & URL (replace pluginservice)\n\n    public title: string;\n    private titleField: string;\n    private documentUrl: string;\n\n    constructor(\n        public searchService: SearchService,\n        private appService: AppService) {\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes[\"record\"]) {\n            this.titleField = this.appService.resolveColumnAlias(this.field);\n            this.title = this.getTitle();\n            this.documentUrl = this.record.url1;\n        }\n    }\n\n    get hasLinkBehaviour(): boolean {\n        return this.titleLinkBehavior === \"open\" || (this.titleLinkBehavior === \"open-if-url\" && this.hasUrl);\n    }\n\n    /**\n     * A span is shown in \"display\" mode or \"open-if-url\" mode when no url is present\n     * A link is shown in all other cases (even in \"open\" mode with no url, which is equivalent to \"action\" mode)\n     */\n    get hasSpanBehaviour(): boolean {\n        return this.titleLinkBehavior === \"display\" || (this.titleLinkBehavior === \"open-if-url\" && !this.hasUrl);\n    }\n\n    public get href(): string {\n        return (this.hasLinkBehaviour && this.documentUrl) || \"#\";\n    }\n\n    public get target(): string {\n        return (this.hasLinkBehaviour && this.documentUrl) ? this.originalDocTarget || '_blank' : \"_self\";\n    }\n    \n    public get hasUrl(): boolean {\n        return !!this.documentUrl;\n    }\n\n    private getTitle(): string {\n        let title;\n        if (this.titleField) {\n            title = Utils.escapeHtml(this.record[this.titleField]);\n        }\n        if (!title) {\n            title = this.record.displayTitle || Utils.escapeHtml(this.record.title);\n        }\n        return title;\n    }\n\n    public click() : boolean {\n        const isLink = this.hasLinkBehaviour && !!this.documentUrl; // true if this is a regular link (performs the default action)\n        if(isLink)\n            this.searchService.notifyOpenOriginalDocument(this.record);\n        this.titleClicked.emit(isLink); // Can be use to trigger actions\n        return isLink;\n    }\n}","<span class=\"sq-result-source\">\n    <ng-container *ngFor=\"let s of source; let i=index\">\n        <span *ngIf=\"i > 0\"> &#8250; </span>\n        <span (click)=\"select(s)\" class=\"link\" title=\"Select this source\">{{s.display}}</span>\n    </ng-container>\n    <span *ngIf=\"source.length>0 && !!url\"> - </span>\n    <a *ngIf=\"url\" href=\"{{url}}\" target=\"_blank\">{{url}}</a>\n</span>","import {Component, Input, OnInit} from \"@angular/core\";\nimport {ValueItem} from \"@sinequa/core/app-utils\";\nimport {Record} from \"@sinequa/core/web-services\";\nimport {SearchService} from \"@sinequa/components/search\";\n\n@Component({\n    selector: \"sq-result-source\",\n    templateUrl: \"./result-source.html\",\n    styleUrls: [\"./result-source.css\"]\n})\nexport class ResultSource implements OnInit {\n    @Input() record: Record;\n    @Input() displayTreepath: boolean;\n    @Input() displayTreepathMinLevel = 0;\n    @Input() displayTreepathMaxLevel: number;\n    @Input() displayUrl: boolean = true;\n\n    source: ValueItem[] = [];\n    url: string;\n\n    constructor(\n        public searchService: SearchService) {\n    }\n\n    public ngOnInit() {\n        if(this.displayTreepath && !!this.record.treepath){\n            const treepath = this.record.treepath[0];\n            if(!!treepath && treepath.length >= 2){\n                this.source = treepath.substr(1, treepath.length-2).split('/')\n                    .slice(this.displayTreepathMinLevel, this.displayTreepathMaxLevel)\n                    .map((path,i,array) => {\n                        return {\n                            display: path,\n                            value: '/'+array.slice(0,i+1).join('/')+'/*'\n                        };\n                    });\n            }\n        }\n        if(this.displayUrl){\n            this.url = this.record.url1;\n        }\n    }\n\n    select(item){\n        if(this.searchService.addFieldSelect(\"treepath\", item)) {\n            this.searchService.search();\n        }\n    }\n\n}","<a *ngIf=\"thumbnailUrl\" href=\"{{href}}\" target=\"{{target}}\" (click)=\"click()\">\n    <img src=\"{{thumbnailUrl}}\">\n</a>","import {Component, Input, Output, OnChanges, SimpleChanges, EventEmitter} from \"@angular/core\";\nimport {Record} from \"@sinequa/core/web-services\";\nimport {AppService} from \"@sinequa/core/app-utils\";\nimport {SearchService} from \"@sinequa/components/search\";\n\n@Component({\n    selector: \"sq-result-thumbnail\",\n    templateUrl: \"./result-thumbnail.html\"\n})\nexport class ResultThumbnail implements OnChanges {\n    @Input() record: Record;\n    @Input() linkBehavior: \"open\" | \"action\" = \"open\";\n    @Input() thumbnailColumn: string;\n    @Input() defaultThumbnail: string = \"\";\n    @Output() thumbnailClicked = new EventEmitter<boolean>();\n    thumbnailUrl: string;\n    private documentUrl: string;\n\n    constructor(\n        private appService: AppService,\n        private searchService: SearchService) {\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (!!changes[\"record\"]) {\n            this.documentUrl = this.record.url1;\n            if (!!this.thumbnailColumn) {\n                this.thumbnailUrl = this.record[this.thumbnailColumn];\n            }\n            if (!this.thumbnailUrl && !!this.record.thumbnailUrl) {\n                this.thumbnailUrl = this.record.thumbnailUrl;\n            }\n            if (!this.thumbnailUrl && !!this.defaultThumbnail) {\n                this.thumbnailUrl = this.defaultThumbnail;\n            }\n            this.thumbnailUrl = this.appService.updateUrlForCors(this.thumbnailUrl);\n        }\n    }\n\n    get hasLinkBehaviour(): boolean {\n        return this.linkBehavior === \"open\";\n    }\n\n    public get href(): string {\n        return (this.hasLinkBehaviour && this.documentUrl) || \"#\";\n    }\n\n    public get target(): string {\n        return (this.hasLinkBehaviour && this.documentUrl) ? \"_blank\" : \"_self\";\n    }\n\n    public click() : boolean {\n        const isLink = this.hasLinkBehaviour && !!this.documentUrl; // true if this is a regular link (performs the default action)\n        if(isLink)\n            this.searchService.notifyOpenOriginalDocument(this.record);\n        this.thumbnailClicked.emit(isLink); // Can be use to trigger actions\n        return isLink;\n    }\n}","<ul class=\"sq-user-rating-stars\">\n    <!-- caption -->\n    <li *ngIf=\"caption\" class=\"sq-user-rating-caption\">\n        <span>{{caption|sqMessage}}</span>\n    </li>\n    <!-- rating stars -->\n    <li *ngFor=\"let r of ratingValues; let i = index\" class=\"sq-user-rating-item\">\n        <a class=\"sq-user-rating-star\" title=\"{{getTitle(i)}}\" href=\"javascript:void(0)\" (click)=\"select(i)\">\n            <span class=\"{{(i <= userRatingIndex) ? 'fas fa-star' : 'far fa-star'}}\"></span>\n        </a>\n    </li>\n    <!-- average rating -->\n    <li *ngIf=\"showAverage && getAverageRating() !== undefined && getAverageRating() !== ''\" class=\"sq-user-rating-average\">\n        <span>{{'msg#userRatings.average'|sqMessage:messageParams}}</span>\n    </li>\n</ul>\n","import {Component, OnInit, Input, ChangeDetectorRef} from \"@angular/core\";\nimport {Record, CCRating, UserRatingsWebService, UserRatingResponse} from \"@sinequa/core/web-services\";\n\n@Component({\n    selector: \"sq-user-rating\",\n    templateUrl: \"./user-rating.html\",\n    styleUrls: [\"./user-rating.css\"]\n})\nexport class UserRating implements OnInit {\n    @Input() record: Record;\n    @Input() ratingsColumn: string;\n    @Input() averageColumn: string;\n    @Input() updateDocWeight: boolean;\n    @Input() count: number;\n    @Input() values: string;\n    @Input() titles: string;\n    @Input() caption: string;\n    @Input() showAverage: boolean;\n    userRatingIndex: number;\n    averageRatingIndex: number;\n    ratingValues: string[];\n\n    constructor(\n        private userRatingService: UserRatingsWebService,\n        private changeDetector: ChangeDetectorRef) {\n    }\n\n    ngOnInit() {\n        this.ensureRatingValues();\n        this.handleResponse(this.userRatingService.getRecordRating(this.record, this.getCCRating()));\n    }\n\n    getCCRating(): CCRating {\n        return {\n            ratingsColumn: this.ratingsColumn,\n            averageColumn: this.averageColumn,\n            updateDocWeight: this.updateDocWeight,\n            ratingsDistribution: this.ratingValues\n        };\n    }\n\n    get messageParams() {\n        return {\n            values: {\n                average: this.getAverageRating()\n            }\n        };\n    }\n\n    getTitle(ratingIndex: number): string {\n        if (this.titles) {\n            return this.titles.split(\";\")[ratingIndex] || \"\";\n        }\n        else {\n            return \"\";\n        }\n    }\n\n    getRating(ratingIndex: number): string {\n        return this.ratingValues[ratingIndex];\n    }\n\n    getAverageRating(): string {\n        if (this.averageRatingIndex < 0) {\n            return \"\";\n        }\n        else {\n            return this.ratingValues[this.averageRatingIndex];\n        }\n    }\n\n    select(selectedRatingIndex: number) {\n        //If selected rating was already selected, remove the rating\n        if (this.userRatingIndex === selectedRatingIndex) {\n            this.userRatingService.deleteRating(this.record, this.getCCRating()).subscribe(this.handleResponse);\n        }\n        else {\n            this.userRatingService.setRating(this.record, selectedRatingIndex, this.getCCRating()).subscribe(this.handleResponse);\n        }\n    }\n\n    private ensureRatingValues() {\n        if (!this.ratingValues) {\n            const count = this.count || 0;\n\n            //Work out rating value range\n            if (this.values) {\n                //Use predefined values\n                this.ratingValues = this.values.split(\";\");\n\n                //Initialize missing values - so that ratingValues.length matches config.count\n                for (let i = this.ratingValues.length; i < count; i++) {\n                    this.ratingValues.push((i + 1).toString());\n                }\n            }\n            else {\n                //Generates [1, ... config.count]\n                this.ratingValues = Array(count).fill(0).map((_, i) => (i + 1).toString());\n            }\n        }\n    }\n\n    private handleResponse = (response: UserRatingResponse) => {\n        this.userRatingIndex    = response.rating;\n        this.averageRatingIndex = response.averagerating;\n\n        this.changeDetector.markForCheck();\n    }\n}\n","<ul class=\"sq-sponsored-links-list\" *ngIf=\"!!sponsoredlinks\" >\n    <li *ngFor=\"let link of sponsoredlinks\" class=\"sponsored-item\" >\n        <div class=\"sq-sponsored-link-view\">\n            <div *ngIf=\"link.thumbnail\" class=\"sq-sponsored-link-view-thumbnail\">\n                <a href=\"{{link.url}}\" (click)=\"click(link)\" target=\"_blank\">\n                    <img src=\"{{link.thumbnail}}\">\n                </a>\n            </div>\n            <div class=\"sq-sponsored-link-view-info\">\n                <a href=\"{{link.url}}\" (click)=\"click(link)\" target=\"_blank\" title=\"{{link.title | sqMessage}}\">{{link.title | sqMessage}}</a>\n                <div *ngIf=\"link.summary\" class=\"sq-sponsored-link-view-summary\">{{link.summary | sqMessage}}</div>\n            </div>\n        </div>\n    </li>\n</ul>\n","import { Component, Input, OnChanges, SimpleChanges, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { Utils } from \"@sinequa/core/base\";\nimport { LinkResult, SponsoredLinksWebService, AuditWebService, AuditEventType, AuditEvent } from \"@sinequa/core/web-services\";\nimport { AppService, Query } from \"@sinequa/core/app-utils\";\nimport {SearchService} from \"@sinequa/components/search\";\n\n@Component({\n    selector: 'sq-sponsored-results',\n    templateUrl: './sponsored-results.html',\n    styleUrls: [\"./sponsored-results.scss\"]\n})\n\n/**\n * Represent the component that display the sponsored results on result page.\n * NOTE: this class and (its containing file) could have been named SponsoredLinks but this naming causes\n * the file to be flagged as ads by Adblock.\n */\nexport class SponsoredResults implements OnChanges, OnInit {\n    @Input() query: Query;\n    public sponsoredlinks: LinkResult[];\n\n    private lastText: string;\n    private currentPage?: number;\n    private linksQuery: Query;\n    private initDone: boolean;\n    private webService: string;\n\n    constructor(\n        private appService: AppService,\n        private searchService: SearchService,\n        private sponsoredResultsService: SponsoredLinksWebService,\n        private auditService: AuditWebService,\n        private changeDetectorRef: ChangeDetectorRef) {\n    }\n\n    /**\n     * Considers the text of the new query and sees if the list of the sponsored lists needs to be updated.\n     *\n     * @param text The text of the new query.\n     * @memberof SponsoredLinks\n     */\n    private updateSponsoredLinksIfNecessary(text: string): void {\n        if (!this.appService.app) {\n            return; // logout\n        }\n\n        let redoQuery = false;\n        const currentWS = this.getWebService();\n        if (!Utils.eqNC(this.webService, currentWS)) {\n            this.webService = currentWS;\n            redoQuery = true;\n        }\n\n        if (!redoQuery && !Utils.eqNC(this.lastText, text)) {\n            this.lastText = text;\n            redoQuery = true;\n        }\n\n        if (!redoQuery && this.currentPage !== this.searchService.query.page) {\n            this.currentPage = this.searchService.query.page;\n            redoQuery = true;\n        }\n\n        if (redoQuery) {\n            if (!Utils.isEmpty(this.webService) && !Utils.isEmpty(text)) {\n                this.linksQuery.text = text;\n                this.linksQuery.page = this.currentPage;\n                Utils.subscribe(\n                    this.sponsoredResultsService.getLinks(this.linksQuery, this.webService),\n                    (results) => {\n                        this.sponsoredlinks = results.links;\n                        this.auditLinksDisplay();\n                        this.changeDetectorRef.markForCheck();\n                    },\n                    (error) => console.log(`Could not retrieve sponsored links: ${error}.`)\n                );\n            } else {\n                this.sponsoredlinks = [];\n            }\n        }\n    }\n\n    /**\n     * Retrieves the web service for sponsored links.\n     * If it is defined both in the component configuration and the app configuration,\n     * this method returns the one in the component configuration.\n     *\n     * @returns the web service for sponsored links.\n     */\n    private getWebService(): string {\n        return (this.appService.app && this.appService.app.sponsoredLinks) || \"\";\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (!this.initDone) {\n            this.initialize();\n        }\n\n        if (changes['query'] || changes['results']) {\n            this.updateSponsoredLinksIfNecessary(Utils.trim(this.query.text || \"\"));\n        }\n    }\n\n    private initialize(): void {\n        if (this.initDone) {\n            return;\n        }\n\n        if (this.appService.ccquery) {\n            this.linksQuery = new Query(this.appService.ccquery.name);\n        } else {\n            return;\n        }\n        this.initDone = true;\n    }\n\n    ngOnInit(): void {\n        this.initialize();\n    }\n\n    auditLinksDisplay() {\n        if (!!this.sponsoredlinks && this.sponsoredlinks.length > 0) {\n            const auditEvents: AuditEvent[] = [];\n            this.sponsoredlinks.forEach(link => {\n                auditEvents.push({\n                    type: AuditEventType.Link_Display,\n                    detail: {\n                        resultid: this.searchService.results && this.searchService.results.id,\n                        linkid: link.id,\n                        rank: link.rank,\n                        title: link.title,\n                        url: link.url\n                    }\n                });\n            });\n            this.auditService.notify(auditEvents);\n        }\n    }\n\n    click(link: LinkResult) {\n        this.auditService.notifySponsoredLink(AuditEventType.Link_Click, link,\n            this.searchService.results && this.searchService.results.id || \"\");\n    }\n}\n","import {Input, Component} from \"@angular/core\";\n\n@Component({\n    selector: \"sq-results-counter\",\n    templateUrl: \"./results-counter.html\"\n})\nexport class ResultsCounter {\n    @Input() rowCount: number;\n}\n","<div class=\"sq-results-count\">{{'msg#results.resultsCount' | sqMessage:{values: {count: rowCount} } }}</div>","import {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\n\nimport {IntlModule} from \"@sinequa/core/intl\";\n\nimport {UtilsModule} from \"@sinequa/components/utils\";\nimport {CollapseModule} from \"@sinequa/components/collapse\";\nimport {MetadataModule} from \"@sinequa/components/metadata\";\n\nimport {ResultTitle} from \"./result-title/result-title\";\nimport {ResultSource} from \"./result-source/result-source\";\nimport {ResultExtracts} from \"./result-extracts/result-extracts\";\nimport {ResultMissingTerms} from \"./result-missing-terms/result-missing-terms\";\nimport {ResultThumbnail} from \"./result-thumbnail/result-thumbnail\";\nimport {UserRating} from \"./user-rating/user-rating\";\nimport {SponsoredResults} from './sponsored-results/sponsored-results';\nimport {ResultsCounter} from \"./results-counter/results-counter\";\nimport {ResultIcon} from \"./result-icon/result-icon\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule, ReactiveFormsModule,\n\n        IntlModule,\n\n        UtilsModule,\n        CollapseModule,\n        MetadataModule\n    ],\n    declarations: [\n        ResultTitle, ResultExtracts,\n        ResultMissingTerms,\n        ResultThumbnail, UserRating,\n        SponsoredResults, ResultsCounter,\n        ResultIcon, ResultSource\n    ],\n    exports: [\n        ResultTitle, ResultExtracts,\n        ResultMissingTerms,\n        ResultThumbnail, UserRating,\n        SponsoredResults, ResultsCounter,\n        ResultIcon, ResultSource\n    ]\n})\nexport class ResultModule {\n}\n","export default {\n    results: {\n        missingTerms: \"Missing terms:\",\n        resultsCount: \"{count, plural, =0 {no results} one {# result} other {# results}}\",\n    },\n    userRatings: {\n        average: \"Average: {average}\"\n    },\n};\n","export default {\n    results: {\n        missingTerms: \"Termes manquants :\",\n        resultsCount: \"{count, plural, =0 {aucune réponse} one {# réponse} other {# réponses}}\",\n    },\n    userRatings: {\n        average: \"Moyenne : {average}\"\n    },\n};\n","export default {\n    \"results\": {\n        \"missingTerms\": \"fehlende Begriffe:\",\n        \"resultsCount\": \"{count, plural, =0 {keine Ergebnisse} one {# Ergebnis} other {# Ergebnisse}}\"\n    },\n    \"userRatings\": {\n        \"average\": \"Durchschnittlich: {average}\"\n    },\n};\n","import {Utils} from \"@sinequa/core/base\";\nimport {enSearch, frSearch, deSearch} from \"@sinequa/components/search\";\nimport {enCollapse, frCollapse, deCollapse} from \"@sinequa/components/collapse\";\nimport {enMetadata, frMetadata, deMetadata} from \"@sinequa/components/metadata\";\n\nimport _enResult from \"./en\";\nimport _frResult from \"./fr\";\nimport _deResult from \"./de\";\n\nconst enResult = Utils.merge({}, _enResult, enSearch, enMetadata, enCollapse);\nconst frResult = Utils.merge({}, _frResult, frSearch, frMetadata, frCollapse);\nconst deResult = Utils.merge({}, _deResult, deSearch, deMetadata, deCollapse);\n\nexport { enResult, frResult, deResult };\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵadvance","i0.ɵɵtextInterpolate2","i0.ɵɵtemplate","i0.ɵɵelement","i0.ɵɵclassMapInterpolate1","i0.ɵɵproperty","i0.ɵɵtextInterpolate","i0.ɵɵelementContainerStart","i0.ɵɵelementContainerEnd","i0.ɵɵlistener","i0.ɵɵclassMapInterpolate2","i0.ɵɵpropertyInterpolate","i0.ɵɵtextInterpolate1","i0.ɵɵclassMap"],"mappings":"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"}