{"version":3,"file":"sinequa-components-machine-learning.js","sources":["../../../projects/components/machine-learning/ml-audit.service.ts","../../../projects/components/machine-learning/dwell-time.directive.ts","../../../projects/components/machine-learning/machine-learning.module.ts","../../../projects/components/machine-learning/sinequa-components-machine-learning.ts"],"sourcesContent":["import {Injectable, Inject} from \"@angular/core\";\nimport {HttpRequest} from \"@angular/common/http\";\nimport {Observable, of} from \"rxjs\";\nimport {PrincipalWebService, SqHttpClient, HttpService, START_CONFIG, StartConfig, AuditEvents, AuditRecord} from \"@sinequa/core/web-services\";\nimport {LoginService} from \"@sinequa/core/login\";\nimport {IntlService} from \"@sinequa/core/intl\";\nimport {AppService} from \"@sinequa/core/app-utils\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {SearchService} from \"@sinequa/components/search\";\n\n@Injectable({\n    providedIn: \"root\"\n})\nexport class MlAuditService extends HttpService {\n    private static readonly Endpoint = \"ml.audit.notify\";\n    session: MlAuditService.Session | undefined;\n    query: MlAuditService.Query | undefined;\n    results: MlAuditService.Results | undefined;\n\n    constructor(\n        @Inject(START_CONFIG) startConfig: StartConfig,\n        protected appService: AppService,\n        protected loginService: LoginService,\n        protected principalService: PrincipalWebService,\n        protected intlService: IntlService,\n        protected httpClient: SqHttpClient,\n        protected searchService: SearchService) {\n        super(startConfig);\n    }\n\n    newTimestamp(): string {\n        return (new Date()).toISOString();\n    }\n\n    calcDwellTime(event: MlAuditService.Event, defaultValue?: number): number | undefined {\n        if (!event.timestamp) {\n            return defaultValue;\n        }\n        return Date.now() - (new Date(event.timestamp)).getTime();\n    }\n\n    startSession(): void {\n        this.endSession();\n        if (this.principalService.principal) {\n            this.session = {\n                type: \"session\",\n                subType: \"start\",\n                id: Utils.guid(false),\n                timestamp: this.newTimestamp(),\n                userId: this.principalService.principal.userId,\n                isAdmin: this.principalService.principal.isAdministrator,\n                locale: this.intlService.currentLocale.name\n            };\n        }\n    }\n\n    endSession(): void {\n        this.endQuery();\n        if (this.session && this.session.sent) {\n            this.notifyEvent({\n                type: \"session\",\n                subType: \"end\",\n                id: this.session.id,\n                dwellTime: this.calcDwellTime(this.session)\n            });\n        }\n        this.session = undefined;\n        this.query = undefined;\n        this.results = undefined;\n    }\n\n    newQuery(event: SearchService.NewQueryEvent): void {\n        this.endQuery();\n        if (event.query) {\n            this.query = {\n                type: \"query\",\n                subType: \"start\",\n                id: Utils.guid(false),\n                sessionId: this.session ? this.session.id : undefined,\n                indexes: this.appService.ccquery ? this.appService.ccquery.searchIndexes : undefined,\n                timestamp: this.newTimestamp()\n            };\n        }\n    }\n\n    endQuery(): void {\n        this.endResults();\n        if (this.query && this.query.sent) {\n            this.notifyEvent({\n                type: \"query\",\n                subType: \"end\",\n                id: this.query.id,\n                sessionId: this.session ? this.session.id : undefined,\n                dwellTime: this.calcDwellTime(this.query)\n            });\n        }\n        this.query = undefined;\n        this.results = undefined;\n    }\n\n    newResults(): void {\n        this.endResults();\n        if (this.searchService.results && this.searchService.results.records) {\n            this.results = {\n                type: \"results\",\n                subType: \"start\",\n                id: Utils.guid(false),\n                queryId: this.query ? this.query.id : undefined,\n                sessionId: (!this.query && this.session) ? this.session.id : undefined,\n                timestamp: this.newTimestamp(),\n                queryText: this.searchService.query.text,\n                queryHash: this.searchService.query.hash(),\n                page: this.searchService.results.page,\n                documentIds: this.searchService.results.records.map<string>(record => record.id),\n            };\n        }\n    }\n\n    endResults(): void {\n        if (this.results && this.results.sent) {\n            this.notifyEvent({\n                type: \"results\",\n                subType: \"end\",\n                id: this.results.id,\n                queryId: this.query ? this.query.id : undefined,\n                sessionId: (!this.query && this.session) ? this.session.id : undefined,\n                dwellTime: this.calcDwellTime(this.results)\n            });\n        }\n        this.results = undefined;\n    }\n\n    private flushContext() {\n        const events: MlAuditService.Event[] = [];\n        if (this.session && !this.session.sent) {\n            events.push(this.session);\n        }\n        if (this.query && !this.query.sent) {\n            events.push(this.query);\n        }\n        if (this.results && !this.results.sent) {\n            events.push(this.results);\n        }\n        if (events.length !== 0) {\n            this.notifyEvent(events);\n            events.forEach(event => event.sent = true);\n        }\n    }\n\n    newAction(actionOrActionType: MlAuditService.ActionType | MlAuditService.ActionInitializer, documentIds?: string | string[]): MlAuditService.Action {\n        this.flushContext();\n        const action: MlAuditService.Action = {\n            type: \"action\",\n            subType: undefined,\n            actionType: \"click\",\n            id: Utils.guid(false),\n            resultsId: this.results ? this.results.id : undefined,\n            queryId: (!this.results && this.query) ? this.query.id : undefined,\n            sessionId: (!this.results && !this.query && this.session) ? this.session.id : undefined,\n            documentIds: []\n        };\n        delete action.actionType;\n        delete action.documentIds;\n        if (Utils.isObject(actionOrActionType)) {\n            Utils.merge(action, actionOrActionType);\n        }\n        else {\n            action.actionType = actionOrActionType;\n            if (documentIds) {\n                action.documentIds = documentIds;\n            }\n        }\n        return action;\n    }\n\n    endAction(action: MlAuditService.Action) {\n        if (action) {\n            this.notifyEvent({\n                type: \"action\",\n                subType: \"end\",\n                id: action.id,\n                resultsId: this.results ? this.results.id : undefined,\n                queryId: (!this.results && this.query) ? this.query.id : undefined,\n                sessionId: (!this.results && !this.query && this.session) ? this.session.id : undefined,\n                dwellTime: this.calcDwellTime(action)\n            });\n        }\n    }\n\n    init() {\n        Utils.subscribe(this.loginService.events, (event) => {\n            switch (event.type) {\n                case \"session-start\":\n                    this.startSession();\n                    break;\n                case \"session-end\":\n                    this.endSession();\n                    break;\n            }\n        });\n        Utils.subscribe(this.searchService.events, (event) => {\n            switch (event.type) {\n                case \"new-query\":\n                    this.newQuery(event);\n                    break;\n                case \"new-results\":\n                    this.newResults();\n                    break;\n            }\n        });\n    }\n\n    notifyEvent(events: MlAuditService.Event | MlAuditService.Event[]): Observable<void> {\n        if (!this.startConfig.mlAuditEnabled) {\n            return of(undefined);\n        }\n        const observable = this.httpClient.post<void>(this.makeUrl(MlAuditService.Endpoint), {\n            events: events\n        });\n        Utils.subscribe(observable,\n            (response) => {\n                return response;\n            },\n            (error) => {\n                console.log(\"MlAuditService.notify failure - error: \", error);\n            });\n        return observable;\n    }\n\n    notify(actions: MlAuditService.ActionInitializer | MlAuditService.ActionInitializer[] | MlAuditService.ActionType, documentIds?: string | string[]): Observable<void> {\n        if (Utils.isString(actions)) {\n            return this.notifyEvent(this.newAction(actions, documentIds));\n        }\n        else if (Utils.isArray(actions)) {\n            return this.notifyEvent(actions.map(actionInit => this.newAction(actionInit)));\n        }\n        else {\n            return this.notifyEvent(this.newAction(actions));\n        }\n    }\n\n    private ensureAuditRecord(auditEvents: AuditEvents): AuditRecord {\n        if (Utils.isObject(auditEvents)) {\n            const auditRecord = <AuditRecord>auditEvents;\n            if (auditRecord.auditEvents || auditRecord.mlAuditEvents) {\n                if (auditRecord.mlAuditEvents) {\n                    return {\n                        auditEvents: auditRecord.auditEvents,\n                        mlAuditEvents: auditRecord.mlAuditEvents.map(actionInit => this.newAction(actionInit))\n                    };\n                }\n            }\n        }\n        return <AuditRecord>auditEvents; // leave unchanged\n    }\n\n    requestInitializer = (request: HttpRequest<any>): boolean => {\n        request.body.$auditRecord = this.ensureAuditRecord(request.body.$auditRecord);\n        return true;\n    }\n}\n\nexport module MlAuditService {\n    export type EventType = \"session\" | \"query\" | \"results\" | \"action\";\n    export type EventSubType = \"start\" | \"end\";\n    export type ActionType = \"click\" | \"preview\" | \"over\" |\n        \"addToBasket\" | \"removeFromBasket\" |\n        \"addToLabel\" | \"removeFromLabel\" |\n        \"addRating\" | \"removeRating\";\n\n    export interface Event {\n        type: EventType;\n        subType?: EventSubType;\n        id?: string;\n        timestamp?: string;\n        dwellTime?: number;\n        sent?: boolean;\n        [key: string]: any; // Allow arbitrary additions\n    }\n\n    export interface Session extends Event {\n        userId: string;\n        locale: string;\n    }\n\n    export interface Query extends Event {\n        sessionId?: string;\n        indexes?: string;\n        typingHistory?: any;\n        proposedExpansions?: any;\n        selectedExpansions?: any;\n    }\n\n    export interface Results extends Event {\n        queryId?: string;\n        sessionId?: string;\n        queryText?: string;\n        queryHash?: string;\n        documentIds?: string[];\n        page?: number;\n    }\n\n    export interface Action extends Event {\n        resultsId?: string;\n        queryId?: string;\n        sessionId?: string;\n        actionType?: ActionType;\n        documentIds?: string | string[];\n    }\n\n    export interface ActionInitializer {\n        actionType: ActionType;\n        documentIds: string | string[];\n        [key: string]: any; // Allow arbitrary additions\n    }\n}\n","import {Directive, Input, HostListener, OnInit, OnDestroy} from \"@angular/core\";\nimport {MlAuditService} from \"./ml-audit.service\";\n\nexport interface DwellTimeOptions {\n    actionType: MlAuditService.ActionType;\n    docId: string;\n}\n\n@Directive({\n    selector: \"[sqDwellTime]\"\n})\nexport class DwellTime implements OnInit, OnDestroy {\n    @Input(\"sqDwellTime\") options: DwellTimeOptions;\n    action: MlAuditService.Action | undefined;\n\n    constructor(\n        protected mlAuditService: MlAuditService) {\n    }\n\n    ngOnInit() {\n        if (this.options.actionType === \"preview\") {\n            this.action = this.mlAuditService.newAction(this.options.actionType, this.options.docId);\n            this.action.subType = \"start\";\n            this.mlAuditService.notifyEvent(this.action);\n            this.action.timestamp = this.mlAuditService.newTimestamp();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.options.actionType === \"preview\") {\n            if (this.action) {\n                this.mlAuditService.endAction(this.action);\n                this.action = undefined;\n            }\n        }\n    }\n\n    @HostListener(\"mouseenter\", [\"$event\"])\n    onMouseEnter(event: MouseEvent) {\n        if (this.options.actionType === \"over\") {\n            this.action = this.mlAuditService.newAction(this.options.actionType, this.options.docId);\n            this.action.timestamp = this.mlAuditService.newTimestamp();\n        }\n    }\n\n    @HostListener(\"mouseleave\", [\"$event\"])\n    onMouseLeave(event: MouseEvent) {\n        if (this.options.actionType === \"over\") {\n            if (this.action) {\n                this.action.dwellTime = this.mlAuditService.calcDwellTime(this.action);\n                this.action.timestamp = undefined;\n                this.mlAuditService.notifyEvent(this.action);\n                this.action = undefined;\n            }\n        }\n    }\n}","import {NgModule, APP_BOOTSTRAP_LISTENER} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {BsSearchModule} from \"@sinequa/components/search\";\nimport {HTTP_REQUEST_INITIALIZERS} from \"@sinequa/core/login\";\n\nimport {MlAuditService} from \"./ml-audit.service\";\nimport {DwellTime} from \"./dwell-time.directive\";\n\n\n// Initialization that needs to be done once the app component has been created\nexport function AppBootstrapListener(mlAuditService: MlAuditService) {\n    return () => {\n        mlAuditService.init();\n    };\n}\n\nexport function HttpRequestListener(mlAuditService: MlAuditService) {\n    return mlAuditService.requestInitializer;\n}\n\n// See https://github.com/angular/angular/issues/19698\n// @dynamic\n@NgModule({\n    imports: [\n        CommonModule,\n        BsSearchModule\n    ],\n    declarations: [\n        DwellTime\n    ],\n    exports: [\n    ],\n    providers: [\n        {provide: APP_BOOTSTRAP_LISTENER, useFactory: AppBootstrapListener, deps: [MlAuditService], multi: true},\n        {provide: HTTP_REQUEST_INITIALIZERS, useFactory: HttpRequestListener, deps: [MlAuditService], multi: true},\n    ]\n})\nexport class MLModule {\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}