{"version":3,"file":"sinequa-components-alerts.js","sources":["../../../projects/components/alerts/alerts.service.ts","../projects/components/alerts/bootstrap/alert-message/alert-message.component.ts","../projects/components/alerts/bootstrap/alert-message/alert-message.component.html","../projects/components/alerts/bootstrap/edit-alert/edit-alert.html","../projects/components/alerts/bootstrap/edit-alert/edit-alert.ts","../projects/components/alerts/bootstrap/manage-alerts/manage-alerts.html","../projects/components/alerts/bootstrap/manage-alerts/manage-alerts.ts","../projects/components/alerts/bootstrap/alerts-menu/alerts-menu.component.html","../projects/components/alerts/bootstrap/alerts-menu/alerts-menu.component.ts","../../projects/components/alerts/bootstrap/alerts.module.ts","../../projects/components/alerts/messages/en.ts","../../projects/components/alerts/messages/fr.ts","../../projects/components/alerts/messages/de.ts","../../projects/components/alerts/messages/index.ts","../../../projects/components/alerts/sinequa-components-alerts.ts"],"sourcesContent":["import {Injectable, InjectionToken, Inject, Type, OnDestroy} from \"@angular/core\";\nimport {Subject} from \"rxjs\";\nimport {UserSettingsWebService, AuditEvents, AuditEvent} from \"@sinequa/core/web-services\";\nimport {ModalService, ModalResult} from \"@sinequa/core/modal\";\nimport {Query} from \"@sinequa/core/app-utils\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {SearchService} from \"@sinequa/components/search\";\n\n// From core/models/usersettings\nexport namespace Alert {\n    export enum Frequency {\n        Daily,\n        Hourly,\n        Immediate,\n        Weekly,\n        Monthly\n    }\n\n    export enum Days {\n        None = 0x00,\n        Monday = 0x01,\n        Tuesday = 0x02,\n        Wednesday = 0x04,\n        Thursday = 0x08,\n        Friday = 0x10,\n        Saturday = 0x20,\n        Sunday = 0x40,\n        AllDays = (Monday | Tuesday | Wednesday | Thursday | Friday | Saturday | Sunday),\n        WeekDays = (Monday | Tuesday | Wednesday | Thursday | Friday)\n    }\n}\n\nexport interface Alert {\n    name: string;\n    description?: string;\n    query: Query;\n    timezone: string;\n    timezoneOffset?: string;\n    frequency: Alert.Frequency;\n    days: Alert.Days;\n    interval: number; // every \"n\"...\n    index: number; // day of month\n    times: string; //times: number[]; // offsets from 00:00 in milliseconds\n    active: boolean;\n    combine: boolean;\n    respectTabSelection: boolean;\n    appQueryUrl?: string; // the URL reference the query of the Alert in the SBA.\n}\n\n// from core/models/audit\nexport const enum AlertEventType {\n    Loaded = \"Alert_Loaded\",\n    Patched = \"Alert_Patched\",\n\n    Add = \"Alert_Add\",\n    Delete = \"Alert_Delete\",\n    DeleteAll = \"Alert_DeleteAll\",\n    Update = \"Alert_Update\",\n\n    Search_AlertQuery = \"Search_AlertQuery\",\n}\n\n// Types of events triggering a change event\nexport const ALERT_CHANGE_EVENTS = [\n    AlertEventType.Loaded,\n    AlertEventType.Add,\n    AlertEventType.Delete,\n    AlertEventType.Update\n];\n\n\n// CRUD Events\nexport interface AlertChangeEvent {\n    type: AlertEventType;\n    alert?: Alert;\n}\n\n\n// Model expected by the ManageAlerts Modal.\nexport interface ManageAlertsModel {\n    alerts: Alert[];\n    auditEvents?: AuditEvent[];\n    searchRoute?: string;\n}\n\n/**\n * The modal types are unknown to this service.\n * The module using this service must provide these components\n * in their forRoot() method\n *\n * Example below:\n *\n *  public static forRoot(): ModuleWithProviders<AlertsModule> {\n        return {\n            ngModule: AlertsModule,\n            providers: [\n                {\n                    provide: ALERT_COMPONENTS,\n                    useValue: {\n                        editAlertModal: EditAlert,\n                        manageAlertsModal: ManageAlerts\n                    }\n                },\n                AlertsService\n            ]\n        };\n    }\n *\n */\nexport interface AlertComponents {\n    editAlertModal: Type<any>;\n    manageAlertsModal: Type<any>;\n}\nexport const ALERT_COMPONENTS = new InjectionToken<AlertComponents>('ALERT_COMPONENTS');\nexport const WINDOW = new InjectionToken('WindowToken');\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AlertsService implements OnDestroy {\n\n    private readonly _events = new Subject<AlertChangeEvent>();\n    private readonly _changes = new Subject<AlertChangeEvent>();\n\n    constructor(\n        public userSettingsService: UserSettingsWebService,\n        public searchService: SearchService,\n        public modalService: ModalService,\n        @Inject(ALERT_COMPONENTS) public alertComponents: AlertComponents,\n        @Inject(WINDOW) private window : Window\n    ){\n        // Listen to the user settings\n        this.userSettingsService.events.subscribe(event => {\n            // E.g. new login occurs\n            // ==> Menus need to be rebuilt\n            this.events.next({type: AlertEventType.Loaded});\n        });\n        // Listen to own events, to trigger change events\n        this._events.subscribe(event => {\n            if(ALERT_CHANGE_EVENTS.indexOf(event.type) !== -1){\n                this.changes.next(event);\n            }\n        });\n    }\n\n    // GETTERS\n\n    /**\n     * Returns the list of this user's alerts.\n     * The list is stored in the user settings (this is a redirection).\n     * Using this service creates the list of alerts if it does not already exist.\n     */\n    public get alerts() : Alert[]{\n        if(!this.userSettingsService.userSettings)\n            this.userSettingsService.userSettings = {};\n        if(!this.userSettingsService.userSettings[\"alerts\"])\n            this.userSettingsService.userSettings[\"alerts\"] = [];\n        return <Alert[]> (<unknown>this.userSettingsService.userSettings[\"alerts\"]);\n    } // TODO: remove cast when UserSettings is updated\n\n    /**\n     * Triggers any event among AlertChangeEvent\n     * (use for fine-grained control of alerts workflow)\n     */\n    public get events() : Subject<AlertChangeEvent> {\n        return this._events;\n    }\n\n    /**\n     * Triggers when events affect the list of alerts\n     * (use to refresh alert menus)\n     * Cf. CHANGE_EVENTS list\n     */\n    public get changes() : Subject<AlertChangeEvent> {\n        return this._changes;\n    }\n\n    /**\n     * @returns true if there is at least one alert\n     */\n    public get hasAlert(): boolean {\n        return this.alerts.length > 0;\n    }\n\n    /**\n     * @returns an alert with the given name or undefined if it does not exist\n     * @param name\n     */\n    public alert(name: string): Alert | undefined {\n        const i = this.alertIndex(name);\n        return i>= 0? this.alerts[i] : undefined;\n    }\n\n    private alertIndex(name: string): number {\n        for (let i = 0, ic = this.alerts.length; i < ic; i++) {\n            const alert = this.alerts[i];\n            if (alert && alert.name === name) {\n                return i;\n            }\n        }\n        return -1;\n    }\n\n\n    // CRUD\n\n    /**\n     * Creates a new alert unless it already exists.\n     * Emits an Alert event.\n     * Update the data on the server.\n     * @param alert the alert to create\n     * @returns true if alert was created\n     */\n    public createAlert(alert: Alert) : boolean {\n\n        if(this.alertIndex(alert.name) >= 0)\n            return false; // This alert already exists\n\n        this.alerts.unshift(alert);\n        this.events.next({type : AlertEventType.Add, alert: alert});\n        this.patchAlerts([{\n            type: AlertEventType.Add,\n            detail: {\n                alert: alert.name\n            }\n        }]);\n        return true;\n    }\n\n    /**\n     * Update the alert at the given index, unless an alert with the same name\n     * already exists in the list of alerts.\n     * Emits an Alert event.\n     * Update the data on the server.\n     * @param alert the alert to update\n     * @param index the index at which to update the alert\n     * @returns true if alert was updated\n     */\n    public updateAlert(alert: Alert, index : number) : boolean {\n\n        const prevIndex = this.alertIndex(alert.name);\n        if(prevIndex !== -1 && index !== prevIndex)\n            return false; // An alert with the same name exists at a different index\n\n        if(index >= 0 && index < this.alerts.length){\n\n            this.alerts.splice(index, 1, alert);\n            this.events.next({type : AlertEventType.Update, alert: alert});\n            this.patchAlerts([\n                {\n                    type: AlertEventType.Update,\n                    detail: {\n                        alert: alert.name\n                    }\n                }\n            ]);\n            return true;\n\n        }\n        return false;   // This alert does not exist\n    }\n\n    /**\n     * Updates the full list of alerts.\n     * Emits an Alert event.\n     * Update the data on the server.\n     * @param alerts the new list of alerts\n     * @param auditEvents the list of audit events to log\n     */\n    public updateAlerts(alerts : Alert[], auditEvents?: AuditEvents) : boolean {\n        Utils.arraySet(this.alerts, alerts);\n        this.events.next({type : AlertEventType.Update});\n        this.patchAlerts(auditEvents);\n        return true;\n    }\n\n    /**\n     * Deletes the given alert (based on its name)\n     * Emits an Alert event.\n     * Update the data on the server.\n     * @param alert\n     * @returns true if alert was deleted\n     */\n    public deleteAlert(alert: Alert) : boolean {\n\n        const index = this.alertIndex(alert.name);\n\n        if(index === -1)\n            return false; // Nothing to delete\n\n        this.alerts.splice(index, 1);\n        this.events.next({type : AlertEventType.Delete, alert: alert});\n        this.patchAlerts([\n            {\n                type: AlertEventType.Delete,\n                detail: {\n                    alert: alert.name\n                }\n            }\n        ]);\n        return true;\n    }\n\n    /**\n     * Sets this alert to the current search context, using the search service\n     */\n    public setAlertToCurrentQuery(alert: Alert){\n        alert.query = Query.copy(this.searchService.query);\n    }\n\n    /**\n     * Updates Alerts in User settings.\n     * @param auditEvents : Audit Events to be triggered\n     * @returns an Observable which can be used to trigger further events\n     */\n    private patchAlerts(auditEvents?: AuditEvents) {\n        return this.userSettingsService.patch({alerts: this.alerts}, auditEvents)\n            .subscribe(\n                next => {\n                    this.events.next({type: AlertEventType.Patched});\n                },\n                error => {\n                    console.error(\"Could not patch Alerts!\", error);\n                }\n            );\n    }\n\n\n\n\n    // EVENT HANDLERS (Menus)\n\n    /**\n     * Uses the SearchService to perform a search returning all\n     * the documents matching this alert.\n     * @param alert\n     * @returns the search service promise\n     */\n    public searchAlert(alert: Alert, path?: string) : Promise<boolean> {\n        this.searchService.setQuery(Utils.extend(this.searchService.makeQuery(), Utils.copy(alert.query)));\n        this.events.next({type: AlertEventType.Search_AlertQuery, alert: alert});\n        return this.searchService.search( {path: path}, {\n            type: AlertEventType.Search_AlertQuery,\n            detail: {\n                alert: alert.name\n            }\n        });\n    }\n\n    /**\n     * Opens a dialog allowing a user to create a new alert.\n     * @returns a boolean promise resolved when the user closes the dialog\n     * the result is true if the alert was created.\n     */\n    public createAlertModal() : Promise<boolean> {\n        const alert: Alert = {\n            name: \"\",\n            description: \"\",\n            timezone: this.userSettingsService.timezone,\n            query: Query.copy(this.searchService.query),\n            frequency: Alert.Frequency.Daily,\n            days: Alert.Days.WeekDays,\n            interval: 1,\n            index: 1,\n            times: \"9:00\",\n            active: true,\n            combine: true,\n            respectTabSelection: false\n        };\n        const queryUrl = this.window.location.href;\n        return this.modalService.open(this.alertComponents.editAlertModal, {model: { alert: alert }})\n            .then((result) => {\n                if (result === ModalResult.OK) {\n\n                    const index = this.alertIndex(alert.name);\n                    if (index !== -1) {\n\n                        return this.modalService.yesNo(\"msg#alerts.alertAlreadyExists\")\n                            .then((result) => {\n                                if (result === ModalResult.Yes) {\n                                    alert.appQueryUrl = queryUrl;\n                                    return this.updateAlert(alert, index);\n                                }\n                                return false;\n                            });\n\n                    } else {\n                        alert.appQueryUrl = queryUrl;\n                        return this.createAlert(alert);\n                    }\n                }\n                return false;\n            });\n    }\n\n    /**\n     * Opens a dialog allowing a user to edit an existing alert.\n     * @param alert: The alert to edit\n     * @param noUpdate: if true, will not update the server after the edit\n     * @param searchRoute: the route to use when replaying the alert's query\n     * @returns a boolean promise resolved when the user closes the dialog\n     * the result is true if the alert was updated.\n     */\n    public editAlertModal(alert: Alert, noUpdate?: boolean, searchRoute?: string) : Promise<boolean> {\n\n        const prevName = alert.name;\n\n        const queryUrl = this.window.location.href;\n        return this.modalService.open(this.alertComponents.editAlertModal,  {model: { alert: alert, searchRoute: searchRoute }})\n            .then((result) => {\n\n                if (result === ModalResult.OK) {\n\n                    if(noUpdate) return true;\n\n                    const prevIndex = this.alertIndex(prevName);\n                    if(prevIndex === -1) return false; // this alert did not exist\n\n                    const index = this.alertIndex(alert.name);\n                    if (index !== -1 && index !== prevIndex) {  // An alert with the same (new) name exists\n\n                        return this.modalService.yesNo(\"msg#alerts.alertAlreadyExists\")\n                            .then((result) => {\n                                if (result === ModalResult.Yes) {\n                                    const prevAlert = this.alert(prevName);\n                                    if (prevAlert) {\n                                        this.deleteAlert(prevAlert); // Remove the alert with old name\n                                    }\n                                    alert.appQueryUrl = queryUrl;\n                                    return this.updateAlert(alert, this.alertIndex(alert.name)); // Update the alert with new name (index might have changed due to delete of old name)\n                                }\n                                return false;\n                            });\n\n                    } else {\n\n                        alert.appQueryUrl = queryUrl;\n                        return this.updateAlert(alert, prevIndex); // Update this alert\n\n                    }\n                }\n\n                return false;\n            });\n    }\n\n    /**\n     * Opens a dialog allowing a user to reorganize and edit the\n     * list of alerts.\n     * @returns a boolean promise resolved when the user closes the dialog\n     * the result is true is the list was updated.\n     */\n    public manageAlertsModal(searchRoute?: string) : Promise<boolean> {\n\n        const model: ManageAlertsModel =  { alerts: Utils.copy(this.alerts), searchRoute: searchRoute };\n\n        return this.modalService.open(this.alertComponents.manageAlertsModal, {model})\n            .then((result) => {\n                if (result === ModalResult.OK) {\n                    return this.updateAlerts(model.alerts, model.auditEvents);\n                }\n                return false;\n            });\n\n    }\n\n    ngOnDestroy() {\n        this.events.complete();\n        this.changes.complete();\n    }\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'sq-alert-message',\n  templateUrl: './alert-message.component.html'\n})\nexport class BsAlertMessageComponent {\n  @Input() message: string;\n}\n","<div class=\"alert alert-danger ml-3 mr-3 p-3 text-center\" role=\"alert\">\n  {{ message }}\n</div>","<form name=\"editAlert\" novalidate [formGroup]=\"form\">\n    <sq-modal [title]=\"'msg#editAlert.title'\" [buttons]=\"buttons\">\n        <div class=\"form-group sq-form-group\">\n            <label for=\"alertName\">{{'msg#editAlert.name' | sqMessage}}</label>\n            <input [sqValidation]=\"form\" type=\"text\" class=\"form-control\" id=\"alertName\" formControlName=\"alertName\" autocomplete=\"off\" spellcheck=\"off\" sqAutofocus>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"alertFrequency\">{{'msg#editAlert.frequency' | sqMessage}}</label>\n            <select class=\"form-control custom-select\" id=\"alertFrequency\" formControlName=\"alertFrequency\">\n                <option *ngFor=\"let frequencyValue of frequencies\" [value]=\"frequencyValue\">{{frequency[frequencyValue] | sqMessage}}</option>\n            </select>\n        </div>\n        <div class=\"form-group\">\n            <label>{{'msg#editAlert.days' | sqMessage}}</label>\n            <div class=\"weekdays-grid\">\n                <label *ngFor=\"let day of weekdays | keyvalue: originalOrder\" class=\"custom-control custom-control-inline custom-checkbox\">\n                    <input class=\"custom-control-input\" type=\"checkbox\" [checked]=\"dayChecked(day.value)\" (change)=\"dayChange($event, day.value)\">\n                    <span class=\"custom-control-label user-select-none cursor-pointer\">{{ 'msg#editAlert.'+day.key | sqMessage}}</span>\n                </label>\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"alertTimes\">{{'msg#editAlert.times' | sqMessage}}</label>\n            <input type=\"text\" class=\"form-control\" id=\"alertTimes\" formControlName=\"alertTimes\" autocomplete=\"off\" spellcheck=\"off\">\n        </div>\n        <div class=\"form-group\">\n            <label class=\"custom-control custom-control-inline custom-checkbox\">\n                <input class=\"custom-control-input\" type=\"checkbox\" id=\"alertActive\" formControlName=\"alertActive\">\n                <span class=\"custom-control-label user-select-none cursor-pointer\">{{'msg#editAlert.active' | sqMessage}}</span>\n            </label>\n            <label *ngIf=\"canUpdateQuery\" class=\"custom-control custom-control-inline custom-checkbox\">\n                <input class=\"custom-control-input\" type=\"checkbox\" id=\"updateQuery\" formControlName=\"updateQuery\">\n                <span class=\"custom-control-label user-select-none cursor-pointer\">{{'msg#editAlert.updateQuery' | sqMessage}}</span>\n            </label>\n        </div>\n        <sq-alert-message footer [message]=\"'msg#editAlert.lossDataMessage' | sqMessage\" *ngIf=\"showDirtyMessage\"></sq-alert-message>\n    </sq-modal>\n</form>","import {Component, OnInit, OnDestroy, Inject} from \"@angular/core\";\nimport {FormBuilder, FormGroup, FormControl, Validators} from \"@angular/forms\";\nimport {Subscription} from \"rxjs\";\nimport {ModalRef, MODAL_MODEL, ModalButton, ModalResult} from \"@sinequa/core/modal\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {AlertsService, Alert} from \"../../alerts.service\";\nimport {SearchService} from \"@sinequa/components/search\";\nimport {KeyValue} from \"@angular/common\";\n\n@Component({\n    selector: \"sq-edit-alert\",\n    templateUrl: \"./edit-alert.html\",\n    styleUrls: [\"./edit-alert.scss\"]\n})\nexport class BsEditAlert implements OnInit, OnDestroy {\n    form: FormGroup;\n    formChanges: Subscription;\n    buttons: ModalButton[];\n    frequencies: Alert.Frequency[];\n    frequency: typeof Alert.Frequency;\n    canUpdateQuery: boolean;\n    updateQuery: boolean;\n    weekdays = {\n        'monday': Alert.Days.Monday, \n        'tuesday': Alert.Days.Tuesday,\n        'wednesday': Alert.Days.Wednesday,\n        'thursday': Alert.Days.Thursday,\n        'friday': Alert.Days.Friday,\n        'saturday': Alert.Days.Saturday,\n        'sunday': Alert.Days.Sunday\n    };\n    \n    showDirtyMessage = false;\n    \n    // Preserve original property order\n    originalOrder = (a: KeyValue<string, Alert.Days>, b: KeyValue<string, Alert.Days>): number => 0\n    \n    private alertDaysControl: FormControl;\n    private alertNameControl: FormControl;\n    private alertFrequencyControl: FormControl;\n    private alertTimesControl: FormControl;\n    private alertActiveControl: FormControl;\n    private updateQueryControl: FormControl;\n\n    constructor(\n        @Inject(MODAL_MODEL) public model: { alert: Alert, searchRoute?: string },\n        private formBuilder: FormBuilder,\n        private searchService: SearchService,\n        private alertsService: AlertsService,\n        private modalRef: ModalRef) {\n        this.frequencies = [\n            Alert.Frequency.Daily,\n            Alert.Frequency.Hourly,\n            Alert.Frequency.Immediate,\n        ];\n        this.frequency = Alert.Frequency;\n    }\n\n    get alert() {\n        return this.model.alert;\n    }\n\n    ngOnInit() {\n        if (!this.alert.days) {\n            this.alert.days = Alert.Days.None;\n        }\n        this.canUpdateQuery = (!!this.alertsService.alert(this.alert.name)) &&\n            !!this.searchService.results && !!this.searchService.results.records;\n\n        this.alertDaysControl = new FormControl(this.alert.days);\n        this.alertNameControl = new FormControl(this.alert.name, Validators.required);\n        this.alertFrequencyControl = new FormControl(this.alert.frequency);\n        this.alertTimesControl = new FormControl(this.alert.times); // TODO validator\n        this.alertActiveControl = new FormControl(this.alert.active);\n        this.updateQueryControl = new FormControl(this.updateQuery);\n        this.form = this.formBuilder.group({\n            alertName: this.alertNameControl,\n            alertFrequency: this.alertFrequencyControl,\n            alertTimes: this.alertTimesControl,\n            alertActive: this.alertActiveControl,\n            updateQuery: this.updateQueryControl\n        });\n        this.formChanges = Utils.subscribe(this.form.valueChanges,\n            (value) => {\n                this.alert.name = this.alertNameControl.value;\n                this.alert.frequency = this.alertFrequencyControl.value;\n                this.alert.times = this.alertTimesControl.value;\n                this.alert.active = this.alertActiveControl.value;\n                this.alert.days = this.alertDaysControl.value;\n                this.updateQuery = this.updateQueryControl.value;\n            }\n        );\n        \n        this.createButtons();\n    }\n\n    private createButtons() {\n        this.buttons = [\n            new ModalButton({\n                text: \"msg#editAlert.runQuery\",\n                result: ModalResult.Custom,\n                action: (button) => {\n                    this.runQuery();\n                    this.modalRef.close(ModalResult.Cancel); // dismiss the dialog too (?)\n                },\n                visible: !!this.alertsService.alert(this.alert.name)\n            }),\n            new ModalButton({\n                result: ModalResult.OK,\n                primary: true,\n                validation: this.form,\n                action: (button) => {\n                    if (this.updateQuery) {\n                        this.alertsService.setAlertToCurrentQuery(this.alert);\n                    }\n                }\n            }),\n            new ModalButton({\n                result: ModalResult.Cancel,\n                action: (button) => {\n                    if (this.form.dirty) {\n                        button.result = ModalResult.Custom;\n                        this.showDirtyMessage = true;\n                        this.createYesNoButtons();\n                    }\n                }\n            })\n        ];\n    }\n    private createYesNoButtons() {\n        this.buttons = [\n            new ModalButton({\n                result: ModalResult.Yes,\n                primary: true,\n            }),\n            new ModalButton({\n                result: ModalResult.No,\n                action: (button) => {\n                    button.result = ModalResult.Custom;\n                    this.showDirtyMessage = false;\n                    this.createButtons();\n                }\n            })\n        ];\n    }\n    ngOnDestroy() {\n        this.formChanges.unsubscribe();\n    }\n\n    dayChecked(day: Alert.Days): boolean {\n        return (this.alert.days & day) !== 0;\n    }\n\n    dayChange(event: UIEvent, day: Alert.Days) {\n        const input = event.target as HTMLInputElement;\n        if (input.checked) {\n            this.alertDaysControl.setValue(this.alert.days |= day);\n            // this.alert.days |= day;\n        }\n        else {\n            this.alertDaysControl.setValue(this.alert.days &= ~day);\n            // this.alert.days &= ~day;\n        }\n        this.form.markAsDirty();\n    }\n\n    runQuery() {\n        this.alertsService.searchAlert(this.alert, this.model.searchRoute);\n    }\n}","<form name=\"manageAlerts\" novalidate>\n    <sq-modal [title]=\"'msg#manageAlerts.title'\" [buttons]=\"buttons\">\n        <div *ngIf=\"model.alerts.length\" class=\"form-group clearfix\">\n            <button type=\"button\" class=\"btn btn-secondary float-right\" (click)=\"reorder()\">{{(reordering ? \"msg#manageAlerts.edit\" : \"msg#manageAlerts.reorder\") | sqMessage}}</button>\n        </div>\n        <div class=\"form-group\">\n            <div class=\"list-group\" cdkDropList [cdkDropListData]=\"model.alerts\" [cdkDropListDisabled]=\"!reordering\" (cdkDropListDropped)=\"dropped($event)\">\n                <a *ngFor=\"let alert of model.alerts; let $index = index\" href=\"#\" (click)=\"editAlert(alert)\" cdkDrag \n                    [ngClass]=\"['list-group-item list-group-item-action d-flex w-auto-unimportant', reordering ? 'cursor-move': '']\">\n                    <div [ngClass]=\"{'sq-active': !reordering, 'sq-alert-text': true}\">{{alert.name}}</div>\n                    <div class=\"ml-auto\">\n                        <a *ngIf=\"!reordering\" class=\"ml-2\" href=\"#\" (click)=\"remove(alert, $index)\" title=\"{{'msg#manageAlerts.remove' | sqMessage}}\">\n                            <span class=\"fas fa-times sq-remove\"></span>\n                        </a>\n                        <span *ngIf=\"reordering\" class=\"ml-2 fas fa-bars sq-move\"></span>\n                    </div>\n                </a>\n            </div>\n        </div>\n        <sq-alert-message footer [message]=\"'msg#editAlert.lossDataMessage' | sqMessage\" *ngIf=\"showDirtyMessage\"></sq-alert-message>\n    </sq-modal>\n</form>\n","import {Component, Inject, OnInit} from \"@angular/core\";\nimport {ValidatorFn} from \"@angular/forms\";\nimport {CdkDragDrop} from \"@angular/cdk/drag-drop\";\nimport {MODAL_MODEL, ModalButton, ModalResult} from \"@sinequa/core/modal\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {AuditEvent, AuditEventType} from \"@sinequa/core/web-services\";\nimport {AlertsService, Alert, AlertEventType, ManageAlertsModel} from \"../../alerts.service\";\n\n@Component({\n    selector: \"sq-manage-alerts\",\n    templateUrl: \"./manage-alerts.html\",\n    styleUrls: [\"./manage-alerts.scss\"]\n})\nexport class BsManageAlerts implements OnInit {\n    reordering: boolean;\n    buttons: ModalButton[];\n    removeAllButton: ModalButton;\n    nameValidators: ValidatorFn[];\n    showDirtyMessage = false;\n\n    constructor(\n        @Inject(MODAL_MODEL) public model: ManageAlertsModel,\n        public alertsService: AlertsService) {\n        this.reordering = false;\n    }\n\n    ngOnInit() {\n        this.createButtons();\n    }\n\n    addAuditEvent(auditEvent: AuditEvent) {\n        if (!this.model.auditEvents) {\n            this.model.auditEvents = [];\n        }\n        this.model.auditEvents.push(auditEvent);\n    }\n\n    reorder() {\n        this.reordering = !this.reordering;\n    }\n\n    remove(alert: Alert, index: number) {\n        this.model.alerts.splice(index, 1);\n        this.removeAllButton.visible = this.model.alerts.length > 0;\n        this.addAuditEvent({\n            type: AuditEventType.Alert_Delete,\n            detail: {\n                alert: alert.name\n            }\n        });\n        return false;\n    }\n\n    editAlert(alert: Alert) {\n        if (!this.reordering) {\n            const alert1 = Utils.copy(alert);\n            this.alertsService.editAlertModal(alert1, true, this.model.searchRoute)\n                .then(result => {\n                    if (result) {\n                        Utils.copy(alert1, alert);\n                        this.addAuditEvent({\n                            type: AuditEventType.Alert_Edit,\n                            detail: {\n                                alert: alert.name\n                            }\n                        });\n                    }\n                });\n        }\n        return false;\n    }\n\n    dropped(drop: CdkDragDrop<Alert[]>) {\n        Utils.arrayMove(this.model.alerts, drop.previousIndex, drop.currentIndex);\n    }\n    \n    private createButtons() {\n        this.buttons = [\n            this.removeAllButton = new ModalButton({\n                text: \"msg#manageAlerts.removeAll\",\n                result: ModalResult.Custom,\n                action: (button) => {\n                    this.model.alerts.splice(0);\n                    button.visible = false;\n                    this.addAuditEvent({\n                        type: AlertEventType.DeleteAll\n                    });\n                },\n                visible: this.model.alerts.length > 0\n            }),\n            new ModalButton({\n                result: ModalResult.OK,\n                primary: true\n            }),\n            new ModalButton({\n                result: ModalResult.Cancel,\n                action: (button) => {\n                    if (this.model.auditEvents && this.model.auditEvents?.length > 0) {\n                        button.result = ModalResult.Custom;\n                        this.showDirtyMessage = true;\n                        this.createYesNoButtons();\n                    }\n                }\n            })\n        ];\n    }\n    \n    private createYesNoButtons() {\n        this.buttons = [\n            new ModalButton({\n                result: ModalResult.Yes,\n                primary: true,\n            }),\n            new ModalButton({\n                result: ModalResult.No,\n                action: (button) => {\n                    button.result = ModalResult.Custom;\n                    this.showDirtyMessage = false;\n                    this.createButtons();\n                }\n            })\n        ];\n    }\n}\n","<li *ngIf=\"!!menu && !menu.hidden\" class=\"nav-item dropdown\" \n    [sq-action-item]=\"{item: menu, size: size, autoAdjust: autoAdjust, autoAdjustBreakpoint: autoAdjustBreakpoint, inMenu: true}\"\n    [collapseBreakpoint]=\"collapseBreakpoint\"\n></li>","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport { Action } from '@sinequa/components/action';\nimport { LoginService } from '@sinequa/core/login';\nimport { AlertsService, Alert } from '../../alerts.service';\nimport { SearchService } from '@sinequa/components/search';\nimport { Utils } from '@sinequa/core/base';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'sq-alerts-menu',\n  templateUrl: './alerts-menu.component.html'\n})\nexport class BsAlertsMenuComponent implements OnInit, OnDestroy {\n  \n  @Input() searchRoute: string = \"/search\";\n  @Input() icon: string = \"fas fa-bell\";\n  @Input() autoAdjust: boolean = true;\n  @Input() autoAdjustBreakpoint: string = 'xl';\n  @Input() collapseBreakpoint: string = 'sm';\n  @Input() size: string;\n\n  menu: Action | undefined;\n\n  // Alerts actions\n  createAction: Action;\n  manageAction: Action;\n\n  constructor(\n    public loginService: LoginService,\n    public alertsService: AlertsService,\n    public searchService: SearchService\n  ) {\n\n    this.createAction = new Action({\n      text: \"msg#alerts.createAlert\",\n      title: \"msg#alerts.createAlert\",\n      action: () => { this.alertsService.createAlertModal(); }\n    });\n\n    this.manageAction = new Action({\n      text: \"msg#alerts.manageAlerts\",\n      title: \"msg#alerts.manageAlerts\",\n      action: () => { this.alertsService.manageAlertsModal(this.searchRoute); }\n    });\n\n  }\n\n  ngOnInit() {\n    this.updateMenu();\n    this._alertsServiceSubscription = this.alertsService.changes.subscribe({\n      next: () => { this.updateMenu(); }\n    });\n    this._loginServiceSubscription = this.loginService.events.subscribe(event => {\n      if(event.type === \"session-changed\"){\n        this.updateMenu();\n      }\n    });\n    this._searchServiceSubscription = this.searchService.resultsStream.subscribe(results => {\n      this.updateMenu();\n    });\n  }\n\n  private _alertsServiceSubscription: Subscription;\n  private _loginServiceSubscription: Subscription;\n  private _searchServiceSubscription: Subscription;\n  ngOnDestroy(){\n    if(this._alertsServiceSubscription){\n      this._alertsServiceSubscription.unsubscribe();\n    }\n    if(this._loginServiceSubscription){\n      this._loginServiceSubscription.unsubscribe();\n    }\n    if(this._searchServiceSubscription){\n      this._searchServiceSubscription.unsubscribe();\n    }\n  }\n\n  updateMenu() {\n\n    if (!this.loginService.complete) {\n      this.menu = undefined;\n      return;\n    }\n\n    const alertsActions: Action[] = [];\n\n    if (this.alertsService.hasAlert) {\n        const scrollGroup = new Action({\n            scrollGroup: true,\n            children: this.alertsService.alerts.map(alert => new Action({\n              text: alert.name,\n              data: alert,\n              action: (item: Action) => {\n                const alert: Alert = Utils.copy(item.data);\n                this.alertsService.editAlertModal(alert, undefined, this.searchRoute);\n              }\n          }))\n        });\n        alertsActions.push(scrollGroup);\n    }\n\n    if (!!this.searchService.results) {\n        alertsActions.push(this.createAction);\n    }\n\n    if (this.alertsService.hasAlert) {\n        alertsActions.push(this.manageAction);\n    }\n\n    this.menu = new Action({\n      icon: this.icon,\n      text: \"msg#alerts.alerts\",\n      children: alertsActions\n    });\n  }\n\n}\n","import {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {DragDropModule} from \"@angular/cdk/drag-drop\";\n\nimport {IntlModule} from \"@sinequa/core/intl\";\nimport {ValidationModule} from \"@sinequa/core/validation\";\n\nimport {UtilsModule} from \"@sinequa/components/utils\";\nimport {BsActionModule} from \"@sinequa/components/action\";\nimport {BsModalModule} from \"@sinequa/components/modal\";\n\nimport {ALERT_COMPONENTS, WINDOW} from \"../alerts.service\";\nimport {BsEditAlert} from \"./edit-alert/edit-alert\";\nimport {BsManageAlerts} from \"./manage-alerts/manage-alerts\";\nimport {BsAlertsMenuComponent} from \"./alerts-menu/alerts-menu.component\";\nimport {BsAlertMessageComponent} from \"./alert-message/alert-message.component\";\n\nfunction windowFactory() {\n    return window;\n}\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule, ReactiveFormsModule,\n        DragDropModule,\n\n        BsModalModule,\n\n        IntlModule,\n        ValidationModule,\n\n        UtilsModule,\n        BsActionModule\n    ],\n    declarations: [\n        BsEditAlert, BsManageAlerts, BsAlertsMenuComponent, BsAlertMessageComponent\n    ],\n    exports: [\n        BsEditAlert, BsManageAlerts, BsAlertsMenuComponent\n    ],\n    providers: [\n        {\n            provide: ALERT_COMPONENTS,\n            useValue: {\n                editAlertModal: BsEditAlert,\n                manageAlertsModal: BsManageAlerts\n            }\n        },\n        {\n            provide: WINDOW,\n            useFactory: windowFactory\n        }\n    ]\n})\nexport class BsAlertsModule {\n}\n","export default {\n    \"alerts\": {\n        \"alerts\": \"Alerts\",\n        \"createAlert\": \"Create Alert\",\n        \"manageAlerts\": \"Manage Alerts\",\n        \"alertAlreadyExists\": \"An alert with that name already exists. Would you like to replace it?\"\n    },\n\n    \"editAlert\": {\n        \"title\": \"Alert\",\n        \"name\": \"Name\",\n        \"frequency\": \"Frequency\",\n        \"days\": \"Days\",\n        \"monday\": \"Monday\",\n        \"tuesday\": \"Tuesday\",\n        \"wednesday\": \"Wednesday\",\n        \"thursday\": \"Thursday\",\n        \"friday\": \"Friday\",\n        \"saturday\": \"Saturday\",\n        \"sunday\": \"Sunday\",\n        \"times\": \"Times\",\n        \"active\": \"Active\",\n        \"updateQuery\": \"Update Query\",\n        \"runQuery\": \"Run Query\",\n        \"lossDataMessage\": \"Do you want to leave without saving your modifications?\"\n    },\n\n    \"manageAlerts\": {\n        \"title\": \"Manage Alerts\",\n        \"edit\": \"Edit\",\n        \"reorder\": \"Reorder\",\n        \"remove\": \"Remove\",\n        \"removeAll\": \"Remove all\"\n    },\n\n};\n","export default {\n    \"alerts\": {\n        \"alerts\": \"Alertes\",\n        \"createAlert\": \"Créer une alerte\",\n        \"manageAlerts\": \"Gérer les alertes\",\n        \"alertAlreadyExists\": \"Une alerte avec ce nom existe déjà. Voulez-vous la remplacer ?\"\n    },\n\n    \"editAlert\": {\n        \"title\": \"Alerte\",\n        \"name\": \"Nom\",\n        \"frequency\": \"Fréquence\",\n        \"days\": \"Jours\",\n        \"monday\": \"lundi\",\n        \"tuesday\": \"mardi\",\n        \"wednesday\": \"mercredi\",\n        \"thursday\": \"jeudi\",\n        \"friday\": \"vendredi\",\n        \"saturday\": \"samedi\",\n        \"sunday\": \"dimanche\",\n        \"times\": \"Horaires\",\n        \"active\": \"Active\",\n        \"updateQuery\": \"Mettre à jour la requête\",\n        \"runQuery\": \"Exécuter la requête\",\n        \"lossDataMessage\": \"Voulez-vous quitter sans sauvegarder vos modifications ?\"\n    },\n\n    \"manageAlerts\": {\n        \"title\": \"Gérer les alertes\",\n        \"edit\": \"Editer\",\n        \"reorder\": \"Réorganiser\",\n        \"remove\": \"Effacer\",\n        \"removeAll\": \"Effacer tout\"\n    },\n\n};\n","export default {\n    \"alerts\": {\n        \"alerts\": \"Alarme\",\n        \"createAlert\": \"Alarm erstellen\",\n        \"manageAlerts\": \"Alarme verwalten\",\n        \"alertAlreadyExists\": \"Ein Alarm mit diesem Namen existiert bereits. Möchten Sie ihn ersetzen?\"\n    },\n\n    \"editAlert\": {\n        \"title\": \"Alarm\",\n        \"name\": \"Name\",\n        \"frequency\": \"Häufigkeit\",\n        \"days\": \"Tage\",\n        \"monday\": \"Montag\",\n        \"tuesday\": \"Dienstag\",\n        \"wednesday\": \"Mittwoch\",\n        \"thursday\": \"Donnerstag\",\n        \"friday\": \"Freitag\",\n        \"saturday\": \"Samstag\",\n        \"sunday\": \"Sonntag\",\n        \"times\": \"Uhrzeitangaben\",\n        \"active\": \"Aktiv\",\n        \"updateQuery\": \"Aktualisiere Suchanfrage\",\n        \"runQuery\": \"Führe Suchanfrage aus\",\n        \"lossDataMessage\": \"Möchten Sie gehen, ohne Ihre Änderungen zu speichern?\"\n    },\n\n    \"manageAlerts\": {\n        \"title\": \"Alarme verwalten\",\n        \"edit\": \"Bearbeiten\",\n        \"reorder\": \"Neu sortieren\",\n        \"remove\": \"Entfernen\",\n        \"removeAll\": \"Alle entfernen\"\n    },\n\n};\n","import {Utils} from \"@sinequa/core/base\";\nimport {enSearch, frSearch, deSearch} from \"@sinequa/components/search\";\nimport {enModal, frModal, deModal} from \"@sinequa/components/modal\";\nimport _enAlerts from \"./en\";\nimport _frAlerts from \"./fr\";\nimport _deAlerts from \"./de\";\n\nconst enAlerts = Utils.merge({}, _enAlerts, enSearch, enModal);\nconst frAlerts = Utils.merge({}, _frAlerts, frSearch, frModal);\nconst deAlerts = Utils.merge({}, _deAlerts, deSearch, deModal);\n\nexport { enAlerts, frAlerts, deAlerts };\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵadvance","i0.ɵɵtextInterpolate1","i0.ɵɵproperty","i0.ɵɵtextInterpolate","i0.ɵɵlistener","i0.ɵɵelement","i0.ɵɵtemplate","i0.ɵɵpropertyInterpolate"],"mappings":"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"}