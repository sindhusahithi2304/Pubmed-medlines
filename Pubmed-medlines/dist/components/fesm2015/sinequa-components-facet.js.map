{"version":3,"file":"sinequa-components-facet.js","sources":["../../../projects/components/facet/facet.service.ts","../../../projects/components/facet/abstract-facet.ts","../projects/components/facet/bootstrap/facet-card/facet-card.html","../projects/components/facet/bootstrap/facet-card/facet-card.ts","../projects/components/facet/bootstrap/facet-list/facet-list.html","../projects/components/facet/bootstrap/facet-list/facet-list.ts","../projects/components/facet/bootstrap/facet-tree/facet-tree.html","../projects/components/facet/bootstrap/facet-tree/facet-tree.ts","../projects/components/facet/bootstrap/facet-bar/facet-bar.html","../projects/components/facet/bootstrap/facet-bar/facet-bar.ts","../projects/components/facet/bootstrap/facet-filters/facet-filters.html","../projects/components/facet/bootstrap/facet-filters/facet-filters.ts","../projects/components/facet/bootstrap/facet-refine/facet-refine.html","../projects/components/facet/bootstrap/facet-refine/facet-refine.ts","../projects/components/facet/bootstrap/facet-mysearch/facet-mysearch.html","../projects/components/facet/bootstrap/facet-mysearch/facet-mysearch.ts","../projects/components/facet/bootstrap/facet-range/facet-range.html","../projects/components/facet/bootstrap/facet-range/facet-range.ts","../projects/components/facet/bootstrap/facet-multi/facet-multi.component.html","../projects/components/facet/bootstrap/facet-multi/facet-multi.component.ts","../projects/components/facet/bootstrap/facet-tag-cloud/facet-tag-cloud.html","../projects/components/facet/bootstrap/facet-tag-cloud/facet-tag-cloud.ts","../../projects/components/facet/bootstrap/facet.module.ts","../../projects/components/facet/messages/en.ts","../../projects/components/facet/messages/fr.ts","../../projects/components/facet/messages/de.ts","../../projects/components/facet/messages/index.ts","../../../projects/components/facet/sinequa-components-facet.ts"],"sourcesContent":["import {Injectable, Inject, Optional, InjectionToken} from \"@angular/core\";\nimport {UserSettingsWebService, UserSettings, Suggestion,\n    Results, Aggregation, AggregationItem, TreeAggregation, TreeAggregationNode,\n    AuditEvents, EngineType, Select, CCColumn\n} from \"@sinequa/core/web-services\";\nimport {IntlService} from \"@sinequa/core/intl\";\nimport {Query, AppService, FormatService, ExprBuilder, Expr} from \"@sinequa/core/app-utils\";\nimport {FieldValue, Utils} from \"@sinequa/core/base\";\nimport {Subject, Observable} from \"rxjs\";\nimport {map} from \"rxjs/operators\";\nimport {SearchService, BreadcrumbsItem, Breadcrumbs} from \"@sinequa/components/search\";\nimport {SuggestService} from \"@sinequa/components/autocomplete\";\n\n// Facet interface (from models/UserSettings)\nexport interface FacetState {\n    name: string;\n    position: number; // eg 0 = left, 1 = right\n    expanded: boolean;\n    hidden: boolean;\n    view: string;\n}\n\n/**\n * Options for the [[FacetService.AddFilter]] and [[FacetService.AddFilterSearch]] methods\n *\n * and: If multiple items are filtered, determines whether they are filtered as AND or OR\n * not: Whether this is an exlusion of the filtered item\n * replaceCurrent: if true, the current filter is replaced\n */\nexport interface AddFilterOptions {\n    and?: boolean;\n    not?: boolean;\n    replaceCurrent?: boolean;\n}\n\n// Audit Events (from models/Audit)\nexport const enum FacetEventType {\n    Loaded = \"Facet_Loaded\",\n    Add = \"Facet_Added\",\n    AddAll = \"Facets_Added\",\n    Remove = \"Facet_Removed\",\n    RemoveAll = \"Facets_Removed\",\n\n    Patched = \"Facet_Patched\",\n    ClearFilters = \"Facet_ClearFilters\",\n    AddFilter = \"Facet_AddFilter\",\n    RemoveFilter = \"Facet_RemoveFilter\",\n    Open = \"Facet_TreeOpen\"\n}\n\n// Types of events triggering a change event\nexport const FACET_CHANGE_EVENTS = [\n    FacetEventType.Loaded,\n    FacetEventType.Add,\n    FacetEventType.Remove\n];\n\n\n// CRUD Events\nexport interface FacetChangeEvent {\n    type: FacetEventType;\n    facet?: FacetState;\n}\n\nexport const ALL_FACETS = new InjectionToken<any[]>('ALL_FACETS');\nexport const DEFAULT_FACETS = new InjectionToken<FacetState[]>('DEFAULT_FACETS');\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class FacetService {\n\n    protected readonly _events = new Subject<FacetChangeEvent>();\n    protected readonly _changes = new Subject<FacetChangeEvent>();\n\n    constructor(\n        protected userSettingsService: UserSettingsWebService,\n        protected searchService: SearchService,\n        protected suggestService: SuggestService,\n        protected appService: AppService,\n        protected intlService: IntlService,\n        protected formatService: FormatService,\n        protected exprBuilder: ExprBuilder,\n        @Optional() @Inject(ALL_FACETS) public allFacets: any[],\n        @Optional() @Inject(DEFAULT_FACETS) public defaultFacets: FacetState[]){\n\n        // Listen to the user settings\n        this.userSettingsService.events.subscribe(event => {\n            // E.g. new login occurs\n            // ==> Menus need to be rebuilt\n            this.events.next({type: FacetEventType.Loaded});\n        });\n        // Listen to own events, to trigger change events\n        this._events.subscribe(event => {\n            if(FACET_CHANGE_EVENTS.indexOf(event.type) !== -1){\n                this.changes.next(event);\n            }\n        });\n    }\n\n    // GETTERS\n\n    /**\n     * Returns the list of this user's facets.\n     * The list is stored in the user settings (this is a redirection).\n     * Using this service creates the list of facets if it does not already exist.\n     */\n    public get facets() : FacetState[] {\n        if(!this.userSettingsService.userSettings)\n            this.userSettingsService.userSettings = {};\n        if(!this.userSettingsService.userSettings[\"facets\"]) {\n            this.userSettingsService.userSettings[\"facets\"] = [];\n            if(!!this.defaultFacets){\n                this.userSettingsService.userSettings[\"facets\"].push(...this.defaultFacets);\n                this.patchFacets();\n            }\n        }\n        return this.userSettingsService.userSettings[\"facets\"];\n    }\n\n    /**\n     * @returns a facet with the given name or undefined if it does not exist\n     * @param name\n     */\n    public facet(name: string): FacetState | undefined {\n        const i = this.facetIndex(name);\n        return i>= 0? this.facets[i] : undefined;\n    }\n\n    /**\n     * Returns the list of facet config in the given container (position)\n     * @param position (default to 0 if there is a single container)\n     */\n    public getFacets(position: number = 0) : any[] {\n        if (!this.allFacets) {\n            return [];\n        }\n        return this.facets.filter(f => f.position === position)\n            .map(f => this.allFacets.find(_f => _f.name === f.name));\n    }\n\n    /**\n     * Returns true if this facet is opened (in any container)\n     * @param facetName\n     */\n    public isFacetOpened(facetName): boolean {\n        return !!this.facets.find(f => f.name === facetName);\n    }\n\n    protected facetIndex(name: string): number {\n        for (let i = 0, ic = this.facets.length; i < ic; i++) {\n            const facet = this.facets[i];\n            if (facet && facet.name === name) {\n                return i;\n            }\n        }\n        return -1;\n    }\n\n    /**\n     * Triggers any events regarding the facets\n     */\n    public get events(): Subject<FacetChangeEvent> {\n        return this._events;\n    }\n\n    /**\n     * Triggers when events affect the list of facets\n     * Cf. CHANGE_EVENTS list\n     */\n    public get changes() : Subject<FacetChangeEvent> {\n        return this._changes;\n    }\n\n\n    public addFacet(facet: FacetState){\n        this.facets.push(facet);\n        this.events.next({type : FacetEventType.Add, facet: facet});\n        this.patchFacets([{\n            type: FacetEventType.Add,\n            detail: {\n                facet: facet.name\n            }\n        }]);\n    }\n\n    public removeFacet(facet: FacetState){\n        const i = this.facetIndex(facet.name);\n        if(i !== -1){\n            this.facets.splice(i,1);\n            this.events.next({type : FacetEventType.Remove, facet: facet});\n            this.patchFacets([{\n                type: FacetEventType.Remove,\n                detail: {\n                    facet: facet.name\n                }\n            }]);\n        }\n    }\n\n    public addAllFacet() {\n        this.facets.splice(0,this.facets.length);\n        if(!!this.defaultFacets) this.facets.push(...this.defaultFacets);\n        this.events.next({type : FacetEventType.AddAll});\n        this.patchFacets([{\n            type: FacetEventType.AddAll\n        }]);\n    }\n\n    public removeAllFacet() {\n        this.facets.splice(0,this.facets.length);\n        this.events.next({type : FacetEventType.RemoveAll});\n        this.patchFacets([{\n            type: FacetEventType.RemoveAll\n        }]);\n    }\n\n    /**\n     * Updates facets in User settings.\n     * @param auditEvents : Audit Events to be triggered\n     * @returns an Observable which can be used to trigger further events\n     */\n    protected patchFacets(auditEvents?: AuditEvents) {\n        return this.userSettingsService.patch({facets: this.facets} as UserSettings, auditEvents)\n            .subscribe(\n                next => {\n                    this.events.next({type: FacetEventType.Patched});\n                },\n                error => {\n                    console.error(\"Could not patch Facets!\", error);\n            });\n    }\n\n    /**\n     * Filter/Exclude an item in a facet and launch a search.\n     * Triggers an internal event and an Audit Event\n     * @param facetName\n     * @param aggregation\n     * @param items\n     * @param options\n     */\n    public addFilterSearch(\n        facetName: string,\n        aggregation: Aggregation,\n        items: AggregationItem | AggregationItem[],\n        options: AddFilterOptions = {}): Promise<boolean> {\n\n        const success = this.addFilter(facetName, aggregation, items, options);\n        if(success) {\n            this.events.next({ type: FacetEventType.AddFilter, facet: this.facet(facetName) });\n            return this.searchService.search(undefined, {\n                type: FacetEventType.AddFilter,\n                detail: {\n                    item: <any>this.searchService.query.lastSelect(),\n                    itembox: facetName,\n                    itemcolumn: aggregation.column,\n                    isitemexclude: options.not,\n                    \"from-result-id\": this.searchService.results?.id\n                }\n            });\n        }\n        return Promise.resolve(false);\n    }\n\n\n    /**\n     * Filter/Exclude one or more item(s) in a facet (without launching a search)\n     * @param facetName\n     * @param aggregation\n     * @param items\n     * @param options\n     * @param query the query on which to add the filter (defaults to search service query)\n     * @param breadcrumbs breadcrumbs in which to look for selected items (defaults  to search service breadcrumbs)\n     */\n    public addFilter(\n        facetName: string,\n        aggregation: Aggregation,\n        items: AggregationItem | AggregationItem[],\n        options: AddFilterOptions = {},\n        query = this.searchService.query,\n        breadcrumbs = this.searchService.breadcrumbs): boolean {\n\n        if (!items) {\n            return false;\n        }\n        if (options.replaceCurrent) {\n            query.removeSelect(facetName);\n        }\n\n        if (!aggregation.isTree && breadcrumbs?.activeSelects.length && !options.replaceCurrent) {\n            const expr = breadcrumbs.findSelect(facetName);\n            const index = breadcrumbs.activeSelects.findIndex(select => select.facet === facetName && (select.expr === expr || select.expr === expr?.parent));\n            const same = (!Array.isArray(items)) ? true : (options.and ? \"AND\" : \"OR\") === (expr?.and ? \"AND\" : \"OR\") && (options.not ? \"YES\" : \"NO\") === (expr?.not ? \"YES\" : \"NO\");\n\n            if (expr && same && index !== -1){\n                let _items: AggregationItem[];\n                if (expr?.operands) {\n                    _items = this.exprToAggregationItem(expr.operands, aggregation.valuesAreExpressions).concat(items);\n                } else {\n                    // previous selection is a single value\n                    _items = this.exprToAggregationItem(expr as Expr, aggregation.valuesAreExpressions).concat(items);\n                }\n                // MUST reset $excluded property otherwise expression is misunderstood\n                _items.forEach(item => item.$excluded = undefined);\n                // overrides options settings with expression if any\n                let _expr = this.exprBuilder.makeAggregationExpr(aggregation, _items, options.and || expr.and);\n                if (options.not || expr.not) {\n                    _expr = this.exprBuilder.makeNotExpr(_expr);\n                }\n                if (_expr) {\n                    query.replaceSelect(index, {expression: _expr, facet: facetName});\n                    return true;\n                }\n            }\n        }\n        let expr = this.exprBuilder.makeAggregationExpr(aggregation, items, options.and);\n        if (options.not) {\n            expr = this.exprBuilder.makeNotExpr(expr);\n        }\n        if (expr) {\n            query.addSelect(expr, facetName);\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Clears the query from the current selection on the given facet\n     * @param facetName\n     * @param all\n     * @param query the query to clear from the facet selection (defaults to search service query)\n     */\n    public clearFilters(facetName: string, all?: boolean, query = this.searchService.query) {\n        query.removeSelect(facetName, all);\n    }\n\n    /**\n     * Clears the query from the current selection on the given facet and perform a search\n     * @param facetName\n     * @param all\n     */\n    public clearFiltersSearch(facetName: string | string[], all?: boolean): Promise<boolean> {\n        [].concat(facetName as []).forEach(name => {\n            this.clearFilters(name, all);\n            this._events.next({type: FacetEventType.ClearFilters, facet: this.facet(name)});\n        });\n\n        return this.searchService.search(undefined, {\n                type: FacetEventType.ClearFilters,\n                detail: {\n                    itembox: facetName,\n                    \"from-result-id\": this.searchService.results?.id\n                }\n            });\n    }\n\n    /**\n     * Remove a filter and update the appropriate Select if it was previously included in a selection\n     * @param facetName the facet that removes the filter\n     * @param aggregation the aggregation that contains the item to remove\n     * @param item the aggregation item to remove from the query\n     * @param query the query on which to remove the filter (defaults to search service query)\n     * @param breadcrumbs breadcrumbs in which to look for selected items (defaults  to search service breadcrumbs)\n     */\n    public removeFilter(\n        facetName: string,\n        aggregation: Aggregation,\n        item: AggregationItem,\n        query = this.searchService.query,\n        breadcrumbs = this.searchService.breadcrumbs): Select | undefined {\n\n        if (breadcrumbs) {\n            // if item is excluded, makeAggregation() should returns a NOT expression\n            const stringExpr = item.$excluded ? this.exprBuilder.makeNotExpr(this.exprBuilder.makeAggregationExpr(aggregation, item)) : this.exprBuilder.makeAggregationExpr(aggregation, item);\n            const filterExpr = this.findItemFilter(facetName, aggregation, item, breadcrumbs) || this.appService.parseExpr(stringExpr);\n            const expr = breadcrumbs.findSelect(facetName, filterExpr);\n            const i = breadcrumbs.activeSelects.findIndex(select => select.facet === facetName && (select.expr === expr || select.expr === expr?.parent));\n\n            // 'Select' can't be created when aggregation is a tree map, so, avoid aggregation tree\n            // and remove whole breadcrumbs\n            if (!aggregation.isTree && expr && expr.parent && expr.parent.operands.length > 1) {\n                // create a new Expr from parent and replaces Select by this new one\n                // so, breadcrumbs stay ordered\n                const filterByValuesAreExpression = (it: AggregationItem) => it.value.toString().replace(/ /g, \"\") !== item.value.toString().replace(/ /g, \"\");\n                const filterByValue = (it: AggregationItem) => it.value !== item.value\n                const filter = (aggregation.valuesAreExpressions) ? filterByValuesAreExpression : filterByValue;\n\n                const items: AggregationItem[] = this.exprToAggregationItem(expr.parent.operands, aggregation.valuesAreExpressions).filter(filter);\n                // MUST reset $excluded property otherwise expression is misunderstood (mainly NOT expressions)\n                items.forEach(item => item.$excluded = undefined);\n                const {not, and} = breadcrumbs.selects[i].expr || {};\n                let _expr = this.exprBuilder.makeAggregationExpr(aggregation, items, and);\n                if (not) {\n                    _expr = this.exprBuilder.makeNotExpr(_expr);\n                }\n                if (_expr) {\n                    query.replaceSelect(i, {expression: _expr, facet: facetName});\n                    return {expression: this.exprBuilder.makeAggregationExpr(aggregation, item), facet: facetName};\n                }\n            } else {\n                // filter is a single value... remove it\n                const select = query.select ? query.select[i] : undefined;\n                query.removeSelect(i);\n                return select;\n            }\n        }\n        return undefined;\n    }\n\n    /**\n     * Removes the aggregation from the search service query and refresh the search\n     * @param facetName\n     * @param aggregation\n     * @param item\n     */\n    public removeFilterSearch(facetName: string, aggregation: Aggregation, item: AggregationItem): Promise<boolean>{\n        const select = this.removeFilter(facetName, aggregation, item);\n        if(select) {\n            this._events.next({type: FacetEventType.RemoveFilter, facet: this.facet(facetName || \"\")});\n            delete this.searchService.query.queryId; // SBA-154\n            return this.searchService.search(undefined, {\n                type: FacetEventType.RemoveFilter,\n                detail: {\n                    item: {expression: select?.expression, facet: select?.facet},\n                    itembox: facetName,\n                    itemcolumn: aggregation.column,\n                    \"from-result-id\": !!this.searchService.results ? this.searchService.results.id : null\n                }\n            });\n        }\n        return Promise.resolve(false);\n    }\n\n    /**\n     * Queries the server for data for this aggregation\n     * @param aggregation\n     * @param skip\n     * @param count\n     * @param query the query to use to fetch the data (default to search service query)\n     */\n    public loadData(\n        aggregation: string,\n        skip: number = 0,\n        count: number = 10,\n        query = this.searchService.query,\n        searchInactive = true): Observable<Aggregation | undefined> {\n\n        query = Utils.copy(query);\n        query.action = \"aggregate\";\n        query.aggregations = {};\n        query.aggregations[aggregation] = {skip: skip, count: count};\n        return this.searchService.getResults(query, undefined, {searchInactive}).pipe(\n            map((results: Results) => {\n                const data = results.aggregations.find(a => Utils.eqNC(a.name, aggregation));\n                if (data) {\n                    this.setColumn(data);   // Useful for formatting and i18n\n                }\n                return data;\n            })\n        );\n    }\n\n    /**\n     * Get suggestions given a text and a field name, using the Suggest service\n     * @param text\n     * @param field\n     * @param suggestQuery\n     */\n    public suggest(text: string, field: string, suggestQuery = this.appService.suggestQueries[0]): Observable<Suggestion[]> {\n        return this.suggestService.get(suggestQuery, text, [field], this.searchService.query);\n    }\n\n    /**\n     * Format the given result item, using field formatter and/or i18n service\n     * @param item\n     */\n    formatValue(item: AggregationItem): string {\n        return this.intlService.formatMessage(\n            this.formatService.formatFieldValue(item, item.$column));\n    }\n\n    /**\n     * Returns true if this facet has at least one active selection\n     * filtering the search\n     * @param facetName\n     * @param breadcrumbs breadcrumbs in which to look for selected items (defaults to search service breadcrumbs)\n     */\n    public hasFiltered(facetName: string, breadcrumbs = this.searchService.breadcrumbs) : boolean {\n        return !!this.findFilter(facetName, breadcrumbs);\n    }\n\n    /**\n     * Returns an active selection of this facet filtering the search\n     * Returns it as an expression\n     * @param facetName\n     * @param breadcrumbs breadcrumbs in which to look for selected items (defaults to search service breadcrumbs)\n     */\n    public findFilter(facetName: string, breadcrumbs = this.searchService.breadcrumbs) : Expr | undefined {\n        return breadcrumbs?.findSelect(facetName);\n    }\n\n    /**\n     * Look for an aggregation with the given name in the search results and returns it.\n     * Takes care of initializing the aggregation items to insert their $column property.\n     * @param aggregationName\n     * @param results The search results can be provided explicitly or taken from the SearchService implicitly.\n     */\n    getAggregation(\n        aggregationName: string,\n        results = this.searchService.results,\n        treeAggregationOptions?: {\n            facetName: string,\n            levelCallback?: (nodes: TreeAggregationNode[], level: number, node: TreeAggregationNode) => void\n        }\n    ): Aggregation | TreeAggregation | undefined {\n\n        if (results?.aggregations) {\n            const aggregation = results.aggregations.find(agg => Utils.eqNC(agg.name, aggregationName))\n            if (aggregation) {\n                this.setColumn(aggregation);    // Useful for formatting and i18n\n                if (aggregation.isTree && treeAggregationOptions) {\n                    const expr = this.findFilter(treeAggregationOptions.facetName);\n                    const expandPaths = expr ? expr.getValues(aggregation.column) : [];\n                    this.initTreeNodes(treeAggregationOptions.facetName, aggregation, \"/\", aggregation.items as TreeAggregationNode[], expandPaths, treeAggregationOptions.levelCallback);\n\n                    return aggregation as TreeAggregation;\n                }\n                return aggregation;\n            }\n        }\n        return undefined;\n    }\n\n    /**\n     * Look for a Tree aggregation with the given name in the search results and returns it.\n     * Takes care of initializing the Node aggregation items to insert their properties ($column, $path, $opened, $level)\n     * @deprecated use getAggregation() instead\n     * @param facetName\n     * @param aggregationName\n     * @param results The search results can be provided explicitly or taken from the SearchService implicitly.\n     * @param levelCallback A callback method called at every level of the tree.\n     * Can be used to read or alter the properties of the nodes (opening, closing), or node list (sorting)\n     */\n    getTreeAggregation(\n        facetName: string,\n        aggregationName: string,\n        results = this.searchService.results,\n        levelCallback?: (nodes: TreeAggregationNode[], level: number, node: TreeAggregationNode) => void\n    ): TreeAggregation | undefined {\n\n        const agg = this.getAggregation(aggregationName, results);\n        if(agg?.isTree){\n            const expr = this.findFilter(facetName);\n            const expandPaths = expr ? expr.getValues(agg.column) : [];\n            this.initTreeNodes(facetName, agg, \"/\", agg.items as TreeAggregationNode[], expandPaths, levelCallback);\n\n            return agg as TreeAggregation;\n        }\n        return undefined;\n    }\n\n    /**\n     * Returns the count parameter of the given aggregation (default is 10)\n     * @param aggregationName\n     */\n    getAggregationCount(aggregationName: string) : number {\n        return this.appService.getCCAggregation(aggregationName)?.count || 10;\n    }\n\n    /**\n     * Opens a Tree node of the given tree facet by querying data from the server\n     * Takes care of initializing the Node aggregation items to insert their properties ($column, $path, $opened, $level)\n     * @param facetName\n     * @param aggregation\n     * @param item\n     * @param levelCallback A callback method called at every level of the tree.\n     * Can be used to read or alter the properties of the nodes (opening, closing), or node list (sorting)\n     */\n    open(\n        facetName: string,\n        aggregation: TreeAggregation,\n        item: TreeAggregationNode,\n        levelCallback?: (nodes: TreeAggregationNode[], level: number, node: TreeAggregationNode) => void,\n        query = this.searchService.query,\n        searchInactive = true\n    ): Observable<Results> {\n\n        const value = item.$path + \"*\";\n        query = Query.copy(query);\n        query.action = \"open\";\n        const expr = this.exprBuilder.makeExpr(aggregation.column, value);\n        query.addOpen(expr, aggregation.name);\n\n        this.events.next({type: FacetEventType.Open, facet: this.facet(facetName)});\n        return this.searchService.getResults(query, undefined, {searchInactive}).pipe(\n            map((results: Results) => {\n                if (item.$path) {\n                    const source = FacetService.getAggregationNode(results.aggregations[0].items as TreeAggregationNode[], item.$path);\n                    const target = FacetService.getAggregationNode(aggregation.items as TreeAggregationNode[], item.$path);\n                    if (source && target) {\n                        target.items = source.items;    // Insert the new data (source) into the original (target)\n                    }\n                    if (target && target.items) {\n                        this.initTreeNodes(facetName, aggregation, item.$path, target.items, undefined, levelCallback);\n                    }\n                }\n                return results;\n            })\n        );\n    }\n\n    /**\n     * Returns true if a given aggregation item is currently actively filtering the search\n     * @param facetName\n     * @param aggregation\n     * @param item\n     * @param breadcrumbs breadcrumbs in which to look for selected items (default to search service breadcrumbs)\n     */\n    itemFiltered(facetName: string, aggregation: Aggregation, item: AggregationItem, breadcrumbs = this.searchService.breadcrumbs): boolean {\n        return !!this.findItemFilter(facetName, aggregation, item, breadcrumbs);\n    }\n\n    protected findItemFilter(facetName: string, aggregation: Aggregation, item: AggregationItem, breadcrumbs: Breadcrumbs | undefined) : Expr | undefined {\n        let expr: Expr | undefined;\n        let exprText: string;\n        if (!aggregation.valuesAreExpressions) {\n            let value: string;\n            if (aggregation.isTree) {\n                value = Utils.toSqlValue((<TreeAggregationNode>item).$path + \"*\");\n            }\n            else {\n                value = Utils.toSqlValue(item.value);\n            }\n            exprText = this.exprBuilder.makeExpr(aggregation.column, value);\n        }\n        else {\n            exprText = item.value as string;\n        }\n        const ret = this.appService.parseExpr(exprText);\n        if (ret instanceof Expr) {\n            expr = <Expr>ret;\n        }\n        if (expr) {\n            const expr2 = breadcrumbs?.findSelect(facetName, expr);\n            if(!!expr2 && (!expr2.parent || !expr2.parent.parent)){\n                return expr2;\n            }\n        }\n        return undefined;\n    }\n\n    /**\n     * Initializes the nodes of a tree (private, with a callback)\n     * @param facetName\n     * @param aggregation\n     * @param root\n     * @param children\n     * @param expandPaths\n     * @param levelCallback\n     */\n    protected initTreeNodes(\n        facetName: string,\n        aggregation: Aggregation,\n        root: string,\n        children: TreeAggregationNode[],\n        expandPaths?: string[],\n        levelCallback?: (nodes: TreeAggregationNode[], level: number, node: TreeAggregationNode) => void\n    ) {\n        if (!children) {\n            return;\n        }\n        let rootLevel: number;\n        if (root) {\n            rootLevel = Utils.count(root, \"/\", false) - 1;\n        }\n        else {\n            root = \"/\";\n            rootLevel = 0;\n        }\n        const column = this.appService.getColumn(aggregation.column);\n        Utils.traverse(children, (_nodes) => {\n            if (!_nodes) {\n                return false;\n            }\n            let path = root;\n            let level = rootLevel;\n            for (const _node of _nodes) {\n                path = path + _node.value + \"/\";\n                level++;\n            }\n            // console.log(path);\n            const _node = _nodes[_nodes.length - 1];\n            _node.$path = path;\n            _node.$column = column;\n            _node.$level = level;\n            _node.$opened = false;\n            _node.$filtered = this.itemFiltered(facetName, aggregation, _node)\n            expandPaths?.forEach(expandPath => {\n                if (expandPath.indexOf(path) === 0) {\n                    const count = !!_node.items ? _node.items.length : _node.hasChildren ? -1 : 0;\n                    if (count > 0) {\n                        _node.$opened = true;\n                    }\n                }\n            });\n            if (levelCallback) {\n                levelCallback(_nodes, level, _node);\n            }\n            return false; // don't stop\n        });\n    }\n\n    protected setColumn(aggregation: Aggregation){\n        if(!aggregation.isTree && aggregation.items){\n            const column = this.appService.getColumn(aggregation.column);\n            aggregation.items.forEach((value) => value.$column = column);\n        }\n    }\n\n\n\n    // static methods\n\n    protected static splitTreepath(path: string): string[] {\n        if (!path) return [];\n        path = path.trim();\n        if (path.length > 0 && path[0] === \"/\") {\n            path = path.substr(1);\n        }\n        if (path.length > 0 && path[path.length - 1] === \"/\") {\n            path = path.substr(0, path.length - 1);\n        }\n        if (path.length === 0) {\n            return [];\n        }\n        return path.split(\"/\");\n    }\n\n\n    public static treepathLast(path: string): string {\n        const parts = FacetService.splitTreepath(path);\n        if (!parts || parts.length === 0) {\n            return \"\";\n        }\n        return parts[parts.length - 1];\n    }\n\n    protected static getAggregationNode(nodes: TreeAggregationNode[], path: string): TreeAggregationNode | undefined {\n        if (!nodes || nodes.length === 0) {\n            return undefined;\n        }\n        const names = FacetService.splitTreepath(path);\n        let node: TreeAggregationNode | undefined;\n        for (let _i = 0, _a = names; _i < _a.length; _i++) {\n            if (!nodes || nodes.length === 0) {\n                return undefined;\n            }\n            const name = _a[_i].toLocaleLowerCase();\n            node = undefined;\n            for (let _j = 0, _b = nodes; _j < _b.length; _j++) {\n                const _node = _b[_j];\n                if ((<string>_node.value).toLocaleLowerCase() === name) {\n                    node = _node;\n                    break;\n                }\n            }\n            if (!node) {\n                return undefined;\n            }\n            nodes = node.items;\n        }\n        return node;\n    }\n\n\n    /**\n     * Convert an Expression object or an Expression Array to their AggregationItem equivalent\n     *\n     * @param expr Expression object or Expression Array\n     * @param valuesAreExpressions when true values should be converted to string otherwise no\n     *\n     * @returns AggregationItem array with converted expression or an empty array\n     */\n    exprToAggregationItem(expr: Expr[] | Expr, valuesAreExpressions: boolean = false): AggregationItem[] {\n        const fn = [\n            (item: Expr) => {\n                let value: FieldValue = item.value as string;\n                if (item.column?.eType === EngineType.bool) {\n                    value = Utils.isTrue(item.value);\n                }\n                return ({count: 0, value, display: item.display, $column: item.column, $excluded: (item?.not || item?.parent?.not)} as AggregationItem);\n            },\n            (item: Expr) => ({count: 0, value: item.toString((item.value) ? true : false), display: item.display, $column: item.column, $excluded: (item?.not || item?.parent?.not)} as AggregationItem)\n        ];\n\n        const callback = valuesAreExpressions ? fn[1] : fn[0];\n        return [].concat(expr as []).map(callback) as AggregationItem[];\n    }\n\n    /**\n     * Get all Breadcrumbs items from a specific facet\n     *\n     * @param facetName facet name where to extract all breadcrumbs\n     * @param breadcrumbs breadcrumbs in which to look for selected items\n     */\n    getBreadcrumbsItems(facetName: string, breadcrumbs: Breadcrumbs | undefined): BreadcrumbsItem[] {\n        return breadcrumbs?.items.filter(item => item.facet === facetName) || [];\n    }\n\n    /**\n     * Get all Aggregation items from a facet, currently filtered\n     *\n     * @param facetName facet name where to inspect\n     * @param valuesAreExpressions when true, some transformations should be done\n     * @param breadcrumbs breadcrumbs in which to look for selected items (default to search service breadcrumbs)\n     */\n    getAggregationItemsFiltered(facetName: string, valuesAreExpressions: boolean = false, breadcrumbs = this.searchService.breadcrumbs): AggregationItem[] {\n        const items = this.getBreadcrumbsItems(facetName, breadcrumbs);\n\n        // aggregation items are constructed from nested expressions\n        const expr = [] as Expr[][];\n        for (const item of items) {\n            const value = (item.expr?.display === undefined) ? item.expr?.operands as Expr[] || item.expr : item.expr;\n            if (value) {\n                expr.push(value as Expr[]);\n            }\n        }\n        // faltten results\n        const flattenExpr = [].concat.apply([], expr);\n\n        return this.exprToAggregationItem(flattenExpr, valuesAreExpressions);\n    }\n\n    /**\n     * Convert Suggestion to AggregationItem\n     * @param suggest a Suggestion object\n     *\n     * @returns AggregationItem object with is `$column` property defined.\n     * On boolean type, convert `value` property to boolean\n     */\n    suggestionToAggregationItem(suggest: Suggestion): AggregationItem {\n        const item: AggregationItem = {\n            value: suggest.normalized || suggest.display,\n            display: suggest.display,\n            count: +(suggest.frequency || 0),\n            $column: this.appService.getColumn(suggest.category)\n        };\n        if (item.$column?.eType === EngineType.bool) {\n            item.value = Utils.isTrue(item.value);\n        }\n        return item;\n    }\n\n    /**\n     * Converts a list of suggestions into a structure of TreeAggregationNodes\n     * @param suggests Suggestions to convert\n     * @param searchTerm The searched term in the suggestions\n     * @param aggregation The tree aggregations\n     */\n    suggestionsToTreeAggregationNodes(suggests: Suggestion[], searchTerm: string, aggregation: Aggregation | undefined): TreeAggregationNode[] {\n        const suggestions: TreeAggregationNode[] = [];\n        if(suggests.length > 0) {\n            const path2node = new Map<string,TreeAggregationNode>();\n            const searchPattern = new RegExp(`\\\\b${searchTerm}`, 'i');\n            const column = this.appService.getColumn(aggregation?.column);\n            suggests.forEach(suggest => {\n                if(suggest.display.length > 1) {\n                    const match = searchPattern.exec(suggest.display);\n                    this.addNode(suggestions, path2node, \"/\", suggest.display, +(suggest.frequency || 0), 1, (match?.index || 0)+searchTerm.length, column);\n                }\n            });\n        }\n        return suggestions;\n    }\n\n    /**\n     * Utility recursive function to generate a tree aggregation structure from\n     * a list of suggestions\n     */\n    protected addNode(items: TreeAggregationNode[],\n            path2node: Map<string,TreeAggregationNode>,\n            parentPath: string,\n            path: string,\n            count: number,\n            level: number,\n            matchend: number,\n            column: CCColumn | undefined) {\n\n        const nextChild = path.indexOf(\"/\", parentPath.length); // path = /Cities/Paris/17e/   parentPath = /Cities/\n        const currentPath = path.substring(0, nextChild+1); // => currentPath = /Cities/Paris/\n        let node = path2node.get(currentPath);\n\n        if(!node) {\n            const value = path.substring(parentPath.length, nextChild);\n            node = {\n                value,\n                count,\n                items: [],\n                hasChildren: false,\n                $column: column,\n                $level: level,\n                $opened: matchend >= currentPath.length,\n                $path: currentPath\n            };\n            path2node.set(currentPath, node);\n            items.push(node);\n        }\n\n        if(currentPath.length < path.length) {\n            node.hasChildren = true;\n            this.addNode(node.items, path2node, currentPath, path, count, level+1, matchend, column);\n        }\n    }\n\n\n    /**\n     * Check if a facet contains items\n     * @param aggregation aggregation name\n     * @param results search results\n     *\n     * @returns true if the facet contains a least one item otherwise false\n     */\n    hasData(aggregation: string, results: Results): boolean {\n        // Avoid calling getAggregation() which is costly\n        return !!results.aggregations.find(agg => Utils.eqNC(agg.name, aggregation))?.items?.length;\n    }\n\n    /**\n     * Returns the index of the first element in the supplied array\n     * corresponding to `item.value` or -1 when not found.\n     * A fallback to `item.display` is done before returning -1\n     * @param item item to find\n     */\n    filteredIndex(data: Aggregation | undefined, arr: Array<AggregationItem>, item: AggregationItem): number {\n        let indx = -1;\n        // specific to Values Are Expressions where expression are not well formatted by Expression Parser\n        // eg: when values is : \"> 0\", Expression Parser returns : \">0\" without space between operator and value\n        if (data?.valuesAreExpressions) {\n            const value = this.trimAllWhitespace(item.value);\n            const normalizedArr = arr.map(item => ({...item, value: this.trimAllWhitespace(item.value)})) || [];\n            indx = normalizedArr.findIndex(it => it.value === value);\n        } else {\n            indx = this.findAggregationItemIndex(arr, item);\n        }\n        return indx;\n    }\n\n    /**\n     * Utility function to returns aggregation item's index in supplied array with fallback to `display` comparison.\n     * Otherwise -1, indicating that no element passed the test.\n     * @param arr The array findIndex() was called upon\n     * @param value The value to be test\n     */\n    public findAggregationItemIndex = (arr: Array<AggregationItem>, item: AggregationItem) => {\n        let index = arr.findIndex(it => it.value === item.value);\n        if (index === -1 && item.display) {\n            // fallback to display comparison\n            index = arr.findIndex(it => it.display === item.display);\n        }\n        return index;\n    };\n\n    private trimAllWhitespace = (value: FieldValue | undefined): FieldValue | undefined => {\n        switch (typeof value) {\n            case \"string\":\n                return value.replace(/\\s/g, '');\n            default:\n                return value;\n        }\n    };\n}\n","import {Component, Output, TemplateRef, EventEmitter, ViewChild} from \"@angular/core\";\nimport {Action} from \"@sinequa/components/action\";\n\n/**\n * This interface should be implemented by facet components, which expose\n * a list of actions and event listeners\n */\n@Component({\n    template: \"\"\n})\nexport abstract class AbstractFacet {\n\n    /**\n     * List of custom actions of this facet\n     */\n    public get actions(): Action[] { return []; }\n\n    /**\n     * Event emitter triggered when the list of action changes\n     */\n    @Output() public actionsChanged = new EventEmitter<Action[]>();\n\n    /**\n     * Template for the settings editor of this facet, if any\n     */\n    @ViewChild(\"settingsTpl\", {static: true, read: TemplateRef}) public settingsTpl?: TemplateRef<any>;\n\n    /**\n     * Template for header of this facet, if any\n     */\n    @ViewChild(\"headerTpl\", {static: true, read: TemplateRef}) public headerTpl?: TemplateRef<any>;\n\n    /**\n     * Template for a sub-header of this facet, if any. This appears below the header\n     */\n    @ViewChild(\"subHeaderTpl\", {static: true, read: TemplateRef}) public subHeaderTpl?: TemplateRef<any>;\n\n    /**\n     * Template for footer of this facet, if any\n     */\n    @ViewChild(\"footerTpl\", {static: true, read: TemplateRef}) public footerTpl?: TemplateRef<any>;\n\n    /**\n     * Method called when a facet is collapsed\n     */\n    public onCollapse(collapsed: boolean){}\n\n    /**\n     * Method called when a facet is resized via an action (not accounting for window resizing)\n     */\n    public onExpand(expanded: boolean){}\n\n    /**\n     * Method called when the settings of this facet are opened\n     */\n    public onOpenSettings(settingsOpened: boolean){}\n\n    /**\n     * Method enabling the facet component to be hidden (if, for example there is no data to display)\n     */\n    public isHidden(): boolean {\n        return false;\n    }\n\n}","<div class=\"card\">    \n    <div class=\"card-header cursor-default pl-3 pr-2 py-1\">\n        <div class=\"d-flex\">\n            <div class=\"d-flex align-items-center text-truncate mr-auto\" [title]=\"(tooltip || title) | sqMessage\">\n                <div *ngIf=\"!!icon\" class=\"card-icon {{icon}} mr-2\" aria-hidden=\"true\"></div>\n                <div *ngIf=\"title\" class=\"card-title text-truncate mb-0 py-1 mr-auto\">{{title | sqMessage }}</div>\n            </div>\n            <ng-container *ngIf=\"facetComponent && facetComponent.headerTpl\" [ngTemplateOutlet]=\"facetComponent.headerTpl\">\n            </ng-container>\n            <div class=\"btn-group\" [sq-action-buttons]=\"{items: allActions, style: buttonsStyle, size: actionsSize, rightAligned: true}\"></div>\n        </div>\n        <ng-container *ngIf=\"facetComponent && facetComponent.subHeaderTpl\" [ngTemplateOutlet]=\"facetComponent.subHeaderTpl\"></ng-container>\n    </div>\n    <sq-collapse [collapsed]=\"_collapsed\" *ngIf=\"!_settingsOpened\">\n        <ng-template>\n            <ng-content>\n            </ng-content>\n        </ng-template>\n    </sq-collapse>\n    <ng-container *ngIf=\"hasSettings && _settingsOpened\" [ngTemplateOutlet]=\"facetComponent.settingsTpl\"></ng-container>\n    <ng-container class=\"card-footer\" *ngIf=\"facetComponent && facetComponent.footerTpl\" [ngTemplateOutlet]=\"facetComponent.footerTpl\"></ng-container>\n</div>","import {Component, Input, Output, OnInit, OnDestroy, EventEmitter, ContentChild, HostBinding, AfterContentInit, ChangeDetectorRef} from \"@angular/core\";\nimport {Subscription} from \"rxjs\";\nimport {Action} from \"@sinequa/components/action\";\nimport {AbstractFacet} from \"../../abstract-facet\";\n\n@Component({\n    selector: \"sq-facet-card\",\n    templateUrl: \"./facet-card.html\",\n    styles: [`\n        .cursor-default {cursor: default;}\n    `]\n})\nexport class BsFacetCard implements OnInit, OnDestroy, AfterContentInit {\n\n    /**\n     * Title of this facet (optional)\n     */\n    @Input() title: string;\n\n    /**\n     * Tooltip of this facet (defaults to title)\n     */\n    @Input() tooltip: string;\n\n    /**\n     * Icon of this facet, in a form of a span class name (optional)\n     */\n    @Input() icon: string;\n\n    /**\n     * Bootstrap theme name (light, dark...)\n     */\n    @Input() buttonsStyle: string;\n\n    /**\n     * List of custom actions for this facet (optional)\n     */\n    @Input() actions: Action[] = [];\n\n    /**\n     * Whether the [actions]=\"...\" passed by binding should be displayed before or after\n     * the actions from the inner facet component\n     */\n    @Input() actionsFirst = true;\n\n    /**\n     * Size of the custom actions\n     */\n    @Input() actionsSize = \"sm\";\n\n    /**\n     * Whether the facet can be collapsed (default: true)\n     */\n    @Input() collapsible: boolean = true;\n\n    /**\n     * Whether the facet starts collapsed (if collapsible / default: false)\n     */\n    @Input() startCollapsed: boolean = false;\n\n    /**\n     * Whether other actions should be hidden when the facet is collapsed (default: true)\n     */\n    @Input() hideActionsCollapsed: boolean = true;\n\n    /**\n     * Whether the facet can be expanded (default: false)\n     */\n    @Input() expandable: boolean = false;\n\n    /**\n     * Whether the facet starts expanded (if expandable / default: false)\n     */\n    @Input() startExpanded: boolean = false;\n\n    /**\n     * Whether the facet starts with opened settings (default: false)\n     */\n    @Input() startSettingsOpened: boolean = false;\n\n    /**\n     * Event triggered when the facet gets expanded or reduced\n     */\n    @Output() facetExpanded = new EventEmitter<\"expanded\"|\"reduced\">();\n\n    /**\n     * Event triggered when the facet gets expanded or reduced\n     */\n    @Output() facetCollapsed = new EventEmitter<\"collapsed\"|\"expanded\">();\n\n    /**\n     * Event triggered when the facet gets expanded or reduced\n     */\n    @Output() settingsOpened = new EventEmitter<\"opened\"|\"saved\"|\"canceled\">();\n\n    /**\n     * Reference to the child facet inserted by transclusion (ng-content)\n     */\n    @ContentChild(\"facet\", {static: false}) public facetComponent: AbstractFacet;\n\n    @HostBinding('class.collapsed') _collapsed: boolean;\n    @HostBinding('class.expanded') _expanded: boolean;\n    @HostBinding('class.settings-opened') _settingsOpened: boolean;\n\n    @HostBinding('hidden') get hidden(): boolean {\n        return !!this.facetComponent && !!this.facetComponent.isHidden && this.facetComponent.isHidden();\n    }\n\n    private readonly collapseAction;\n    private readonly expandAction;\n    private readonly settingsAction;\n\n    private actionChangedSubscription: Subscription;\n\n    constructor(\n        private changeDetectorRef: ChangeDetectorRef\n    ){\n\n        this.collapseAction = new Action({\n            action: (action) => {\n                this._collapsed = !this._collapsed;\n                this.facetCollapsed.next(this._collapsed ? \"collapsed\" : \"expanded\");\n                if(!!this.facetComponent){\n                    this.facetComponent.onCollapse(this._collapsed);\n                }\n                action.update();\n            },\n            updater: (action) => {\n                action.icon = this._collapsed ? \"fas fa-chevron-down\" : \"fas fa-chevron-up\";\n                action.title = this._collapsed ? 'msg#facetCard.expand' : 'msg#facetCard.collapse';\n            }\n        });\n\n        this.expandAction = new Action({\n            action: (action) => {\n                this._expanded = !this._expanded;\n                this.facetExpanded.next(this._expanded ? \"expanded\" : \"reduced\");\n                if(!!this.facetComponent){\n                    this.facetComponent.onExpand(this._expanded);\n                }\n                action.update();\n            },\n            updater: (action) => {\n                action.icon = this._expanded ? \"fas fa-compress\" : \"fas fa-expand\";\n                action.title = this._expanded ? \"msg#facetCard.reduce\" : \"msg#facetCard.enlarge\";\n            }\n        });\n\n        this.settingsAction = new Action({\n            action: (action) => {\n                this._settingsOpened = !this._settingsOpened;\n                this.settingsOpened.next(this._settingsOpened? \"opened\" : \"saved\");\n                if(!!this.facetComponent){\n                    this.facetComponent.onOpenSettings(this._settingsOpened);\n                }\n                action.update();\n            },\n            updater: (action) => {\n                action.icon = this._settingsOpened ? \"far fa-save\" : \"fas fa-cog\";\n                action.title = this._settingsOpened ? \"msg#facetCard.saveSettings\" : \"msg#facetCard.openSettings\";\n            }\n        });\n\n    }\n\n    ngOnInit(){\n        // Initialize actions\n        this._collapsed = this.startCollapsed;\n        this._expanded = this.startExpanded;\n        this._settingsOpened = this.startSettingsOpened;\n\n        this.collapseAction.update();\n        this.expandAction.update();\n        this.settingsAction.update();\n    }\n\n    ngAfterContentInit(){\n        if(this.facetComponent) {\n            this.actionChangedSubscription = this.facetComponent.actionsChanged.subscribe((actions) => {\n                this.allActions.forEach(action => action.update());\n                this.changeDetectorRef.markForCheck();\n            });\n        }\n        else {\n            console.warn(\"No #facet component is defined in this facet card: \", this.title);\n        }\n    }\n\n    ngOnDestroy(){\n        if(this.actionChangedSubscription){\n            this.actionChangedSubscription.unsubscribe();\n        }\n    }\n\n    public get allActions() : Action[] {\n        if(this.hideActionsCollapsed && this._collapsed) return [this.collapseAction]; // Hide other actions if collapsed\n        let actions = [] as Action[];\n        if(this.actionsFirst) {\n            actions.push(...this.actions);\n        }\n        if(this.facetComponent) actions = actions.concat(this.facetComponent.actions);\n        if(this.hasSettings) actions.push(this.settingsAction);\n        if(this.expandable) actions.push(this.expandAction);\n        if(this.collapsible) actions.push(this.collapseAction);\n        if(!this.actionsFirst) {\n            actions.push(...this.actions);\n        }\n        return actions;\n    }\n\n    public get hasSettings(){\n        return !!this.facetComponent && !!this.facetComponent.settingsTpl;\n    }\n}\n","<div *ngIf=\"!isHidden()\" class=\"list-group list-group-flush\">\n    <div *ngIf=\"displayActions && actions\" class=\"d-flex pb-2 pr-2\">\n        <div class=\"btn-group ml-auto\"\n            [sq-action-buttons]=\"{items: actions, size: 'sm'}\">\n        </div>\n    </div>\n\n    <div *ngIf=\"searchItems.selected\" class=\"position-relative\" [formGroup]=\"myGroup\">\n        <div class=\"p-1\">\n            <input class=\"form-control\" sqAutofocus\n                formControlName=\"searchQuery\"\n                [placeholder]=\"'msg#facet.searchPlaceholder' | sqMessage\">\n        </div>\n        <sq-loading-bar [active]=\"searchActive\"></sq-loading-bar>\n    </div>\n\n    <!-- filtered items -->\n    <div  *ngFor=\"let item of filtered\"\n        class=\"d-flex flex-row align-items-center list-group-item list-group-item-action list-group-item-success text-truncate border-0 px-3 py-1 facet-row cursor-pointer\"\n        [ngClass]=\"{'list-group-item-success': !item.$excluded, 'list-group-item-secondary': item.$excluded}\"\n        [title]=\"'msg#facet.selectedValue' | sqMessage\"\n        (click)=\"filterItem(item, $event)\">\n\n        <a href=\"#\" class=\"text-truncate mr-auto\">{{item | sqValue:item.$column}}</a>\n\n        <span *ngIf=\"showCount && item.count\" class=\"ml-2 text-muted small\">{{item.count | sqNumber}}</span>\n        <span class=\"fa-stack cursor-pointer\">\n            <i class=\"ml-2 far fa-minus-square fa-stack-1x icons icon-hover rotate\"></i>\n            <i class=\"ml-2 far fa-check-square fa-stack-1x icons icon-default rotate\"></i>\n        </span>\n\n    </div>\n\n    <!-- hidden selected items -->\n    <div  *ngFor=\"let item of hiddenSelected\"\n        class=\"d-flex flex-row align-items-center list-group-item list-group-item-primary text-truncate border-0 px-3 py-1 facet-row cursor-pointer\"\n        [title]=\"'msg#facet.itemUnselect' | sqMessage\"\n        (click)=\"selectItem(item, $event)\">\n\n        <a  href=\"#\" (click)=\"filterItem(item, $event)\"\n            [title]=\"'msg#facet.filterItem' | sqMessage:{'terme':(item | sqValue:item.$column)}\"\n            class=\"text-truncate mr-auto\">{{item | sqValue:item.$column}}</a>\n        \n        <span *ngIf=\"showCount && item.count\" class=\"ml-2 text-muted small\">{{item.count | sqNumber}}</span>\n    </div>\n\n    <!--- suggestions items -->\n    <div *ngFor=\"let suggest of suggestions$ | async\"\n        class=\"d-flex flex-row align-items-center list-group-item list-group-item-action text-truncate border-0 px-3 py-1 facet-row cursor-pointer\"\n        [ngClass]=\"{'list-group-item-primary': isSelected(suggest)}\"\n        (click)=\"selectItem(suggest, $event)\">\n        \n        <a  href=\"#\" (click)=\"filterItem(suggest, $event)\"\n            role=\"button\" \n            title=\"{{ 'msg#facet.filterItem' | sqMessage:{'terme':(suggest | sqValue:suggest.$column)} }}\"\n            class=\"text-truncate mr-auto\">{{suggest | sqValue:suggest.$column}}</a>                \n\n        <span *ngIf=\"showCount && suggest.count\" class=\"ml-2 text-muted small\" style=\"z-index: 1;\">{{suggest.count | sqNumber}}</span>\n    \n    </div>\n    <span *ngIf=\"noResults\" class=\"d-block text-center text-muted small py-1\"><i>{{'msg#facet.searchNoResult' | sqMessage}}</i></span>\n\n    <div *ngIf=\"!hasSuggestions()\" class=\"facet-results-scrollable\">\n        <!--- aggregation items without filtered -->\n        <div *ngFor=\"let item of items$ | async\"\n            class=\"position-relative list-group-item list-group-item-action border-0 px-3 py-1 facet-row cursor-pointer\"\n            [ngClass]=\"{ 'list-group-item-primary': isSelected(item) }\"\n            [title]=\"(isSelected(item) ? 'msg#facet.itemUnselect' : 'msg#facet.itemSelect') | sqMessage\"\n            (click)=\"selectItem(item, $event)\">\n\n            <div *ngIf=\"showProgressBar && resultsLength > 1\" class=\"position-absolute progress-bar progress-color\" [style.--count]=\"getPercent(item.count)\"></div>\n            <div class=\"d-flex justify-content-between align-items-baseline\">\n                <a  href=\"#\" (click)=\"filterItem(item, $event)\" style=\"z-index: 1;\"\n                    [title]=\"'msg#facet.filterItem' | sqMessage:{'terme':(item | sqValue:item.$column)}\"\n                    class=\"text-truncate mr-auto\">{{item | sqValue:item.$column}}</a>\n\n                <span *ngIf=\"showCount && item.count\" class=\"ml-2 text-muted small\" style=\"z-index: 1;\">{{item.count | sqNumber}}</span>\n            </div>\n        </div>\n\n        <a *ngIf=\"hasMore\" class=\"d-block border-0 px-3 py-1 text-center\" (click)=\"loadMore($event)\" href=\"#\">\n            <span *ngIf=\"loadingMore\" class=\"fas fa-sync fa-fw fa-spin\"></span>\n            <small *ngIf=\"!loadingMore\">{{'msg#facet.loadMore' | sqMessage}}</small>\n        </a>\n    </div>\n\n</div>","import {Component, Input, OnChanges, SimpleChanges, ChangeDetectorRef, ChangeDetectionStrategy, OnInit, OnDestroy} from \"@angular/core\";\nimport {Results, Aggregation, AggregationItem} from \"@sinequa/core/web-services\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {FacetService} from \"../../facet.service\";\nimport {Action} from \"@sinequa/components/action\";\nimport {AbstractFacet} from \"../../abstract-facet\";\nimport {BehaviorSubject, Observable, of, Subscription} from 'rxjs';\nimport {catchError, debounceTime, distinctUntilChanged, map, switchMap} from 'rxjs/operators';\nimport {FormControl, FormGroup} from '@angular/forms';\n\n@Component({\n    selector: \"sq-facet-list\",\n    templateUrl: \"./facet-list.html\",\n    styleUrls: [\"./facet-list.scss\"],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BsFacetList extends AbstractFacet implements OnChanges, OnInit, OnDestroy {\n    @Input() name: string; // If ommited, the aggregation name is used\n    @Input() results: Results;\n    @Input() aggregation: string;\n    @Input() showCount: boolean = true; // Show the number of occurrences\n    @Input() searchable: boolean = true; // Allow to search for items in the facet\n    @Input() allowExclude: boolean = true; // Allow to exclude selected items\n    @Input() allowOr: boolean = true; // Allow to search various items in OR mode\n    @Input() allowAnd: boolean = true; // Allow to search various items in AND mode\n    @Input() displayEmptyDistributionIntervals: boolean = false; // If the aggregration is a distribution, then this property controls whether empty distribution intervals will be displayed\n    @Input() displayActions = false;\n    @Input() showProgressBar = false;    // Allow to display item count as progress bar\n\n    // Aggregation from the Results object\n    data$ = new BehaviorSubject<Aggregation | undefined>(undefined)\n    items$ = new BehaviorSubject<AggregationItem[]>([]);\n    data = () => this.data$.getValue();\n    subscriptions: Subscription[] = [];\n\n    filtering: boolean = false;\n\n    // Search\n    myGroup: FormGroup;\n    searchQuery: FormControl; // ngModel for textarea\n    suggestDelay = 200;\n    noResults = false;\n    searchActive = false;\n    suggestions$: BehaviorSubject<AggregationItem[]> = new BehaviorSubject<AggregationItem[]>([]);\n    \n    /** Sum of all items count value */\n    sumOfCount: number;\n\n    /** List of selected items */\n    selected: AggregationItem[] = [];\n\n    /** Selected items that are not visible in the current aggregation (or suggestions in search mode) */\n    hiddenSelected: AggregationItem[] = [];\n    \n    /** List of excluded/filtered items */\n    filtered: AggregationItem[] = [];\n\n\n    // Loading more data\n    private skip = 0;\n    /** num of items currently displayed in the facet */\n    private count = 0;\n    /** Does facet has more items to display ? */\n    loadingMore = false;\n\n    // Actions (displayed in facet menu)\n    // All actions are built in the constructor\n    private readonly filterItemsOr: Action;\n    private readonly filterItemsAnd: Action;\n    private readonly excludeItems: Action;\n    private readonly clearFilters: Action;\n    public readonly searchItems: Action;\n\n    constructor(\n        private facetService: FacetService,\n        private changeDetectorRef: ChangeDetectorRef) {\n        super();\n\n        this.myGroup = new FormGroup({\n            searchQuery: new FormControl()\n        });\n\n        this.searchQuery = this.myGroup.get(\"searchQuery\") as FormControl;\n        this.subscriptions[\"suggest\"] = this.suggest$(this.searchQuery.valueChanges)\n            .subscribe(values => {\n                this.suggestions$.next(values);\n                // Refresh hiddenSelected list when the list of items is updated\n                this.refreshHiddenSelected();\n                this.searchActive = false;\n                this.changeDetectorRef.markForCheck();\n            });\n\n        // Keep documents with ANY of the selected items\n        this.filterItemsOr = new Action({\n            icon: \"fas fa-filter\",\n            title: \"msg#facet.filterItems\",\n            action: () => {\n                if (this.data()) {\n                    this.facetService.addFilterSearch(this.getName(), this.data() as Aggregation, this.selected);\n                }\n            }\n        });\n\n        // Keep documents with ALL the selected items\n        this.filterItemsAnd = new Action({\n            icon: \"fas fa-bullseye\",\n            title: \"msg#facet.filterItemsAnd\",\n            action: () => {\n                if (this.data()) {\n                    this.facetService.addFilterSearch(this.getName(), this.data() as Aggregation, this.selected, {and: true});\n                }\n            }\n        });\n\n        // Exclude document with selected items\n        this.excludeItems = new Action({\n            icon: \"fas fa-times\",\n            title: \"msg#facet.excludeItems\",\n            action: () => {\n                if (this.data()) {\n                    this.facetService.addFilterSearch(this.getName(), this.data() as Aggregation, this.selected, {not: true});\n                }\n            }\n        });\n\n        // Clear the current filters\n        this.clearFilters = new Action({\n            icon: \"far fa-minus-square\",\n            title: \"msg#facet.clearSelects\",\n            action: () => {\n                this.facetService.clearFiltersSearch(this.getName(), true);\n            }\n        });\n\n        // Search for a value in this list\n        this.searchItems = new Action({\n            icon: \"fas fa-search\",\n            title: \"msg#facet.searchItems\",\n            action: (item, event) => {\n                item.selected = !item.selected;\n                if(!item.selected){\n                    this.clearSearch();\n                }\n                event.stopPropagation();\n                this.changeDetectorRef.markForCheck();\n            }\n        });\n    }\n\n    clearSearch() {\n        this.searchQuery.setValue(\"\"); // Remove suggestions if some remain\n        this.noResults = false;\n        this.suggestions$.next([]);\n    }\n\n    /**\n     * Name of the facet, used to create and retrieve selections\n     * through the facet service.\n     */\n    getName() : string {\n        return this.name || this.aggregation;\n    }\n\n    /**\n     * OnChanges listener awaits new results from the search service\n     * This completely resets the display\n     * @param changes\n     */\n    ngOnChanges(changes: SimpleChanges) {\n        if (this.showCount === undefined) this.showCount = true;\n        if (this.searchable === undefined) this.searchable = true;\n        if (this.allowExclude === undefined) this.allowExclude = true;\n        if (this.allowOr === undefined) this.allowOr = true;\n        if (this.allowAnd === undefined) this.allowAnd = true;\n\n        if (!!changes[\"results\"]) {     // New data from the search service\n            if(!this.count){\n                this.count = this.facetService.getAggregationCount(this.aggregation);\n            }\n            this.filtered.length = 0;\n            this.selected.length = 0;\n            this.hiddenSelected.length = 0;\n            this.skip = 0;\n            this.searchItems.selected = false;\n            this.clearSearch();\n            this.data$.next(this.facetService.getAggregation(this.aggregation, this.results));\n        }\n    }\n\n    ngOnInit() {\n        this.subscriptions[\"data\"] = this.data$.pipe(\n            map(data => {\n                const nonFilteredItems = this.refreshFiltered(data);\n\n                return !data?.isDistribution || this.displayEmptyDistributionIntervals?\n                    nonFilteredItems : nonFilteredItems.filter(item => item.count > 0);\n            }),\n        ).subscribe(items => {\n            this.sumOfCount = items.length > 0 ? items.map(item => item.count).reduce((acc, value) => acc += value) / 100 : 0;\n            this.items$.next(items);\n            // Refresh hiddenSelected list when the list of items is updated\n            this.refreshHiddenSelected();\n        });\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.forEach(subscription => subscription.unsubscribe());\n    }\n\n    /**\n     * Returns all the actions that are relevant in the current context\n     */\n    get actions(): Action[] {\n\n        const actions: Action[] = [];\n\n        if (this.selected.length > 0) {\n            if(this.allowOr){\n                actions.push(this.filterItemsOr);\n            }\n            if(this.allowAnd && this.selected.length > 1){\n                actions.push(this.filterItemsAnd);\n            }\n            if(this.allowExclude){\n                actions.push(this.excludeItems);\n            }\n        }\n\n        if(!this.hasSuggestions() && this.hasFiltered()) {\n            actions.push(this.clearFilters);\n        }\n\n        if(this.searchable){\n            actions.push(this.searchItems);\n        }\n\n        return actions;\n    }\n\n\n    // Filtered items\n\n    /**\n     * Actualize the state of filtered items (note that excluded terms are not in the distribution, so the equivalent cannot be done)\n     */\n    refreshFiltered(data: Aggregation | undefined): AggregationItem[] {\n        // refresh filters from breadcrumbs\n        const items = this.facetService.getAggregationItemsFiltered(this.getName(), data?.valuesAreExpressions);\n        items.forEach(item => {\n            if (!this.isFiltered(data, item)) {\n                this.filtered.push(item);\n            }\n        });\n\n        const nonFilteredItems: AggregationItem[] = [];\n        data?.items?.forEach(item => {\n            const indx = this.facetService.filteredIndex(data, this.filtered, item);\n            if (this.facetService.itemFiltered(this.getName(), data, item)) {\n                if (!this.isFiltered(data, item)) {\n                    this.filtered.push(item);\n                } else {\n                    this.filtered[indx].count = item.count;\n                }\n            } else {\n                // sometime facetService.itemFiltered() could returns false but item is present in breadcrumbs\n                if (indx !== -1) {\n                    this.filtered[indx].count = item.count;\n                } else {\n                    nonFilteredItems.push(item);\n                }\n            }\n        });\n        return nonFilteredItems;\n    }\n\n    refreshHiddenSelected() {\n        this.hiddenSelected = this.selected.filter(item => {\n            const idx = this.hasSuggestions()\n                ? this.facetService.findAggregationItemIndex(this.suggestions$.getValue(), item)\n                : this.facetService.findAggregationItemIndex(this.items$.getValue() || [], item);\n            return idx === -1;\n        });\n    }\n\n    /**\n     * Returns true if the given AggregationItem is filtered\n     * @param item\n     */\n    isFiltered(data: Aggregation | undefined, item: AggregationItem): boolean {\n        return this.facetService.filteredIndex(data, this.filtered, item) !== -1;\n    }\n\n    /**\n     * Returns true if there is an active selection (or exclusion) from this facet\n     */\n    hasFiltered(): boolean {\n        return this.facetService.hasFiltered(this.getName());\n    }\n\n    /**\n     * Called when clicking on a facet item text\n     * @param item\n     * @param event\n     */\n    filterItem(item: AggregationItem, event) {\n        const data = this.data();\n        if (data) {\n            this.filtering = true;\n            if (!this.isFiltered(data, item)) {\n                this.facetService.addFilterSearch(this.getName(), data, item);\n            }\n            else {\n                this.facetService.removeFilterSearch(this.getName(), data, item);\n            }\n        }\n        event.preventDefault();\n    }\n\n\n    // Selected items\n\n    /**\n     * Returns true if the given AggregationItem is selected\n     * @param item\n     */\n    isSelected(item: AggregationItem) : boolean {\n        return this.facetService.findAggregationItemIndex(this.selected, item) !== -1;\n    }\n\n\n    /**\n     * Called when selecting/unselecting an item in the facet\n     * @param item\n     */\n    selectItem(item: AggregationItem, e: Event) {\n        e.preventDefault();\n        if(!this.filtering) {\n            this.updateSelected(item);\n            e.stopPropagation();\n        }\n        this.filtering = false;\n    }\n\n    private updateSelected(item: AggregationItem) {\n        if (!this.isFiltered(this.data(), item)) {\n            const index = this.facetService.findAggregationItemIndex(this.selected, item);\n            if (index === -1) {\n                this.selected.push(item);\n            } else {\n                this.selected.splice(index, 1);\n            }\n            this.refreshHiddenSelected();\n        }\n    }\n\n\n    // Loading more items\n\n    /**\n     * Returns true if this facet can get more data from the server\n     * (The only way to guess is to check if the facet is \"full\", it capacity being the (skip+)count)\n     */\n    get hasMore(): boolean {\n        return this.resultsLength >= this.skip + this.count;\n    }\n\n    get resultsLength() {\n        return this.items$.getValue().length + this.filtered.length\n    }\n\n    /**\n     * Called on loadMore button click\n     */\n    loadMore(e: Event) {\n        e.stopPropagation();\n        if (this.data()) {\n            const skip = this.resultsLength;    // avoid hasMore() to return false when fetching data\n            this.loadingMore = true;\n            this.changeDetectorRef.markForCheck();\n\n            Utils.subscribe(this.facetService.loadData(this.aggregation, skip, this.count),\n                agg => {\n                    this.skip = skip;\n                    if (agg?.items && this.data()) {\n                        agg.items = this.items$.getValue().concat(agg.items);\n                        this.data$.next(agg);\n                    }\n                },\n                undefined,\n                () => {\n                    this.loadingMore = false;\n                    this.changeDetectorRef.markForCheck();\n                });\n        }\n        return false; // Avoids following href\n    }\n\n\n    // Suggest / Search\n\n    /**\n     * Returns true if the search mode is active (ie. there are suggestions to display in place of the aggregation)\n     */\n    hasSuggestions(): boolean {\n        return this.suggestions$.getValue().length > 0 || this.noResults;\n    }\n\n    /**\n     * Called on NgModel change (searchQuery)\n     * Uses the suggestfield API to retrieve suggestions from the server\n     * The suggestions \"override\" the data from the distribution (until search results are cleared)\n     */\n    suggest$ = (text$: Observable<string>) => text$.pipe(\n        debounceTime(this.suggestDelay),\n        distinctUntilChanged(),\n        switchMap(term => {\n            if (term.trim() === \"\") {\n                this.noResults = false;\n                return of([]);\n            }\n            this.searchActive = true;\n            this.changeDetectorRef.markForCheck();\n            return this.facetService.suggest(term, this.data()?.column || '').pipe(\n                catchError(err => {\n                    console.log(err);\n                    this.noResults = false;\n                    return of([]);\n                }),\n                map(items => {\n                    const suggestions = items.slice(0, this.count)\n                        .map(item => this.facetService.suggestionToAggregationItem(item))\n                        .filter(item => !this.isFiltered(this.data(), item));\n\n                    this.noResults = suggestions.length === 0 && term.trim() !== \"\";\n                    return suggestions;\n                })\n            )\n        })\n    )\n\n    /* AbstractFacet abstract methods */\n    isHidden(): boolean {\n        return !this.data();\n    }\n    \n    /**\n     * Convert facet item count to percentage width\n     * @param count item count\n     * @returns a % string representation\n     */\n    getPercent(count: number): string {\n        return `${100 - (count / this.sumOfCount)}%`;\n    }\n}\n","<div *ngIf=\"!isHidden()\" class=\"list-group list-group-flush\" [ngClass]=\"{'scrollable': forceMaxHeight }\">\n    <div *ngIf=\"displayActions && actions\" class=\"d-flex pb-2 pr-2\">\n        <div class=\"btn-group ml-auto\"\n            [sq-action-buttons]=\"{items: actions, size: 'sm'}\">\n        </div>\n    </div>\n    \n    <div *ngIf=\"searchItems.selected\" class=\"position-relative\" [formGroup]=\"myGroup\">\n        <div class=\"p-1\">\n            <input class=\"form-control\" sqAutofocus\n                formControlName=\"searchQuery\"\n                [placeholder]=\"'msg#facet.searchPlaceholder' | sqMessage\">\n        </div>\n        <sq-loading-bar [active]=\"searchActive\"></sq-loading-bar>\n    </div>\n    \n    <!-- hidden selected items -->\n    <div *ngFor=\"let item of hiddenSelected\"\n        class=\"d-flex flex-row align-items-center list-group-item list-group-item-primary border-0 px-3 py-1 facet-row cursor-pointer\"\n        [title]=\"'msg#facet.itemUnselect' | sqMessage\"\n        (click)=\"selectItem(item)\">\n\n        <a href=\"#\" (click)=\"filterItem(item, $event)\"\n            [title]=\"'msg#facet.filterItem' | sqMessage:{'terme':(item.$path | slice:1:-1)}\"\n            class=\"text-truncate mr-auto\">{{item.$path | slice:1:-1}}</a>\n        \n        <span *ngIf=\"showCount && item.count\" class=\"ml-2 text-muted small\">{{item.count | sqNumber}}</span>\n    </div>\n\n    <span *ngIf=\"noResults\" class=\"d-block text-center text-muted small py-1\"><i>{{'msg#facet.searchNoResult' | sqMessage}}</i></span>\n\n    <ng-container *ngTemplateOutlet=\"itemsTpl; context:data\"></ng-container>\n\n</div>\n\n<ng-template #itemsTpl let-items=\"items\">\n    <ng-container *ngFor=\"let item of items\">\n\n        <a  class=\"d-flex flex-row align-items-center list-group-item border-0 pl-1 pr-3 py-1\"\n            [ngClass]=\"{'list-group-item-primary':isSelected(item),'list-group-item-success':isFiltered(item),'list-group-item-action':!isFiltered(item), 'filtered':isFiltered(item) }\" \n            [title]=\"(isFiltered(item)? 'msg#facet.selectedValue' : 'msg#facet.itemSelect') | sqMessage\" \n            (click)=\"selectItem(item)\" href=\"#\">\n    \n            <span class=\"mr-auto text-truncate\" [ngStyle]=\"{'margin-left.rem' : item['$level'] - 1}\">\n\n                <a *ngIf=\"item['hasChildren']\" class=\"item-opener\" href=\"#\" (click)=\"open(item, $event)\" [title]=\"(item['$opened'] ? 'msg#facet.closeItem' : 'msg#facet.openItem') | sqMessage\">\n                    <span *ngIf=\"item['$opening']\" class=\"fas fa-sync fa-fw fa-spin\"></span>\n                    <span *ngIf=\"!item['$opening'] && item['$opened']\" class=\"fas fa-caret-down fa-fw\"></span>\n                    <span *ngIf=\"!item['$opening'] && !item['$opened']\" class=\"fas fa-caret-right fa-fw\"></span>\n                </a>\n                <span *ngIf=\"!item['hasChildren']\" class=\"fas fa-fw\"></span>\n    \n                <a  href=\"#\" (click)=\"filterItem(item, $event)\" \n                    role=\"button\" [title]=\"item | sqValue:item.$column\"\n                    class=\"text-truncate\"> {{item | sqValue:item.$column}}</a>\n\n            </span>\n            \n            <i class=\"ml-2 far fa-check-square\" *ngIf=\"isFiltered(item)\"></i>\n\n            <span *ngIf=\"showCount && item.count\" class=\"ml-2 text-muted small\">{{item.count | sqNumber}}</span>\n    \n        </a>\n\n        <ng-container *ngIf=\"item['$opened']\">\n\n            <ng-container *ngTemplateOutlet=\"itemsTpl; context:item\"></ng-container>\n\n        </ng-container>\n\n    </ng-container>\n\n</ng-template>\n","import {Component, Input, OnChanges, SimpleChanges, ChangeDetectorRef, ChangeDetectionStrategy} from \"@angular/core\";\nimport {Results, TreeAggregation, AggregationItem, TreeAggregationNode} from \"@sinequa/core/web-services\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {FacetService} from \"../../facet.service\";\nimport {Action} from \"@sinequa/components/action\";\nimport {AbstractFacet} from \"../../abstract-facet\";\nimport { FormControl, FormGroup } from \"@angular/forms\";\nimport { Observable, of, Subscription } from \"rxjs\";\nimport { catchError, debounceTime, distinctUntilChanged, map, switchMap } from \"rxjs/operators\";\n\n@Component({\n    selector: \"sq-facet-tree\",\n    templateUrl: \"./facet-tree.html\",\n    styleUrls: [\"./facet-tree.scss\"],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BsFacetTree extends AbstractFacet implements OnChanges {\n    @Input() name: string; // If ommited, the aggregation name is used\n    @Input() results: Results;\n    @Input() aggregation: string;\n    @Input() showCount: boolean = true; // Show the number of occurrences\n    @Input() allowExclude: boolean = true; // Allow to exclude selected items\n    @Input() allowOr: boolean = true; // Allow to search various items in OR mode\n    @Input() searchable: boolean = true; // Allow to search for items in the facet\n    @Input() expandedLevel: number = 2;\n    @Input() forceMaxHeight: boolean = true; // Allow to display a scrollbar automatically on long list items\n    @Input() displayActions = false;\n\n    // Aggregation from the Results object\n    data: TreeAggregation | undefined;\n    originalItems: AggregationItem[] | undefined;\n    \n    private readonly subscriptions: Subscription[] = [];\n\n    // Sets to keep track of selected/excluded/filtered items\n    private readonly filtered = new Set<AggregationItem>();\n    \n    readonly selected = new Map<string,TreeAggregationNode>();\n\n    hiddenSelected: TreeAggregationNode[] = [];\n    // TODO keep track of excluded terms and display them with specific color private\n    // readonly filtered = new Set<AggregationItem>();\n\n    // Search\n    myGroup: FormGroup;\n    searchQuery: FormControl; // ngModel for textarea\n    suggestDelay = 200;\n    searchActive = false;\n    noResults = false;\n    \n    // Actions (displayed in facet menu)\n    // All actions are built in the constructor\n    private readonly filterItemsOr: Action;\n    private readonly excludeItems: Action;\n    private readonly clearFilters: Action;\n    public readonly searchItems: Action;\n\n\n    constructor(\n        private facetService: FacetService,\n        private changeDetectorRef: ChangeDetectorRef){\n            super();\n\n            this.myGroup = new FormGroup({\n                searchQuery: new FormControl()\n            });\n    \n            this.searchQuery = this.myGroup.get(\"searchQuery\") as FormControl;\n            this.subscriptions[\"suggest\"] = this.suggest$(this.searchQuery.valueChanges)\n                .subscribe(values => {\n                    if(this.data) {\n                        let items = this.searchQuery.value? values : this.originalItems;\n                        this.data = {\n                            column: this.data.column,\n                            name: this.data.name,\n                            isTree: true,\n                            items\n                        }\n                        // Refresh hiddenSelected list when the list of items is updated\n                        this.refreshHiddenSelected();\n                        this.searchActive = false;\n                        this.changeDetectorRef.markForCheck();\n                    }\n                });\n    \n            // Keep documents with ANY of the selected items\n            this.filterItemsOr = new Action({\n                icon: \"fas fa-filter\",\n                title: \"msg#facet.filterItems\",\n                action: () => {\n                    if (this.data) {\n                        this.facetService.addFilterSearch(this.getName(), this.data, this.getSelectedItems());\n                    }\n                }\n            });\n\n            // Exclude document with selected items\n            this.excludeItems = new Action({\n                icon: \"fas fa-times\",\n                title: \"msg#facet.excludeItems\",\n                action: () => {\n                    if (this.data) {\n                        this.facetService.addFilterSearch(this.getName(), this.data, this.getSelectedItems(), {not: true});\n                    }\n                }\n            });\n\n            // Clear the current filters\n            this.clearFilters = new Action({\n                icon: \"far fa-minus-square\",\n                title: \"msg#facet.clearSelects\",\n                action: () => {\n                    this.facetService.clearFiltersSearch(this.getName(), true);\n                }\n            });\n\n            // Search for a value in this list\n            this.searchItems = new Action({\n                icon: \"fas fa-search\",\n                title: \"msg#facet.searchItems\",\n                action: (item, event) => {\n                    item.selected = !item.selected;\n                    if(!item.selected){\n                        this.clearSearch();\n                    }\n                    event.stopPropagation();\n                    this.changeDetectorRef.markForCheck();\n                }\n            });\n    }\n\n    /**\n     * Name of the facet, used to create and retrieve selections\n     * through the facet service.\n     */\n    getName() : string {\n        return this.name || this.aggregation;\n    }\n\n    /**\n     * OnChanges listener awaits new results from the search service\n     * This completely resets the display\n     * @param changes\n     */\n    ngOnChanges(changes: SimpleChanges) {\n        if (this.showCount === undefined) this.showCount = true;\n        if (this.searchable === undefined) this.searchable = true;\n        if (this.allowExclude === undefined) this.allowExclude = true;\n        if (this.allowOr === undefined) this.allowOr = true;\n\n        if (!!changes[\"results\"]) {     // New data from the search service\n            this.filtered.clear();\n            this.selected.clear();\n            this.hiddenSelected.length = 0;\n            this.data = this.facetService.getAggregation(this.aggregation, this.results, {\n                facetName: this.getName(),\n                levelCallback: this.initNodes\n            });\n            this.originalItems = this.data?.items;\n            this.searchItems.selected = false;\n            this.clearSearch();\n        }\n    }\n\n    // For each new node, set up properties necessary for display\n    // This callback could also be used to filter or sorts nodes, etc.\n    @Input()\n    initNodes = (nodes: TreeAggregationNode[], level: number, node: TreeAggregationNode) => {\n        if(node.$filtered){\n            this.filtered.add(node);\n        }\n        if(node.hasChildren && !node.$opened && node.items && node.items.length >= 0 && level <= this.expandedLevel){\n            node.$opened = true;\n        }\n    }\n\n    /**\n     * Returns all the actions that are relevant in the current context\n     */\n    get actions(): Action[] {\n\n        const actions: Action[] = [];\n\n        if(this.selected.size > 0) {\n            if(this.allowOr){\n                actions.push(this.filterItemsOr);\n            }\n            if(this.allowExclude){\n                actions.push(this.excludeItems);\n            }\n        }\n\n        if(this.hasFiltered()) {\n            actions.push(this.clearFilters);\n        }\n        \n        if(this.searchable){\n            actions.push(this.searchItems);\n        }\n\n        return actions;\n    }\n\n\n    // Filtered items\n\n    /**\n     * Returns true if the given AggregationItem is filtered\n     * @param item\n     */\n    isFiltered(item: AggregationItem) : boolean {\n        return this.filtered.has(item);\n    }\n\n    /**\n     * Returns true if there is an active selection (or exclusion) from this facet\n     */\n    hasFiltered(): boolean {\n        return this.facetService.hasFiltered(this.getName());\n    }\n\n    /**\n     * Called when clicking on a facet item text\n     * @param item\n     * @param event\n     */\n    filterItem(item: AggregationItem, event) : boolean {\n        if (this.data) {\n            if(!this.isFiltered(item)) {\n                this.facetService.addFilterSearch(this.getName(), this.data, item);\n            }\n            else {\n                this.facetService.removeFilterSearch(this.getName(), this.data, item);\n            }\n        }\n        event.preventDefault();\n        event.stopPropagation();\n        return false;   // Stop the propagation of the event (link inside link)\n    }\n\n\n    // Selected items\n\n    /**\n     * Returns true if the given AggregationItem is selected\n     * @param item\n     */\n    isSelected(item: TreeAggregationNode) : boolean {\n        return this.selected.has(item.$path!);\n    }\n\n    /**\n     * Returns all the selected items\n     */\n    getSelectedItems(): TreeAggregationNode[] {\n        return Array.from(this.selected.values());\n    }\n\n    /**\n     * Called when selecting/unselecting an item in the facet\n     * @param item\n     */\n    selectItem(item: TreeAggregationNode) : boolean {\n        if(!this.isFiltered(item)){\n            if(this.selected.has(item.$path!)) {\n                this.selected.delete(item.$path!);\n            }\n            else {\n                this.selected.set(item.$path!, item);\n            }\n            this.refreshHiddenSelected();\n        }\n        return false;\n    }\n\n    refreshHiddenSelected() {\n        this.hiddenSelected = this.getSelectedItems()\n            .filter(item => !this.find(this.data?.items as TreeAggregationNode[], item));\n    }\n\n    find(items: TreeAggregationNode[] | undefined, item: TreeAggregationNode) {\n        if(items) {\n            for(let i of items) {\n                if(i.$path === item.$path || (i.$opened && this.find(i.items, item))) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Expand/Collapse a Tree node (the data may need to downloaded from the server)\n     * @param item\n     */\n    open(item: TreeAggregationNode, event: Event){\n        if (item.hasChildren) {\n            item.$opened = !item.$opened;\n            if (!item.items || item.items.length === 0) {\n                item['$opening'] = true;\n                if (this.data) {\n                    Utils.subscribe(this.facetService.open(this.getName(), this.data, item, this.initNodes),\n                        (results) => {\n                            item['$opening']= false;\n                            this.refreshHiddenSelected();\n                            this.changeDetectorRef.markForCheck();\n                        });\n                }\n            }\n            this.refreshHiddenSelected();\n        }\n        event.preventDefault();\n        event.stopPropagation();\n        return false; // Prevent default action\n    }\n\n    /* AbstractFacet abstract methods */\n    isHidden(): boolean {\n        return !this.data;\n    }\n\n\n    // Search    \n\n    clearSearch() {\n        this.searchQuery.setValue(\"\"); // Remove suggestions if some remain\n        this.noResults = false;\n    }\n    \n    /**\n     * Called on NgModel change (searchQuery)\n     * Uses the suggestfield API to retrieve suggestions from the server\n     * The suggestions \"override\" the data from the distribution (until search results are cleared)\n     */\n    suggest$ = (text$: Observable<string>) => text$.pipe(\n        debounceTime(this.suggestDelay),\n        distinctUntilChanged(),\n        switchMap(term => {\n            if (term.trim() === \"\") {\n                this.noResults = false;\n                return of([]);\n            }\n            this.changeDetectorRef.markForCheck();\n            this.searchActive = true;\n            return this.facetService.suggest(term, this.data?.column || '').pipe(\n                catchError(err => {\n                    console.log(err);\n                    this.noResults = false;\n                    return of([]);\n                }),\n                map(suggests => {\n                    const items = this.facetService.suggestionsToTreeAggregationNodes(suggests, term, this.data);\n                    this.noResults = items.length === 0 && term.trim() !== \"\";\n                    return items;\n                })\n            )\n        })\n    )\n\n    ngOnDestroy() {\n        this.subscriptions.forEach(subscription => subscription.unsubscribe());\n    }\n\n}","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <ng-content></ng-content>\n        <ng-container *ngFor=\"let f of facets\">\n            <sq-facet-card [ngSwitch]=\"f.type\" class=\"{{f['className']}}\" [title]=\"f.title\">\n                <sq-facet-list #facet *ngSwitchCase=\"'list'\" [name]=\"f.name\" [results]=\"results\" [aggregation]=\"f.aggregations\"></sq-facet-list>\n                <sq-facet-tree #facet *ngSwitchCase=\"'tree'\" [name]=\"f.name\" [results]=\"results\" [aggregation]=\"f.aggregations\"></sq-facet-tree>\n                <!-- Note: Removing the support for charts, but could be enabled back via a more generic ng-template approach (get all ng-template passed by transclusion and map them to a facet type) -->\n            </sq-facet-card>\n        </ng-container> \n    </div>\n</div>","import {Component, Input} from \"@angular/core\";\nimport {Results} from \"@sinequa/core/web-services\";\nimport {FacetService} from \"../../facet.service\";\n\n@Component({\n    selector: \"sq-facet-bar\",\n    templateUrl: \"./facet-bar.html\"\n})\nexport class BsFacetBar {\n    @Input() results: Results;\n    @Input() containerIndex: number = 0; // There could be various facet bars (but only one service and storage array)\n\n    constructor(\n        private facetService: FacetService) {\n    }\n\n    get facets(): any[] { // Which facets are actually displayed in this facet bar\n        const facets = this.facetService.getFacets(this.containerIndex);\n        return facets;\n    }\n\n}","<div class=\"facet-filters-bar\" *ngIf=\"!hidden\">\n    <sq-action-menu\n        [items]=\"filters\"\n        [autoAdjust]=\"autoAdjust\"\n        [autoAdjustBreakpoint]=\"autoAdjustBreakpoint\"\n        [collapseBreakpoint]=\"collapseBreakpoint\"\n        [right]=\"rightAligned\"\n        [size]=\"size\">\n    </sq-action-menu>\n</div>\n","import {Component, Input, OnChanges, OnInit} from \"@angular/core\";\nimport {Results} from \"@sinequa/core/web-services\";\nimport {FacetService} from \"../../facet.service\";\nimport {Action} from \"@sinequa/components/action\";\nimport {FacetConfig} from '../facet-multi/facet-multi.component';\nimport {BsFacetList} from '../facet-list/facet-list';\nimport {BsFacetTree} from '../facet-tree/facet-tree';\n\n@Component({\n    selector: \"sq-facet-filters\",\n    templateUrl: \"./facet-filters.html\",\n    styleUrls: [\"./facet-filters.css\"]\n})\nexport class BsFacetFilters implements OnInit, OnChanges {\n    @Input() results: Results;\n    @Input() facets: FacetConfig[];\n    @Input() enableCustomization = false;\n\n    @Input() autoAdjust: boolean = true;\n    @Input() autoAdjustBreakpoint: string = 'xl';\n    @Input() collapseBreakpoint: string = 'sm';\n    @Input() rightAligned: boolean = false;\n    @Input() size: string;\n\n    filters: Action[] = [];\n    hidden: boolean = false;\n\n    facetStatus = {\n        add: {\n            title: \"msg#facet.filters.add\",\n            icon: \"fas fa-plus\"\n        },\n        remove: {\n            title: \"msg#facet.filters.remove\",\n            icon: \"fas fa-minus\"\n        }\n    };\n\n    constructor(\n        private facetService: FacetService\n    ) {\n        this.hidden = false;\n        this.filters = [];\n    }\n\n    ngOnInit() {\n        if (!this.enableCustomization) return;\n\n        if (!this.facetService.defaultFacets) {\n            this.facetService.defaultFacets = [];\n            for (let facet of this.facets) this.facetService.defaultFacets.push({name: facet.name, position: 0, hidden: false, expanded: true, view: \"\"});\n        }\n\n        if (!this.facetService.allFacets) this.facetService.allFacets = this.facets;\n    }\n\n    ngOnChanges() {\n        if(!!this.results)\n            this.buildFilters();\n\n        if(!this.results)\n            this.hidden=true;\n    }\n\n    /**\n     * Build filters bar actions\n     */\n    private buildFilters() {\n\n        // For each facet\n        this.filters = this.filteredFacets.map((facet: FacetConfig) => {\n\n            const children = [\n                new Action({\n                    component: (facet.type === 'list') ? BsFacetList : BsFacetTree,\n                    componentInputs: {results: this.results, name: facet.name, aggregation: facet.aggregation, searchable: facet.searchable, displayActions: true}\n                })\n            ];\n\n            return new Action({\n                name: facet.name,\n                text: facet.title,\n                title: facet.title,\n                icon: facet.icon,\n                disabled: !this.hasData(facet),\n                styles: this.hasFiltered(facet.name) ? \"ml-2 font-weight-bold\" : \"ml-2\",\n                children: children\n            });\n        });\n\n        if (this.enableCustomization) this.addFacetMenu();\n    }\n\n    /**\n     * Use to outline facet when filters are sets\n     * @param facetName facet name\n     *\n     * @returns true if filters are sets otherwise false\n     */\n    private hasFiltered(facetName): boolean {\n        return this.facetService.hasFiltered(facetName);\n    }\n\n    /**\n     * Use to disable menu item when no items in a facet\n     * @param facet facet to check\n     *\n     * @returns true if facet contains at least one item otherwise false\n     */\n    private hasData(facet: FacetConfig): boolean {\n        return this.facetService.hasData(facet.aggregation, this.results);\n    }\n\n    private addFacetMenu() {\n        let outFacets: Action[] = [];\n\n        outFacets.push(new Action({\n            name: `add_remove_all`,\n            text: this.userFacets.length < this.facets.length ? \"msg#facet.filters.addAll\" : \"msg#facet.filters.removeAll\",\n            icon: this.hasFacetSelected ? \n                    (this.userFacets.length < this.facets.length ? \"far fa-minus-square mr-1\" : \"far fa-check-square mr-1\")\n                    : \"far fa-square mr-1\",\n            title: this.userFacets.length < this.facets.length ? \"msg#facet.filters.addAll\" : \"msg#facet.filters.removeAll\",\n            action: () => {\n                if (this.hasFacetSelected && this.userFacets.length === this.facets.length) this.facetService.removeAllFacet();\n                else this.facetService.addAllFacet();\n                this.buildFilters();\n            }\n        }));\n\n        for (let facet of this.facets) {\n            outFacets.push(new Action({\n                name: `add_remove_${facet.name}`,\n                text: facet.title,\n                icon: facet.icon,\n                selected: !!this.userFacets?.find(userFacet => userFacet.name === facet.name),\n                title: !!this.userFacets?.find(userFacet => userFacet.name === facet.name) ? \"msg#facet.filters.add\" : \"msg#facet.filters.remove\",\n                action: () => {\n                    if (this.userFacets?.find(userFacet => userFacet.name === facet.name)) this.facetService.removeFacet({name: facet.name, position: 0, hidden: false, expanded: true, view: \"\"})\n                    else this.facetService.addFacet({name: facet.name, position: 0, hidden: false, expanded: true, view: \"\"});\n                    this.buildFilters();\n                }\n            }));\n        }\n\n        let add_action = new Action({\n            name: \"facets_config\",\n            icon: \"fas fa-cog\",\n            title: \"msg#facet.filters.customizeFacets\",\n            children: outFacets\n        });\n        this.filters = [add_action, ...this.filters]; \n    }\n\n    get filteredFacets() {\n        if (!this.enableCustomization) return this.facets;\n        let new_facets: FacetConfig[] = [];\n\n        if (this.userFacets) {\n            for (let facet of this.facets) {\n                let pos = this.userFacets.findIndex((userFacet) => userFacet.name === facet.name);\n                if (pos >= 0) new_facets.push(facet);\n            }\n        }\n        return new_facets;\n    }\n\n    get userFacets() {\n        return this.facetService.facets;\n    }\n\n    get hasFacetSelected() {\n        if (this.userFacets.length === 0) return false;\n        for (let facet of this.facets) {\n            if (this.userFacets.find(userFacet => userFacet.name === facet.name)) return true;\n        }\n        return false;\n    }\n}\n","<div class=\"card-body\">\n    <form role=\"search\" novalidate [formGroup]=\"form\">\n        \n        <div class=\"d-flex flex-column flex-grow-1 position-relative\">        \n            <div class=\"input-group\">\n                <label class=\"sr-only\">{{'msg#facet.refine.input.label' | sqMessage}}</label>\n                \n                <input type=\"text\"\n                    formControlName=\"search\" \n                    class=\"form-control {{inputErrorMessage ? 'is-invalid' : ''}}\"\n                    spellcheck=\"false\"\n                    autocomplete=\"off\"\n                    [title]=\"inputErrorMessage\"\n\n                    sqAutocomplete\n                    [placeholder]=\"'msg#facet.refine.input.placeholder' | sqMessage\"\n                    [dropdown]=\"dropdown\" \n                    [suggestQuery]=\"suggestQuery\"\n                    [off]=\"!autocompleteEnabled\"\n                    [suggestDelay]=\"suggestDelay\"                    \n\n                    (submit)=\"doRefine()\"\n                    (parse)=\"setError($event)\">\n    \n                <div class=\"input-group-append\">\n                    <button class=\"btn btn-light\" type=\"button\" (click)=\"doRefine()\" title=\"{{'msg#facet.refine.input.buttonTitle' | sqMessage}}\">\n                        <i class=\"fas fa-search\"></i>\n                    </button>\n                </div>\n            </div>\n    \n            <sq-autocomplete-list #dropdown>\n                <ng-template #itemTpl let-item>\n                    <div class=\"py-2\" style=\"padding-left:0.75rem;\">{{item.display}}\n                        <small *ngIf=\"item.category\" class=\"ml-2 text-muted\">{{(item.label || item.category) | sqMessage}}</small>\n                    </div>\n                </ng-template>\n            </sq-autocomplete-list>\n        </div>\n    </form>    \n    <sq-did-you-mean [results]=\"results\" [context]=\"'refine'\"></sq-did-you-mean>\n</div>","import {Component, Input, OnChanges, SimpleChanges, ChangeDetectorRef} from \"@angular/core\";\nimport {FormGroup, FormBuilder, AbstractControl} from \"@angular/forms\";\nimport {Results} from \"@sinequa/core/web-services\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {SearchService} from \"@sinequa/components/search\";\nimport {AbstractFacet} from \"../../abstract-facet\";\nimport {ParseResult} from '@sinequa/components/autocomplete';\n\n@Component({\n    selector: \"sq-refine\",\n    templateUrl: \"./facet-refine.html\"\n})\nexport class BsRefine extends AbstractFacet implements OnChanges {\n\n    /**\n     * Results of the search page associated to this refine\n     */\n    @Input() results: Results;\n\n    /**\n     * Whether or not to enable autocompletion\n     */\n    @Input() autocompleteEnabled: boolean;\n\n    /**\n     * Suggest query with which to perform autocompletion\n     */\n    @Input() suggestQuery: string;\n\n    /**\n     * Minimum delay (in ms) between suggest queries\n     */\n    @Input() suggestDelay: number = 200;\n\n    form: FormGroup;\n    searchControl: AbstractControl | null;\n\n    inputErrorMessage: string;\n\n    constructor(\n        public formBuilder: FormBuilder,\n        public searchService: SearchService,\n        private changeDetectorRef: ChangeDetectorRef) {\n        super();\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (!this.form) {\n            this.form = this.formBuilder.group({\n                \"search\": \"\"\n            });\n            this.searchControl = this.form.get(\"search\");\n        }\n        if (!!changes[\"results\"] && this.searchControl) {\n            this.searchControl.setValue(this.searchService.lastRefineText);\n        }\n    }\n\n    doRefine = () => {\n        if (this.searchControl) {\n            const text = Utils.trim(this.searchControl.value);\n            if (text) {\n                this.searchService.searchRefine(text);\n            }\n        }\n    }\n\n    setError(parseResult: ParseResult = {}){\n        if(parseResult.error !== this.inputErrorMessage){\n            this.inputErrorMessage = parseResult.error || \"\";\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n}","<div class=\"my-search d-flex flex-row align-items-center flex-wrap\" [ngClass]=\"collapsed ? 'collapsed-view' : 'expanded-view'\">\n    <ng-container *ngFor=\"let item of items; index as i\">\n        <div *ngIf=\"!item.hidden\"\n            class=\"px-1 ml-1 mb-1 sq-metadata-item sq-metadata-color-{{fields[i]}}\"\n            [ngClass]=\"{'sq-metadata-border': useBadges}\">\n            <span\n                [innerHTML]=\"item.display | sqExpr:{withFields: displayFieldNames, asHTML: true}\"\n                title=\"{{fields[i]}}\">\n            </span>\n            <span\n                *ngIf=\"allowDeletion\"\n                class=\"far fa-times-circle pl-1\"\n                role=\"button\"\n                (click)=\"removeItem(item)\"\n                title=\"{{'msg#facet.mySearch.itemRemove' | sqMessage}}\">\n            </span>\n        </div>\n    </ng-container>\n</div>\n<div *ngIf=\"collapsible && !isEmpty\">\n    <hr>\n    <i class=\"fas fa-chevron-circle-{{collapsed ? 'down' : 'up'}}\" (click)=\"collapsed = !collapsed;\"></i>\n</div>\n","import { Component, Input, OnChanges, SimpleChanges } from \"@angular/core\";\nimport { Results } from \"@sinequa/core/web-services\";\nimport { SearchService, BreadcrumbsItem } from \"@sinequa/components/search\";\nimport { AbstractFacet } from \"../../abstract-facet\";\nimport { Action } from \"@sinequa/components/action\";\n\n@Component({\n    selector: \"sq-facet-mysearch\",\n    templateUrl: \"./facet-mysearch.html\",\n    styleUrls: [\"./facet-mysearch.scss\"],\n})\nexport class BsMySearch extends AbstractFacet implements OnChanges {\n    @Input() results: Results;\n    /** Display icon to delete items */\n    @Input() allowDeletion: boolean = true;\n    /** Display each item's field */\n    @Input() displayFieldNames: boolean = false;\n    /** Make the div collapsible */\n    @Input() collapsible: boolean = false;\n    /** Add a badge likely style to items */\n    @Input() useBadges: boolean = false;\n    /** Wether we Ignore text and fielded search */\n    @Input() ignoreText: boolean = true;\n    /** Items of those facets will be excluded  */\n    @Input() excludedFacets: (string | undefined)[] = [\"search-form\"];\n\n\n    collapsed = false;\n    clearAction: Action;\n    items: BreadcrumbsItem[] = [];\n    fields: string[] = [];\n\n    constructor(public searchService: SearchService) {\n        super();\n\n        this.clearAction = new Action({\n            icon: \"far fa-minus-square\",\n            title: \"msg#facet.filters.clear\",\n            action: () => this.clear(),\n        });\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (!!changes[\"results\"]) {\n            /** Initialize items based on input values */\n            this.items = this.ignoreText\n                ? this.searchService.breadcrumbs?.items.filter(\n                        (item: BreadcrumbsItem) =>\n                            item.expr && !(item.expr && !item.expr.field && !item.expr.isStructured) && !this.excludedFacets.includes(item.facet)\n                    ) || []\n                : this.searchService.breadcrumbs?.items || [];\n\n            /** Retrieve the field name of each item */\n            this.fields = [];\n            for (const item of this.items) {\n                this.fields.push(this.getField(item))\n            }\n\n        }\n    }\n\n    protected getField(item: BreadcrumbsItem): string {\n        if (item.expr) {\n            if (item.expr.field) {\n                return item.expr.field;\n            } else {\n                if (!item.expr.isStructured) {\n                    return \"text\";\n                } else {\n                    const fields = item.expr.getFields();\n                    return fields.join(\"-\");\n                }\n            }\n        }\n        return \"unknown\";\n    }\n\n    removeItem(item: BreadcrumbsItem) {\n        this.searchService.removeBreadcrumbsItem(item);\n    }\n\n    get isEmpty() {\n        return this.items.length === 0;\n    }\n\n    get actions(): Action[] {\n        const actions: Action[] = [];\n        if (!this.isEmpty && this.allowDeletion) {\n            actions.push(this.clearAction);\n        }\n        return actions;\n    }\n\n    protected clear() {\n        for (const item of this.items) {\n            this.searchService.removeBreadcrumbsItem(item);\n        }\n    }\n}\n","<ng-container *ngIf=\"data\">\n    <div #slider class=\"card-body\">\n        <ng5-slider\n            *ngIf=\"sliderActive\"\n            [(value)]=\"value\"\n            [(highValue)]=\"highValue\"\n            [options]=\"options\"\n            [manualRefresh]=\"manualRefresh\"\n            (userChangeEnd)=\"onUserChangeEnd($event)\">\n        </ng5-slider>\n        <span *ngIf=\"!sliderActive\">{{'msg#facet.range.unavailable' | sqMessage}}</span>\n    </div>\n</ng-container>\n","import {Component, Input, OnChanges, SimpleChanges, AfterViewInit, OnDestroy, ViewChild, ElementRef, EventEmitter} from \"@angular/core\";\nimport {Subscription} from \"rxjs\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {AppService, FormatService, Expr, ExprOperator, ExprBuilder} from \"@sinequa/core/app-utils\";\nimport {IntlService} from \"@sinequa/core/intl\";\nimport {CCColumn, Results, Aggregation} from \"@sinequa/core/web-services\";\nimport {Options, LabelType, ChangeContext} from \"ng5-slider\";\nimport moment from \"moment\";\nimport {FacetService} from \"../../facet.service\";\nimport {SearchService} from \"@sinequa/components/search\";\nimport {UIService} from \"@sinequa/components/utils\";\nimport {AbstractFacet} from \"../../abstract-facet\";\nimport {AdvancedService} from \"@sinequa/components/advanced\";\nimport { Action } from '@sinequa/components/action';\n\nexport enum RoundTarget {\n    number,\n    year,\n    month,\n    week, // ISO\n    day\n}\n\nexport enum RoundType {\n    up,\n    down,\n    nearest\n}\n\nexport interface StepDef {\n    step: string;\n    format: string;\n    minRange: string;\n    active: boolean;\n}\n\n@Component({\n    selector: \"sq-facet-range\",\n    templateUrl: \"./facet-range.html\"\n})\nexport class BsFacetRange extends AbstractFacet implements OnChanges, AfterViewInit, OnDestroy {\n    @Input() name: string; // If ommited, the aggregation name is used\n    @Input() results: Results;\n    @Input() aggregation: string;\n    @Input() min : string;\n    @Input() max : string;\n    @Input() stepDefs: StepDef[];\n    @ViewChild(\"slider\", {static: false}) slider: ElementRef;\n\n    // Aggregation from the Results object\n    data: Aggregation | undefined;\n\n    options: Options;\n    value: number;\n    highValue: number;\n    startValue: number;\n    startHighValue: number;\n    sliderActive: boolean;\n    rangeActive: boolean;\n    rangeSelected: boolean;\n    manualRefresh = new EventEmitter<void>();\n    initDone: boolean;\n    protected column: CCColumn | undefined;\n    protected roundTarget: RoundTarget;\n    protected roundMultiple: number;\n    protected localeChange: Subscription;\n    protected format: string;\n\n    clearFiltersAction: Action;\n    applyFiltersAction: Action;\n    constructor(\n        private facetService: FacetService,\n        protected appService: AppService,\n        protected searchService: SearchService,\n        protected formatService: FormatService,\n        protected intlService: IntlService,\n        protected uiService: UIService,\n        protected advancedService: AdvancedService,\n        protected exprBuilder: ExprBuilder) {\n\n        super();\n\n        this.clearFiltersAction = new Action({\n            icon: \"far fa-minus-square\",\n            title: \"msg#facet.range.clear\",\n            action: () => this.clearRange()\n        });\n\n        this.applyFiltersAction = new Action({\n            icon: \"fas fa-filter\",\n            title: \"msg#facet.range.apply\",\n            action: () => this.applyRange()\n        });\n    }\n\n    protected translate = (value: number, label: LabelType): string => {\n        const value1 = this.roundNearest(value); // to accommodate fractional steps generated for years/months\n\n        if (this.format) {\n            if (this.column && AppService.isDate(this.column)) {\n                const date = new Date(value1);\n                const m = moment(date);\n                return this.intlService.formatMessage(this.format, {date: date, time: Utils.getTime(date), weekDay: m.weekday(), week: m.week(), weekYear: m.weekYear()});\n            }\n            else {\n                return this.intlService.formatMessage(this.format, {value: value1});\n            }\n        }\n        return this.formatService.formatFieldValue(this.column && AppService.isDate(this.column) ? new Date(value1) : value1, this.column);\n    }\n\n    protected roundAdjustment(value: number, multiple: number, roundType: RoundType): number {\n        switch (roundType) {\n            case RoundType.up:\n                return multiple - value % multiple;\n            default:\n            case RoundType.down:\n                return -(value % multiple);\n            case RoundType.nearest: {\n                const adjustUp = multiple - value % multiple;\n                const adjustDown = -(value % multiple);\n                return Math.abs(adjustUp) <= Math.abs(adjustDown) ? adjustUp : adjustDown;\n            }\n        }\n    }\n\n    protected _roundNumberUp(value: number, step: number): number {\n        return (value >= 0 ? Math.ceil(value / step) : Math.floor(value / step)) * step;\n    }\n\n    protected _roundNumberDown(value: number, step: number): number {\n        return (value >= 0 ? Math.floor(value / step) : Math.ceil(value / step)) * step;\n    }\n\n    protected _roundNumber(value: number, step: number, roundType: RoundType): number {\n        switch (roundType) {\n            case RoundType.up:\n                return this._roundNumberUp(value, step);\n            default:\n            case RoundType.down:\n                return this._roundNumberDown(value, step);\n            case RoundType.nearest: {\n                const up = this._roundNumberUp(value, step);\n                const down = this._roundNumberDown(value, step);\n                return Math.abs(up - value) <= Math.abs(down - value) ? up : down;\n            }\n        }\n    }\n\n    protected _getNearestDate(date: Date, upper: Date, lower: Date): Date {\n        return Math.abs(upper.getTime() - date.getTime()) <= Math.abs(lower.getTime() - date.getTime()) ? upper : lower;\n    }\n\n    protected _getNearestTargetDate(date: Date, target: RoundTarget): Date {\n        switch (target) {\n            case RoundTarget.year: {\n                return this._getNearestDate(date, new Date(date.getFullYear() + 1, 0), new Date(date.getFullYear(), 0));\n            }\n            case RoundTarget.month: {\n                return this._getNearestDate(date, new Date(date.getFullYear(), date.getMonth() + 1), new Date(date.getFullYear(), date.getMonth()));\n            }\n            default:\n            case RoundTarget.week:\n            case RoundTarget.day: {\n                return this._getNearestDate(date, new Date(date.getFullYear(), date.getMonth(), date.getDate() + 1), new Date(date.getFullYear(), date.getMonth(), date.getDate()));\n            }\n        }\n    }\n\n    protected _round(value: number, step: number, target: RoundTarget, multiple: number,  roundType = RoundType.down): number {\n        if (this.column && AppService.isDate(this.column)) {\n            let date = new Date(value);\n            if (roundType === RoundType.nearest) {\n                // round to the nearest target year, month or day to adjust for the linear step size and leap years\n                date = this._getNearestTargetDate(date, target);\n            }\n            switch (target) {\n                case RoundTarget.year: {\n                    const year = date.getFullYear();\n                    if (year % multiple !== 0 || date.getMonth() !== 0 || date.getDate() !== 1 ||\n                        date.getHours() !== 0 || date.getMinutes() !== 0 || date.getSeconds() !== 0 || date.getMilliseconds() !== 0) {\n                        date = new Date(year + this.roundAdjustment(year, multiple, roundType), 0);\n                    }\n                    break;\n                }\n                case RoundTarget.month: {\n                    const month = date.getMonth();\n                    if (month % multiple !== 0 || date.getDate() !== 1 ||\n                        date.getHours() !== 0 || date.getMinutes() !== 0 || date.getSeconds() !== 0 || date.getMilliseconds() !== 0) {\n                        date = new Date(date.getFullYear(), month + this.roundAdjustment(month, multiple, roundType));\n                    }\n                    break;\n                }\n                case RoundTarget.week: {\n                    const day = date.getDay();\n                    // First, round to Monday\n                    if (day !== 1/*Monday*/ ||\n                        date.getHours() !== 0 || date.getMinutes() !== 0 || date.getSeconds() !== 0 || date.getMilliseconds() !== 0) {\n                        let adjust: number;\n                        const up = 7 - (day - 1);\n                        const down = -(day - 1);\n                        switch (roundType) {\n                            case RoundType.up:\n                                adjust = up;\n                                break;\n                            default:\n                            case RoundType.down:\n                                adjust = down;\n                                break;\n                            case RoundType.nearest:\n                                adjust = Math.abs(up) >= Math.abs(down) ? up : down;\n                                break;\n                        }\n                        date = new Date(date.getFullYear(), date.getMonth(), date.getDate() + adjust);\n                    }\n                    // Then, round to week number\n                    const m = moment(date);\n                    const week = m.week();\n                    if (week % multiple !== 0) {\n                        date = new Date(date.getFullYear(), date.getMonth(), date.getDate() + (this.roundAdjustment(week, multiple, roundType) * 7));\n                    }\n                    break;\n                }\n                case RoundTarget.day: {\n                    const _date = date.getDate();\n                    if (date.getHours() !== 0 || date.getMinutes() !== 0 || date.getSeconds() !== 0 || date.getMilliseconds() !== 0) {\n                        date = new Date(date.getFullYear(), date.getMonth(), _date + this.roundAdjustment(_date, multiple, roundType));\n                    }\n                    break;\n                }\n            }\n            return date.getTime();\n        }\n        else {\n            return this._roundNumber(value, step, roundType);\n        }\n    }\n\n    protected round(value: number, roundType = RoundType.down): number {\n        return this._round(value, this.options.step || 1, this.roundTarget, this.roundMultiple, roundType);\n    }\n\n    protected roundDown(value: number): number {\n        return this.round(value, RoundType.down);\n    }\n\n    protected roundUp(value: number): number {\n        return this.round(value, RoundType.up);\n    }\n\n    protected roundNearest(value: number): number {\n        return this.round(value, RoundType.nearest);\n    }\n\n    //TODO - remove fix engine hack\n    private fixDate(dateStr: string): string {\n        if (dateStr) {\n            const secondsSep = dateStr.lastIndexOf(\":\");\n            if (secondsSep > 0) {\n                let seconds = Utils.toInt(dateStr.substr(secondsSep + 1));\n                if (seconds < 0) {\n                    seconds = 0;\n                }\n                else if (seconds > 59) {\n                    seconds = 59;\n                }\n                dateStr = dateStr.substr(0, secondsSep + 1) + seconds;\n            }\n        }\n        return dateStr;\n    }\n\n    protected initMinMax() {\n        let min = 0;\n        let max = 0;\n        if (!Utils.isEmpty(this.min) && (!Utils.isEmpty(this.max))) {\n            min = this.parseValue(!!new Date(this.min).getDate()? new Date(this.min) : this.min);\n            max = this.parseValue(!!new Date(this.max).getDate()? new Date(this.max) : this.max);\n        }\n        else {\n            if (this.data?.items) {\n                const item = this.data.items[0];\n                if (item && item.operatorResults) {\n                    if (this.column && AppService.isDate(this.column)) {\n                        //TODO - remove fix engine hack\n                        if (Utils.isString(item.operatorResults.min)) {\n                            const date = Utils.fromSysDateStr(this.fixDate(item.operatorResults.min));\n                            if (Utils.isDate(date)) {\n                                item.operatorResults.min = date;\n                            }\n                        }\n                        if (Utils.isString(item.operatorResults.max)) {\n                            const date = Utils.fromSysDateStr(this.fixDate(item.operatorResults.max));\n                            if (Utils.isDate(date)) {\n                                item.operatorResults.max = date;\n                            }\n                        }\n                        min = Utils.isDate(item.operatorResults.min) ? item.operatorResults.min.getTime() : 0;\n                        max = Utils.isDate(item.operatorResults.max) ? item.operatorResults.max.getTime() : 0;\n                    }\n                    else {\n                        min = Utils.isNumber(item.operatorResults.min) ? item.operatorResults.min : 0;\n                        max = Utils.isNumber(item.operatorResults.max) ? item.operatorResults.max : 0;\n                    }\n                }\n            }\n        }\n        this.options.floor = min;\n        this.options.ceil = max;\n    }\n\n    protected parseValue(value: string | Date): number {\n        if (Utils.isDate(value)) {\n            return value.getTime();\n        }\n        if (!Utils.isString(value)) {\n            return 0;\n        }\n        let _value: number | undefined;\n        if (this.column && this.column.parser) {\n            const str = this.formatService.parseValue(value, this.column.parser);\n            _value = Utils.toNumber(str);\n        }\n        if (Utils.isUndefined(_value)) {\n            _value = this.column && AppService.isDate(this.column) ?\n                Utils.toDuration(value) :\n                Utils.toSize(value);\n        }\n        return _value;\n    }\n\n    protected initStep() {\n        // Select the first step definition where the range >= stepDef.minRange\n        let format: string | undefined;\n        let step: number | undefined;\n        if (this.stepDefs) {\n            for (const stepDef of this.stepDefs) {\n                if (stepDef.step) {\n                    const thisStep = this.parseValue(stepDef.step);\n                    if (thisStep && stepDef.active) {\n                        if (!stepDef.minRange) {\n                            step = thisStep;\n                            format = stepDef.format;\n                            break;\n                        }\n                        else {\n                            // Round min/max for thisStep\n                            const {roundTarget, roundMultiple} = this.getRoundTarget(thisStep);\n                            const min = this._round(this.options.floor || 0, thisStep, roundTarget, roundMultiple, RoundType.down);\n                            const max = this._round(this.options.ceil || 0, thisStep, roundTarget, roundMultiple, RoundType.up);\n                            const range = max - min;\n                            const minRange = this.parseValue(stepDef.minRange);\n                            if (range >= minRange) {\n                                step = thisStep;\n                                format = stepDef.format;\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (!step) {\n            // Default step, default formatting\n            step = this.column && AppService.isDate(this.column) ? Utils.oneDay : 1;\n        }\n        // Adjust step for year/month rounding (we assume daylight savings will balance out over the year)\n        const {roundTarget, roundMultiple} = this.getRoundTarget(step);\n        switch (roundTarget) {\n            case RoundTarget.year:\n                step = roundMultiple * 365.25 * Utils.oneDay;\n                break;\n            case RoundTarget.month:\n                step = roundMultiple * 365.25 * Utils.oneDay / 12;\n                break;\n        }\n        this.roundTarget = roundTarget;\n        this.roundMultiple = roundMultiple;\n        // Set default format based on roundTarget\n        if (!format) {\n            switch (this.roundTarget) {\n                case RoundTarget.year:\n                    format = \"msg#facet.range.year\";\n                    break;\n                case RoundTarget.month:\n                    format = \"msg#facet.range.monthYear\";\n                    break;\n                case RoundTarget.week:\n                    format = \"msg#facet.range.weekYear\";\n                    break;\n                default:\n                    format = \"\";\n                    break;\n            }\n        }\n        this.options.step = step;\n        this.format = format;\n    }\n\n    protected getRoundTarget(step: number): { roundTarget: RoundTarget, roundMultiple: number } {\n        const ret = {\n            roundTarget: RoundTarget.number,\n            roundMultiple: 1\n        };\n        if (this.column && AppService.isDate(this.column)) {\n            if (step % (365 * Utils.oneDay) === 0) {\n                ret.roundTarget = RoundTarget.year;\n                ret.roundMultiple = step / (365 * Utils.oneDay);\n            }\n            else if (step % (30 * Utils.oneDay) === 0) {\n                ret.roundTarget = RoundTarget.month;\n                ret.roundMultiple = step / (30 * Utils.oneDay);\n            }\n            else if (step % (7 * Utils.oneDay) === 0) {\n                ret.roundTarget = RoundTarget.week;\n                ret.roundMultiple = step / (7 * Utils.oneDay);\n            }\n            else if (step % Utils.oneDay === 0) {\n                ret.roundTarget = RoundTarget.day;\n                ret.roundMultiple = step / Utils.oneDay;\n            }\n        }\n        return ret;\n    }\n\n    protected init() {\n        this.options = {\n            draggableRange: true,\n            enforceStep: false,\n            translate: this.translate\n        };\n        this.initMinMax();\n        this.initStep();\n        let ceil = this.options.ceil || 0;\n        let floor = this.options.floor || 0;\n        this.sliderActive = ceil > floor;\n        if (ceil > floor) {\n            floor = this.options.floor = this.roundDown(floor);\n            ceil = this.options.ceil = this.roundUp(ceil);\n        }\n        const [from, to] = this.getRange();\n        this.rangeActive = !Utils.isUndefined(from) || !Utils.isUndefined(to);\n        this.rangeSelected = false;\n        this.value = this.startValue = Math.max(from || floor, floor);\n        this.highValue = this.startHighValue = Math.min(to || ceil, ceil);\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (!this.initDone) {\n            this.initDone = true;\n            this.localeChange = Utils.subscribe(this.intlService.events,\n                (value) => {\n                    this.manualRefresh.emit();\n                });\n        }\n        if (!!changes[\"results\"]) {\n            this.data = this.facetService.getAggregation(this.aggregation, this.results);\n            this.column = this.data && this.appService.getColumn(this.data.column);\n            this.init();\n        }\n    }\n\n    protected onResize = () => {\n        this.manualRefresh.emit();\n    }\n\n    ngAfterViewInit() {\n        this.uiService.addElementResizeListener(this.slider.nativeElement, this.onResize);\n    }\n\n    ngOnDestroy() {\n        if(this.localeChange) {\n            this.localeChange.unsubscribe();\n        }\n        if(this.uiService && this.slider) {\n            this.uiService.removeElementResizeListener(this.slider.nativeElement, this.onResize);\n        }\n    }\n\n    onUserChangeEnd(changeContext: ChangeContext) {\n        this.rangeSelected = this.value !== this.startValue || this.highValue !== this.startHighValue;\n    }\n\n    getRange(): number[] | undefined[] {\n        if (this.column) {\n            let expr: Expr | string;\n            let value;\n            const expression = this.searchService.query?.findSelect(this.column.name)?.expression;\n            if (expression) {\n                expr = this.appService.parseExpr(expression);\n                if (expr instanceof Expr) {\n                    if (expr.values && expr.values.length > 1) {\n                        value = expr.values;\n                    } else {\n                        value = expr.value;\n                    }\n                    if (!Utils.isArray(value)) {\n                        if (expr.operator === ExprOperator.gte) {\n                            value = [value, undefined];\n                        } else if (expr.operator === ExprOperator.lte) {\n                            value = [undefined, value];\n                        }\n                    }\n                    value =  value.map(\n                        (val) => val ? this.advancedService.castAdvancedValue(val, this.column) : val\n                    );\n                    if (AppService.isDate(this.column)) {\n                        value =  value.map(\n                            (val) => val ? new Date(val).getTime() : val\n                        );\n                    }\n                    return value;\n                }\n            }\n        }\n        return [undefined, undefined]\n    }\n\n    setRange(from: number | undefined, to: number | undefined) {\n        let valFrom;\n        let valTo;\n        let expression: string | undefined;\n        if (this.column) {\n            valFrom = AppService.isDate(this.column) && Utils.isNumber(from) ? new Date(from) : from;\n            valTo = AppService.isDate(this.column) && Utils.isNumber(to) ? new Date(to) : to;\n            if (!!valFrom && !!valTo) {\n                expression = this.exprBuilder.makeRangeExpr(this.column.name, valFrom, valTo);\n            } else if (!!valFrom) {\n                expression = this.exprBuilder.makeNumericalExpr(this.column.name, '>=', valFrom);\n            } else if (!!valTo) {\n                expression = this.exprBuilder.makeNumericalExpr(this.column.name, '<=', valTo);\n            }\n            this.searchService.query?.removeSelect(this.column.name);\n            if (expression) {\n                this.searchService.query?.addSelect(\n                    expression,\n                    this.column.name\n                );\n            }\n        }\n    }\n\n    applyRange() {\n        this.setRange(this.roundNearest(this.value), this.roundNearest(this.highValue));\n        this.searchService.search();\n    }\n\n    clearRange() {\n        this.setRange(undefined, undefined);\n        this.searchService.search();\n    }\n\n    get actions(): Action[] {\n        const actions: Action[] = [];\n        if(this.rangeSelected){\n            actions.push(this.applyFiltersAction);\n        }\n        if(this.rangeActive){\n          actions.push(this.clearFiltersAction);\n        }\n        return actions;\n    }\n}\n","<div *ngIf=\"!openedFacet\" class=\"list-group list-group-flush\">\n    <div *ngFor=\"let facet of facets\" (click)=\"openFacet(facet)\"\n        class=\"open-facet d-flex flex-row list-group-item border-0 list-group-item-action px-3 py-1 align-items-center\"\n        [ngClass]=\"{'list-group-item-success':facet.$hasFiltered, 'disabled':!facet.$hasData }\">\n        <span class=\"flex-grow-1\">{{ facet.title | sqMessage }}</span>\n        <span class=\"fa-stack icons-group\" sqTooltip=\"{{ 'msg#facet.filters.clear' | sqMessage }}\" (click)=\"clearFacetFilters(facet, $event)\" *ngIf=\"facet.$hasFiltered\">\n            <i class=\"ml-2 far fa-minus-square fa-stack-1x icons icon-hover\"></i>\n            <i class=\"ml-2 far fa-check-square fa-stack-1x icons icon-default\"></i>\n        </span>\n        <span\n            *ngIf=\"showCount\"\n            class=\"mx-2 text-muted small\"\n            title=\"{{ 'msg#facet.filterItemCountTooltip' | sqMessage:{ values: { count: facet.$count } } }}\"\n        >\n            {{ facet.$count | sqNumber }}\n        </span>\n        <i class=\"fas fa-caret-right\"></i>\n    </div>\n</div>\n\n<ng-container *ngIf=\"openedFacet\">\n    <sq-facet-list #facet *ngIf=\"openedFacet.type==='list'\"\n        [name]=\"openedFacet.name\"\n        [results]=\"results\"\n        [aggregation]=\"openedFacet.aggregation\"\n        [showCount]=\"openedFacet.showCount\"\n        [searchable]=\"openedFacet.searchable\"\n        [allowExclude]=\"openedFacet.allowExclude\"\n        [allowOr]=\"openedFacet.allowOr\"\n        [allowAnd]=\"openedFacet.allowAnd\"\n        [displayEmptyDistributionIntervals]=\"openedFacet.displayEmptyDistributionIntervals\"\n        [showProgressBar]=\"showProgressBar\"\n    >\n    </sq-facet-list>\n\n    <sq-facet-tree #facet *ngIf=\"openedFacet.type==='tree'\"\n        [name]=\"openedFacet.name\"\n        [results]=\"results\"\n        [aggregation]=\"openedFacet.aggregation\"\n        [showCount]=\"openedFacet.showCount\"\n        [allowExclude]=\"openedFacet.allowExclude\"\n        [allowOr]=\"openedFacet.allowOr\">\n    </sq-facet-tree>\n</ng-container>\n","import { Component, OnChanges, Input, Output, ViewChild, EventEmitter, ChangeDetectorRef } from '@angular/core';\nimport { Results } from '@sinequa/core/web-services';\nimport { AbstractFacet } from '../../abstract-facet';\nimport { Action } from '@sinequa/components/action';\nimport { FacetService } from '../../facet.service';\nimport { Utils } from '@sinequa/core/base';\n\nexport interface FacetConfig {\n  name: string;\n  type: 'list' | 'tree';\n  title: string;\n  icon?: string;\n  aggregation: string;\n  showCount?: boolean;\n  searchable?: boolean;\n  allowExclude?: boolean;\n  allowOr?: boolean;\n  allowAnd?: boolean;\n  displayEmptyDistributionIntervals?: boolean;\n\n  // Parameters set by the component\n  $count?: string;\n  $hasData?: boolean;\n  $hasFiltered?: boolean;\n}\n\n@Component({\n  selector: 'sq-facet-multi',\n  templateUrl: './facet-multi.component.html',\n  styleUrls: ['./facet-multi.component.scss']\n})\nexport class BsFacetMultiComponent extends AbstractFacet implements OnChanges {\n\n  @Input() results: Results;\n  @Input() facets: FacetConfig[];\n  @Input() showCount: boolean = true;\n  @Input() showProgressBar = false;    // will display or not item count as progress bar\n\n  @Output() events = new EventEmitter<FacetConfig>();\n  @ViewChild(\"facet\", {static: false}) public facetComponent: AbstractFacet;\n\n  /**\n   * The facet configuration to open\n   */\n  openedFacet: FacetConfig | undefined;\n\n  /**\n   * Action to switch back from an opened facet to the facet multi view\n   */\n  backAction: Action;\n  clearAllFiltersAction: Action;\n\n  constructor(\n    public facetService: FacetService,\n    private changeDetectorRef: ChangeDetectorRef\n  ) {\n\n    super();\n\n    this.backAction = new Action({\n      name: \"back\",\n      icon: \"fas fa-arrow-left\",\n      title: \"msg#facet.filters.back\",\n      action: () => {\n        this.openedFacet = undefined;\n        this.events.next(undefined);\n        this.changeDetectorRef.detectChanges();\n      }\n    });\n\n    this.clearAllFiltersAction = new Action({\n      icon: \"far fa-minus-square\",\n      title: \"msg#facet.filters.clear\",\n      action: () => {\n        const facetsWithFiltered = this.facets.filter((facet) => facet.$hasFiltered).map(facet => facet.name);\n        this.facetService.clearFiltersSearch(facetsWithFiltered, true);\n      }\n    });\n\n  }\n\n  /**\n   * If a sub-facet is opened, add a Back button and forward\n   * the actions of the facet.\n   */\n  get actions(): Action[] {\n    const actions: Action[] = [];\n    if(this.openedFacet){\n      actions.push(this.backAction);\n    } else {\n      const hasFiltered = this.facets.some(facet => facet.$hasFiltered);\n      if (hasFiltered) actions.push(this.clearAllFiltersAction);\n    }\n    if(this.facetComponent){\n      actions.push(...this.facetActions);\n    }\n    return actions;\n  }\n\n  /**\n   * Return the actions of the child facet\n   */\n  get facetActions(): Action[] {\n    if(this.facetComponent){\n      return this.facetComponent.actions;\n    }\n    return [];\n  }\n\n  /**\n   * Open this sub facet\n   * @param facet\n   */\n  openFacet(facet: FacetConfig){\n    this.openedFacet = facet;\n    this.events.next(facet);\n    this.changeDetectorRef.detectChanges();\n  }\n\n  clearFacetFilters(facet: FacetConfig, e:Event) {\n    e.stopPropagation();\n    this.facetService.clearFiltersSearch(facet.name, true);\n    return false;\n  }\n\n  /**\n   * Return the number of items to display for a given facet\n   * @param facet\n   */\n  private getFacetCount(facet: FacetConfig): string {\n    const agg = this.results.aggregations.find(agg => Utils.eqNC(agg.name, facet.aggregation)); // avoid calling getAggregation() which is costly for trees\n    if (!agg?.items)\n      return \"\";\n    const count = this.facetService.getAggregationCount(facet.aggregation); // configured count (default: 10)\n    const aggItemCounter = (!agg.isDistribution || facet.displayEmptyDistributionIntervals)\n      ? agg.items.length\n      : agg.items.filter(item => item.count > 0).length;\n    return aggItemCounter >= count ? `${count}+` : `${aggItemCounter}`;\n  }\n\n  /**\n   * Return whether a given facet has been used in the current context\n   * @param facet\n   */\n  private hasFiltered(facet: FacetConfig): boolean {\n    return this.facetService.hasFiltered(facet.name);\n  }\n\n  /**\n   * When the results change, actualize count, hasData and hasFiltered\n   * which are displayed in the template.\n   */\n  ngOnChanges() {\n    this.facets.forEach(facet => {\n      facet.$count = this.getFacetCount(facet);\n      facet.$hasData = this.facetService.hasData(facet.aggregation, this.results);\n      facet.$hasFiltered = this.hasFiltered(facet);\n    });\n    this.changeDetectorRef.detectChanges();\n  }\n\n}\n","<ul class=\"cloud\" [attr.data-show-count]=\"showCount ? '' : null\">\n    <li *ngFor=\"let data of tagCloudData\">\n        <a\n            href=\"#\"\n            [attr.data-count]=\"data.item.count\"\n            [attr.data-weight]=\"proportionalWeight ? data.weight : null\"\n            class=\"sq-metadata-color-{{data.aggregation.column}}\"\n            (click)=\"filterItem(data, $event)\">\n            <i class=\"far fa-check-circle filtered\" *ngIf=\"data.item.$filtered\"></i>\n            {{data.item | sqValue:data.item.$column}}\n        </a>\n    </li>\n</ul>\n","import { Component, Input, SimpleChanges, OnChanges } from \"@angular/core\";\nimport { AbstractFacet } from \"../../abstract-facet\";\nimport {\n    Results,\n    AggregationItem,\n    Aggregation,\n} from \"@sinequa/core/web-services\";\nimport { Action } from \"@sinequa/components/action\";\nimport { FacetService } from \"../../facet.service\";\nimport { Utils } from \"@sinequa/core/base\";\n\nexport interface TagCloudItem {\n    aggregation: Aggregation;\n    item: AggregationItem;\n    weight: number;\n}\n\n@Component({\n    selector: \"sq-facet-tag-cloud\",\n    templateUrl: \"./facet-tag-cloud.html\",\n    styleUrls: [\"./facet-tag-cloud.scss\"],\n})\nexport class BsFacetTagCloud extends AbstractFacet implements OnChanges {\n    /** search results */\n    @Input() results: Results;\n    /** list of aggregations to be considered in collecting tag-cloud data */\n    @Input() aggregations: string | string[];\n    /** maximum number of data to be displayed in tag-cloud */\n    @Input() limit = 50;\n    /** the way data are collected from given aggregations: equal repartition between them or most relevant among all of them */\n    @Input() uniformRepartition = false;\n    /** show/hide number of occurrences of each item*/\n    @Input() showCount = false;\n    /** define the size of each displayed item: common size for all or proportional size based on their count */\n    @Input() proportionalWeight = true;\n    /** lowest count under which items will not be taken into account in tag-cloud data */\n    @Input() countThreshold = 0;\n    /** wether data are rendered following their count sorting or randomly */\n    @Input() shuffleData = false;\n    /** Isolate filtering results from other facets available in the app */\n    @Input() isolateFacetFilters = false;\n\n    aggregationsData: Aggregation[] = [];\n    tagCloudData: TagCloudItem[] = [];\n    private filtered: AggregationItem[] = [];\n\n    // Actions enabled within the facet\n    private readonly clearFilters: Action;\n    // Default weight to be applied if proportionalWeight = false\n    private readonly defaultWeight = 2;\n    // Prefix for tag-cloud facet name to be used if isolateFacetFilters = true\n    private readonly tagCloudFacetPrefix = \"tag-cloud_\";\n\n    constructor(private facetService: FacetService) {\n        super();\n\n        // Clear the current filters\n        this.clearFilters = new Action({\n            icon: \"far fa-minus-square\",\n            title: \"msg#facet.clearSelects\",\n            action: () => {\n                if (Utils.isArray(this.aggregations)) {\n                    for (const aggregation of this.aggregations) this.facetService.clearFiltersSearch(this.getName(aggregation), true);\n                } else { \n                    this.facetService.clearFiltersSearch(this.getName(this.aggregations), true);\n                }\n            },\n        });\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (!!changes[\"results\"]) {\n            /* reset filtered items */\n            this.filtered = [];\n\n            /* update tag-cloud data */\n            this.tagCloudData = this.getTagCloudData();\n        }\n    }\n\n    /**\n     * Defines the tag-cloud data according to given inputs\n     */\n    getTagCloudData(): TagCloudItem[] {\n        const aggregationsData = this.getAggregationsData();\n\n        if (aggregationsData.length === 0) {\n            return [];\n        } else {\n            let tmp: TagCloudItem[] = [];\n\n            if (this.uniformRepartition) {\n                aggregationsData.forEach((data: Aggregation) => {\n                    const end = Math.floor(this.limit / aggregationsData.length);\n                    // Firstly, take filtered items\n                    tmp.push(\n                        ...data\n                            .items!.filter((item) => item.$filtered)\n                            .sort((a, b) => b.count - a.count)\n                            .slice(0, end)\n                            .map(\n                                (item: AggregationItem) =>\n                                    ({\n                                        aggregation: data,\n                                        item: item,\n                                        weight: this.proportionalWeight\n                                            ? item.count\n                                            : this.defaultWeight,\n                                    } as TagCloudItem)\n                            )\n                    );\n                    // add most relevant items if threshold not attenuated\n                    if (tmp.length < end) {\n                        tmp.push(\n                            ...data\n                                .items!.filter(\n                                    (item) => item.count > this.countThreshold && !item.$filtered\n                                )\n                                .sort((a, b) => b.count - a.count)\n                                .slice(0, end - tmp.length)\n                                .map(\n                                    (item: AggregationItem) =>\n                                        ({\n                                            aggregation: data,\n                                            item: item,\n                                            weight: this.proportionalWeight\n                                                ? item.count\n                                                : this.defaultWeight,\n                                        } as TagCloudItem)\n                                )\n                        );\n                    }\n                });\n                tmp = tmp.sort((a, b) => b.item.count - a.item.count);\n            } else {\n                aggregationsData.forEach((data: Aggregation) => {\n                    tmp.push(\n                        ...data\n                            .items!.filter(\n                                (item) =>\n                                    item.count > this.countThreshold || item.$filtered\n                            )\n                            .map(\n                                (item: AggregationItem) =>\n                                    ({\n                                        aggregation: data,\n                                        item: item,\n                                        weight: this.proportionalWeight\n                                            ? item.count\n                                            : this.defaultWeight,\n                                    } as TagCloudItem)\n                            )\n                    );\n                });\n                const filtered = tmp.filter((elem) => elem.item.$filtered);\n                if (filtered.length < this.limit) {\n                    const notFiltered = tmp\n                        .filter((elem) => !elem.item.$filtered)\n                        .sort((a, b) => b.item.count - a.item.count);\n                    tmp = [...filtered];\n                    tmp.push(\n                        ...notFiltered.slice(0, this.limit - filtered.length)\n                    );\n                } else {\n                    tmp = filtered.slice(0, this.limit);\n                }\n            }\n\n            // By default, sort the whole array with respect to its counts and update its elements weight value\n            tmp = tmp\n                .sort((a, b) => b.item.count - a.item.count)\n                .map(\n                    (elem: TagCloudItem) =>\n                        ({\n                            ...elem,\n                            weight: this.proportionalWeight\n                                ? this.scaleItemWeight(tmp, elem.item.count)\n                                : this.defaultWeight,\n                        } as TagCloudItem)\n                );\n\n            // Shuffle the array\n            if (this.shuffleData) {\n                tmp = this.shuffle(tmp);\n            }\n\n            return tmp;\n        }\n    }\n\n    /**\n     * Invoked on click on an item in order to update the query\n     * @param tagCloudItem\n     * @param event\n     */\n    filterItem(tagCloudItem: TagCloudItem, event) {\n        const name = this.getName(tagCloudItem.aggregation.name);\n        const aggregation = tagCloudItem.aggregation;\n        const item = tagCloudItem.item;\n        if (!this.isFiltered(aggregation, item)) {\n            this.facetService.addFilterSearch(name, aggregation, item);\n        } else {\n            this.facetService.removeFilterSearch(name, aggregation, item);\n        }\n        event.preventDefault();\n    }\n\n    /**\n     * Define the possible actions according to the actual context\n     */\n    get actions(): Action[] {\n        const actions: Action[] = [];\n        if(this.isFiltering()) {\n            actions.push(this.clearFilters);\n        }\n        return actions;\n    }\n\n    /**\n     * Map the initial aggregations names to a list of Aggregation\n     */\n    protected getAggregationsData(): Aggregation[] {\n        return []\n            .concat(this.aggregations as [])\n            .filter((agg: string) =>\n                this.facetService.hasData(agg, this.results)\n            )\n            .map(\n                (agg: string) =>\n                    this.facetService.getAggregation(\n                        agg,\n                        this.results\n                    ) as Aggregation\n            )\n            .map((data: Aggregation) => this.refreshFiltered(data));\n    }\n\n    /**\n     * Update aggregation's data with respect to active filters in the query & breadcrumbs\n     * @param data\n     */\n    protected refreshFiltered(data: Aggregation): Aggregation {\n        const facetName = this.getName(data.name);\n        if (this.facetService.hasFiltered(facetName)) {\n            // refresh filters from breadcrumbs\n            const items = this.facetService.getAggregationItemsFiltered(facetName, data.valuesAreExpressions);\n            items.forEach((item) => {\n                if (!this.isFiltered(data, item)) {\n                    item.$filtered = true;\n                    this.filtered.push(item);\n                }\n            });\n\n            // double check filters from query and breadcrumb\n            data.items!.forEach((item) => {\n                const indx = this.facetService.filteredIndex(data, this.filtered, item);\n                if (this.facetService.itemFiltered(facetName, data, item)) {\n                    item.$filtered = true;\n                    if (!this.isFiltered(data, item)) {\n                        this.filtered.push(item);\n                    }\n                } else if (indx !== -1) {\n                    // sometime facetService.itemFiltered() could returns false but item is present in breadcrumbs\n                    item.$filtered = true;\n                }\n            });\n        }\n        return data;\n    }\n\n    /**\n     * Returns facets names to be used according to @input() isolateFacetFilters\n     * @param aggregationName\n     */\n    private getName(aggregationName: string): string {\n        if (!this.isolateFacetFilters) {\n            return aggregationName;\n        }\n        return this.tagCloudFacetPrefix + aggregationName;\n    }\n\n    /**\n     * Linearly map the original weight to a discrete scale from 1 to 10\n     * @param weight original weight\n     */\n    private scaleItemWeight(tagCloudData: TagCloudItem[], weight: number): number {\n        return (\n            Math.round(\n                ((weight - tagCloudData[tagCloudData.length - 1].weight) /\n                    (tagCloudData[0].weight -\n                        tagCloudData[tagCloudData.length - 1].weight)) *\n                    9.0\n            ) + 1\n        );\n    }\n\n    /**\n     * Returns true if the supplied item within the given aggregation is filtering the query\n     * @param data\n     * @param item\n     */\n    private isFiltered(data: Aggregation, item: AggregationItem): boolean {\n        return this.facetService.filteredIndex(data, this.filtered, item) !== -1;\n    }\n\n    /**\n     * Shuffle items of the supplied array\n     * @param arr\n     */\n    private shuffle(arr: TagCloudItem[]): TagCloudItem[] {\n        for (let i = arr.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * i);\n            const aux = arr[i];\n            arr[i] = arr[j];\n            arr[j] = aux;\n        }\n        return arr;\n    }\n\n    /**\n     * Returns true if there is at least one active filter in the tag-cloud facet\n     */\n    private isFiltering(): boolean {\n        return []\n                .concat(this.aggregations as [])\n                .some((aggregationName: string) =>\n                    this.facetService.hasFiltered(this.getName(aggregationName))\n                );\n    }\n}\n","import {NgModule, ModuleWithProviders} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\n\nimport {Ng5SliderModule} from \"ng5-slider\";\n\nimport {IntlModule} from \"@sinequa/core/intl\";\n\nimport {UtilsModule} from \"@sinequa/components/utils\";\nimport {CollapseModule} from \"@sinequa/components/collapse\";\nimport {BsActionModule} from \"@sinequa/components/action\";   // needed for sq-action-button\nimport {BsSearchModule} from \"@sinequa/components/search\";   // needed for refine facet / didyoumean\nimport {BsAutocompleteModule} from \"@sinequa/components/autocomplete\";  // needed for refine facet\n\nimport {FacetState, ALL_FACETS, DEFAULT_FACETS} from \"../facet.service\";\nimport {BsRefine} from \"./facet-refine/facet-refine\";\nimport {BsFacetBar} from \"./facet-bar/facet-bar\";\nimport {BsMySearch} from \"./facet-mysearch/facet-mysearch\";\nimport {BsFacetRange} from \"./facet-range/facet-range\";\nimport {BsFacetCard} from \"./facet-card/facet-card\";\nimport {BsFacetList} from \"./facet-list/facet-list\";\nimport {BsFacetTree} from \"./facet-tree/facet-tree\";\nimport {BsFacetFilters} from \"./facet-filters/facet-filters\";\nimport {BsFacetMultiComponent} from \"./facet-multi/facet-multi.component\";\nimport { BsFacetTagCloud } from './facet-tag-cloud/facet-tag-cloud';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n\n        IntlModule,\n\n        UtilsModule,\n        CollapseModule,\n        BsActionModule,\n        BsSearchModule,\n        BsAutocompleteModule,\n\n        Ng5SliderModule\n    ],\n    declarations: [\n        BsFacetCard, BsFacetList, BsFacetTree,\n        BsFacetFilters,\n        BsRefine,\n        BsFacetRange, BsMySearch, BsFacetBar,\n        BsFacetMultiComponent,\n        BsFacetTagCloud\n    ],\n    exports: [\n        BsFacetCard, BsFacetList, BsFacetTree,\n        BsFacetFilters,\n        BsRefine,\n        BsFacetRange, BsMySearch, BsFacetBar,\n        BsFacetMultiComponent,\n        BsFacetTagCloud\n    ],\n})\nexport class BsFacetModule {\n    public static forRoot(allFacets: any[]|undefined = undefined, defaultFacets: FacetState[]|undefined = undefined): ModuleWithProviders<BsFacetModule> {\n        return {\n            ngModule: BsFacetModule,\n            providers: [\n                {\n                    provide: ALL_FACETS,\n                    useValue: allFacets\n                },\n                {\n                    provide: DEFAULT_FACETS,\n                    useValue: defaultFacets\n                },\n            ]\n        };\n    }\n}\n","export default {\n    \"facet\": {\n        \"showFacetTextView\": \"Show text\",\n        \"showFacetChartView\": \"Show chart\",\n        \"itemExclude\": \"Exclude\",\n        \"applyFilters\": \"{selections, plural, one {Apply filter} other {Apply filters}}\",\n        \"clearFilters\": \"{selected, plural, one {Clear filter} other {Clear filters}}\",\n        \"loadMore\": \"Load more\",\n        \"showMore\": \"Show more\",\n        \"showLess\": \"Show less\",\n        \"displayed\": \"Displayed\",\n        \"removeAll\": \"Remove all\",\n        \"searchPlaceholder\": \"Search...\",\n        \"itemSelect\": \"Select this value\",\n        \"itemUnselect\": \"Unselect this value\",\n        \"filterItem\": \"Keep documents with {terme}\",\n        \"filterItems\" : \"Keep documents with ANY of the selected items\",\n        \"filterItemsAnd\": \"Keep documents with ALL the selected items\",\n        \"excludeItems\" : \"Exclude document with selected items\",\n        \"clearSelects\" : \"Clear the current filters\",\n        \"searchItems\" : \"Search for a value in this list\",\n        \"searchNoResult\": \"No results\",\n        \"openItem\": \"Open\",\n        \"closeItem\": \"Close\",\n        \"authors\": {\n            \"title\": \"Authors\"\n        },\n        \"concepts\": {\n            \"title\": \"Concepts\"\n        },\n        \"company\": {\n            \"title\": \"Companies\"\n        },\n        \"docformat\": {\n            \"title\": \"Formats\"\n        },\n        \"doctype\": {\n            \"title\": \"Document Types\"\n        },\n        \"documentlanguages\": {\n            \"title\": \"Languages\"\n        },\n        \"fileext\": {\n            \"title\": \"File Extensions\"\n        },\n        \"filename\": {\n            \"title\": \"Filenames\"\n        },\n        \"geo\": {\n            \"title\": \"Places\"\n        },\n        \"matchingpartnames\": {\n            \"title\": \"Matching Partnames\"\n        },\n        \"modified\": {\n            \"title\": \"Dates\"\n        },\n        \"person\": {\n            \"title\": \"People\"\n        },\n        \"refine\": {\n            \"title\": \"Refine Search\",\n            \"input\": {\n                \"label\": \"Refine\",\n                \"buttonTitle\": \"Refine\",\n                \"placeholder\": \"Refine by...\"\n            }\n        },\n        \"size\": {\n            \"title\": \"Sizes\"\n        },\n        \"tagcloud\": {\n            \"title\": \"Tag Cloud\"\n        },\n        \"title\": {\n            \"title\": \"Titles\"\n        },\n        \"treepath\": {\n            \"title\": \"Sources\"\n        },\n        \"recentQueries\": {\n            \"title\": \"Recent queries\"\n        },\n        \"recentQueriesPublic\": {\n            \"title\": \"Public recent queries\"\n        },\n        \"mySearch\": {\n            \"title\": \"My Search\",\n            \"itemRemove\": \"Remove\"\n        },\n        \"search\": {\n            \"label\": \"Search\",\n            \"buttonTitle\": \"Search\",\n            \"placeholder\": \"Search...\",\n            \"showSearchForm\": \"Show search form\",\n            \"hideSearchForm\": \"Hide search form\"\n        },\n        \"range\": {\n            \"year\": \"{date, date, sqYear}\",\n            \"monthYear\": \"{date, date, sqMonthYear}\",\n            \"weekYear\": \"W{week, number, sqWeek} {weekYear, number, sqYear}\",\n            \"apply\": \"Apply\",\n            \"clear\": \"Clear\",\n            \"unavailable\": \"No available range\"\n        },\n\n        \"filters\":{\n            \"add\":\"Add facet\",\n            \"addAll\": \"Add all facets\",\n            \"remove\":\"Remove facet\",\n            \"removeAll\": \"Remove all facets\",\n            \"clear\":\"Clear filter\",\n            \"moreFilters\":\"\",\n            \"showFilters\":\"Show filters\",\n            \"hideFilters\":\"Hide filters\",\n\n            \"back\": \"Back to filters\",\n            \"selectedFilters\": \"This filter is active in the current query\",\n\n            \"customizeFacets\": \"Select facets to display or hide\"\n        },\n\n        \"selectedValue\": \"This value is selected in the current query\",\n        \"previous\": \"Previous\",\n        \"next\": \"Next\",\n        \"filterItemCountTooltip\": \"{count} possible values for this filter\",\n    },\n\n    \"facetCard\": {\n        \"expand\": \"Expand\",\n        \"collapse\": \"Collapse\",\n        \"enlarge\": \"Enlarge\",\n        \"reduce\": \"Reduce\",\n        \"openSettings\": \"Open settings\",\n        \"saveSettings\": \"Save settings\"\n    }\n};\n","export default {\n    \"facet\": {\n        \"showFacetTextView\": \"Afficher le texte\",\n        \"showFacetChartView\": \"Afficher le graphique\",\n        \"itemExclude\": \"Exclure\",\n        \"applyFilters\": \"{selections, plural, one {Appliquer le filtre} other {Appliquer les filtres}}\",\n        \"clearFilters\": \"{selected, plural, one {Effacer le filtre} other {Effacer les filtres}}\",\n        \"loadMore\": \"Charger plus\",\n        \"showMore\": \"Afficher plus\",\n        \"showLess\": \"Afficher moins\",\n        \"displayed\": \"Affiché\",\n        \"removeAll\": \"Supprimer tout\",\n        \"searchPlaceholder\": \"Rechercher...\",\n        \"itemSelect\": \"Sélectionner cette valeur\",\n        \"itemUnselect\": \"Désélectionner cette valeur\",\n        \"filterItem\": \"Garder les documents qui contiennent {terme}\",\n        \"filterItems\" : \"Garder les documents qui contiennent n'importe lequel de ces termes\",\n        \"filterItemsAnd\": \"Garder les documents qui contiennent tous ces termes\",\n        \"excludeItems\" : \"Exclure les documents contenant un de ces termes\",\n        \"clearSelects\" : \"Enlever les filtres\",\n        \"searchItems\" : \"Rechercher une valeur dans cette liste\",\n        \"searchNoResult\": \"Pas de résultat\",\n        \"openItem\": \"Ouvrir\",\n        \"closeItem\": \"Refermer\",\n        \"authors\": {\n            \"title\": \"Auteurs\"\n        },\n        \"concepts\": {\n            \"title\": \"Concepts\"\n        },\n        \"company\": {\n            \"title\": \"Sociétés\"\n        },\n        \"docformat\": {\n            \"title\": \"Formats\"\n        },\n        \"doctype\": {\n            \"title\": \"Types de document\"\n        },\n        \"documentlanguages\": {\n            \"title\": \"Langues\"\n        },\n        \"fileext\": {\n            \"title\": \"Extensions de fichiers\"\n        },\n        \"filename\": {\n            \"title\": \"Noms de fichiers\"\n        },\n        \"geo\": {\n            \"title\": \"Lieux\"\n        },\n        \"matchingpartnames\": {\n            \"title\": \"Partnames\"\n        },\n        \"modified\": {\n            \"title\": \"Dates\"\n        },\n        \"person\": {\n            \"title\": \"Personnes\"\n        },\n        \"refine\": {\n            \"title\": \"Affiner la recherche\",\n            \"input\": {\n                \"label\": \"Affiner\",\n                \"buttonTitle\": \"Affiner\",\n                \"placeholder\": \"Affiner par ...\"\n            }\n        },\n        \"size\": {\n            \"title\": \"Tailles\"\n        },\n        \"tagcloud\": {\n            \"title\": \"Nuage de mots\"\n        },\n        \"title\": {\n            \"title\": \"Titres\"\n        },\n        \"treepath\": {\n            \"title\": \"Sources\"\n        },\n        \"recentQueries\": {\n            \"title\": \"Requêtes récentes\"\n        },\n        \"recentQueriesPublic\": {\n            \"title\": \"Requêtes publiques récentes\"\n        },\n        \"mySearch\": {\n            \"title\": \"Ma recherche\",\n            \"itemRemove\": \"Supprimer\"\n        },\n        \"search\": {\n            \"label\": \"Rechercher\",\n            \"buttonTitle\": \"Rechercher\",\n            \"placeholder\": \"Rechercher ...\",\n            \"showSearchForm\": \"Afficher le formulaire de recherche\",\n            \"hideSearchForm\": \"Masquer le formulaire de recherche\"\n        },\n        \"range\": {\n            \"year\": \"{date, date, sqYear}\",\n            \"monthYear\": \"{date, date, sqMonthYear}\",\n            \"weekYear\": \"s{week, number, sqWeek} {weekYear, number, sqYear}\",\n            \"apply\": \"Appliquer\",\n            \"clear\": \"Effacer\",\n            \"unavailable\": \"Aucune plage disponible\"\n        },\n\n        \"filters\":{\n            \"add\":\"Ajouter la facette\",\n            \"addAll\": \"Ajouter toutes les facettes\",\n            \"remove\":\"Retirer la facette\",\n            \"removeAll\": \"Retirer toutes les facettes\",\n            \"clear\":\"Réinitialiser\",\n            \"moreFilters\":\"\",\n            \"showFilters\":\"Montrer les filtres\",\n            \"hideFilters\":\"Cacher les filtres\",\n\n            \"back\": \"Retour aux filtres\",\n            \"selectedFilters\": \"Ce filtre est utilisé dans la recherche actuelle\",\n\n            \"customizeFacets\": \"Sélectionnez les facettes à montrer ou cacher\"\n        },\n\n        \"selectedValue\": \"Cette valeur est sélectionnée dans la recherche actuelle\",\n        \"previous\": \"Précédent\",\n        \"next\": \"Suivant\",\n        \"filterItemCountTooltip\": \"{count} valeurs possibles pour ce filtre\",\n    },\n\n    \"facetCard\": {\n        \"expand\": \"Déplier\",\n        \"collapse\": \"Replier\",\n        \"enlarge\": \"Agrandir\",\n        \"reduce\": \"Réduire\",\n        \"openSettings\": \"Ouvrir les paramètres\",\n        \"saveSettings\": \"Enregistrer les paramètres\"\n    }\n};\n","export default {\n    \"facet\": {\n        \"show_text_view\": \"Text anzeigen\",\n        \"show_chart_view\": \"Chart anzeigen\",\n        \"itemExclude\": \"Exkludieren\",\n        \"applyFilters\": \"{selections, plural, one {Filter anwenden} other {Filter anwenden}}\",\n        \"clearFilters\": \"{selected, plural, one {Filter löschen} other {Filter löschen}}\",\n        \"loadMore\": \"Mehr laden\",\n        \"showMore\": \"Mehr anzeigen\",\n        \"showLess\": \"Weniger anzeigen\",\n        \"displayed\": \"Angezeigt\",\n        \"removeAll\": \"Alle entfernen\",\n        \"searchPlaceholder\": \"Suche...\",\n        \"itemSelect\": \"Diesen Wert auswählen\",\n        \"filterItems\" : \"Behalte Dokumente mit MINDESTENS EINEM der ausgewählten Werte\",\n        \"filterItemsAnd\": \"Behalte Dokumente mit ALLEN ausgewählten Werten\",\n        \"excludeItems\" : \"Exckludiere Dokumente mit den ausgewählten Werten\",\n        \"clearSelects\" : \"Entferne die aktuellen Filter\",\n        \"searchItems\" : \"Suche nach eniem Wert in dieser Liste\",\n        \"searchNoResult\": \"Keine Ergebnisse\",\n        \"openItem\": \"Öffnen\",\n        \"closeItem\": \"Schließen\",\n        \"authors\": {\n            \"title\": \"Autoren\"\n        },\n        \"concepts\": {\n            \"title\": \"Konzepte\"\n        },\n        \"company\": {\n            \"title\": \"Firmen\"\n        },\n        \"docformat\": {\n            \"title\": \"Formate\"\n        },\n        \"doctype\": {\n            \"title\": \"Dokumenttypen\"\n        },\n        \"documentlanguages\": {\n            \"title\": \"Sprachen\"\n        },\n        \"fileext\": {\n            \"title\": \"Dateierweiterungen\"\n        },\n        \"filename\": {\n            \"title\": \"Dateinamen\"\n        },\n        \"geo\": {\n            \"title\": \"Orte\"\n        },\n        \"matchingpartnames\": {\n            \"title\": \"Übereinstimmende Partnames\"\n        },\n        \"modified\": {\n            \"title\": \"Datumsangaben\"\n        },\n        \"person\": {\n            \"title\": \"Personen\"\n        },\n        \"refine\": {\n            \"title\": \"Suche verfeinern\",\n            \"input\": {\n                \"label\": \"Verfeinern\",\n                \"buttonTitle\": \"Verfeinern\",\n                \"placeholder\": \"Verfeinern nach...\"\n            }\n        },\n        \"size\": {\n            \"title\": \"Größen\"\n        },\n        \"tagcloud\": {\n            \"title\": \"Wortwolke\"\n        },\n        \"title\": {\n            \"title\": \"Titel\"\n        },\n        \"treepath\": {\n            \"title\": \"Quellen\"\n        },\n        \"recentQueries\": {\n            \"title\": \"Kürzliche Suchanfragen\"\n        },\n        \"recentQueriesPublic\": {\n            \"title\": \"Kürzliche öffentliche Suchanfragen\"\n        },\n        \"mySearch\": {\n            \"title\": \"Meine Suche\",\n            \"itemRemove\": \"Entfernen\"\n        },\n        \"search\": {\n            \"label\": \"Suche\",\n            \"buttonTitle\": \"Suche\",\n            \"placeholder\": \"Suche...\",\n            \"showSearchForm\": \"Suchmaske einblenden\",\n            \"hideSearchForm\": \"Suchmaske ausblenden\"\n        },\n        \"range\": {\n            \"year\": \"{date, date, sqYear}\",\n            \"monthYear\": \"{date, date, sqMonthYear}\",\n            \"weekYear\": \"W{week, number, sqWeek} {weekYear, number, sqYear}\",\n            \"apply\": \"Anwenden\",\n            \"clear\": \"Löschen\",\n            \"unavailable\": \"Kein Bereich verfügbar\"\n        },\n\n        \"filters\":{\n            \"add\":\"Filter hinzufügen\",\n            \"addAll\": \"Alle Facetten hinzufügen\",\n            \"remove\":\"Filter entfernen\",\n            \"removeAll\": \"Alle Facetten entfernen\",\n            \"clear\":\"Filter löschen\",\n            \"moreFilters\":\"\",\n            \"showFilters\":\"Filter einblenden\",\n            \"hideFilters\":\"Filter ausblenden\",\n\n            \"back\": \"Zurück zu den Filtern\",\n            \"selectedFilters\": \"Dieser Filter ist in der aktuellen Suchanfrage aktiv\",\n\n            \"customizeFacets\": \"Facetten zum Anzeigen oder Ausblenden auswählen\"\n        },\n\n        \"selectedValue\": \"Dieser Wert ist in der aktuellen Anfrage ausgewählt.\",\n        \"previous\": \"Zurück\",\n        \"next\": \"Weiter\",\n        \"filterItemCountTooltip\": \"{count} mögliche Werte für diesen Filter\",\n    },\n\n    \"facetCard\": {\n        \"expand\": \"Erweitern\",\n        \"collapse\": \"Reduzieren\",\n        \"enlarge\": \"Vergrößern\",\n        \"reduce\": \"Reduzieren\",\n        \"openSettings\": \"Einstellungen öffnen\",\n        \"saveSettings\": \"Einstellungen speichern\"\n    }\n};\n","import {Utils} from \"@sinequa/core/base\";\nimport {enSearch, frSearch, deSearch} from \"@sinequa/components/search\";\nimport {enSelection, frSelection, deSelection} from \"@sinequa/components/selection\";\nimport {enCollapse, frCollapse, deCollapse} from \"@sinequa/components/collapse\";\nimport _enFacet from \"./en\";\nimport _frFacet from \"./fr\";\nimport _deFacet from \"./de\";\n\nconst enFacet = Utils.merge({}, _enFacet, enSearch, enSelection, enCollapse);\nconst frFacet = Utils.merge({}, _frFacet, frSearch, frSelection, frCollapse);\nconst deFacet = Utils.merge({}, _deFacet, deSearch, deSelection, deCollapse);\n\nexport {enFacet, frFacet, deFacet};\n\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i0.ɵɵelement","i0.ɵɵclassMapInterpolate1","i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵadvance","i0.ɵɵtextInterpolate","i0.ɵɵelementContainer","i0.ɵɵproperty","i0.ɵɵprojection","i0.ɵɵtemplate","i0.ɵɵlistener","i0.ɵɵpropertyInterpolate","i0.ɵɵstyleProp","i0.ɵɵelementContainerStart","i0.ɵɵelementContainerEnd","i0.ɵɵtextInterpolate1","i0.ɵɵclassMap","i0.ɵɵattribute"],"mappings":"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"}