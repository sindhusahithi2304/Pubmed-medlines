{"version":3,"file":"sinequa-components-metadata.js","sources":["../../projects/components/metadata/metadata-access-lists-item-single-access-list/metadata-access-lists-item-single-access-list.html","../../projects/components/metadata/metadata-access-lists-item-single-access-list/metadata-access-lists-item-single-access-list.ts","../../projects/components/metadata/metadata-access-lists-item/metadata-access-lists-item.html","../../projects/components/metadata/metadata-access-lists-item/metadata-access-lists-item.ts","../../projects/components/metadata/showmore/showmore.html","../../projects/components/metadata/showmore/showmore.ts","../../projects/components/metadata/metadata-item/metadata-item.html","../../projects/components/metadata/metadata-item/metadata-item.ts","../../projects/components/metadata/metadata/metadata.html","../../projects/components/metadata/metadata/metadata.ts","../../../projects/components/metadata/metadata.module.ts","../../projects/components/metadata/messages/en.ts","../../projects/components/metadata/messages/fr.ts","../../projects/components/metadata/messages/de.ts","../../projects/components/metadata/messages/index.ts","../../../projects/components/metadata/sinequa-components-metadata.ts"],"sourcesContent":["<div class=\"accessListHeader\">\n    {{ headerMessage | sqMessage:{values: {value: index} } }}\n    <a href=\"#\" (click)=\"collapseClick($event)\">\n        <sq-collapse-button class=\"collapseButton\" [collapsed]=\"collapsed\">\n        </sq-collapse-button>\n    </a>\n</div>\n<sq-collapse [collapsed]=\"collapsed\">\n    <ng-template>\n        <div class=\"accessListBody\">\n            <div class=\"principalList\">\n                <div *ngFor=\"let principal of accessList\" class=\"principal\">\n                    <div class=\"domain\">{{ principal.domain }}</div>\n                    <div class=\"separator\"> | </div>\n                    <div class=\"id\">{{ principal.id }}</div>\n                </div>\n            </div>\n        </div>    \n    </ng-template>\n</sq-collapse>\n","import { Component, Input } from \"@angular/core\";\nimport { Principal } from \"@sinequa/core/web-services\";\n\n@Component({\n    selector: \"sq-metadata-access-lists-item-single-access-list\",\n    templateUrl: \"./metadata-access-lists-item-single-access-list.html\",\n    styleUrls: [\"./metadata-access-lists-item-single-access-list.css\"]\n})\nexport class MetadataAccessListsItemSingleAccessList {\n\n    @Input() private readonly authorized: boolean;\n    @Input() public readonly index: number;\n    @Input() public readonly accessList: Principal[];\n    public collapsed = true;\n\n    public get headerMessage(): string {\n        return \"msg#metadata.accessLists.\" + (this.authorized ? \"authorizedListHeader\" : \"deniedListHeader\");\n    }\n\n    public collapseClick(event: Event) {\n        this.collapsed = !this.collapsed;\n        event.preventDefault();\n    }\n}\n","<ng-container *ngFor=\"let i of accessLists.accessListIndices\" >\n    <div class=\"accessList\" *ngIf=\"accessLists.authorizedLists[i]\">\n        <div class=\"accessListIcon authorizedListIcon far fa-check-circle\" title=\"{{ 'msg#metadata.accessLists.authorizedListTitleText' | sqMessage }}\"></div>\n        <div class=\"accessListValue\">\n            <sq-metadata-access-lists-item-single-access-list [authorized]=\"true\" [index]=\"i\" [accessList]=\"accessLists.authorizedLists[i]\">\n            </sq-metadata-access-lists-item-single-access-list>\n        </div>\n    </div>\n    <div class=\"accessList\" *ngIf=\"accessLists.deniedLists[i]\">\n        <div class=\"accessListIcon deniedListIcon fas fa-minus-circle\" title=\"{{ 'msg#metadata.accessLists.deniedListTitleText' | sqMessage }}\"></div>\n        <div class=\"accessListValue\">\n            <sq-metadata-access-lists-item-single-access-list [authorized]=\"false\" [index]=\"i\" [accessList]=\"accessLists.deniedLists[i]\">\n            </sq-metadata-access-lists-item-single-access-list>\n        </div>\n    </div>\n</ng-container>","import { Component, Input } from \"@angular/core\";\nimport { DocumentAccessLists } from \"@sinequa/core/web-services\";\n\n@Component({\n    selector: \"sq-metadata-access-lists-item\",\n    templateUrl: \"./metadata-access-lists-item.html\",\n    styleUrls: [\"./metadata-access-lists-item.css\"]\n})\nexport class MetadataAccessListsItem {\n    @Input() public accessLists: DocumentAccessLists;\n}","<span [innerHTML]=\"shortQuestion\" *ngIf=\"!isShowMore\"></span>\r\n\r\n<span [innerHTML]=\"longQuestion\" *ngIf=\"isShowMore || !isBigQuestion\"> </span>\r\n\r\n<span class=\"showMore\" *ngIf=\"isBigQuestion\" (click)=\"showMore($event)\">\r\n  {{ isShowMore ? 'show less' : 'show more' }}</span>","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'sq-showmore',\r\n    templateUrl: './showmore.html',\r\n    styleUrls: ['./showmore.scss'],\r\n})\r\nexport class Showmore implements OnInit {\r\n    @Input() question: string;\r\n    // @Input() searchTextArray: string[];\r\n    shortQuestion: string;\r\n    longQuestion: string;\r\n    isShowMore = false;\r\n    isBigQuestion = false;\r\n    display: string;\r\n\r\n    constructor() { }\r\n\r\n    ngOnInit(): void {\r\n        this.longQuestion = this.question;\r\n        // this.searchTextArray.forEach(element => {\r\n        //     const re = new RegExp(element, \"gi\");\r\n        //     this.longQuestion = this.longQuestion.replace(re,\r\n        //         '<span class=\"highlighted\">' + element + \"</span>\"\r\n        //     );\r\n        // });\r\n        if (this.question.length > 300) {\r\n            this.isBigQuestion = true;\r\n            this.shortQuestion = this.question.substring(0, 400) + \"...\";\r\n            // this.searchTextArray.forEach(element => {\r\n            //     const re = new RegExp(element, \"gi\");\r\n            //     this.shortQuestion = this.shortQuestion.replace(re, '<span class=\"highlighted\">' + element + \"</span>\");\r\n            // });\r\n            this.display = this.shortQuestion;\r\n        } else {\r\n            this.display = this.longQuestion;\r\n\r\n        }\r\n    }\r\n    showMore(event: Event) {\r\n        event.stopPropagation(); this.isShowMore = !this.isShowMore;\r\n        if (this.isShowMore) this.display = this.longQuestion; else this.display = this.shortQuestion;\r\n    }\r\n}","<div *ngIf=\"!isEmpty\" class=\"sq-metadata-item {{itemClasses}}\">\r\n    <!-- Icon -->\r\n    <span *ngIf=\"showIcon && !!item\" class=\"sq-metadata-item-icon sq-icon-{{item}} {{docFormatIconClass}} fa-fw pr-2\"\r\n        [title]=\"label | sqMessage\">\r\n    </span>\r\n\r\n    <!-- Label (title)-->\r\n    <span *ngIf=\"showTitle && !!item\" class=\"sq-metadata-item-label pr-2\">{{'msg#metadata.item.label' | sqMessage:itemLabelMessageParams}}</span>\r\n    \r\n    <span class=\"sq-metadata-item-values\" [ngClass]=\"{collapsed: !!collapsed}\" #values>\r\n        <!-- Collapse button -->\r\n        <a *ngIf=\"collapseRows && needsCollapse\" href=\"#\" (click)=\"toggleCollapse()\" class=\"collapse-button mr-1\">\r\n            <i class=\"fas fa-fw fa-chevron-{{collapsed? 'right' : 'down'}}\"></i>\r\n        </a>\r\n        \r\n        <!-- Access list metadata -->\r\n        <sq-metadata-access-lists-item *ngIf=\"isAccessLists; else default\" [accessLists]=\"accessListsData\">\r\n        </sq-metadata-access-lists-item>\r\n\r\n        <!-- Other types of metadata -->\r\n        <ng-template #default>\r\n            <ng-container *ngIf=\"isTree; else isNotTree\">\r\n                <!-- Tree (displayed as breadcrumbs)-->\r\n                <ng-container *ngFor=\"let valueItem of valueItems; let $index = index\">\r\n                    <ol class=\"breadcrumb\" *ngIf=\"!!valueItem.parts && valueItem.parts.length > 0\">\r\n                        <li *ngFor=\"let part of valueItem.parts; let $subIndex = index\">\r\n                            <a    *ngIf=\"clickable\"  class=\"badge badge-pill\" [ngClass]=\"'sq-metadata-item-' + item\" href=\"#\" (click)=\"select($index, $subIndex)\">{{part | sqValue:column}}</a>\r\n                            <span *ngIf=\"!clickable\" [ngClass]=\"'sq-metadata-item-' + item\">{{part | sqValue:column}}</span>\r\n                            <span *ngIf=\"$subIndex < valueItem.parts.length - 1\" class=\"sq-metadata-item-tree-node-separator\">{{'msg#metadata.item.treeNodeSeparator' | sqMessage}}</span>\r\n                        </li>\r\n                    </ol>\r\n                    <span *ngIf=\"$index < valueItems.length - 1\" class=\"sq-metadata-item-tree-separator\">{{'msg#metadata.item.treeSeparator' | sqMessage}}</span>\r\n                </ng-container>\r\n            </ng-container>\r\n\r\n            <!-- Not a Tree-->\r\n            <ng-template #isNotTree>\r\n                <ng-container *ngIf=\"clickable; else notTreeNonClickable\">\r\n                    <!-- Clickable -->\r\n                    <a  *ngFor=\"let valueItem of valueItems; let $index = index\"\r\n                        class=\"badge badge-pill {{'sq-metadata-item-' + item}} mr-1\"\r\n                        [href]=\"valueItem.value\"\r\n                        (click)=\"select($index)\"\r\n                        [attr.title]=\"showTitle? null : (label | sqMessage)\"\r\n                        target=\"_blank\">{{valueItem | sqValue:column}}\r\n                        <span *ngIf=\"showCounts && valueItem.count\"\r\n                            class=\"counter badge badge-light ml-1\"\r\n                            [title]=\"valueItem.count + ' occurrences in document'\">{{valueItem.count}}</span>\r\n                    </a>\r\n\r\n                </ng-container>\r\n                <ng-template #notTreeNonClickable>\r\n                    <!-- Not clickable -->\r\n                    <ng-container *ngFor=\"let valueItem of valueItems; let $index = index\">                     \r\n                          <span class=\"{{'sq-metadata-item-' + item}}\"\r\n                            [attr.title]=\"showTitle? null : (label | sqMessage)\">\r\n\r\n                            <sq-showmore [question]=\"valueItem.value\"></sq-showmore>\r\n                            <!-- {{valueItem | sqValue:column}} -->\r\n                            <span *ngIf=\"showCounts && valueItem.count\"\r\n                                class=\"small\"\r\n                                [title]=\"valueItem.count + ' occurrences in document'\">({{valueItem.count}})</span>\r\n                        </span>\r\n                        <span *ngIf=\"$index < valueItems.length - 1\" class=\"sq-metadata-item-list-separator\">{{'msg#metadata.item.listSeparator' | sqMessage}}</span>\r\n                    </ng-container>\r\n                </ng-template>\r\n            </ng-template>\r\n        </ng-template>\r\n    </span>\r\n</div>","import {Component, Input, Output, HostBinding, OnChanges, SimpleChanges, EventEmitter} from \"@angular/core\";\r\nimport {Utils} from \"@sinequa/core/base\";\r\nimport {AppService, FormatService, ValueItem} from \"@sinequa/core/app-utils\";\r\nimport {Record, EntityItem, DocumentAccessLists, CCColumn} from \"@sinequa/core/web-services\";\r\nimport {FacetService} from \"@sinequa/components/facet\";\r\n\r\nexport interface TreeValueItem extends ValueItem {\r\n    parts: ValueItem[];\r\n}\r\n\r\n@Component({\r\n    selector: \"sq-metadata-item\",\r\n    templateUrl: \"./metadata-item.html\",\r\n    styleUrls: ['./metadata-item.scss']\r\n})\r\nexport class MetadataItem implements OnChanges {\r\n    @Input() record: Record;\r\n    @Input() item: string;\r\n    @Input() showTitle = true;\r\n    @Input() showIcon: boolean = false;\r\n    @Input() showCounts: boolean = true;\r\n    @Input() clickable: boolean = true;\r\n    @Input() tabular: boolean = true;\r\n    @Input() collapseRows: boolean = true;\r\n    @Output(\"select\") _select = new EventEmitter<{item: string, valueItem: ValueItem}>();\r\n    @HostBinding('hidden') get hidden(): boolean { return this.isEmpty; }\r\n    valueItems: (ValueItem | TreeValueItem)[];\r\n    column: CCColumn | undefined;\r\n    isTree: boolean;\r\n    isEntity: boolean;\r\n    isCsv: boolean;\r\n    itemLabelMessageParams: any;\r\n    collapsed: boolean;\r\n    needsCollapse: boolean = false;\r\n\r\n    constructor(\r\n        public appService: AppService,\r\n        public formatService: FormatService) {\r\n        this.valueItems = [];\r\n    }\r\n\r\n    ensureScalarValue(value: any): any {\r\n        if (Utils.isEmpty(value) && this.column) {\r\n            if (AppService.isBoolean(this.column)) {\r\n                value = 'msg#metadata.item.empty_boolean';\r\n            }\r\n            else if (AppService.isNumber(this.column)) {\r\n                value = 'msg#metadata.item.empty_number';\r\n            }\r\n        }\r\n        return value;\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (!this.column) {\r\n            this.column = this.appService.getColumn(this.item);\r\n            this.itemLabelMessageParams = {values: {label: this.label}};\r\n        }\r\n        this.valueItems = [];\r\n        this.isTree = !!this.column && AppService.isTree(this.column);\r\n        this.isEntity = !!this.column && AppService.isEntity(this.column);\r\n        this.isCsv = !!this.column && AppService.isCsv(this.column);\r\n        const values = this.record[this.appService.getColumnAlias(this.column, this.item)];\r\n        if (this.isTree) {\r\n            const paths: string[] = values;\r\n            if (paths) {\r\n                for (const path of paths) {\r\n                    const parts = path.split(\"/\");\r\n                    if (parts.length > 0 && parts[0] === \"\") {\r\n                        parts.splice(0, 1);\r\n                    }\r\n                    if (parts.length > 0 && parts[parts.length - 1] === \"\") {\r\n                        parts.splice(parts.length - 1, 1);\r\n                    }\r\n                    const item: TreeValueItem = {value: path, parts: parts.map(value => ({value: value}))};\r\n                    this.valueItems.push(item);\r\n                }\r\n            }\r\n        }\r\n        else if (this.isEntity) {\r\n            const entityItems: EntityItem[] = values;\r\n            if (entityItems) {\r\n                this.valueItems.push(...entityItems);\r\n            }\r\n        }\r\n        else if (this.isCsv) {\r\n            if (values && values instanceof Array) {\r\n                this.valueItems.push(...values.map<ValueItem>(value => ({value: value})));\r\n            }\r\n            else if (!Utils.isEmpty(values)) {\r\n                this.valueItems.push({value: values});\r\n            }\r\n        }\r\n        else {\r\n            const value = this.ensureScalarValue(values);\r\n            if (!Utils.isEmpty(value)) {\r\n                this.valueItems.push({value: value});\r\n            }\r\n        }\r\n        \r\n        const collapsable = (this.isEntity || this.isCsv) && !this.isTree; // Tree columns are multivalues, and therefore isCsv=true\r\n        if (changes.collapseRows || this.collapsed === undefined) {\r\n            this.collapsed = collapsable && this.collapseRows;\r\n        }\r\n        this.needsCollapse = collapsable && this.collapseRows && this.tabular && this.valueItems.length > 1; // We display the collapse button as soon as the number of values is >1 which does not take into account the actualy width of each value...\r\n    }\r\n\r\n    public get isEmpty(): boolean {\r\n        if (!this.item) {\r\n            return true;\r\n        }\r\n        if (this.item === \"accesslists\") {\r\n            if (!this.record.accesslists || !this.record.accesslists.accessListIndices\r\n                || this.record.accesslists.accessListIndices.length === 0) {\r\n                return true;\r\n            }\r\n        }\r\n        else {\r\n            if (this.valueItems.length === 0) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public get itemClasses(): string {\r\n        let classes = \"sq-text\";\r\n        if (this.clickable) {\r\n            classes += \" sq-clickable\";\r\n        }\r\n        if (this.tabular) {\r\n            classes += \" sq-tabular\";\r\n        }\r\n        return classes;\r\n    }\r\n\r\n    public get label(): string {\r\n        return this.appService.getLabel(this.item);\r\n    }\r\n\r\n    public get isAccessLists(): boolean {\r\n        return this.item === \"accesslists\";\r\n    }\r\n\r\n    public get accessListsData(): DocumentAccessLists {\r\n        return this.record.accesslists;\r\n    }\r\n\r\n    public get docFormatIconClass(): string {\r\n        if (this.item == null || this.item !== \"docformat\" && this.item !== \"fileext\") {\r\n            return \"\";\r\n        }\r\n        const value: string = this.record[this.item];\r\n        if (!value) {\r\n            return \"far fa-file\";\r\n        }\r\n        return \"far fa-file sq-icon-file-\" + value;\r\n    }\r\n\r\n    select(index: number, subIndex = 0) {\r\n        if (this.isTree) {\r\n            const valueItem = <TreeValueItem>this.valueItems[index];\r\n            const parts = valueItem.parts.map((item) => item.value).slice(0, subIndex + 1);\r\n            if (parts.length > 0) {\r\n                parts.unshift(\"\");\r\n                parts.push(\"\");\r\n            }\r\n            const path = parts.join(\"/\");\r\n            this._select.emit({item: this.item, valueItem: {value: path + \"*\", display: FacetService.treepathLast(path)}});\r\n        }\r\n        else {\r\n            this._select.emit({item: this.item, valueItem: this.valueItems[index]});\r\n        }\r\n        return false; // prevent default\r\n    }\r\n\r\n    toggleCollapse() {\r\n        this.collapsed = !this.collapsed;\r\n        return false;\r\n    }\r\n}\r\n","<sq-metadata-item *ngFor=\"let item of items; let $index = index\"\r\n    [record]=\"record\"\r\n    [item]=\"item\"\r\n    (select)=\"select($event.item, $event.valueItem)\"\r\n    [showTitle]=\"showTitles\"\r\n    [showIcon]=\"showIcons\"\r\n    [showCounts]=\"showCounts\"\r\n    [clickable]=\"clickable\"\r\n    [tabular]=\"tabular\"\r\n    [collapseRows]=\"collapseRows\">\r\n    <span *ngIf=\"!tabular && $index < items.length - 1\" class=\"ml-1 mr-2\">{{'msg#metadata.item.separator' | sqMessage}}</span>\r\n</sq-metadata-item>\r\n","import {Component, Input, Output, EventEmitter, HostBinding} from \"@angular/core\";\nimport {SearchService} from \"@sinequa/components/search\";\nimport {AppService, ValueItem} from \"@sinequa/core/app-utils\";\nimport {Record} from \"@sinequa/core/web-services\";\n\n@Component({\n    selector: \"sq-metadata\",\n    templateUrl: \"./metadata.html\",\n    styleUrls: [\"./metadata.scss\"]\n})\nexport class Metadata {\n    @Input() record: Record;\n    @Input() items: string[];\n    @Input() showTitles: boolean = true;\n    @Input() showIcons: boolean = false;\n    @Input() showCounts: boolean = true;\n    @Input() clickable: boolean = true;\n    @HostBinding(\"class.sq-tabular\") @Input() tabular: boolean = true;\n    @Input() collapseRows: boolean = true;\n    @Input() searchOnClick: boolean = true;\n    \n    @Output(\"select\") _select = new EventEmitter<{item: string, valueItem: ValueItem}>();\n\n    constructor(\n        public appService: AppService, \n        public searchService: SearchService) {\n    }\n\n    select(item: string, valueItem: ValueItem) {\n        if(this.searchOnClick) {\n            this.searchService.addFieldSelect(item, valueItem);\n            this.searchService.search();\n        }\n        this._select.emit({item: item, valueItem: valueItem});\n    }\n}","import {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\n\nimport {IntlModule} from \"@sinequa/core/intl\";\nimport {UtilsModule} from \"@sinequa/components/utils\";\nimport {CollapseModule} from \"@sinequa/components/collapse\";\n\nimport {Metadata} from \"./metadata/metadata\";\nimport {MetadataItem} from \"./metadata-item/metadata-item\";\nimport {MetadataAccessListsItem} from \"./metadata-access-lists-item/metadata-access-lists-item\";\nimport {MetadataAccessListsItemSingleAccessList} from \"./metadata-access-lists-item-single-access-list/metadata-access-lists-item-single-access-list\";\nimport { Showmore } from \"./showmore/showmore\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        IntlModule,\n        UtilsModule,\n        CollapseModule,\n    ],\n    declarations: [\n        Metadata, MetadataItem,Showmore,\n        MetadataAccessListsItem, MetadataAccessListsItemSingleAccessList\n    ],\n    exports: [\n        Metadata, MetadataItem,Showmore\n    ],\n})\nexport class MetadataModule {\n}","export default {\n    metadata: {\n        extractslocationsLabel: \"Relevant extract\",\n        extractslocationsPluralLabel: \"Relevant extracts\",\n        geoLabel: \"Place\",\n        geoPluralLabel: \"Places\",\n        personLabel: \"Person\",\n        personPluralLabel: \"People\",\n        companyLabel: \"Company\",\n        companyPluralLabel: \"Companies\",\n        treepathLabel: \"Source\",\n        treepathPluralLabel: \"Sources\",\n        matchlocationsLabel: \"Search term\",\n        matchlocationsPluralLabel: \"Search terms\",\n        titleLabel: \"Title\",\n        titlePluralLabel: \"Titles\",\n        authorsLabel: \"Author\",\n        authorsPluralLabel: \"Authors\",\n        filenameLabel: \"Filename\",\n        filenamePluralLabel: \"Filenames\",\n        modifiedLabel: \"Date\",\n        modifiedPluralLabel: \"Dates\",\n        sizeLabel: \"Size\",\n        sizePluralLabel: \"Sizes\",\n        docformatLabel: \"Format\",\n        docformatPluralLabel: \"Formats\",\n        documentlanguagesLabel: \"Language\",\n        documentlanguagesPluralLabel: \"Languages\",\n        geo_label: \"Place\",\n        geo_plural_label: \"Places\",\n        person_label: \"Person\",\n        person_plural_label: \"People\",\n        company_label: \"Company\",\n        company_plural_label: \"Companies\",\n        treepath_label: \"Source\",\n        treepath_plural_label: \"Sources\",\n        title_label: \"Title\",\n        title_plural_label: \"Titles\",\n        authors_label: \"Author\",\n        authors_plural_label: \"Authors\",\n        filename_label: \"Filename\",\n        filename_plural_label: \"Filenames\",\n        modified_label: \"Date\",\n        modified_plural_label: \"Dates\",\n        size_label: \"Size\",\n        size_plural_label: \"Sizes\",\n        docformat_label: \"Format\",\n        docformat_plural_label: \"Formats\",\n        documentlanguages_label: \"Language\",\n        documentlanguages_plural_label: \"Languages\",\n        accessLists: {\n            authorizedListTitleText: \"Authorized access list\",\n            authorizedListHeader: \"Authorized access list {value, number}\",\n            deniedListTitleText: \"Denied access list\",\n            deniedListHeader: \"Denied access list {value, number}\"\n        },\n        item: {\n            label: \"{label}:\",\n            separator: \"|\",\n            treeSeparator: \" ; \",\n            treeNodeSeparator: \"/\",\n            listSeparator: \", \",\n            empty_boolean: 'false',\n            empty_number: '0'\n        }\n    },\n};\n","export default {\n    metadata: {\n        extractslocationsLabel: \"Extrait pertinent\",\n        extractslocationsPluralLabel: \"Extraits pertinents\",\n        geoLabel: \"Lieu\",\n        geoPluralLabel: \"Lieux\",\n        personLabel: \"Personne\",\n        personPluralLabel: \"Personnes\",\n        companyLabel: \"Société\",\n        companyPluralLabel: \"Sociétés\",\n        treepathLabel: \"Source\",\n        treepathPluralLabel: \"Sources\",\n        matchlocationsLabel: \"Terme recherché\",\n        matchlocationsPluralLabel: \"Termes recherchés\",\n        titleLabel: \"Titre\",\n        titlePluralLabel: \"Titres\",\n        authorsLabel: \"Auteur\",\n        authorsPluralLabel: \"Auteurs\",\n        filenameLabel: \"Nom de fichier\",\n        filenamePluralLabel: \"Noms de fichiers\",\n        modifiedLabel: \"Date\",\n        modifiedPluralLabel: \"Dates\",\n        sizeLabel: \"Taille\",\n        sizePluralLabel: \"Tailles\",\n        docformatLabel: \"Format\",\n        docformatPluralLabel: \"Formats\",\n        documentlanguagesLabel: \"Langue\",\n        documentlanguagesPluralLabel: \"Langues\",\n        geo_label: \"Lieu\",\n        geo_plural_label: \"Lieux\",\n        person_label: \"Personne\",\n        person_plural_label: \"Personnes\",\n        company_label: \"Société\",\n        company_plural_label: \"Sociétés\",\n        treepath_label: \"Source\",\n        treepath_plural_label: \"Sources\",\n        title_label: \"Titre\",\n        title_plural_label: \"Titres\",\n        authors_label: \"Auteur\",\n        authors_plural_label: \"Auteurs\",\n        filename_label: \"Nom de fichier\",\n        filename_plural_label: \"Noms de fichiers\",\n        modified_label: \"Date\",\n        modified_plural_label: \"Dates\",\n        size_label: \"Taille\",\n        size_plural_label: \"Tailles\",\n        docformat_label: \"Format\",\n        docformat_plural_label: \"Formats\",\n        documentlanguages_label: \"Langue\",\n        documentlanguages_plural_label: \"Langues\",\n        accessLists: {\n            authorizedListTitleText: \"Accès autorisés\",\n            authorizedListHeader: \"Liste d'accès autorisés {value, number}\",\n            deniedListTitleText: \"Accès refusés\",\n            deniedListHeader: \"Liste d'accès refusés {value, number}\"\n        },\n        item: {\n            label: \"{label}:\",\n            separator: \"|\",\n            treeSeparator: \" ; \",\n            treeNodeSeparator: \"/\",\n            listSeparator: \", \",\n            empty_boolean: 'false',\n            empty_number: '0'\n        }\n    },\n};\n","export default {\n    metadata: {\n        extractslocationsLabel: \"Relevanter Extrakt\",\n        extractslocationsPluralLabel: \"Relevante Extrakte\",\n        geoLabel: \"Ort\",\n        geoPluralLabel: \"Orte\",\n        personLabel: \"Person\",\n        personPluralLabel: \"Personen\",\n        companyLabel: \"Firma\",\n        companyPluralLabel: \"Firmen\",\n        treepathLabel: \"Quelle\",\n        treepathPluralLabel: \"Quellen\",\n        matchlocationsLabel: \"Suchbegriff\",\n        matchlocationsPluralLabel: \"Suchbegriffe\",\n        titleLabel: \"Titel\",\n        titlePluralLabel: \"Titel\",\n        authorsLabel: \"Autor\",\n        authorsPluralLabel: \"Autoren\",\n        filenameLabel: \"Dateiname\",\n        filenamePluralLabel: \"Dateinamen\",\n        modifiedLabel: \"Datum\",\n        modifiedPluralLabel: \"Datumsangaben\",\n        sizeLabel: \"Größe\",\n        sizePluralLabel: \"Größen\",\n        docformatLabel: \"Format\",\n        docformatPluralLabel: \"Formate\",\n        documentlanguagesLabel: \"Sprache\",\n        documentlanguagesPluralLabel: \"Sprachen\",\n        geo_label: \"Ort\",\n        geo_plural_label: \"Orte\",\n        person_label: \"Person\",\n        person_plural_label: \"Personen\",\n        company_label: \"Firma\",\n        company_plural_label: \"Firmen\",\n        treepath_label: \"Quelle\",\n        treepath_plural_label: \"Quellen\",\n        title_label: \"Titel\",\n        title_plural_label: \"Titel\",\n        authors_label: \"Autor\",\n        authors_plural_label: \"Autoren\",\n        filename_label: \"Dateiname\",\n        filename_plural_label: \"Dateinamen\",\n        modified_label: \"Datum\",\n        modified_plural_label: \"Datumsangaben\",\n        size_label: \"Größe\",\n        size_plural_label: \"Größen\",\n        docformat_label: \"Format\",\n        docformat_plural_label: \"Formate\",\n        documentlanguages_label: \"Sprache\",\n        documentlanguages_plural_label: \"Sprachen\",\n        accessLists: {\n            authorizedListTitleText: \"Liste der erlaubten Zugriffe\",\n            authorizedListHeader: \"Liste der erlaubten Zugriffe {value, number}\",\n            deniedListTitleText: \"Liste der unerlaubten Zugriffe\",\n            deniedListHeader: \"Liste der unerlaubten Zugriffe {value, number}\"\n        },\n        item: {\n            label: \"{label}:\",\n            separator: \"|\",\n            treeSeparator: \" ; \",\n            treeNodeSeparator: \"/\",\n            listSeparator: \", \",\n            empty_boolean: 'false',\n            empty_number: '0'\n        }\n    }\n};\n","import {Utils} from \"@sinequa/core/base\";\nimport {enFacet, frFacet, deFacet} from \"@sinequa/components/facet\";\nimport {enCollapse, frCollapse, deCollapse} from \"@sinequa/components/collapse\";\n\nimport _enMetadata from \"./en\";\nimport _frMetadata from \"./fr\";\nimport _deMetadata from \"./de\";\n\nconst enMetadata = Utils.merge({}, _enMetadata, enFacet, enCollapse);\nconst frMetadata = Utils.merge({}, _frMetadata, frFacet, frCollapse);\nconst deMetadata = Utils.merge({}, _deMetadata, deFacet, deCollapse);\n\nexport { enMetadata, frMetadata, deMetadata };\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵadvance","i0.ɵɵtextInterpolate","i0.ɵɵtemplate","i0.ɵɵproperty","i0.ɵɵlistener","i0.ɵɵelement","i0.ɵɵtextInterpolate1","i0.ɵɵpropertyInterpolate","i0.ɵɵelementContainerStart","i0.ɵɵelementContainerEnd","i0.ɵɵclassMapInterpolate2","i0.ɵɵclassMapInterpolate1","i0.ɵɵattribute","i0.ɵɵclassMap"],"mappings":"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"}