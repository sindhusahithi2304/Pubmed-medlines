{"version":3,"file":"sinequa-components-baskets.js","sources":["../../../projects/components/baskets/baskets.service.ts","../projects/components/baskets/bootstrap/edit-basket/edit-basket.ts","../projects/components/baskets/bootstrap/edit-basket/edit-basket.html","../projects/components/baskets/bootstrap/manage-baskets/manage-baskets.html","../projects/components/baskets/bootstrap/manage-baskets/manage-baskets.ts","../projects/components/baskets/bootstrap/select-basket/select-basket.html","../projects/components/baskets/bootstrap/select-basket/select-basket.ts","../projects/components/baskets/bootstrap/result-baskets/result-baskets.ts","../projects/components/baskets/bootstrap/result-baskets/result-baskets.html","../projects/components/baskets/bootstrap/baskets-menu/baskets-menu.component.html","../projects/components/baskets/bootstrap/baskets-menu/baskets-menu.component.ts","../projects/components/baskets/bootstrap/facet-baskets/facet-baskets.component.html","../projects/components/baskets/bootstrap/facet-baskets/facet-baskets.component.ts","../../projects/components/baskets/bootstrap/baskets.module.ts","../../projects/components/baskets/messages/en.ts","../../projects/components/baskets/messages/fr.ts","../../projects/components/baskets/messages/de.ts","../../projects/components/baskets/messages/index.ts","../../../projects/components/baskets/sinequa-components-baskets.ts"],"sourcesContent":["import {Injectable, Inject, InjectionToken, Type, OnDestroy} from \"@angular/core\";\nimport {Observable, Subject} from \"rxjs\";\nimport {UserSettingsWebService, AuditEvent, AuditEvents} from \"@sinequa/core/web-services\";\nimport {ModalService, ModalResult} from \"@sinequa/core/modal\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {SelectionService} from \"@sinequa/components/selection\";\nimport {Action} from \"@sinequa/components/action\";\nimport {SearchService} from \"@sinequa/components/search\";\nimport {Query} from '@sinequa/core/app-utils';\n\n// Basket interface (from models/UserSettings)\nexport interface Basket {\n    name: string;\n    description?: string;\n    ids?: string[];\n}\n\n\n// Audit Events (from models/Audit)\nexport const enum BasketEventType {\n    Loaded = \"Basket_Loaded\",\n    Add = \"Basket_Add\",\n    Delete = \"Basket_Delete\",\n    DeleteAll = \"Basket_DeleteAll\",\n    Update = \"Basket_Update\",\n    Rename = \"Basket_Rename\",\n\n    AddDoc = \"Basket_AddDoc\",\n    RemoveDoc = \"Basket_RemoveDoc\",\n    Open = \"Basket_Open\",\n    ExportCSV = \"Basket_ExportCSV\",\n    Patched = \"Basked_Patched\"\n}\n\n\n// Types of events triggering a change event\nexport const BASKET_CHANGE_EVENTS = [\n    BasketEventType.Loaded,\n    BasketEventType.Add,\n    BasketEventType.Delete,\n    BasketEventType.DeleteAll,\n    BasketEventType.Update,\n    BasketEventType.Rename\n];\n\n\n// CRUD Events\nexport interface BasketChangeEvent {\n    type: BasketEventType;\n    basket?: Basket;\n}\n\n\n// Model expected by the SelectBasket Modal.\n// The filter allows to filter out baskets from the complete list\nexport interface SelectBasketModel {\n    basket: Basket | undefined;\n    basketFilter?: (basket: Basket) => boolean;\n    allowNew?: boolean;\n}\n\n// Model expected by the ManageBaskets Modal.\nexport interface ManageBasketsModel {\n    baskets: Basket[];\n    auditEvents?: AuditEvent[];\n}\n\n\n/**\n * The modal types are unknown to this service.\n * The module using this service must provide these components\n * in their forRoot() method\n *\n * Example below:\n *\n *  public static forRoot(): ModuleWithProviders<BasketsModule> {\n        return {\n            ngModule: BasketsModule,\n            providers: [\n                {\n                    provide: BASKET_COMPONENTS,\n                    useValue: {\n                        selectBasketModal: SelectBasket,\n                        editBasketModal: EditBasket,\n                        manageBasketsModal: ManageBaskets\n                    }\n                },\n                BasketsService\n            ]\n        };\n    }\n */\nexport interface BasketComponents {\n    selectBasketModal: Type<any>;\n    editBasketModal: Type<any>;\n    manageBasketsModal: Type<any>;\n}\nexport const BASKET_COMPONENTS = new InjectionToken<BasketComponents>('BASKET_COMPONENTS');\n\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BasketsService implements OnDestroy {\n\n    private readonly _events = new Subject<BasketChangeEvent>();\n    private readonly _changes = new Subject<BasketChangeEvent>();\n\n    // An application may want to alter the action (icon, etc.)\n    public selectedRecordsAction: Action;\n\n    constructor(\n        public userSettingsService: UserSettingsWebService,\n        public searchService: SearchService,\n        public modalService: ModalService,\n        public selectionService: SelectionService,\n        @Inject(BASKET_COMPONENTS) public basketComponents: BasketComponents\n    ){\n        // Listen to the user settings\n        this.userSettingsService.events.subscribe(event => {\n            // E.g. new login occurs\n            // ==> Menus need to be rebuilt\n            this._events.next({type: BasketEventType.Loaded});\n        });\n        // Listen to own events, to trigger change events\n        this._events.subscribe(event => {\n            if(BASKET_CHANGE_EVENTS.indexOf(event.type) !== -1){\n                this.changes.next(event);\n            }\n        });\n        // Register a basket action onto the selection service, so that users can add/remove to/from baskets when documents are selected\n        this.selectedRecordsAction = this.buildBasketsAction();\n    }\n\n    // GETTERS\n\n    /**\n     * Returns the list of this user's baskets.\n     * The list is stored in the user settings (this is a redirection).\n     * Using this service creates the list of baskets if it does not already exist.\n     */\n    public get baskets() : Basket[] {\n        if(!this.userSettingsService.userSettings)\n            this.userSettingsService.userSettings = {};\n        if(!this.userSettingsService.userSettings[\"baskets\"])\n            this.userSettingsService.userSettings[\"baskets\"] = [];\n        return this.userSettingsService.userSettings[\"baskets\"];\n    }\n\n    /**\n     * Triggers any event among BasketChangeEvent\n     * (use for fine-grained control of baskets workflow)\n     */\n    public get events() : Subject<BasketChangeEvent> {\n        return this._events;\n    }\n\n    /**\n     * Triggers when events affect the list of baskets\n     * (use to refresh basket menus)\n     * Cf. CHANGE_EVENTS list\n     */\n    public get changes() : Subject<BasketChangeEvent> {\n        return this._changes;\n    }\n\n    /**\n     * @returns true if there is at least one basket\n     */\n    public get hasBasket(): boolean {\n        return this.baskets.length > 0;\n    }\n\n    /**\n     * @returns a basket with the given name or null if it does not exist\n     * @param name\n     */\n    public basket(name: string): Basket | undefined {\n        const i = this.basketIndex(name);\n        return i>= 0? this.baskets[i] : undefined;\n    }\n\n    private basketIndex(name: string): number {\n        for (let i = 0, ic = this.baskets.length; i < ic; i++) {\n            const basket = this.baskets[i];\n            if (basket && basket.name === name) {\n                return i;\n            }\n        }\n        return -1;\n    }\n\n\n    // CRUD\n\n    /**\n     * Creates a new basket unless it already exists.\n     * Emits an Basket event.\n     * Update the data on the server.\n     * @param basket the basket to create\n     * @returns true if basket was created\n     */\n    public createBasket(basket: Basket) : boolean {\n\n        if(this.basketIndex(basket.name) >= 0)\n            return false; // This basket already exists\n\n        this.baskets.unshift(basket);\n        this._events.next({type : BasketEventType.Add, basket: basket});\n        this.patchBaskets([{\n            type: BasketEventType.Add,\n            detail: {\n                basket: basket.name\n            }\n        }]);\n        return true;\n    }\n\n    /**\n     * Update the basket at the given index, unless a basket with the same name\n     * already exists in the list of baskets.\n     * Emits a Basket event.\n     * Update the data on the server.\n     * @param basket the basket to update\n     * @param index the index at which to update the basket\n     * @returns true if basket was updated\n     */\n    public updateBasket(basket: Basket, index : number) : boolean {\n\n        const prevIndex = this.basketIndex(basket.name);\n        if(prevIndex !== -1 && index !== prevIndex)\n            return false; // A basket with the same name exists at a different index\n\n        if(index >= 0 && index < this.baskets.length){\n\n            this.baskets.splice(index, 1, basket);\n            this._events.next({type : BasketEventType.Update, basket: basket});\n            this.patchBaskets([\n                {\n                    type: BasketEventType.Update,\n                    detail: {\n                        basket: basket.name\n                    }\n                }\n            ], true);\n            return true;\n\n        }\n        return false;   // This basket does not exist\n    }\n\n    /**\n     * Updates the full list of Baskets.\n     * Emits a Basket event.\n     * Update the data on the server.\n     * @param baskets the new list of baskets\n     * @param auditEvents the list of audit events to log\n     */\n    public updateBaskets(baskets: Basket[], auditEvents?: AuditEvents) : boolean {\n        Utils.arraySet(this.baskets, baskets);\n        this._events.next({type : BasketEventType.Update});\n        this.patchBaskets(auditEvents, true);\n        return true;\n    }\n\n    /**\n     * Deletes the given Basket (based on its name)\n     * Emits an Basket event.\n     * Update the data on the server.\n     * @param basket\n     * @returns true if basket was deleted\n     */\n    public deleteBasket(basket: Basket) : boolean {\n\n        const index = this.basketIndex(basket.name);\n\n        if(index === -1)\n            return false; // Nothing to delete\n\n        this.baskets.splice(index, 1);\n        this._events.next({type : BasketEventType.Delete, basket: basket});\n        this.patchBaskets([\n            {\n                type: BasketEventType.Delete,\n                detail: {\n                    savedquery: basket.name\n                }\n            }\n        ], true);\n        return true;\n    }\n\n    /**\n     * Adds one or more documents to a basket.\n     * Emits a Basket event.\n     * Update the data on the server.\n     * @param name basket to which to add the document(s)\n     * @param ids id(s) of the document(s) to add to the basket\n     * @param skipPatch if true, will not update the data on the server (use for bulk updates)\n     * @returns true if the document was added\n     */\n    public addToBasket(name: string, ids: string | string[], skipPatch?: boolean): boolean {\n        if (!ids) {\n            return false;\n        }\n        const basket = this.basket(name);\n        if (!basket) return false;\n        if (!basket.ids) basket.ids = [];\n        if (Utils.isArray(ids)) {\n            for (let i = 0, ic = ids.length; i < ic; i++) {\n                const id = ids[i];\n                if (basket.ids.indexOf(id) === -1) {\n                    basket.ids.push(id);\n                }\n            }\n        }\n        else {\n            if (basket.ids.indexOf(<string>ids) === -1) {\n                basket.ids.push(<string>ids);\n            }\n        }\n        if(!skipPatch){\n            this._events.next({type : BasketEventType.AddDoc});\n            this.patchBaskets({\n                type: BasketEventType.AddDoc,\n                detail: {\n                    basket: name,\n                    \"doc-id\": basket.ids[0]\n                }\n            });\n        }\n        return true;\n    }\n\n    /**\n     * Removes one or more documents from a basket.\n     * Emits a Basket event.\n     * Update the data on the server.\n     * @param name basket from which to remove the document(s)\n     * @param ids id(s) of the document(s) to remove from the basket\n     * @param skipPatch if true, will not update the data on the server (use for bulk updates)\n     * @returns true if the document was removed\n     */\n    public removeFromBasket(name: string, ids: string | string[], skipPatch?: boolean): boolean {\n        if (!ids) {\n            return false;\n        }\n        const basket = this.basket(name);\n        if (!basket) return false;\n        if (!basket.ids) basket.ids = [];\n        if (Utils.isArray(ids)) {\n            for (let i = 0, ic = ids.length; i < ic; i++) {\n                const id = ids[i];\n                const index = basket.ids.indexOf(id);\n                if (index !== -1) {\n                    basket.ids.splice(index, 1);\n                }\n            }\n        }\n        else {\n            const index = basket.ids.indexOf(<string>ids);\n            if (index !== -1) {\n                basket.ids.splice(index, 1);\n            }\n        }\n        if(!skipPatch){\n            this._events.next({type : BasketEventType.RemoveDoc});\n            this.patchBaskets({\n                type: BasketEventType.RemoveDoc,\n                detail: {\n                    basket: name,\n                    \"doc-id\": basket.ids[0]\n                }\n            }, true);\n        }\n        return true;\n    }\n\n    /**\n     * Removes a document from all the baskets\n     * @param id id of the document to remove\n     */\n    public removeFromAllBaskets(id: string) : boolean {\n        const auditEvents: AuditEvent[] = [];\n        for (const basket of this.baskets) {\n            if( this.removeFromBasket(basket.name, id, true) ){\n                auditEvents.push({\n                    type: BasketEventType.RemoveDoc,\n                    detail: {\n                        basket: basket.name,\n                        \"doc-id\": id\n                    }\n                });\n            }\n        }\n        if(auditEvents.length > 0) {\n            this._events.next({type : BasketEventType.RemoveDoc});\n            this.patchBaskets(auditEvents, true);\n            return true;\n        }\n        return false;\n    }\n\n\n    /**\n     * Updates Baskets in User settings.\n     * @param auditEvents : Audit Events to be triggered\n     * @returns an Observable which can be used to trigger further events\n     */\n    private patchBaskets(auditEvents?: AuditEvents, updateSearch?: boolean): Observable<void> {\n        const obs = this.userSettingsService.patch({baskets: this.baskets}, auditEvents);\n        obs.subscribe(\n            next => {\n                this._events.next({type: BasketEventType.Patched});\n                if(updateSearch && this.searchService.query.basket) {\n                    this.searchService.search(); // Update search results to reflect the new basket content\n                }\n            },\n            error => {\n                console.error(\"Could not patch Baskets!\", error);\n        });\n        return obs;\n    }\n\n\n\n\n    // EVENT HANDLERS (Menus)\n\n    /**\n     * Uses the SearchService to perform a search returning all\n     * the documents in this basket\n     * @param basket\n     * @param path\n     * @returns the search service promise\n     */\n    public searchBasket(basket : Basket, path?: string) : Promise<boolean> {\n        const query = this.searchService.makeQuery();\n        query.basket = basket.name;\n        this.searchService.setQuery(query);\n        this._events.next({type: BasketEventType.Open, basket: basket});\n        return this.searchService.search({ path: path }, {\n            type: BasketEventType.Open,\n            detail: {\n                basket: basket.name\n            }\n        });\n    }\n\n    /**\n     * Opens a dialog allowing a user to add one (or more) document(s)\n     * to a basket.\n     * @param ids id(s) of the documents to add to a basket\n     * @param recordBaskets names of the baskets the document already belongs to\n     * @returns a boolean promise resolved when the user closes the dialog\n     * the result is true if the document was added to a basket\n     */\n    public addToBasketModal(ids: string | string[], recordBaskets?: string[])\n            : Promise<boolean> {\n        const model : SelectBasketModel = {\n            basket: undefined,\n            basketFilter: recordBaskets? b => !recordBaskets.includes(b.name) : undefined,\n            allowNew: true\n        };\n        return this.modalService\n            .open(this.basketComponents.selectBasketModal, {model: model})\n            .then(result => {\n                if (result === ModalResult.OK && model.basket) {\n                    return this.addToBasket(model.basket.name, ids);\n                }\n                return false;\n            });\n    }\n\n    /**\n     * Opens a dialog allowing a user to remove one (or more) document(s)\n     * from a basket.\n     * @param ids id(s) of the documents to remove from a basket\n     * @param recordBaskets names of the baskets the document already belongs to\n     * @returns a boolean promise resolved when the user closes the dialog\n     * the result is true if the document was removed from a basket\n     */\n    public removeFromBasketModal(ids: string | string[], recordBaskets?: string[])\n            : Promise<boolean> {\n        const model : SelectBasketModel = {\n            basket: undefined,\n            basketFilter: recordBaskets? b => recordBaskets.includes(b.name) : undefined\n        };\n        return this.modalService\n            .open(this.basketComponents.selectBasketModal, {model: model})\n            .then(result => {\n                if (result === ModalResult.OK && model.basket) {\n                    return this.removeFromBasket(model.basket.name, ids);\n                }\n                return false;\n            });\n    }\n\n    /**\n     * Opens a dialog allowing a user to create new basket.\n     * @param model the initial basket object model\n     * @returns a boolean promise resolved when the user closes the dialog\n     * the result is true if the basket was created.\n     */\n    public createBasketModal(model: Basket = {name: \"\"}) : Promise<boolean> {\n\n        return this.modalService.open(this.basketComponents.editBasketModal, {model: model})\n            .then((result) => {\n\n                if (result === ModalResult.OK) {\n                    const index = this.basketIndex(model.name);\n                    if (index !== -1) {\n\n                        return this.modalService.yesNo(\"msg#baskets.basketAlreadyExists\")\n                            .then((result) => {\n                                if (result === ModalResult.Yes) {\n                                    return this.updateBasket(model, index);\n                                }\n                                return false;\n                            });\n\n                    }\n                    else {\n\n                        return this.createBasket(model);\n\n                    }\n                }\n\n                return false;\n            });\n    }\n\n    // Not relevant as of now\n    // public editBasketModal(basket: Basket)\n\n    /**\n     * Opens a dialog allowing a user to reorganize and edit the\n     * list of baskets.\n     * @returns a boolean promise resolved when the user closes the dialog\n     * the result is true is the list was updated.\n     */\n    public manageBasketsModal() : Promise<boolean> {\n\n        const model: ManageBasketsModel = { baskets: Utils.copy(this.baskets) };\n\n        return this.modalService.open(this.basketComponents.manageBasketsModal, {model: model})\n            .then((result) => {\n                if (result === ModalResult.OK) {\n                    return this.updateBaskets(model.baskets, model.auditEvents);\n                }\n                return false;\n            });\n\n    }\n\n\n    private buildBasketsAction() : Action {\n        return new Action({\n            icon: \"fas fa-shopping-basket\",\n            title: \"msg#baskets.baskets\",\n            hidden: true,\n            children: [\n                new Action({\n                    text: \"msg#baskets.addToBasket\",\n                    action: (item, $event) => {\n                        this.addToBasketModal(this.selectionService.getSelectedIds());\n                    }\n                }),\n                new Action({\n                    text: \"msg#baskets.removeFromBasket\",\n                    action: (item, $event) => {\n                        this.removeFromBasketModal(this.selectionService.getSelectedIds());\n                    }\n                })\n            ],\n            updater: (action) => {\n                action.hidden = !this.selectionService.haveSelectedRecords;\n            }\n        });\n    }\n\n    makeQuery(basket: Basket): Query {\n        const query = this.searchService.makeQuery();\n        query.basket = basket.name;\n        return query;\n    }\n\n    notifyOpenBasket(basket: Basket) {\n        this._events.next({type: BasketEventType.Open, basket});\n    }\n\n    ngOnDestroy() {\n        this.events.complete();\n        this.changes.complete();\n    }\n}\n","import {Component, OnInit, OnDestroy, Inject} from \"@angular/core\";\nimport {FormBuilder, FormGroup, FormControl, Validators} from \"@angular/forms\";\nimport {Subscription} from \"rxjs\";\nimport {MODAL_MODEL, ModalButton, ModalResult} from \"@sinequa/core/modal\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {Basket} from \"../../baskets.service\";\n\n@Component({\n    selector: \"sq-edit-basket\",\n    templateUrl: \"./edit-basket.html\"\n})\nexport class BsEditBasket implements OnInit, OnDestroy {\n    nameControl: FormControl;\n    form: FormGroup;\n    formChanges: Subscription;\n    buttons: ModalButton[];\n\n    constructor(\n        @Inject(MODAL_MODEL) public model: Basket,\n        private formBuilder: FormBuilder) {\n    }\n\n    ngOnInit() {\n        this.nameControl = new FormControl(this.model.name, Validators.required);\n        this.form = this.formBuilder.group({\n            basketName: this.nameControl\n        });\n        this.formChanges = Utils.subscribe(this.form.valueChanges,\n            (value) => {\n                this.model.name = this.nameControl.value;\n            }\n        );\n\n        this.buttons = [\n            new ModalButton({\n                result: ModalResult.OK,\n                primary: true,\n                validation: this.form\n            }),\n            new ModalButton({\n                result: ModalResult.Cancel\n            })\n        ];\n    }\n\n    ngOnDestroy() {\n        this.formChanges.unsubscribe();\n    }\n}\n","<form name=\"editBasket\" novalidate [formGroup]=\"form\">\n    <sq-modal [title]=\"'msg#editBasket.title'\" [buttons]=\"buttons\">\n        <div class=\"form-group sq-form-group\">\n            <label for=\"basketName\">{{'msg#editBasket.name' | sqMessage}}</label>\n            <input [sqValidation]=\"form\" type=\"text\" class=\"form-control\" id=\"basketName\" formControlName=\"basketName\" spellcheck=\"off\" sqAutofocus>\n        </div>\n    </sq-modal>\n</form>","<form name=\"manageBaskets\" novalidate>\n    <sq-modal [title]=\"'msg#manageBaskets.title'\" [buttons]=\"buttons\">\n        <div *ngIf=\"model.baskets.length\" class=\"form-group clearfix\">\n            <button type=\"button\" class=\"btn btn-secondary float-right\" (click)=\"reorder()\">{{(reordering ? \"msg#manageBaskets.edit\" : \"msg#manageBaskets.reorder\") | sqMessage}}</button>\n        </div>\n        <div class=\"form-group\">\n            <div class=\"list-group\" cdkDropList [cdkDropListData]=\"model.baskets\" [cdkDropListDisabled]=\"!reordering\" (cdkDropListDropped)=\"dropped($event)\">\n                <div *ngFor=\"let basket of model.baskets; let $index = index\" cdkDrag \n                    [ngClass]=\"['list-group-item list-group-item-action d-flex w-auto-unimportant', reordering ? 'cursor-move': '']\">\n                    <div *ngIf=\"reordering\" class=\"sq-basket-text\">{{basket.name}}</div>\n                    <sq-editable *ngIf=\"!reordering\" [value]=\"basket.name\" (valueChange)=\"setName(basket, $event)\" name=\"msg#manageBaskets.name\"\n                        [model]=\"basket\" [validators]=\"nameValidators\"></sq-editable>\n                    <div class=\"ml-auto\">\n                        <a *ngIf=\"!reordering\" class=\"ml-2\" href=\"#\" (click)=\"remove(basket, $index)\" title=\"{{'msg#manageBaskets.remove' | sqMessage}}\">\n                            <span class=\"fas fa-times sq-remove\"></span>\n                        </a>\n                        <span *ngIf=\"reordering\" class=\"ml-2 fas fa-bars sq-move\"></span>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </sq-modal>\n</form>\n","import {Component, OnInit, Inject} from \"@angular/core\";\nimport {Validators, AbstractControl} from \"@angular/forms\";\nimport {ValidatorFn} from \"@angular/forms\";\nimport {CdkDragDrop} from \"@angular/cdk/drag-drop\";\nimport {MODAL_MODEL, ModalButton, ModalResult} from \"@sinequa/core/modal\";\nimport {Utils} from \"@sinequa/core/base\";\nimport {AuditEvent} from \"@sinequa/core/web-services\";\nimport {Basket, BasketEventType, ManageBasketsModel} from \"../../baskets.service\";\n\n@Component({\n    selector: \"sq-manage-baskets\",\n    templateUrl: \"./manage-baskets.html\",\n    styleUrls: [\"./manage-baskets.scss\"]\n})\nexport class BsManageBaskets implements OnInit {\n    reordering: boolean;\n    buttons: ModalButton[];\n    removeAllButton: ModalButton;\n    nameValidators: ValidatorFn[];\n\n    constructor(\n        @Inject(MODAL_MODEL) public model: ManageBasketsModel) {\n        this.reordering = false;\n\n        this.nameValidators = [\n            Validators.required,\n            (control: AbstractControl) => {\n                const modelControl = control.root.get(\"model\");\n                if (modelControl) {\n                    for (const item of this.model.baskets) {\n                        if (modelControl.value === item) {\n                            continue;\n                        }\n                        if (control.value === item.name) {\n                            return {\n                                unique: true\n                            };\n                        }\n                    }\n                }\n                return null;\n            }\n        ];\n    }\n\n    ngOnInit() {\n        this.buttons = [\n            this.removeAllButton = new ModalButton({\n                text: \"msg#manageBaskets.removeAll\",\n                result: ModalResult.Custom,\n                action: (button) => {\n                    this.model.baskets.splice(0);\n                    button.visible = false;\n                    this.addAuditEvent({\n                        type: BasketEventType.DeleteAll\n                    });\n                },\n                visible: this.model.baskets.length > 0\n            }),\n            new ModalButton({\n                result: ModalResult.OK,\n                primary: true\n            }),\n            new ModalButton({\n                result: ModalResult.Cancel\n            })\n        ];\n    }\n\n    addAuditEvent(auditEvent: AuditEvent) {\n        if (!this.model.auditEvents) {\n            this.model.auditEvents = [];\n        }\n        this.model.auditEvents.push(auditEvent);\n    }\n\n    reorder() {\n        this.reordering = !this.reordering;\n    }\n\n    setName(basket: Basket, name: string) {\n        if (!Utils.eqNC(basket.name, name)) {\n            this.addAuditEvent({\n                type: BasketEventType.Rename,\n                detail: {\n                    basket: name,\n                    \"old-name\": basket.name\n                }\n            });\n            basket.name = name;\n        }\n    }\n\n    remove(basket: Basket, index: number) {\n        this.model.baskets.splice(index, 1);\n        this.removeAllButton.visible = this.model.baskets.length > 0;\n        this.addAuditEvent({\n            type: BasketEventType.Delete,\n            detail: {\n                basket: basket.name\n            }\n        });\n        return false;\n    }\n\n    dropped(drop: CdkDragDrop<Basket[]>) {\n        Utils.arrayMove(this.model.baskets, drop.previousIndex, drop.currentIndex);\n    }\n}\n","<form name=\"selectBasket\" novalidate>\n    <sq-modal [title]=\"'msg#selectBasket.title'\" [buttons]=\"buttons\">\n        <div class=\"form-group\">\n            <div class=\"list-group sq-list-group\">\n                <a *ngFor=\"let basket of baskets\" href=\"javascript:void(0)\" class=\"list-group-item list-group-item-action\" (click)=\"select(basket)\">\n                    <div>{{basket.name | sqMessage}}</div>\n                </a>\n                <a *ngIf=\"model.allowNew\" href=\"javascript:void(0)\" class=\"list-group-item list-group-item-action\" (click)=\"newBasket()\">\n                    <div><i>{{'msg#selectBasket.newBasket' | sqMessage}}</i></div>\n                </a>\n            </div>\n        </div>\n    </sq-modal>\n</form>","import {Component, OnInit, Inject} from \"@angular/core\";\nimport {MODAL_MODEL, ModalRef, ModalButton, ModalResult} from \"@sinequa/core/modal\";\nimport {Basket, BasketsService, SelectBasketModel} from \"../../baskets.service\";\n\n@Component({\n    selector: \"sq-select-basket\",\n    templateUrl: \"./select-basket.html\"\n})\nexport class BsSelectBasket implements OnInit {\n    baskets: Basket[];\n    buttons: ModalButton[];\n\n    constructor(\n        @Inject(MODAL_MODEL) public model: SelectBasketModel,\n        private basketsService: BasketsService,\n        private modalRef: ModalRef) {\n        this.baskets = this.basketsService.baskets;\n\n        if (!this.baskets) {\n            this.baskets = [];\n        }\n\n        this.buttons = [\n            new ModalButton({\n                result: ModalResult.Cancel\n            })\n        ];\n    }\n\n    ngOnInit(): void {\n        if (!!this.model.basketFilter) {\n            this.baskets = this.baskets.filter(this.model.basketFilter);\n        }\n    }\n\n    activate(model) {\n        this.model = model;\n    }\n\n    select(basket: Basket) {\n        if (basket) {\n            this.model.basket = basket;\n            this.modalRef.close(ModalResult.OK);\n        }\n    }\n\n    newBasket(){\n        const model : Basket = {name : \"\"};\n        this.basketsService.createBasketModal(model)\n            .then((result) => {\n                if(result){ // The basket was created\n                    this.select(model);\n                }\n            });\n    }\n}\n","import { Component, Input, OnChanges, SimpleChanges, ChangeDetectorRef, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { Record } from \"@sinequa/core/web-services\";\nimport { ModalService, ModalResult } from \"@sinequa/core/modal\";\nimport { BasketsService, Basket } from \"../../baskets.service\";\nimport { Action } from \"@sinequa/components/action\";\n\n/**\n * Component representing the add-to-baskets button in one item of the result list view.\n *\n */\n@Component({\n    selector: 'sq-result-baskets',\n    templateUrl: './result-baskets.html'\n})\nexport class BsResultBaskets implements OnChanges, OnDestroy {\n    @Input() record: Record;\n    @Input() rightAligned: boolean;\n\n    public basketsAction: Action;\n    private addToBasketAction: Action;\n    private removeFromBasketAction: Action;\n    private removeFromAllBasketsAction: Action;\n\n    private baskets: string[];\n    private initialized: boolean;\n    private basketsSubscription: Subscription;\n\n    constructor(\n        private modalService: ModalService,\n        private basketsService: BasketsService,\n        private changeDetectorRef: ChangeDetectorRef\n    ) {\n        this.baskets = [];\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (!this.initialized) {\n            this.initialized = true;\n            this.addToBasketAction = this.buildAddToBasketAction();\n            this.removeFromBasketAction = this.buildRemoveFromBasketAction();\n            this.removeFromAllBasketsAction = this.buildRemovalFromAllBasketsAction();\n            this.basketsSubscription = this.basketsService.changes.subscribe(event => {\n                this.updateRecordBaskets();\n                this.refreshVisualization();\n            });\n        }\n        this.updateRecordBaskets();\n        this.refreshVisualization();\n    }\n\n    ngOnDestroy(): void {\n        if (this.basketsSubscription) {\n            this.basketsSubscription.unsubscribe();\n        }\n    }\n\n    public get isInBaskets(): boolean {\n        return this.baskets.length > 0;\n    }\n\n    private refreshVisualization(): void {\n        this.basketsAction = this.buildBasketsAction();\n        this.changeDetectorRef.markForCheck();\n    }\n\n    private updateRecordBaskets(): void {\n        const currentBaskets: Basket[] = this.basketsService.baskets;\n        this.baskets = [];\n        for (const basket of currentBaskets) {\n            if (!!basket.ids && basket.ids.includes(this.record.id)) {\n                this.baskets.push(basket.name);\n            }\n        }\n    }\n\n    private buildAddToBasketAction(): Action {\n        return new Action({\n            text: 'msg#baskets.addToBasket',\n            action: (item, $event) => {\n                this.basketsService.addToBasketModal(this.record.id, this.baskets);\n            }\n        });\n    }\n\n    private buildRemoveFromBasketAction(): Action {\n        return new Action({\n            text: 'msg#baskets.removeFromBasket',\n            action: (item, $event) => {\n                this.basketsService.removeFromBasketModal(this.record.id, this.baskets);\n            }\n        });\n    }\n\n    private buildRemovalFromAllBasketsAction(): Action {\n        return new Action({\n            text: 'msg#baskets.removeFromAllBaskets',\n            action: () => {\n                this.modalService\n                    .yesNo(\n                        'msg#baskets.removeFromAllBasketsConfirmation',\n                        {values: {baskets: this.baskets.join(', ')}})\n                    .then(result => {\n                        if (result === ModalResult.Yes) {\n                            this.basketsService.removeFromAllBaskets(this.record.id);\n                        }\n                    });\n            }\n        });\n    }\n\n    private buildBasketsAction(): Action {\n        return new Action({\n            icon: 'fas fa-shopping-basket',\n            title: 'msg#baskets.baskets',\n            children: this.isInBaskets\n                ? this.baskets.length === 1\n                    ? [this.addToBasketAction, this.removeFromBasketAction]\n                    : [this.addToBasketAction, this.removeFromBasketAction, this.removeFromAllBasketsAction]\n                : [this.addToBasketAction]\n        });\n    }\n}\n","<div class=\"btn-group {{ isInBaskets ? 'sq-document-in-baskets' : 'sq-document-not-in-baskets' }}\"\n    [sq-action-buttons]=\"{\n        items: [basketsAction],\n        autoAdjust: true,\n        rightAligned: rightAligned\n    }\"></div>\n","<li *ngIf=\"!!menu && !menu.hidden\" class=\"nav-item dropdown\" \r\n    [sq-action-item]=\"{item: menu, size: size, autoAdjust: autoAdjust, autoAdjustBreakpoint: autoAdjustBreakpoint, inMenu: true}\"\r\n    [collapseBreakpoint]=\"collapseBreakpoint\"\r\n></li>\r\n\r\n\r\n\r\n\r\n","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { Action } from \"@sinequa/components/action\";\r\nimport { LoginService } from \"@sinequa/core/login\";\r\nimport { BasketsService } from \"../../baskets.service\";\r\nimport {PrincipalWebService} from \"@sinequa/core/web-services\";\r\nimport {UserSettingsWebService} from \"@sinequa/core/web-services\";\r\nimport {AppWebService} from \"@sinequa/core/web-services\";\r\n\r\n@Component({\r\n  selector: \"sq-baskets-menu\",\r\n  templateUrl: \"./baskets-menu.component.html\",\r\n})\r\nexport class BsBasketsMenuComponent implements OnInit {\r\n  @Input() searchRoute: string = \"/search\";\r\n  @Input() icon: string = \"fas fa-shopping-basket\";\r\n  @Input() autoAdjust: boolean = true;\r\n  @Input() autoAdjustBreakpoint: string = \"xl\";\r\n  @Input() collapseBreakpoint: string = \"sm\";\r\n  @Input() size: string;\r\n\r\n  basketOptions: string[] = [\"Select\", \"Share\"];\r\n\r\n  menu: Action | undefined;\r\n\r\n  // Basket actions\r\n  createAction: Action;\r\n  manageAction: Action;\r\n  selectAction: Action;\r\n  shareAction: Action;\r\n  basketCustomOptions: Action[] = [];\r\n\r\n  constructor(\r\n    public loginService: LoginService,\r\n    public basketsService: BasketsService,\r\n    public principalService:PrincipalWebService,\r\n    public userSettingsService:UserSettingsWebService,\r\n    public appService: AppWebService\r\n  ) {\r\n    this.createAction = new Action({\r\n      text: \"msg#baskets.createBasket\",\r\n      title: \"msg#baskets.createBasket\",\r\n      action: (_) => {\r\n        this.basketsService.createBasketModal();\r\n      },\r\n    });\r\n\r\n    this.manageAction = new Action({\r\n      text: \"msg#baskets.manageBaskets\",\r\n      title: \"msg#baskets.manageBaskets\",\r\n      action: (_) => {\r\n        this.basketsService.manageBasketsModal();\r\n      },\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.updateMenu();\r\n    this.basketsService.changes.subscribe({\r\n      next: () => {\r\n        this.updateMenu();\r\n      },\r\n    });\r\n    this.loginService.events.subscribe((event) => {\r\n      if (event.type === \"session-changed\") {\r\n        this.updateMenu();\r\n      }\r\n    });\r\n  }\r\n\r\n  updateMenu() {\r\n    if (!this.loginService.complete) {\r\n      this.menu = undefined;\r\n      return;\r\n    }\r\n\r\n    //Select and Share options//\r\n\r\n    const basketsActions: Action[] = [];\r\n    if (this.basketsService.hasBasket) {\r\n      this.basketsService.baskets.map((basket) =>\r\n        basketsActions.push(\r\n          new Action({\r\n            text: basket.name,\r\n            title: basket.name,\r\n            children: [\r\n              new Action({\r\n                text: \"Select\",\r\n                title: \"Select\",\r\n                action: () =>\r\n                  this.basketsService.searchBasket(basket, this.searchRoute),\r\n              }),\r\n              new Action({\r\n                text: \"Share\",\r\n                title: \"Share\",\r\n                action:()=>this.sendEmail(basket,this.searchRoute),\r\n              }),\r\n            ],\r\n          })\r\n        )\r\n      );\r\n    }\r\n    basketsActions.push(new Action({ separator: true }));\r\n    basketsActions.push(this.createAction);\r\n\r\n    if (this.basketsService.hasBasket) {\r\n      basketsActions.push(this.manageAction);\r\n    }\r\n\r\n    this.menu = new Action({\r\n      icon: this.icon,\r\n      text: \"msg#baskets.baskets\",\r\n      title: \"msg#baskets.baskets\",\r\n      children: basketsActions,\r\n    });\r\n  }\r\n\r\n  sendEmail(basket,curr)\r\n{\r\n            let mailToUrl = \"\";\r\n            let name = this.principalService?.principal?.name;\r\n            \r\n            let basketName = basket.name\r\n\t\t\t\t    var query=\"#/search?query=%7B%22name%22:%22\"+this.appService.appName+\"%22,%22basket%22:%22\"+basketName+\"%22,%22user%22:%22\"+name+\"%22,%22tab%22:%22ALL%22%7D&view=list\"+\"&user=\"+name+\"&sharedBasket=\"+basketName;\r\n                \r\n            var body = \"https://\"+window.location.host+window.location.pathname+ encodeURIComponent(query);\r\n            console.log(body);\r\n                //?query={%22name%22:%22GlobalSearch_V3.2%22,%22basket%22:%22Favorites%22,%22tab%22:%22ALL%22}&view=list&user=200035114&sharedBasket=Favorites\r\n                \r\n            mailToUrl = \"mailto:?subject=Pubmed Search Basket&body=\"+body;\r\n            console.log(mailToUrl);\r\n            window.location.href=mailToUrl;\r\n    }\r\n}\r\n\r\n\r\n","<div class=\"list-group list-group-flush\">\n    <a *ngFor=\"let basket of basketsService.baskets | slice:startIndex:endIndex\"\n        class=\"basket-item list-group-item list-group-item-action d-flex align-items-center\"\n        [routerLink]=\"[searchRoute]\" [queryParams]=\"getQueryParams(basket)\" [state]=\"getRouterState(basket)\"\n        (click)=\"openBasket(basket)\">\n        <span class=\"basket-name text-truncate mr-auto\">{{ basket.name }}</span>\n        <span *ngIf=\"basket.ids\" class=\"basket-count ml-2 text-muted small\">{{ basket.ids.length }}</span>\n        <i *ngIf=\"enableDelete\" class=\"basket-delete ml-2 fas fa-times\" [title]=\"'msg#baskets.delete' | sqMessage\" (click)=\"deleteBasket(basket, $event)\"></i>\n    </a>\n    <div *ngIf=\"basketsService.baskets.length == 0\" class=\"list-group-item text-center text-muted font-italic small py-5\">\n        {{ 'msg#baskets.noBasket' | sqMessage }}\n    </div>\n</div>","import { Component, Input } from '@angular/core';\nimport { BasketsService, Basket, BasketEventType } from '../../baskets.service';\nimport { AbstractFacet } from '@sinequa/components/facet';\nimport { Action } from '@sinequa/components/action';\n\n@Component({\n  selector: 'sq-facet-baskets',\n  templateUrl: './facet-baskets.component.html',\n  styles: [`\n.basket-item .basket-delete{\n    opacity: 0;\n}\n\n.basket-item:hover .basket-delete{\n    opacity: 1;\n    transition: opacity 0.2s ease-in-out;\n}\n  `]\n})\nexport class BsFacetBasketsComponent extends AbstractFacet {\n  @Input() searchRoute: string = \"/search\";\n  @Input() maxBaskets: number = 5;\n  @Input() enableDelete: boolean = true;\n\n  page: number = 0;\n\n  createBasket: Action;\n  manageBasket: Action;\n  previousPage: Action;\n  nextPage: Action;\n\n  constructor(\n    public basketsService: BasketsService) {\n    super();\n\n    this.createBasket = new Action({\n      icon: \"fas fa-plus\",\n      title: \"msg#baskets.createBasket\",\n      action: () => {\n        this.basketsService.createBasketModal();\n      }\n    });\n\n    this.manageBasket = new Action({\n      icon: \"fas fa-cog\",\n      title: \"msg#baskets.manageBaskets\",\n      action: () => {\n        this.basketsService.manageBasketsModal();\n      }\n    });\n\n    this.previousPage = new Action({\n      icon: \"fas fa-chevron-left\",\n      title: \"msg#facet.previous\",\n      action: () => {\n        this.page--;\n      },\n      updater: (action: Action) => {\n        action.disabled = this.page <= 0;\n        action.hidden = this.maxPage === 0;\n      }\n    });\n\n    this.nextPage = new Action({\n      icon: \"fas fa-chevron-right\",\n      title: \"msg#facet.next\",\n      action: () => {\n        this.page++;\n      },\n      updater: (action: Action) => {\n        action.disabled = this.page >= this.maxPage;\n        action.hidden = this.maxPage === 0;\n      }\n    });\n  }\n\n  get maxPage(): number {\n    return Math.max(0, Math.ceil(this.basketsService.baskets.length / this.maxBaskets) - 1);\n  }\n\n  get startIndex(): number {\n    return this.page * this.maxBaskets;\n  }\n\n  get endIndex(): number {\n    return (this.page+1) * this.maxBaskets;\n  }\n\n  openBasket(basket: Basket){\n    this.basketsService.notifyOpenBasket(basket)\n    return true;\n  }\n\n  get actions(): Action[] {\n    this.previousPage.update();\n    this.nextPage.update();\n    return [this.createBasket, this.previousPage, this.nextPage, this.manageBasket];\n  }\n\n  deleteBasket(basket: Basket, event: Event){\n    event.stopPropagation();\n    this.basketsService.deleteBasket(basket);\n    this.page = Math.min(this.page, this.maxPage);\n    return false;\n  }\n\n  getQueryParams(basket: Basket) {\n    const query = this.basketsService.makeQuery(basket);\n    const queryParams = query.toJsonForQueryString();\n    return {query: queryParams};\n  }\n\n  getRouterState(basket: Basket) {\n    return {\n      audit: {\n        type: BasketEventType.Open,\n        detail: {\n          basket: basket.name\n        }\n      }\n    }\n  }\n}\n","import {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {DragDropModule} from \"@angular/cdk/drag-drop\";\n\nimport {IntlModule} from \"@sinequa/core/intl\";\nimport {ValidationModule} from \"@sinequa/core/validation\";\n\nimport {UtilsModule} from \"@sinequa/components/utils\";\nimport {BsSelectionModule} from \"@sinequa/components/selection\";\nimport {BsModalModule} from \"@sinequa/components/modal\";\nimport {BsActionModule} from \"@sinequa/components/action\";\n\nimport {BASKET_COMPONENTS} from \"../baskets.service\";\nimport {BsEditBasket} from \"./edit-basket/edit-basket\";\nimport {BsManageBaskets} from \"./manage-baskets/manage-baskets\";\nimport {BsSelectBasket} from \"./select-basket/select-basket\";\nimport {BsResultBaskets} from \"./result-baskets/result-baskets\";\nimport {BsBasketsMenuComponent} from \"./baskets-menu/baskets-menu.component\";\nimport {BsFacetBasketsComponent} from './facet-baskets/facet-baskets.component';\nimport {RouterModule} from '@angular/router';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule, ReactiveFormsModule,\n        DragDropModule,\n        RouterModule,\n\n        BsModalModule,\n        IntlModule,\n        ValidationModule,\n\n        UtilsModule,\n        BsSelectionModule,\n        BsActionModule\n    ],\n    declarations: [\n        BsEditBasket, BsManageBaskets, BsSelectBasket,\n        BsResultBaskets, BsBasketsMenuComponent,\n        BsFacetBasketsComponent\n    ],\n    exports: [\n        BsEditBasket, BsManageBaskets, BsSelectBasket,\n        BsResultBaskets, BsBasketsMenuComponent,\n        BsFacetBasketsComponent\n    ],\n    providers: [\n        {\n            provide: BASKET_COMPONENTS,\n            useValue: {\n                selectBasketModal: BsSelectBasket,\n                editBasketModal: BsEditBasket,\n                manageBasketsModal: BsManageBaskets\n            }\n        }\n    ]\n})\nexport class BsBasketsModule {\n}\n","export default {\n    \"baskets\": {\n        \"baskets\": \"Baskets\",\n        \"addToBasket\": \"Add to basket\",\n        \"removeFromBasket\": \"Remove from basket\",\n        \"removeFromAllBaskets\": \"Remove from all baskets\",\n        \"removeFromAllBasketsConfirmation\": \"Are you sure you want to remove this result from these baskets: {baskets}?\",\n        \"basketAlreadyExists\": \"A basket with that name already exists. Would you like to replace it?\",\n        \"noBasket\": \"You have not yet added a document to a basket...\",\n        \"createBasket\": \"Create Basket\",\n        \"manageBaskets\": \"Manage Baskets\",\n        \"delete\": \"Delete this basket\"\n    },\n\n    \"editBasket\": {\n        \"title\": \"Basket\",\n        \"name\": \"Name\"\n    },\n\n    \"manageBaskets\": {\n        \"title\": \"Manage Baskets\",\n        \"edit\": \"Edit\",\n        \"reorder\": \"Reorder\",\n        \"remove\": \"Remove\",\n        \"removeAll\": \"Remove all\",\n        \"name\": \"Name\"\n    },\n\n    \"selectBasket\": {\n        \"title\": \"Select Basket\",\n        \"newBasket\": \"New basket...\"\n    }\n};\n","export default {\n    \"baskets\": {\n        \"baskets\": \"Paniers\",\n        \"addToBasket\": \"Ajouter au panier\",\n        \"removeFromBasket\": \"Supprimer du panier\",\n        \"removeFromAllBaskets\": \"Supprimer de tous les paniers\",\n        \"removeFromAllBasketsConfirmation\": \"Êtes-vous sûr de vouloir supprimer ce résultat de ces paniers : {baskets} ?\",\n        \"basketAlreadyExists\": \"Un panier avec ce nom existe déjà. Voulez-vous le remplacer ?\",\n        \"noBasket\": \"Vous n'avez pas encore ajouté de document à un panier...\",\n        \"createBasket\": \"Créer un panier\",\n        \"manageBaskets\": \"Gérer les paniers\",\n        \"delete\": \"Supprimer ce panier\"\n    },\n\n    \"editBasket\": {\n        \"title\": \"Panier\",\n        \"name\": \"Nom\"\n    },\n\n    \"manageBaskets\": {\n        \"title\": \"Gérer les paniers\",\n        \"edit\": \"Editer\",\n        \"reorder\": \"Réorganiser\",\n        \"remove\": \"Effacer\",\n        \"removeAll\": \"Effacer tout\",\n        \"name\": \"Nom\"\n    },\n\n    \"selectBasket\": {\n        \"title\": \"Sélectionner un panier\",\n        \"newBasket\": \"Nouveau panier...\"\n    },\n\n};\n","export default {\n    \"baskets\": {\n        \"baskets\": \"Ablagekörbe\",\n        \"addToBasket\": \"Zum Ablagekorb hinzufügen\",\n        \"removeFromBasket\": \"Aus dem Ablagekorb entfernen\",\n        \"removeFromAllBaskets\": \"Von allen Ablagekörben entfernen\",\n        \"removeFromAllBasketsConfirmation\": \"Möchten Sie dieses Eregbnis wirklich von diesen Ablagekörben entfernen: {baskets}?\",\n        \"basketAlreadyExists\": \"Es existiert bereits ein Ablagekorb mit diesem Namen. Möchten Sie ihn ersetzen?\",\n        \"noBasket\": \"Sie haben noch kein Dokument zu einem Ablagekorb hinzugefügt...\",\n        \"createBasket\": \"Ablagekorb erstellen\",\n        \"manageBaskets\": \"Ablagekörbe verwalten\",\n        \"delete\": \"Diesen Ablagekorb löschen\"\n    },\n\n    \"editBasket\": {\n        \"title\": \"Ablagekorb\",\n        \"name\": \"Name\"\n    },\n\n    \"manageBaskets\": {\n        \"title\": \"Ablagekörbe verwalten\",\n        \"edit\": \"Bearbeiten\",\n        \"reorder\": \"Neu sortieren\",\n        \"remove\": \"Entfernen\",\n        \"removeAll\": \"Alle entfernen\",\n        \"name\": \"Name\"\n    },\n\n    \"selectBasket\": {\n        \"title\": \"Ablagekorb auswählen\",\n        \"newBasket\": \"Neuer Ablagekorb...\"\n    },\n\n};\n","import {Utils} from \"@sinequa/core/base\";\nimport {enSearch, frSearch, deSearch} from \"@sinequa/components/search\";\nimport {enSelection, frSelection, deSelection} from \"@sinequa/components/selection\";\nimport {enModal, frModal, deModal} from \"@sinequa/components/modal\";\nimport _enBaskets from \"./en\";\nimport _frBaskets from \"./fr\";\nimport _deBaskets from \"./de\";\n\nconst enBaskets = Utils.merge({}, _enBaskets, enSearch, enSelection, enModal);\nconst frBaskets = Utils.merge({}, _frBaskets, frSearch, frSelection, frModal);\nconst deBaskets = Utils.merge({}, _deBaskets, deSearch, deSelection, deModal);\n\nexport { enBaskets, frBaskets, deBaskets };","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵelement","i0.ɵɵproperty","i0.ɵɵadvance","i0.ɵɵtextInterpolate","i0.ɵɵlistener","i0.ɵɵpropertyInterpolate","i0.ɵɵtemplate","i0.ɵɵclassMapInterpolate1","i0.ɵɵtextInterpolate1"],"mappings":"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"}