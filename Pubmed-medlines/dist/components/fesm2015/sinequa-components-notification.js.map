{"version":3,"file":"sinequa-components-notification.js","sources":["../projects/components/notification/bootstrap/notification/notification.html","../projects/components/notification/bootstrap/notification/notification.ts","../projects/components/notification/bootstrap/notifications/notifications.html","../projects/components/notification/bootstrap/notifications/notifications.ts","../projects/components/notification/bootstrap/notifications-manager/notifications-manager.ts","../projects/components/notification/bootstrap/notifications-manager/notifications-manager.html","../../projects/components/notification/bootstrap/notification.module.ts","../../projects/components/notification/messages/en.ts","../../projects/components/notification/messages/fr.ts","../../projects/components/notification/messages/de.ts","../../../projects/components/notification/sinequa-components-notification.ts"],"sourcesContent":["<div [@autoClose]=\"autoClose\" class=\"alert alert-{{alertClass}} sq-notification\" role=\"alert\">\n    <button *ngIf=\"showClose\" type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"close()\">\n        <span aria-hidden=\"true\">&times;</span>\n        <span class=\"sr-only\">Close</span>\n    </button>\n    <div class=\"sq-notification-container\">\n        <div class=\"sq-notification-icon\">\n            <span class=\"{{notificationClass}}\"></span>\n        </div>\n        <div class=\"sq-notification-message\">\n            <ng-container *ngIf=\"!!notification.title\">\n                <span class=\"sq-notification-title\">{{notification.title | sqMessage}}</span>\n                <hr>\n            </ng-container>\n            <span class=\"sq-notification-text\">{{notification.text | sqMessage:{values: notification.params} }}</span>\n        </div>                \n    </div>        \n</div>","import {Component, Input, OnInit} from \"@angular/core\";\nimport {trigger, animate, transition, style, AnimationTriggerMetadata} from '@angular/animations';\nimport {NotificationsService, Notification, NotificationState, NotificationType} from \"@sinequa/core/notification\";\nimport {Utils} from \"@sinequa/core/base\";\n\nexport function notificationAnimations(timings: number | string): AnimationTriggerMetadata[] {\n    return [\n        trigger('autoClose', [\n            transition('1 => void', [\n                animate(timings, style({ opacity: 0 }))\n            ])\n        ])\n    ];\n}\n\n@Component({\n    selector: \"sq-notification\",\n    templateUrl: \"./notification.html\",\n    animations: notificationAnimations(\".15s ease-in-out\")\n})\nexport class BsNotification implements OnInit {\n    @Input() notification: Notification;\n    autoClose: boolean;\n    constructor(\n        private notificationsService: NotificationsService) {\n    }\n\n    ngOnInit() {\n        if (this.notification.autoClose && this.notification.state === NotificationState.Initial) {\n            this.autoClose = true;\n            Utils.delay(5000).then(value => {\n                if (this.notification.state === NotificationState.Initial) {\n                    this.close();\n                }\n            });\n        }\n    }\n\n    get alertClass(): string {\n        switch (this.notification.type) {\n            case NotificationType.Info: return \"info\";\n            case NotificationType.Success: return \"success\";\n            case NotificationType.Warning: return \"warning\";\n            case NotificationType.Error: return \"danger\";\n        }\n        return \"\";\n    }\n\n    get notificationClass(): string {\n        switch (this.notification.type) {\n            case NotificationType.Info: return \"fas fa-info-circle fa-lg\";\n            case NotificationType.Success: return \"fas fa-check-circle fa-lg\";\n            case NotificationType.Warning: return \"fas fa-exclamation-triangle fa-lg\";\n            case NotificationType.Error: return \"fas fa-exclamation-circle fa-lg\";\n        }\n        return \"\";\n    }\n\n    get showClose(): boolean {\n        return !this.notification.autoClose || this.notification.state !== NotificationState.Initial;\n    }\n\n    close() {\n        this.notificationsService.closeNotification(this.notification);\n    }\n}","<div class=\"sq-notifications\">\n    <sq-notification *ngFor=\"let notification of notifications\" [notification]=\"notification\"></sq-notification>\n</div>","import {Component, OnInit, OnDestroy, ChangeDetectorRef} from \"@angular/core\";\nimport {Subscription} from \"rxjs\";\nimport {NotificationsService, Notification, NotificationState} from \"@sinequa/core/notification\";\n\n@Component({\n    selector: \"sq-notifications\",\n    templateUrl: \"./notifications.html\"\n})\nexport class BsNotifications implements OnInit, OnDestroy {\n    private subscription: Subscription;\n    notifications: Notification[];\n\n    constructor(\n        private notificationsService: NotificationsService,\n        private changeDetectorRef: ChangeDetectorRef) {\n        this.notifications = [];\n    }\n\n    ngOnInit() {\n        this.loadNotifications();\n        this.subscription = this.notificationsService.events.subscribe(\n            (event) => {\n                if (event.type === \"updated\") {\n                    this.loadNotifications();\n                    this.changeDetectorRef.markForCheck();\n                }\n            });\n    }\n\n    ngOnDestroy() {\n        this.subscription.unsubscribe();\n    }\n\n    loadNotifications() {\n        this.notifications.splice(0);\n        for (const notification of this.notificationsService.notifications) {\n            if (notification.state !== NotificationState.Hidden) {\n                this.notifications.unshift(notification);\n            }\n        }\n    }\n}","import {Component, OnInit, OnDestroy, ChangeDetectorRef} from \"@angular/core\";\nimport {Subscription} from \"rxjs\";\nimport {NotificationsService} from \"@sinequa/core/notification\";\nimport {Action} from \"@sinequa/components/action\";\n\n\n@Component({\n    selector: \"sq-notifications-manager\",\n    templateUrl: \"./notifications-manager.html\"\n})\nexport class BsNotificationsManager implements OnInit, OnDestroy {\n    private subscription: Subscription | undefined;\n    action: Action;\n    randomAction: Action;\n\n    constructor(\n        private notificationsService: NotificationsService,\n        private changeDetectorRef: ChangeDetectorRef) {\n    }\n\n    ngOnInit() {\n        this.buildAction();\n        this.unbind();\n        this.bind();\n    }\n\n    bind() {\n        this.subscription = this.notificationsService.notificationsStream.subscribe(\n            notification => {\n                this.action.update();\n        });\n    }\n\n    unbind() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n            this.subscription = undefined;\n        }\n    }\n\n    ngOnDestroy() {\n        this.unbind();\n    }\n\n    buildAction() {\n        this.action = new Action({\n            icon: \"fas fa-shield-alt\",\n            title: \"msg#notification.title\",\n            hidden: true,\n            children: [\n                new Action({\n                    text: \"msg#notification.showNotifications\",\n                    action: (item, $event) => {\n                        this.notificationsService.showNotifications();\n                    },\n                    updater: (item) => {\n                        item.hidden = this.notificationsService.allNotificationsShowing;\n                        this.changeDetectorRef.markForCheck();\n                    }\n                }),\n                new Action({\n                    text: \"msg#notification.hideNotifications\",\n                    action: (item, $event) => {\n                        this.notificationsService.hideNotifications();\n                    },\n                    updater: (item) => {\n                        item.hidden = this.notificationsService.allNotificationsHidden;\n                        this.changeDetectorRef.markForCheck();\n                    }\n                }),\n                new Action({\n                    separator: true\n                }),\n                new Action({\n                    text: \"msg#notification.clearNotifications\",\n                    action: (item, $event) => {\n                        this.notificationsService.deleteAllNotifications();\n                    }\n                })\n            ]\n        });\n    }\n}","<div class=\"btn-toolbar dropup\">\n    <div class=\"btn-group\" [sq-action-buttons]=\"{items: [action]}\"></div>\n</div>","import {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {BsNotification} from \"./notification/notification\";\nimport {BsNotifications} from \"./notifications/notifications\";\nimport {BsNotificationsManager} from \"./notifications-manager/notifications-manager\";\n\nimport {IntlModule} from \"@sinequa/core/intl\";\nimport {BsActionModule} from \"@sinequa/components/action\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        IntlModule,\n        BsActionModule,\n    ],\n    declarations: [\n        BsNotification, BsNotifications, BsNotificationsManager\n    ],\n    exports: [\n        BsNotifications, BsNotificationsManager\n    ]\n})\nexport class BsNotificationModule {\n}\n","export default {\n    \"notification\": {\n        \"title\": \"Notifications\",\n        \"showNotifications\": \"Show notifications\",\n        \"hideNotifications\": \"Hide notifications\",\n        \"clearNotifications\": \"Clear notifications\",\n    }\n};\n","export default {\n    \"notification\": {\n        \"title\": \"Notifications\",\n        \"showNotifications\": \"Afficher les notifications\",\n        \"hideNotifications\": \"Masquer les notifications\",\n        \"clearNotifications\": \"Effacer les notifications\",\n    }\n};\n","export default {\n    \"notification\": {\n        \"title\": \"Benachrichtigungen\",\n        \"showNotifications\": \"Zeige Benachrichtigungen\",\n        \"hideNotifications\": \"Benachrichtigungen verstecken\",\n        \"clearNotifications\": \"Benachrichtigungen löschen\",\n    }\n};\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i0.ɵɵelementStart","i0.ɵɵlistener","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵelementContainerStart","i0.ɵɵelement","i0.ɵɵelementContainerEnd","i0.ɵɵadvance","i0.ɵɵtextInterpolate","i0.ɵɵtemplate","i0.ɵɵclassMapInterpolate1","i0.ɵɵproperty","i0.ɵɵclassMap"],"mappings":"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"}