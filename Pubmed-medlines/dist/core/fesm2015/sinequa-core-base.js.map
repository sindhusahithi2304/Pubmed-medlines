{"version":3,"file":"sinequa-core-base.js","sources":["../../../projects/core/base/utils.ts","../../../projects/core/base/error.ts","../../../projects/core/base/iterator-adaptor.ts","../../../projects/core/base/item-array-view.ts","../../../projects/core/base/keyboard.ts","../../../projects/core/base/pattern-matcher.ts","../../../projects/core/base/polyfills.ts","../../../projects/core/base/base.module.ts","../../../projects/core/base/sinequa-core-base.ts"],"sourcesContent":["import {HttpParams, HttpParameterCodec} from \"@angular/common/http\";\nimport {Observable, Subscription} from \"rxjs\";\nimport moment from \"moment\";\nimport {remove as removeDiacritics} from \"diacritics\";\nimport jsSHA from \"jssha\";\nimport {MapOf} from \"./map-of\";\nimport {FieldValue} from \"./field-value\";\nimport kebabCase from \"lodash/kebabCase\";\nimport snakeCase from \"lodash/snakeCase\";\nimport camelCase from \"lodash/camelCase\";\nimport escape from \"lodash/escape\";\nimport unescape from \"lodash/unescape\";\nimport isEqual from \"lodash/isEqual\";\n\n// Because of: https://github.com/angular/angular/issues/18261\nclass SqHttpParameterCodec implements HttpParameterCodec {\n    encodeKey(key: string): string {\n        return encodeURIComponent(key);\n    }\n\n    encodeValue(value: string): string {\n        return encodeURIComponent(value);\n    }\n\n    decodeKey(key: string): string {\n        return decodeURIComponent(key);\n    }\n\n    decodeValue(value: string): string {\n        return decodeURIComponent(value);\n    }\n}\n\n/**\n * Describes options for the [Utils.toJson]{@link Utils#toJson} method\n */\nexport interface ToJsonOptions {\n    /**\n     * If `true` then spacing is added to the output string\n     */\n    pretty?: boolean;\n}\n\n/**\n * Describes options for the [Utils.fromJson]{@link Utils#fromJson} method\n */\nexport interface FromJsonOptions {\n    /**\n     * If `true` then strings containing either ISO8601 or Sinequa \"system\" dates (`yyyy-mm-dd [hh:mm:ss]`) are\n     * converted to Javascript `Date` objects\n     */\n    reviveDates?: boolean;\n}\n\n/**\n * Describes options for the [Utils.throttle]{@link Utils#throttle} method\n */\nexport interface ThrottleSettings {\n    /**\n     * Set to `false` to disable the initial call to the callback function\n     */\n    leading?: boolean;\n    /**\n     * Set to `false` to disable the final call to the callback function\n     */\n    trailing?: boolean;\n}\n\nclass FrameTask {\n    constructor(\n        public callback: (...params) => any,\n        public params: any[]) {\n    }\n\n    call(): any {\n        return this.callback(...this.params);\n    }\n}\n\n/**\n * A utility class to log execution durations\n */\nexport class Timer {\n    /**\n     * Contains the timestamp of when the `Timer` object was instantiated\n     */\n    readonly start = performance.now();\n    /**\n     * Contains the current durartion in milliseconds of the `Timer` object\n     */\n    duration = 0;\n\n    constructor(private readonly name: string) {\n    }\n\n    /**\n     * Updates the `duration` of the `Timer` object\n     */\n    stop() {\n        this.duration = performance.now() - this.start;\n        console.log(`Timer: ${this.name} finished in ${Math.round(this.duration)} ms`);\n    }\n}\n\n/**\n * A generic interface for tree nodes\n */\nexport interface TreeNode {\n    /**\n     * Children elements of this tree node\n     */\n    items?: TreeNode[];\n}\n\n/**\n * A utility class containing a variety of static methods and properties\n */\n// @dynamic\nexport class Utils {\n    /**\n     * The number of milliseconds in one day\n     */\n    static readonly oneDay = 86400000;\n    /**\n     * The number of milliseconds in one hour\n     */\n    static readonly oneHour = 3600000;\n    /**\n     * The number of milliseconds in one minute\n     */\n    static readonly oneMinute = 60000;\n    /**\n     * The number of milliseconds in one second\n     */\n    static readonly oneSecond = 1000;\n\n    private static baseExtend(dst, objs, deep?: boolean, sort?: boolean | ((a: string, b: string) => number)) {\n        for (let i = 0, ii = objs.length; i < ii; ++i) {\n            const obj = objs[i];\n            if (!Utils.isObject(obj) && !Utils.isFunction(obj)) {\n                continue;\n            }\n            let keys = Object.keys(obj);\n            if (sort) {\n                if (Utils.isFunction(sort)) {\n                    keys = keys.sort(sort);\n                }\n                else {\n                    keys = keys.sort();\n                }\n            }\n            for (let j = 0, jj = keys.length; j < jj; j++) {\n                const key = keys[j];\n                const src = obj[key];\n                if (deep && Utils.isObject(src)) {\n                    if (Utils.isDate(src)) {\n                        dst[key] = new Date(src.valueOf());\n                    }\n                    else if (Utils.isRegExp(src)) {\n                        dst[key] = new RegExp(src);\n                    }\n                    else if (src.nodeName) {\n                        dst[key] = src.cloneNode(true);\n                    }\n                    else {\n                        if (!Utils.isObject(dst[key])) {\n                            dst[key] = Utils.isArray(src) ? [] : {};\n                        }\n                        Utils.baseExtend(dst[key], [src], true);\n                    }\n                }\n                else {\n                    dst[key] = src;\n                }\n            }\n        }\n        return dst;\n    }\n\n    /**\n     * Shallowly copy the properties in the source objects to the destination object.\n     * Any nested objects or arrays will be copied by reference, not duplicated.\n     * The source objects are treated in order so properties in later\n     * objects will override properties in earlier ones.\n     *\n     * @param destination The object to which properties are copied\n     * @param sources Objects from which properties are copied\n     * @return the destination object\n     */\n    static extend(destination: any, ...sources: any[]): any {\n        return Utils.baseExtend(destination, sources, false);\n    }\n\n    /**\n     * Deeply copy the properties in the source objects to the destination object.\n     * Any nested objects or arrays will be duplicated.\n     * The source objects are treated in order so properties in later\n     * objects will override properties in earlier ones.\n     *\n     * @param destination The object to which properties are copied\n     * @param sources Objects from which properties are copied\n     * @return the destination object\n     */\n    static merge(destination: any, ...sources: any[]): any {\n        return Utils.baseExtend(destination, sources, true);\n    }\n\n    /**\n     * Deeply copy the properties in the source objects to the destination object.\n     * Any nested objects or arrays will be duplicated.\n     * The source objects are treated in order so properties in later\n     * objects will override properties in earlier ones.\n     * The properties of the source objects are sorted in ascending, ASCII character order\n     * before they are copied to ensure a consistent insertion order in the destination\n     * object.\n     *\n     * @param destination The object to which properties are copied\n     * @param sources Objects from which properties are copied\n     * @return the destination object\n     */\n    static mergeAndSort(destination: any, ...sources: any[]): any {\n        return Utils.baseExtend(destination, sources, true, true);\n    }\n\n    private static forEach(obj, iterator, context?) {\n        let key, length;\n        if (obj) {\n            if (Utils.isFunction(obj)) {\n                for (key in obj) {\n                    // Need to check if hasOwnProperty exists,\n                    // as on IE8 the result of querySelectorAll is an object without a hasOwnProperty function\n                    if (key !== 'prototype' && key !== 'length' && key !== 'name' && (!obj.hasOwnProperty || obj.hasOwnProperty(key))) {\n                    iterator.call(context, obj[key], key, obj);\n                    }\n                }\n            } else if (Utils.isArray(obj) || Utils.isArrayLike(obj)) {\n                const isPrimitive = typeof obj !== 'object';\n                for (key = 0, length = obj.length; key < length; key++) {\n                    if (isPrimitive || key in obj) {\n                        iterator.call(context, obj[key], key, obj);\n                    }\n                }\n            } else if (obj.forEach && obj.forEach !== Utils.forEach) {\n                obj.forEach(iterator, context, obj);\n            } else if (Utils.isBlankObject(obj)) {\n                // createMap() fast path --- Safe to avoid hasOwnProperty check because prototype chain is empty\n                for (key in obj) {\n                    iterator.call(context, obj[key], key, obj);\n                }\n            } else if (typeof obj.hasOwnProperty === 'function') {\n                // Slow path for objects inheriting Object.prototype, hasOwnProperty check needed\n                for (key in obj) {\n                    if (obj.hasOwnProperty(key)) {\n                    iterator.call(context, obj[key], key, obj);\n                    }\n                }\n            } else {\n            // Slow path for objects which do not have a method `hasOwnProperty`\n            for (key in obj) {\n                if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                    iterator.call(context, obj[key], key, obj);\n                }\n            }\n            }\n        }\n        return obj;\n    }\n\n    /**\n     * Makes a deep copy of the passed object or array and returns it.\n     * Copies of source objects of the following types: `TypedArray`, `Date`, `RegExp` `Node` are\n     * made using the appropriate constructor. Arrays are created using `[]`. Other objects are created\n     * using `Object.create` passing the source object's protptype, if any.\n     *\n     * @param source The source item to copy (`Object`, `Array`, `TypedArray`, `Date`, `RegExp`, `Node`)\n     * @param destination An optional item to use as the destination. If passed, the item is cleared\n     * before the source is copied to it. The destination cannot be a `TypedArray` and cannot be the same\n     * as the source\n     * @return The copied item\n     */\n    static copy<T extends object>(source: T, destination?: T): T {\n        const stackSource: object[] = [];\n        const stackDest: object[] = [];\n\n        if (destination) {\n            if (Utils.isTypedArray(destination)) {\n                throw new Error(\"Can't copy! TypedArray destination cannot be mutated.\");\n            }\n            if (source === destination) {\n                throw new Error(\"Can't copy! Source and destination are identical.\");\n            }\n\n            // Empty the destination object\n            if (Utils.isArray(destination)) {\n                (destination as Array<any>).length = 0;\n            }\n            else {\n                Utils.forEach(destination, (value, key) => {\n                    if (!source.hasOwnProperty(key)) {\n                        delete destination[key];\n                    }\n                });\n            }\n\n            stackSource.push(source);\n            stackDest.push(destination);\n            return copyRecurse(source, destination);\n        }\n\n        return copyElement(source);\n\n        function copyRecurse(source, destination) {\n            let key;\n            if (Utils.isArray(source)) {\n                for (let i = 0, ii = source.length; i < ii; i++) {\n                    destination.push(copyElement(source[i]));\n                }\n            } else if (Utils.isBlankObject(source)) {\n                // createMap() fast path --- Safe to avoid hasOwnProperty check because prototype chain is empty\n                for (key in source) {\n                    destination[key] = copyElement(source[key]);\n                }\n            } else if (source && typeof source.hasOwnProperty === 'function') {\n                // Slow path, which must rely on hasOwnProperty\n                for (key in source) {\n                    if (source.hasOwnProperty(key)) {\n                        destination[key] = copyElement(source[key]);\n                    }\n                }\n            } else {\n                // Slowest path --- hasOwnProperty can't be called as a method\n                for (key in source) {\n                    if (Object.prototype.hasOwnProperty.call(source, key)) {\n                        destination[key] = copyElement(source[key]);\n                    }\n                }\n            }\n            return destination;\n        }\n\n        function copyElement(source) {\n            // Simple values\n            if (!Utils.isObject(source)) {\n                return source;\n            }\n\n            // Already copied values\n            const index = stackSource.indexOf(source);\n            if (index !== -1) {\n                return stackDest[index];\n            }\n\n            if (Utils.isWindow(source)) {\n                throw new Error(\"Can't copy! Making copies of Window instances is not supported.\");\n            }\n\n            let needsRecurse = false;\n            let destination;\n\n            if (Utils.isArray(source)) {\n                destination = [];\n                needsRecurse = true;\n            } else if (Utils.isTypedArray(source)) {\n                destination = new source.constructor(source);\n            } else if (Utils.isDate(source)) {\n                destination = new Date(source.getTime());\n            } else if (Utils.isRegExp(source)) {\n                const matches = source.toString().match(/[^\\/]*$/);\n                destination = new RegExp(source.source, matches ? matches[0] : \"\");\n                destination.lastIndex = source.lastIndex;\n            } else if (Utils.isFunction(source.cloneNode)) {\n                destination = source.cloneNode(true);\n            } else {\n                destination = Object.create(Object.getPrototypeOf(source));\n                needsRecurse = true;\n            }\n\n            stackSource.push(source);\n            stackDest.push(destination);\n\n            return needsRecurse ? copyRecurse(source, destination) : destination;\n        }\n    }\n\n    // Not currently used\n    private static copyWithoutNullOrEmpty(dst: MapOf<any>, src: MapOf<any>): MapOf<any> {\n        const keys = Object.keys(src);\n        for (let j = 0, jj = keys.length; j < jj; j++) {\n            const key = keys[j];\n            const value = src[key];\n            if (value === null || Utils.isEmpty(null)) {\n                continue;\n            }\n            else if (Utils.isObject(value)) {\n                if (Utils.isDate(value)) {\n                    dst[key] = new Date(value.valueOf());\n                }\n                else if (Utils.isRegExp(value)) {\n                    dst[key] = new RegExp(value);\n                }\n                else {\n                    if (!Utils.isObject(dst[key])) {\n                        dst[key] = Utils.isArray(value) ? [] : {};\n                    }\n                    dst[key] = Utils.copyWithoutNullOrEmpty(dst[key], value);\n                }\n            }\n            else {\n                dst[key] = value;\n            }\n        }\n        return dst;\n    }\n\n    /**\n     * Makes a shallow copy of the passed object. Empty string values are removed from the copied object.\n     * A string value containing `\"\"` is copied as an empty string.\n     *\n     * @param defaults The object to copy\n     * @return The copied object\n     */\n    static copyDefaults(defaults: {}): {} {\n        const _defaults = Utils.copy(defaults);\n        if (_defaults) {\n            Object.keys(_defaults).forEach(key => {\n                // Unset parameters will come through as empty strings (regardless of type)\n                // Filter these out (to not hide defaults on the server) and accept \"\" as a way of explicitly\n                // setting a parameter to be an empty string\n                const value = _defaults[key];\n                if (value === \"\") {\n                    delete _defaults[key];\n                }\n                if (value === \"\\\"\\\"\") {\n                    _defaults[key] = \"\";\n                }\n            });\n        }\n        return _defaults;\n    }\n\n    /**\n     * Performs an optimized deep comparison between two objects to determine if they should be considered equal\n     * @param o1 The first object to be compared\n     * @param o2 The second object to be compared\n     */\n    static equals(o1: any, o2:any): boolean {\n        return isEqual(o1, o2);\n    }\n\n    /**\n     * Converts a string to an integer value using `parseInt` with radix = 10.\n     * If the string cannot be converted or contains additional characters then the\n     * passed default value is returned\n     * @param str The string to convert\n     * @param _default The default value to use if the string cannot be converted\n     */\n    static toInt(str: string, _default: number = 0): number {\n        let value = parseInt(str, 10);\n        if (isNaN(value) || (value + \"\" !== str)) {\n            value = _default;\n        }\n        return value;\n    }\n\n    /**\n     * Converts a string to a floating point value using `parseFloat`.\n     * If the string cannot be converted then the passed default value is returned\n     * @param str The string to convert\n     * @param _default The default value to use if the string cannot be converted\n     */\n    static toNumber(str: string, _default: number = 0): number {\n        let value = parseFloat(str);\n        if (isNaN(value)) {\n            value = _default;\n        }\n        return value;\n    }\n\n    /**\n     * Converts a string to a `Date` using `Date.parse`.\n     * The date is returned in UTC. If the string cannot be converted then `undefined` is returned\n     * @param str The string to convert\n     * @return The converted `Date` in UTC or `undefined`\n     */\n    static toDate(str: string): Date | undefined {\n        const ms = Date.parse(str);\n        if (!ms && ms !== 0) {\n            return undefined;\n        }\n        return new Date(ms + new Date(ms).getTimezoneOffset() * 60000); // get date in UTC\n    }\n\n    /**\n     * Get the time component of a `Date` in milliseconds\n     *\n     * @param date The date\n     * @return The time in milliseconds\n     */\n    static getTime(date: Date): number {\n        if (!date) {\n            return 0;\n        }\n        return (date.getHours() * 60 * 60 + date.getMinutes() * 60 + date.getSeconds()) * 1000 + date.getMilliseconds();\n    }\n\n    /**\n     * Return the current date and time\n     */\n    static get now(): Date {\n        return new Date();\n    }\n\n    /**\n     * Converts a `Date` to a Sinequa system date string (`dd-mm-yyyy[ hh:mm:ss]`)\n     * If the time component of the date is 0 then only the date portion of the string is included\n     *\n     * @param date The `Date` to convert\n     */\n    static toSysDateStr(date: Date): string {\n        if (!date)  {\n            return \"\";\n        }\n        const m = moment(date);\n        if (Utils.getTime(date) === 0) {\n            return m.format(\"YYYY-MM-DD\");\n        }\n        else {\n            return m.format(\"YYYY-MM-DD HH:mm:ss\");\n        }\n    }\n\n    /**\n     * Converts a Sinequa system date string (`dd-mm-yyyy[ hh:mm:ss]`) to a `Date`\n     * If the string cannot be converted then `undefined` is returned\n     *\n     * @param date The Sinequa system date string to convert\n     */\n    static fromSysDateStr(value: string): Date | undefined {\n        const m = moment(value, \"YYYY-MM-DD HH:mm:ss\");\n        if (m.isValid()) {\n            return m.toDate();\n        }\n        return undefined;\n    }\n\n    private static rxSysDateTime = /^\\d{4}-(?:0[1-9]|1[012])-(?:0[1-9]|[12][0-9]|3[01])(?: (?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d)?$/;\n    // private static rxISO8601 = /^([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24\\:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$/;\n    // ISO8601 combined date and time\n    private static rxISO8601DateTime = /^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*))(?:Z|(\\+|-)([\\d|:]*))?$/;\n\n    private static isSysDateTime(str: string): boolean {\n        return Utils.rxSysDateTime.test(str);\n    }\n\n    private static isISO8601DateTime(str: string): boolean {\n        return Utils.rxISO8601DateTime.test(str);\n    }\n\n    /**\n     * Converts a Javascript value to a JSON string using `JSON.stringify`.\n     * Date objects are converted to Sinequa system strings\n     *\n     * @param value The value to convert\n     * @param options Options for the conversion. The default is `{pretty: false}`\n     */\n    static toJson(value: any, options: ToJsonOptions = {pretty: false}): string {\n        return JSON.stringify(value,\n            function(key: string, value: any): any  {\n                if (key && Utils.isDate(this[key])) {\n                    const str = Utils.toSysDateStr(this[key]);\n                    return str;\n                }\n                return value;\n            }, options.pretty ? 2 : 0);\n    }\n\n    /**\n     * Converts a string to an object using `JSON.parse`.\n     * Strings that are either in Sinequa system date or ISO8601 format are converted to\n     * `Date` objects if the `reviveDates` option is specified.\n     *\n     * @param str The string to convert\n     * @param options Options for the conversion. The default is `{reviveDates: false}`\n     */\n    static fromJson(str: string, options: FromJsonOptions = {reviveDates: false}): any {\n        if (!str || typeof str !== \"string\") {\n            return {};\n        }\n        try {\n            return JSON.parse(str, options.reviveDates ?\n                (key, value) => {\n                    if (options.reviveDates && typeof value === \"string\") {\n                        if (Utils.isSysDateTime(value)) {\n                            const m = moment(value, \"YYYY-MM-DD HH:mm:ss\");\n                            if (m.isValid()) {\n                                return m.toDate();\n                            }\n                        }\n                        else if (Utils.isISO8601DateTime(value)) {\n                            const m = moment(value, moment.ISO_8601);\n                            if (m.isValid()) {\n                                return m.toDate();\n                            }\n                        }\n                    }\n                    return value;\n                } : undefined);\n        }\n        catch (exception) {\n            console.log(\"Utils.fromJson exception:\", exception);\n            return null;\n        }\n    }\n\n    /**\n     * Converts a `FieldValue` value to a string compatible with Sinequa's SQL syntax.\n     * String and `Date` values are enclosed in single quotes if the quote parameter is `true`\n     *\n     * @param value The value to convert\n     * @param quote If set, the returned string will be enclosed in single quotes for string and `Date` values\n     */\n    static toSqlValue(value: FieldValue, quote?: boolean): string {\n        if (Utils.isNumber(value)) {\n            return value + \"\";\n        }\n        if (Utils.isDate(value)) {\n            if (quote) {\n                return \"'\" + Utils.toSysDateStr(value) + \"'\";\n            }\n            else {\n                return Utils.toSysDateStr(value);\n            }\n        }\n        if (Utils.isBoolean(value)) {\n            return value ? \"true\" : \"false\";\n        }\n        if (Utils.isArray(value)) {\n            const ret: string[] = [];\n            value.forEach(v => {\n                if (ret.length > 0) {\n                    ret.push(\",\");\n                }\n                if (!v) {\n                    ret.push(\"null\");\n                }\n                else if (Utils.isString(v)) {\n                    ret.push(v);\n                }\n                else {\n                    ret.push(v.display || v.value || \"\");\n                }\n            });\n            ret.splice(0, 0, \"[\");\n            ret.push(\"]\");\n            return ret.join(\"\");\n        }\n        if (quote) {\n            return \"'\" + value + \"'\";\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * Clean a string so it is compatible with values stored in a Sinequa tree type-column.\n     * The following operations are performed:\n     * * ensure that the string starts and ends with forward slashes\n     * * replace tab characters with spaces\n     * * replace semi-colons with commas\n     * * replace back slashes with forward slashes\n     *\n     * @param s The string to clean\n     */\n    static treeClean(s: string): string {\n        if (Utils.isEmpty(s)) {\n            return s;\n        }\n        return Utils.addUrl(\"/\", Utils.replace(Utils.replace(Utils.replace(s, \"\\t\", \" \"), \";\", \",\"), \"\\\\\", \"/\"), \"/\");\n    }\n\n    /**\n     * Return the first node of a Sinequa tree value enclosed in forward slashes\n     *\n     * @param s A Sinequa tree value\n     */\n    static treeFirst(s: string): string {\n        const parts = Utils.split(s, \"/\");\n        return parts.length === 0 ? \"\" : `/${parts[0]}/`;\n    }\n\n    /**\n     * Return the first node of a Sinequa tree value\n     *\n     * @param s A Sinequa tree value\n     */\n    static treeFirstNode(s: string): string {\n        const parts = Utils.split(s, \"/\");\n        return parts[0];\n    }\n\n    /**\n     * Return the last node of a Sinequa tree value enclosed in forward slashes\n     *\n     * @param s A Sinequa tree value\n     */\n    static treeLast(s: string): string {\n        const parts = Utils.split(s, \"/\");\n        return parts.length === 0 ? \"\" : `/${parts[parts.length - 1]}/`;\n    }\n\n    /**\n     * Return the last node of a Sinequa tree value\n     *\n     * @param s A Sinequa tree value\n     */\n    static treeLastNode(s: string): string {\n        const parts = Utils.split(s, \"/\");\n        return parts[parts.length - 1];\n    }\n\n    /**\n     * Return the nodes making up a Sinequa tree value\n     *\n     * @param s A Sinequa tree value\n     */\n    static treeNodes(s: string): string[] {\n        return Utils.split(s, \"/\");\n    }\n\n    /**\n     * Return a Sinequa tree value, removing enclosing forward slash characters\n     *\n     * @param s A Sinequa tree value\n     */\n    static treeDisplay(s: string): string {\n        if (!!s) {\n            if (s[0] === \"/\") {\n                s = s.substr(1);\n            }\n            if (s[s.length - 1] === \"/\") {\n                s = s.substr(0, s.length - 1);\n            }\n        }\n        return s;\n    }\n\n    /**\n     * Return the node count of a Sinequa tree value\n     *\n     * @param s A Sinequa tree value\n     */\n    static treeCount(s: string): number {\n        const count = Utils.count(s, \"/\");\n        return count > 0 ? count - 1 : 0;\n    }\n\n    /**\n     * Traverses a tree structure, executing a callback function at every node\n     * @param nodes the nodes to traverse\n     * @param callback the callback function\n     */\n    public static traverse<T extends TreeNode>(nodes: T[], callback: (lineage: T[] | undefined) => boolean): boolean {\n        if (!nodes || nodes.length === 0) {\n            return false;\n        }\n        if (!callback) {\n            return false;\n        }\n        const lineage: T[] = [];\n        const stack: (T | undefined)[] = [];\n        let _i = nodes.length;\n        while (_i--) {\n            stack.push(nodes[_i]);\n        }\n        while (stack.length) {\n            const node = stack.pop();\n            if (!node) {\n                lineage.pop();\n                callback(undefined);\n            }\n            else {\n                lineage.push(node);\n                if (callback(lineage)) {\n                    return true;\n                }\n                stack.push(undefined);\n                if (node.items && node.items.length > 0) {\n                    _i = node.items.length;\n                    while (_i--) {\n                        stack.push(node.items[_i] as T);\n                    }\n                }\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Return a pseudo-GUID value using `Math.random`\n     *\n     * @param withHyphens If set, the returned GUID includes hyphen separators\n     */\n    static guid(withHyphens = true): string {\n        let d = Date.now();\n        const guid = (withHyphens ?\n            'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx' : 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx').replace(/[xy]/g, (c) => {\n                const r = (d + Math.random() * 16) % 16 | 0;\n                d = Math.floor(d / 16);\n                return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n            });\n        return guid;\n    }\n\n    /**\n     * Return `true` if the passed value is `undefined`\n     */\n    static isUndefined(value): value is undefined {\n        return typeof value === 'undefined';\n    }\n\n    /**\n     * Return `true` if the passed value is an `object`\n     */\n    static isObject(value): value is any {\n        return value !== null && typeof value === 'object';\n    }\n\n    /**\n     * Return `true` if the passed value is a `string`\n     */\n    static isString(value): value is string {\n        return typeof value === 'string';\n    }\n\n    /**\n     * Return `true` if the passed value is a `number`\n     */\n    static isNumber(value): value is number {\n        return typeof value === 'number';\n    }\n\n    /**\n     * Return `true` if the passed value is a `boolean`\n     */\n    static isBoolean(value): value is boolean {\n        return typeof value === 'boolean';\n    }\n\n    /**\n     * Return `true` if the passed value is a `Date`\n     */\n    static isDate(value): value is Date {\n        return Object.prototype.toString.call(value) === '[object Date]';\n    }\n\n    /**\n     * Return `true` if the passed value is a scalar (`number`, `boolean` or `Date`)\n     */\n    static isScalar(value): value is number | boolean | Date {\n        return Utils.isNumber(value) || Utils.isBoolean(value) || Utils.isDate(value);\n    }\n\n    /**\n     * Return `true` if the passed value is an `Array`\n     */\n    static isArray(value): value is Array<any> {\n        return Array.isArray(value);\n    }\n\n    /**\n     * Return `true` if the passed value is iterable\n     */\n    static isIterable(value): value is Array<any> {\n        if (value === null || value === undefined) {\n            return false;\n        }\n        return typeof value[Symbol.iterator] === \"function\";\n    }\n\n    /**\n     * Return `true` if the passed value is a `Map`\n     */\n    static isMap(value): value is Map<any, any> {\n        return Object.prototype.toString.call(value) === '[object Map]';\n    }\n\n    /**\n     * Return `true` if the passed value is a `Function`\n     */\n    static isFunction(value): value is Function {\n        return typeof value === 'function';\n    }\n\n    /**\n     * Return `true` if the passed value is a `RegExp`\n     */\n    static isRegExp(value): value is RegExp {\n        return Object.prototype.toString.call(value) === '[object RegExp]';\n    }\n\n    /**\n     * Return `true` if the passed value is a `Window`\n     */\n    static isWindow(value): value is Window {\n        return value && value.window === value;\n    }\n\n    /**\n     * Return `true` if the passed value is a `File`\n     */\n    static isFile(value: any): value is File {\n        return Utils.isObject(value) && Object.prototype.toString.call(value) === \"[object File]\";\n    }\n\n    /**\n     * Return `true` if the passed value is a `FormData`\n     */\n    static isFormData(value: any): value is FormData {\n        return Utils.isObject(value) && Object.prototype.toString.call(value) === \"[object FormData]\";\n    }\n\n    /**\n     * Return `true` if the passed value is a `Blob`\n     */\n    static isBlob(value: any): value is Blob {\n        return Utils.isObject(value) && Object.prototype.toString.call(value) === \"[object Blob]\";\n    }\n\n    /**\n     * Return `true` if the passed value is an `ArrayBuffer`\n     */\n    static isArrayBuffer(value: any): value is ArrayBuffer {\n        return Utils.isObject(value) && Object.prototype.toString.call(value) === \"[object ArrayBuffer]\";\n    }\n\n    private static isArrayLike(obj): boolean {\n        // `null`, `undefined` and `window` are not array-like\n        if (obj == null || Utils.isWindow(obj)) return false;\n\n        // arrays, strings and jQuery/jqLite objects are array like\n        // * jqLite is either the jQuery or jqLite constructor function\n        // * we have to check the existance of jqLite first as this method is called\n        //   via the forEach method when constructing the jqLite object in the first place\n        if (Utils.isArray(obj) || Utils.isString(obj) /*|| (jqLite && obj instanceof jqLite)*/) return true;\n\n        // Support: iOS 8.2 (not reproducible in simulator)\n        // \"length\" in obj used to prevent JIT error (gh-11508)\n        const length = \"length\" in Object(obj) && obj.length;\n\n        // NodeList objects (with `item` method) and\n        // other objects with suitable length characteristics are array-like\n        return Utils.isNumber(length) &&\n            (length >= 0 && (length - 1) in obj || typeof obj.item === 'function');\n    }\n\n    /**\n     * Return `true` if the passed value is an `object` without a prototype\n     */\n    static isBlankObject(value): value is object {\n        return value !== null && typeof value === 'object' && !Object.getPrototypeOf(value);\n    }\n\n    private static TYPED_ARRAY_REGEXP = /^\\[object (?:Uint8|Uint8Clamped|Uint16|Uint32|Int8|Int16|Int32|Float32|Float64)Array\\]$/;\n    /**\n     * Return true if the passed value is a `TypedArray`\n     */\n    static isTypedArray(value) {\n        return value && Utils.isNumber(value.length) && Utils.TYPED_ARRAY_REGEXP.test(Object.prototype.toString.call(value));\n    }\n\n    /**\n     * Return a promise that is a resolved after a specified amount of time\n     *\n     * @param ms The time to delay in milliseconds\n     */\n    static delay(ms: number = 0): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            window.setTimeout(() => {\n                resolve();\n            }, ms);\n        });\n    }\n\n    /**\n     *\n     * @param value\n     * @param _default\n     */\n    static isTrue(\n        value,\n        _default?: boolean): boolean {\n        if (typeof (value) === 'string') {\n            value = value.toLowerCase();\n        }\n        switch (value) {\n            case true:\n            case \"true\":\n            case 1:\n            case \"1\":\n            case \"on\":\n            case \"yes\":\n                return true;\n            case \"\":\n            case undefined:\n                return !!_default;\n            default:\n                return false;\n        }\n    }\n\n    /**\n     * Compares two strings using the current locale. The return value is negative\n     * if `a` comes before `b` and positive if `a` comes after `b`. If the values\n     * are equal then `0` is returned\n     *\n     * @param a The first string\n     * @param b The second string\n     * @param ignoreCase If set, do a case-insensitive comparison\n     */\n    static compare(a: string, b: string, ignoreCase: boolean = true): number {\n        a = a || '';\n        b = b || '';\n        if (ignoreCase) {\n            a = a.toLocaleUpperCase();\n            b = b.toLocaleUpperCase();\n        }\n        return a.localeCompare(b);\n    }\n\n    /**\n     * Return `true` if two strings are equal, respecting case\n     *\n     * @param a The first string\n     * @param b The second string\n     */\n    static eq(a: string, b: string): boolean {\n        return Utils.compare(a, b, false) === 0;\n    }\n\n    /**\n     * Return `true` if two strings are equal, ignoring case\n     *\n     * @param a The first string\n     * @param b The second string\n     */\n    static eqNC(a: string, b: string): boolean {\n        return Utils.compare(a, b, true) === 0;\n    }\n\n    /**\n     * Return `true` if a number of strings are equal, ignoring case\n     *\n     * @param a The first string\n     * @param b Remaining strings\n     */\n    static eqNCN(a: string, ...b: string[]) {\n        if (!b) {\n            return false;\n        }\n        for (const s of b) {\n            if (Utils.eqNC(a, s)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Return the length of a string. If the string is empty (`null` or `undefined`)\n     * @param s A string\n     */\n    static len(s: string) {\n        return (s || '').length;\n    }\n\n    /**\n     * Return `true` if a string starts with another\n     *\n     * @param a The string to test\n     * @param b The prefix\n     * @param ignoreCase If `true` then ignore case\n     */\n    static startsWith(a: string, b: string, ignoreCase: boolean = true): boolean {\n        a = a || '';\n        b = b || '';\n        if (ignoreCase) {\n            a = a.toLocaleUpperCase();\n            b = b.toLocaleUpperCase();\n        }\n        return a.startsWith(b);\n    }\n\n    /**\n     * Return `true` if a string ends with another\n     *\n     * @param a The string to test\n     * @param b The postfix\n     * @param ignoreCase If `true` then ignore case\n     */\n    static endsWith(a: string, b: string, ignoreCase: boolean = true): boolean {\n        a = a || '';\n        b = b || '';\n        if (ignoreCase) {\n            a = a.toLocaleUpperCase();\n            b = b.toLocaleUpperCase();\n        }\n        return a.endsWith(b);\n    }\n\n    /**\n     * Return `true` if a string is a substring of another\n     * @param a The string to test\n     * @param b The substring\n     * @param ignoreCase If `true` then ignore case\n     */\n    static includes(a: string, b: string, ignoreCase: boolean = true): boolean {\n        a = a || '';\n        b = b || '';\n        if (ignoreCase) {\n            a = a.toLocaleUpperCase();\n            b = b.toLocaleUpperCase();\n        }\n        return a.includes(b);\n    }\n\n    /**\n     * Return the upper case value of a string using the current locale\n     */\n    static toUpperCase(s: string): string {\n        if (s) {\n            return s.toLocaleUpperCase();\n        }\n        return \"\";\n    }\n\n    /**\n     * Return a string with the first character converted to upper case using the current locale\n     */\n    static toUpperFirst(s: string): string {\n        if (s) {\n            return s[0].toLocaleUpperCase() + s.substr(1);\n        }\n        return \"\";\n    }\n\n    /**\n     * Return the lower case value of a string using the current locale\n     */\n    static toLowerCase(s: string): string {\n        if (s) {\n            return s.toLocaleLowerCase();\n        }\n        return \"\";\n    }\n\n    /**\n     * Return a string with the first character converted to lower case using the current locale\n     */\n    static toLowerFirst(s: string): string {\n        if (s) {\n            return s[0].toLocaleLowerCase() + s.substr(1);\n        }\n        return \"\";\n    }\n\n    /**\n     * Return a string where the first character of each space separated word is converted to upper case.\n     * However, if a word contains a full stop character the first character is left unchanged\n     */\n    static toStartCase(text: string): string {\n        if (text) {\n            const words = text.split(/[\\s]+/);\n            return words.map(value => !value.includes(\".\") ? Utils.toUpperFirst(value) : value).join(\" \");\n        }\n        return \"\";\n    }\n\n    /**\n     * Return a string where any leading and trailing whitespace characters are removed\n     */\n    static trim(s: string): string {\n        if (s) {\n            return s.trim();\n        }\n        return \"\";\n    }\n\n    /**\n     * Return a string where any leading whitespace characters are removed\n     */\n    static trimStart(s: string): string {\n        if (s) {\n            return s.trimStart();\n        }\n        return \"\";\n    }\n\n    /**\n     * Return a string where any trailing whitespace characters are removed\n     */\n    static trimEnd(s: string): string {\n        if (s) {\n            return s.trimEnd();\n        }\n        return \"\";\n    }\n\n    /**\n     * Return a string truncated to a maximum length. If the length of the string is greater than `maxLength`\n     * then it is truncated to `maxLength and a `suffix` appended. Otherwise the string is returned unchanged\n     *\n     * @param s The string to truncate\n     * @param maxLength The maximum length\n     * @param suffix The value to append if the string is truncated. The default is `...`\n     */\n    static truncate(s: string, maxLength: number, suffix?: string): string {\n        if (!s) {\n            return \"\";\n        }\n        suffix = suffix || \"...\";\n        if (s.length <= maxLength) {\n            return s;\n        }\n        return s.substring(0, maxLength - suffix.length) + suffix;\n    }\n\n    private static regExEscapeRegEx = /[-\\/\\\\^$*+?.()|[\\]{}]/g;\n\n    /**\n     * Return a string where any regular expresion operators are escaped\n     */\n    static regExEscape(s: string): string {\n        if (!s) {\n            return \"\";\n        }\n        return s.replace(Utils.regExEscapeRegEx, \"\\\\$&\");\n    }\n\n    /**\n     * Replaces patterns in a string with a replacement string. The pattern can either a string\n     * or a `RegExp`.\n     *\n     * @param s The string in which to search for a pattern\n     * @param pattern The pattern\n     * @param replacement The replacement string to replace any occurrences of the pattern in the string\n     */\n    static replace(s: string, pattern: string | RegExp, replacement: string): string {\n        if (!s || !pattern) {\n            return \"\";\n        }\n        if (Utils.isRegExp(pattern)) {\n            return s.replace(pattern, replacement);\n        }\n        else {\n            return s.replace(new RegExp(Utils.regExEscape(pattern), \"g\"), replacement);\n        }\n    }\n\n    /**\n     * Split a string into an array of substrings using the passed separators\n     *\n     * @param s The string to split\n     * @param separators One or more separators\n     * @param trim If `true` trim any leading and trailing spaces from the substrings\n     * @param removeEmpty If `true` exclude any empty strings from the array of substrings\n     */\n    static split(s: string, separators: string | string[], trim = true, removeEmpty = true): string[] {\n        if (!s) {\n            return [];\n        }\n        if (!separators) {\n            return [s];\n        }\n        let split: string[];\n        if (typeof separators === \"string\") {\n            split = s.split(separators);\n            if (trim) {\n                split = split.map(value => value.trim());\n            }\n        }\n        else {\n            let rxs = separators.map((value) => Utils.regExEscape(value)).join(\"|\");\n            if (trim) {\n                rxs = \"(?:^\\\\s*)|(?:\\\\s*(?:\" + rxs + \")\\\\s*)|(?:\\\\s*$)\";\n            }\n            split = s.split(new RegExp(rxs));\n        }\n        if (removeEmpty) {\n            split = split.filter((value) => {\n                return !Utils.isEmpty(value);\n            });\n        }\n        return split;\n    }\n\n    /**\n     * Return a string in kebab case (`CatDog => cat-dog`)\n     */\n    static toKebabCase(text: string): string {\n        return kebabCase(text);\n    }\n\n    /**\n     * Return a string in snake case (`CatDog => cat_dog`)\n     */\n    static toSnakeCase(text: string): string {\n        return snakeCase(text);\n    }\n\n    /**\n     * Return a string in camel case (`CatDog => catDog`)\n     */\n    static toCamelCase(text: string): string {\n        return camelCase(text);\n    }\n\n    /**\n     * Return a string with any diacritics removed\n     */\n    static removeAccents(text: string): string {\n        if (!text) {\n            return \"\";\n        }\n        return removeDiacritics(text);\n    }\n\n    /**\n     * Return a string in normalized form which can be used to match entity values. A normalized value\n     * has any diacritics removed and is converted to upper case\n     */\n    static normalize(text: string | null | undefined): string {\n        if (!text) {\n            return \"\";\n        }\n        return Utils.removeAccents(text).toUpperCase();\n    }\n\n    /**\n     * Return `true` if a string is valid as a simple value for the Sinequa admininistration\n     */\n    static isValidSimpleName(name: string): boolean {\n        return /^[a-zA-Z_][a-zA-Z0-9_]*$/.test(name);\n    }\n\n    /**\n     * Return `true` if a string is valid as a scoped (`.` separated) simple value for the Sinequa admininistration\n     */\n    static isValidScopedSimpleName(name: string): boolean {\n        return /^[a-zA-Z_]([\\.]?[a-zA-Z0-9_]+)*$/.test(name);\n    }\n\n    /**\n     * Return `true` if a value is `null`, `undefined` or `\"\"`\n     */\n    static isEmpty(value: any): boolean {\n        if (value === \"\") {\n            return true;\n        }\n        if (value === null) {\n            return true;\n        }\n        if (Utils.isUndefined(value)) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Return the number of occurrences of a substring in a string\n     *\n     * @param text The text to test\n     * @param sub The substring\n     * @param ignoreCase If `true` don't respect case when matching the substring\n     */\n    static count(text: string, sub: string, ignoreCase = true): number {\n        if (!text || !sub) {\n            return 0;\n        }\n        if (ignoreCase) {\n            text = text.toLocaleUpperCase();\n            sub = sub.toLocaleUpperCase();\n        }\n        let pos = -1;\n        let count = 0;\n        while (true) {\n            pos = text.indexOf(sub, pos + 1);\n            if (pos === -1) {\n                break;\n            }\n            count++;\n        }\n        return count;\n    }\n\n    /**\n     * Return a string converted to base64\n     */\n    static toBase64(value: string): string {\n        return btoa(encodeURIComponent(value).replace(/%([0-9A-F]{2})/g, (match, hex) => String.fromCharCode(parseInt(hex, 16))));\n    }\n\n    /**\n     * Return a string converted from base64\n     */\n    static fromBase64(value: string): string {\n        return decodeURIComponent(atob(value).split('').map((c) => '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2)).join(''));\n    }\n\n    /**\n     * Return the SHA256 hash value of string\n     */\n    static sha256(value: string): string {\n        const sha = new jsSHA(\"SHA-256\", \"TEXT\");\n        sha.update(value);\n        return sha.getHash(\"B64\");\n    }\n\n    /**\n     * Return the SHA512 hash value of string\n     */\n    static sha512(value: string): string {\n        const sha = new jsSHA(\"SHA-512\", \"TEXT\");\n        sha.update(value);\n        return sha.getHash(\"B64\");\n    }\n\n    /**\n     * Return a string where any HTML special characters are percent encoded\n     */\n    static encodeHTML(value: string): string {\n        return escape(value);\n    }\n\n    /**\n     * Return a string where any percent encoded characters are replaced by their corresponding unencoded characters\n     */\n    static decodeHTML(value: string): string {\n        return unescape(value);\n    }\n\n    /**\n     * Get a field with passed name from an object. The field name is matched insensitive of case\n     */\n    static getField<T>(obj: MapOf<T>, name: string): T | undefined {\n        if (!Utils.isObject(obj) || Utils.isEmpty(name)) {\n            return undefined;\n        }\n        const keys = Object.keys(obj).filter(key => Utils.eqNC(key, name));\n        if (keys.length === 0) {\n            return undefined;\n        }\n        return obj[keys[0]];\n    }\n\n    /**\n     * Clear fields from an object. If the `_delete` parameter is `false` then\n     * array or map fields are emptied and other fields are set to `undefined`.\n     * If the `_delete` parameter is `true` then fields are deleted\n     */\n    static clearObject(obj: {}, _delete: boolean = false): {} {\n        for (const prop in obj) {\n            if (obj.hasOwnProperty(prop)) {\n                if (_delete) {\n                    delete obj[prop];\n                }\n                else {\n                    if (Utils.isArray(obj[prop])) {\n                        obj[prop].length = 0;\n                    }\n                    else if (Utils.isMap(obj[prop])) {\n                        obj[prop].clear();\n                    }\n                    else {\n                        obj[prop] = undefined;\n                    }\n                }\n            }\n        }\n        return obj;\n    }\n\n    /**\n     * Return the non-empty fields in the `override` object that that are different to fields of the same name\n     * in the `template` object\n     * @param template The object to compare against\n     * @param override The object defining the fields and values to be compared\n     * @param ret An optional return object. If not set a new object is created\n     */\n    static deltas(template: {}, override: {}, ret?: {}): {} {\n        if (!ret) {\n            ret = {};\n        }\n        for (const name of Object.keys(override)) {\n            if (name in template) {\n                if (Utils.isObject(override[name]) && !Utils.isArray(override[name])) {\n                    const diff = Utils.deltas(template[name], override[name]);\n                    if (!Utils.equals(diff, {})) {\n                        ret[name] = diff;\n                    }\n                }\n                else if (!Utils.equals(template[name], override[name])) {\n                    if (!Utils.isEmpty(override[name])) {\n                        ret[name] = override[name];\n                    }\n                }\n            }\n            else {\n                if (!Utils.isEmpty(override[name])) {\n                    ret[name] = override[name];\n                }\n            }\n        }\n        return ret;\n    }\n\n    /**\n     * Returns an object containing the fields in a source object whose names match one of the passed keys. The keys can either be\n     * an array of strings or a callback function that is called for each field in the source object and returns `true` if a field\n     * should be \"picked\".\n     *\n     * @param obj The source object\n     * @param keys An array of keys or a callback function\n     */\n    static pick(obj: {}, keys: string[] | ((value: any, key: string, obj: object) => boolean)): {} {\n        const ret = {};\n        if (!!obj) {\n            if (Utils.isFunction(keys)) {\n                Object.keys(obj).forEach(key => {\n                    if (keys(obj[key], key, obj)) {\n                        ret[key] = obj[key];\n                    }\n                });\n            }\n            else {\n                for (const key of keys) {\n                    if (obj.hasOwnProperty(key)) {\n                        ret[key] = obj[key];\n                    }\n                }\n            }\n        }\n        return ret;\n    }\n\n    /**\n     * Create a debounce function that delays invoking `func` until after `wait` millseconds have elapsed since the previous invocation.\n     *\n     * @param func The function to debounce\n     * @param wait The delay in milliseconds to wait before calling `func`\n     * @param immediate If `true` then make an initial call to `func`\n     * @param every An optional callback to call without debouncing\n     */\n    static debounce(func: (...params) => any, wait = 0, immediate = false, every?: (...params) => any): (...params) => any {\n        let timeout, args, context, timestamp, result;\n\n        const later = function() {\n            const last = Date.now() - timestamp;\n\n            if (last < wait && last >= 0) {\n                timeout = setTimeout(later, wait - last);\n            }\n            else {\n                timeout = null;\n                if (!immediate) {\n                    result = func.apply(context, args);\n                    if (!timeout) {\n                        context = args = null;\n                    }\n                }\n            }\n        };\n\n        return function(this: any) {\n            context = this;\n            args = arguments;\n            if (every) {\n                every.apply(context, args);\n            }\n            timestamp = Date.now();\n            const callNow = immediate && !timeout;\n            if (!timeout) {\n                timeout = setTimeout(later, wait);\n            }\n            if (callNow) {\n                result = func.apply(context, args);\n                context = args = null;\n            }\n\n            return result;\n        };\n    }\n\n    /**\n     * Create a throttled function that only invokes func at most once per every `wait` milliseconds.\n     *\n     * @param func The function to throttle\n     * @param wait The number of milliseconds to throttle invocations to\n     * @param options Options to control the throttling behaviour\n     */\n    static throttle(func: (...params) => any, wait: number, options: ThrottleSettings = {}): (...pararms) => any {\n        let timeout, context, args, result;\n        let previous = 0;\n\n        const later = function() {\n            previous = options.leading === false ? 0 : Date.now();\n            timeout = null;\n            result = func.apply(context, args);\n            if (!timeout) context = args = null;\n        };\n\n        const throttled = function(this: any) {\n            const now = Date.now();\n            if (!previous && options.leading === false) previous = now;\n            const remaining = wait - (now - previous);\n            context = this;\n            args = arguments;\n            if (remaining <= 0 || remaining > wait) {\n                if (timeout) {\n                    clearTimeout(timeout);\n                    timeout = null;\n                }\n                previous = now;\n                result = func.apply(context, args);\n                if (!timeout) context = args = null;\n            }\n            else if (!timeout && options.trailing !== false) {\n                timeout = setTimeout(later, remaining);\n            }\n            return result;\n        };\n\n        throttled[\"cancel\"] = function() {\n            clearTimeout(timeout);\n            previous = 0;\n            timeout = context = args = null;\n        };\n\n        return throttled;\n    }\n\n    private static frameTasks: Map<(...params) => any, FrameTask> = new Map<(...params) => any, FrameTask>();\n\n    /**\n     * Create a function that calls `callback` the next time the browser next repaints\n     */\n    static frame(callback: (...params) => any): (...params) => any {\n        return (...params) => {\n            if (Utils.frameTasks.size === 0) {\n                requestAnimationFrame((timestamp) => {\n                    Utils.frameTasks.forEach((task, key, map) => {\n                        task.call();\n                    });\n                    Utils.frameTasks.clear();\n                });\n            }\n            const task = Utils.frameTasks.get(callback);\n            if (task) {\n                // Update params\n                task.params = params;\n            }\n            else {\n                // Add new task\n                Utils.frameTasks.set(callback, new FrameTask(callback, params));\n            }\n        };\n    }\n\n    /**\n     * Create a URL object from a `url` string. If the string is a relative url then\n     * `base` specifies the base to use\n     */\n    static makeURL(url: string, base?: string): URL {\n        if (!base) {\n            base = \"http://x.y.z\"; // Firefox and IOS need this\n        }\n        return new URL(url, base);\n    }\n\n    /**\n     * Add query string parameters to a url\n     *\n     * @param url The url to which to add the parameters\n     * @param params An object whose fields should be added as parameters\n     */\n    static addSearchParams(url: string, params: MapOf<any>): string {\n        if (!url || !params) {\n            return url;\n        }\n        const urlObj = Utils.makeURL(url);\n        for (const param in params) {\n            if (params.hasOwnProperty(param)) {\n                urlObj.searchParams.set(param, params[param]);\n            }\n        }\n        const index = url.indexOf(\"?\");\n        if (index !== -1) {\n            url = url.substr(0, index);\n        }\n        url += \"?\" + urlObj.searchParams.toString();\n        return url;\n    }\n\n    private static _addUrl(url: string, path: string): string {\n        if (!path) {\n            return url;\n        }\n        if (!url) {\n            return path;\n        }\n        if (url[url.length - 1] === \"/\") {\n            if (path[0] === \"/\") {\n                return url + path.substr(1);\n            }\n            else {\n                return url + path;\n            }\n        }\n        else {\n            if (path[0] === \"/\") {\n                return url + path;\n            }\n            else {\n                return url + \"/\" + path;\n            }\n        }\n    }\n\n    /**\n     * Add paths to a url adding path separators as necessary\n     *\n     * @param url The url\n     * @param paths One or more paths to add to the url\n     */\n    static addUrl(url: string, ...paths: string[]): string {\n        let _url = url;\n        for (const path of paths) {\n            _url = Utils._addUrl(_url, path);\n        }\n        return _url;\n    }\n\n    /**\n     * Return `true` if a url is absolute\n     */\n    static isUrlAbsolute(url: string): boolean {\n        return /^(?:[a-zA-Z][a-zA-Z\\d+.-]*:|\\/\\/)/.test(url);\n    }\n\n    /**\n     * Return an `HttpParams` object containing the fields in the passed object\n     */\n    static makeHttpParams(params: MapOf<string | boolean | number | Date | object | undefined>): HttpParams {\n        let httpParams = new HttpParams({encoder: new SqHttpParameterCodec()});\n        if (params) {\n            for (const param in params) {\n                if (params.hasOwnProperty(param)) {\n                    const _value = params[param];\n                    let value = \"\";\n                    if (Utils.isString(_value)) {\n                        value = _value;\n                    }\n                    else if (Utils.isBoolean(_value) || Utils.isNumber(_value)) {\n                        value = _value.toString();\n                    }\n                    else if (Utils.isDate(_value)) {\n                        value = Utils.toSysDateStr(_value);\n                    }\n                    else {\n                        value = Utils.toJson(_value);\n                    }\n                    httpParams = httpParams.set(param, value);\n                }\n            }\n        }\n        return httpParams;\n    }\n\n    private static escapeDiv: HTMLElement;\n\n    /**\n     * Return a string with HTML special characters escaped\n     *\n     * @param html The string to escape\n     */\n    static escapeHtml(html: string): string {\n        if (!html) {\n            return html;\n        }\n        if (!Utils.escapeDiv) {\n            Utils.escapeDiv = document.createElement(\"div\");\n        }\n        const textNode = Utils.escapeDiv.appendChild(document.createTextNode(html));\n        const escapedHtml = Utils.escapeDiv.innerHTML;\n        Utils.escapeDiv.removeChild(textNode);\n        return escapedHtml;\n    }\n\n    /**\n     * Move an element in an array\n     *\n     * @param array The array containing the element to move\n     * @param from The index of the element to move\n     * @param to The index that the element should be moved to\n     */\n    static arrayMove(array: any[], from: number, to: number): void {\n        if (to === from ) {\n            return;\n        }\n        array.splice(to, 0, array.splice(from, 1)[0]);\n    }\n\n    /**\n     * Set the contents of a target array to the contents of a source array\n     *\n     * @param target The target array\n     * @param source The source array\n     */\n    static arraySet(target: any[], source: any[]): any[] {\n        return target.splice.apply(target, [0, target.length].concat(source));\n    }\n\n    private static genericNext(value) {\n    }\n\n    private static genericError(error: any) {\n    }\n\n    private static genericComplete() {\n    }\n\n    /**\n     * A simple wrapped around `Observable.subscribe`\n     */\n    static subscribe<T>(\n        observable: Observable<T>,\n        next: (value: T) => void, error?: (err: any) => void, complete?: () => void): Subscription {\n        if (!next) {\n            next = Utils.genericNext;\n        }\n        if (!error) {\n            error = Utils.genericError;\n        }\n        if (!complete) {\n            complete = Utils.genericComplete;\n        }\n        return observable.subscribe(next, error, complete);\n    }\n\n    /**\n     * Return a value as a `Date` converting as necessary. If the value\n     * cannot be converted then `undefined` is returned\n     */\n    static asDate(value: any): Date | undefined {\n        if (!value) {\n            return undefined;\n        }\n\n        if (Utils.isDate(value)) {\n            return value as Date;\n        }\n\n        if (Utils.isString(value)) {\n            return Utils.toDate(value as string);\n        }\n\n        return undefined;\n    }\n\n    /**\n     * Return a value as a `number` converting as necessary. If the value\n     * cannot be converted then `undefined` is returned.\n     */\n    static asNumber(value: any): number | undefined {\n        if (!value && value !== 0) {\n            return undefined;\n        }\n        if (Utils.isNumber(value)) {\n            return value;\n        }\n        if (Utils.isString(value)) {\n            if (Utils.testInteger(value)) {\n                return Utils.toInt(value);\n            }\n            if (Utils.testFloat(value)) {\n                return Utils.toNumber(value);\n            }\n        }\n        return undefined;\n    }\n\n    /**\n     * Return a value as a `string` converting as necessary\n     */\n    static asString(value: any): string | undefined {\n        if (!value && value !== \"\") {\n            return undefined;\n        }\n\n        if (Utils.isString(value)) {\n            return value as string;\n        }\n\n        return value.toString();\n    }\n\n    /**\n     * Return `true` if a string represents an integer\n     */\n    static testInteger(str: string): boolean {\n        return /^(\\-|\\+)?([0-9]+)$/.test(str);\n    }\n\n    /**\n     * Return `true` if a string represents a floating point number\n     */\n    static testFloat(str: string): boolean {\n        return /^[-+]?[0-9]*\\.?[0-9]+([eE][-+]?[0-9]+)?$/.test(str);\n    }\n\n    /**\n     * Round the passed number away from zero: 4.5 => 5, -4.5 => -5\n     */\n    static roundAway(num: number): number {\n        return num >= 0 ? Math.round(num) : Math.sign(num) * Math.round(Math.abs(num));\n    }\n\n    private static matchSuffix(str: string, factor: number, ...suffixes: string[]): {str: string, factor: number} | undefined {\n        for (const suffix of suffixes) {\n            if (Utils.endsWith(str, suffix)) {\n                return {\n                    str: Utils.trimEnd(str.substr(0, str.length - suffix.length)),\n                    factor\n                };\n            }\n        }\n        return undefined;\n    }\n\n    /**\n     * Convert a size in string form to a number in bytes.\n     *\n     * The following units are supported: `b`, `kb`, `mb`, `gb`, `tb`, `pb`\n     *\n     * For example `2.5 gb` will return `2621440`.\n     */\n    static toSize(str: string, _default = 0): number {\n        str = Utils.trim(str);\n        if (!str) {\n            return _default;\n        }\n        let factor = 1;\n        let ret = Utils.matchSuffix(str, 1024 * 1024 * 1024 * 1024 * 1024, \"PB\", \"PO\");\n        if (ret === undefined) {\n            ret = Utils.matchSuffix(str, 1024 * 1024 * 1024 * 1024, \"TB\", \"TO\");\n        }\n        if (ret === undefined) {\n            ret = Utils.matchSuffix(str, 1024 * 1024 * 1024, \"GB\", \"GO\");\n        }\n        if (ret === undefined) {\n            ret = Utils.matchSuffix(str, 1024 * 1024, \"MB\", \"MO\");\n        }\n        if (ret === undefined) {\n            ret = Utils.matchSuffix(str, 1024, \"KB\", \"KO\");\n        }\n        if (ret === undefined) {\n            ret = Utils.matchSuffix(str, 1, \"B\", \"O\");\n        }\n        if (ret !== undefined) {\n            str = ret.str;\n            factor = ret.factor;\n        }\n        if (!Utils.testFloat(str)) {\n            return _default;\n        }\n        const value = Utils.toNumber(str, _default) * factor;\n        return Math.round(value);\n    }\n\n    private static calculateDuration(current: number, unit: string): number {\n        switch (Utils.toLowerCase(unit)) {\n            case \"d\":    case \"j\":\n            case \"days\": case \"jours\":\n            case \"day\":  case \"jour\":\n                return current * Utils.oneDay;\n            case \"h\":\n            case \"hours\": case \"heures\":\n            case \"hour\":  case \"heure\":\n                return current * Utils.oneHour;\n            case \"m\":\n            case \"minutes\": case \"minute\":\n            case \"mins\":    case \"min\":\n                return current * Utils.oneMinute;\n            case \"s\":\n            case \"seconds\":  case \"secondes\":\n            case \"second\":   case \"seconde\":\n            case \"secs\": case \"sec\":\n                return current * Utils.oneSecond;\n                break;\n            case \"ms\":\n            case \"milliseconds\": case \"miliseconds\":  case \"millisecondes\": case \"milisecondes\":\n            case \"millisecond\":  case \"milliseconde\": case \"milisecond\":    case \"miliseconde\":\n                return current;\n            default:\n                return 0;\n        }\n    }\n\n    /**\n     * Convert a duration in string form to a number in milliseconds.\n     *\n     * These units are supported: `days`, `hours`, `minutes`, `seconds`, `milliseconds` (abbreviations are also supported)\n     *\n     * For example `3 h 2mins 4s => 10924000`\n     *\n     * @param defaultUnit The unit to use if no units are in the string. The default value is `ms`\n     */\n    static toDuration(str: string, defaultUnit = \"ms\"): number {\n        let total = 0;\n        if (str) {\n            let current = 0;\n            const tokens = str.match(/[0-9\\.,]+|[a-zA-Z]+/g) || [];\n            for (const token of tokens) {\n                if (/[a-zA-Z]/.test(token)) {\n                    total += Utils.calculateDuration(current, token);\n                    current = 0;\n                }\n                else {\n                    if (current) {\n                        total += Utils.calculateDuration(current, defaultUnit);\n                    }\n                    current = Utils.toNumber(token);\n                }\n            }\n            if (current) {\n                total += Utils.calculateDuration(current, defaultUnit);\n            }\n        }\n        return total;\n    }\n}\n","import {Utils} from \"./utils\";\n\n/**\n * Describes the error codes that can be set in the {@link SqError} class.\n */\nexport enum SqErrorCode {\n    loginCancelled,\n    processedCredentialsError,\n    principalSwitched,\n    autoLoginError\n}\n\n/**\n * A subclass of the built-in {@link Error} class with added `code` and\n * `data` (optional) properties.\n */\nexport class SqError extends Error {\n    // See https://github.com/Microsoft/TypeScript/issues/7639\n    // and https://github.com/Microsoft/TypeScript/issues/1168#issuecomment-107833988\n    /**\n     * The error code associated with the error.\n     */\n    code: SqErrorCode;\n    /**\n     * Arbitrary data associated with the error.\n     */\n    data: any;\n\n    constructor(code: SqErrorCode, message?: string, data?: any) {\n        super(message || SqError.message(code));\n        this.code = code;\n        this.name = \"SqError\";\n        this.message = message || SqError.message(code);\n        if (data) {\n            this.data = data;\n        }\n    }\n\n    /**\n     * Return `true` if the passed `error` is a valid `SqErrorCode` instance.\n     * If the optional `code` parameter is defined then only return true\n     * if the code on `error` matches this value.\n     */\n    static is(error: any, code?: SqErrorCode): error is SqError {\n        if (error instanceof SqError || (error instanceof Error && error.name === \"SqError\")) {\n            return Utils.isUndefined(code) || (error as SqError).code === code;\n        }\n        return false;\n    }\n\n    /**\n     * Return the message corresponding to the passed error `code`.\n     */\n    static message(code: SqErrorCode) {\n        switch (code) {\n            case SqErrorCode.loginCancelled: return \"msg#error.loginCancelled\";\n            case SqErrorCode.processedCredentialsError: return \"msg#error.processedCredentialsError\";\n            case SqErrorCode.principalSwitched: return \"msg#error.principalSwitched\";\n            case SqErrorCode.autoLoginError: return \"msg#error.autoLoginError\";\n            default: return \"msg#error.unknownError\";\n        }\n    }\n}\n","export class IteratorAdaptor<T,B> implements IterableIterator<T> {\n    readonly return?: (value?: any) => IteratorResult<T>;\n    readonly throw?: (error?: any) => IteratorResult<T>;\n\n    constructor(private base: Iterator<B>, private adaptor: (b: B) => T) {\n        this.return = (base.return) ? (v) => this.translate(this.base.return!(v)) : undefined;\n        this.throw  = (base.throw)  ? (e) => this.translate(this.base.throw!(e))  : undefined;\n    }\n\n    static forIterable<B, T>(iterable: Iterable<B>, adaptor: (b: B) => T): IterableIterator<T> {\n        /*if (iterable === undefined) {\n            return undefined;\n        }*/\n\n        return new IteratorAdaptor<T,B>(\n            iterable[Symbol.iterator](),\n            adaptor\n        );\n    }\n\n    private translate(result: IteratorResult<B>): IteratorResult<T> {\n        if (result.done) {\n            return {\n                done: result.done,\n                value: (result.done && result.value === undefined) ? undefined : this.adaptor(result.value)\n            };\n        }\n        else {\n            return {\n                value: this.adaptor(result.value)\n            };\n        }\n    }\n\n    next(value?: any)  { return this.translate(this.base.next(value)); }\n\n    [Symbol.iterator](): IterableIterator<T> { return this; }\n}\n","import { ArrayView } from \"./array-view\";\nimport { IteratorAdaptor } from \"./iterator-adaptor\";\n\n/**\n * A generic interface describing a name and associated value\n */\nexport interface NameValuePair<U, V> {\n    name: U;\n    value: V;\n}\n\n/**\n * An {@link ArrayView} of {@link NameValuePair}\n */\nexport interface NameValueArrayView<U, V> extends ArrayView<NameValuePair<U, V>> {\n    getName(index: number): U;\n    getValue(index: number): V;\n    items(): IterableIterator<NameValuePair<U, V>>;\n    names(): IterableIterator<U>;\n    values(): IterableIterator<V>;\n}\n\nclass ArrayBasedView<T, U, V> implements NameValueArrayView<U, V> {\n    constructor(\n        private base: T[],\n        private nameSelector: (t: T) => U,\n        private valueSelector: (t: T) => V\n    ) { }\n\n    get length(): number {\n        return this.base.length;\n    }\n\n    get(index: number): NameValuePair<U, V> {\n        return this.toNameValuePair(this.base[index]);\n    }\n\n    getName(index: number): U {\n        return this.nameSelector(this.base[index]);\n    }\n\n    getValue(index: number): V {\n        return this.valueSelector(this.base[index]);\n    }\n\n    private toNameValuePair(obj: T): NameValuePair<U, V> {\n        return { name: this.nameSelector(obj), value: this.valueSelector(obj) };\n    }\n\n    /*\n        Iterators\n    */\n\n    [Symbol.iterator](): IterableIterator<NameValuePair<U, V>> {\n        return this.items();\n    }\n\n    items(): IterableIterator<NameValuePair<U, V>> {\n        return IteratorAdaptor.forIterable(\n            this.base,\n            (obj) => this.toNameValuePair(obj)\n        );\n    }\n\n    names(): IterableIterator<U> {\n        return IteratorAdaptor.forIterable(this.base, this.nameSelector);\n    }\n\n    values(): IterableIterator<V> {\n        return IteratorAdaptor.forIterable(this.base, this.valueSelector);\n    }\n\n    forEach(callback: (item: NameValuePair<U, V>, index?: number, items?: NameValueArrayView<U, V>) => void, thisArg?: any) {\n        for (let idx = 0; idx < this.length; idx++) {\n            const r = this.get(idx);\n            if (thisArg)\n                callback.call(thisArg, r, idx, this);\n            else\n                callback(r, idx, this);\n        }\n        return this;\n    }\n}\n\n/**\n * A helper class for creating {@link NameValueArrayView} instances\n */\n// @dynamic\nexport class NameValueArrayViewHelper {\n    /**\n     * Creates a {@link NameValueArrayView} from an array of {@link NameValuePair} items\n     *\n     * @param items An array of `NameValuePair` items\n     */\n    static fromArray<U, V>(items: NameValuePair<U, V>[]): NameValueArrayView<U, V> {\n        return new ArrayBasedView(items || [], p => p.name, p => p.value);\n    }\n\n    static fromObjects<T>(items: T[], nameKey: keyof T, valueKey: keyof T): NameValueArrayView<T[keyof T], T[keyof T]> {\n        return new ArrayBasedView(items || [], p => p[nameKey], p => p[valueKey]);\n    }\n\n    static from<T, U, V>(items: T[], nameSelector: (t: T) => U, valueSelector: (t: T) => V): NameValueArrayView<U, V> {\n        return new ArrayBasedView(items || [], nameSelector, valueSelector);\n    }\n}\n","/**\n * An enumeration of keyboard code values\n */\nexport enum Keys {\n    up = 38,\n    down = 40,\n    left = 37,\n    right = 39,\n    del = 46,\n    tab = 9,\n    enter = 13,\n    esc = 27,\n    comma = 188,\n    space = 32,\n    pageUp = 33,\n    pageDown = 34,\n    home = 36,\n    end = 35,\n    backspace = 8\n}\n","import {Utils} from \"./utils\";\n\n/**\n * Defines the different pattern types\n * `Empty`: no pattern\n * `RegExp`: a regular expression pattern\n * `Value`: a literal value\n */\nexport enum PatternType {\n    Empty = 0,\n    RegExp = 1,\n    // WildCard = 2,\n    Value = 3\n}\n\n/**\n * A class that represents a single pattern. The pattern type is deduced automatically from the input pattern text.\n *\n * `<empty string>` => `Empty`\n * `<pattern with wildcards ?*>` => `RegExp` (wildcards are converted to regular expressions)\n * `<pattern starting with ~>` => `RegExp` (the text following the ~ character is treated as a regular expression)\n * `<any other value>` => `Value` (a literal value that is matched as-is)\n */\nexport class Pattern {\n    private _type: PatternType;\n    public get type(): PatternType {\n        return this._type;\n    }\n    private reg?: RegExp;\n    private preparedPattern1?: string;\n    // private preparedPattern2: string;\n    private _text?: string;\n    public get text(): string | undefined {\n        return this._text;\n    }\n\n    public static getPatternType(pattern: string): PatternType {\n        if (!pattern) {\n            return PatternType.Empty;\n        }\n        if (pattern[0] === \"~\" || pattern.includes(\"*\") || pattern.includes(\"?\")) {\n            return PatternType.RegExp;\n        }\n        return PatternType.Value;\n    }\n\n    public static isPattern(pattern: string): boolean {\n        if (!pattern) {\n            return false;\n        }\n        if (pattern[0] === \"~\" || pattern.includes(\"*\") || pattern.includes(\"?\")) {\n            return true;\n        }\n        return false;\n    }\n\n    public static doMatch(pattern: string, text: string): boolean {\n        const _pattern = new Pattern();\n        _pattern.load(pattern);\n        return _pattern.isMatch(text);\n    }\n\n    public static wildcardToRegex(pattern: string): string {\n        if (!pattern) {\n            return pattern;\n        }\n        return \"^\" + Utils.regExEscape(pattern).replace(\"\\\\*\", \".*\").replace(\"\\\\?\", \".\") + \"$\";\n    }\n\n    public constructor(pattern?: string) {\n        if (!pattern) {\n            this.clear();\n        }\n        else {\n            this.load(pattern);\n        }\n    }\n\n    private static cleanPattern(s: string): string {\n        if (!s) {\n            return s;\n        }\n        const sb: string[] = [];\n        let lastIsStar = false;\n        for (const ch of s) {\n            if (ch === \"*\") {\n                if (!lastIsStar) {\n                    lastIsStar = true;\n                    sb.push(ch);\n                }\n            }\n            else {\n                lastIsStar = false;\n                sb.push(ch);\n            }\n        }\n        return sb.join(\"\");\n    }\n\n    public clear():void {\n        this.reg= undefined;\n        this._text = undefined;\n        this.preparedPattern1 = undefined;\n        // this.preparedPattern2 = undefined;\n        this._type = PatternType.Empty;\n    }\n\n    public isEmpty(): boolean {\n        return this._type === PatternType.Empty;\n    }\n\n    public load(pattern: string): boolean {\n        this.clear();\n        try {\n            let s = pattern;\n            this._text = pattern;\n            this._type = Pattern.getPatternType(s);\n            if (this._type === PatternType.Empty) {\n                return true;\n            }\n            if (this._type === PatternType.Value) {\n                this.preparedPattern1= s ;\n                return true;\n            }\n            if (this._type === PatternType.RegExp) {\n                if (s[0] === \"~\") {\n                    s = s.substring(1);\n                }\n                else {\n                    s = Pattern.wildcardToRegex(Pattern.cleanPattern(s));\n                }\n                this.preparedPattern1 = s;\n                this.reg = new RegExp(s, \"i\");\n                return true;\n            }\n            return false;\n        }\n        catch (e) {\n            console.log(`Pattern.Load '${pattern}' error:`, e);\n            this.clear();\n            return false;\n        }\n    }\n\n    public getTypeValueText(): string | undefined {\n        if (this.type === PatternType.Value) {\n            return this.preparedPattern1;\n        }\n        return undefined;\n    }\n\n    public getTypeRegexPattern(): string | undefined {\n        if (this.type === PatternType.RegExp) {\n            return this.preparedPattern1;\n        }\n        return undefined;\n    }\n\n    public isTypeValue(): boolean {\n        return this.type === PatternType.Value;\n    }\n\n    public isMatch(text: string): boolean {\n        text = text || \"\";\n        switch (this._type) {\n            default:\n            case PatternType.Empty:\n                return true;\n            case PatternType.Value:\n                return Utils.eqNC(text, this.preparedPattern1 || \"\");\n            case PatternType.RegExp:\n                return this.reg?.test(text) || false;\n        }\n    }\n}\n\nexport class Patterns {\n    private _text?: string;\n    private _preparedPatterns?: Pattern[];\n    private _values?: { [key: string]: true };\n    private _isEmpty: boolean;\n\n    constructor(text?: string) {\n        this.text = text;\n    }\n\n    public clear(): void {\n        this._preparedPatterns = undefined;\n        this._values = undefined;\n        this._isEmpty = true;\n    }\n\n    public get text(): string | undefined {\n        return this._text;\n    }\n\n    public set text(value: string | undefined) {\n        if (value === this._text) {\n            return;\n        }\n        this._text = value;\n        const l = Utils.split(this._text || \"\", \";\");\n        this.innerSetList(l);\n\n    }\n\n    public getTypeCount(type: PatternType): number {\n        if (!this._preparedPatterns) {\n            return 0;\n        }\n        if (type === PatternType.Value) {\n            return !!this._values ? Object.keys(this._values).length : 0;\n        }\n        let count = 0;\n        for (const pattern of this._preparedPatterns) {\n            if (pattern.type === type) {\n                count++;\n            }\n        }\n        return count;\n    }\n\n    private innerSetList(l: string[] | undefined): void {\n        this._preparedPatterns = undefined;\n        this._values = undefined;\n        this._isEmpty = true;\n\n        if (!!l) {\n            for (const s of l) {\n                if (!s) {\n                    continue;\n                }\n                const pattern = new Pattern();\n                if (pattern.load(s)) {\n                    if (!this._preparedPatterns) {\n                        this._preparedPatterns = [];\n                    }\n                    this._preparedPatterns.push(pattern);\n                }\n            }\n        }\n        if (this._preparedPatterns) {\n            const c = this._preparedPatterns.length;\n            if (c > 0) {\n                this._isEmpty = false;\n            }\n            for (let i = c - 1; i >= 0; i--) {\n                const pattern = this._preparedPatterns[i];\n                //do values\n                if (pattern.isTypeValue()) {\n                    if (!this._values) {\n                        this._values = {};\n                    }\n                    const val = pattern.getTypeValueText() || \"\";\n                    this._values[val] = true;\n                    this._preparedPatterns.splice(i, 1);\n                }\n            }\n        }\n    }\n\n    public get list(): string[] {\n        return Utils.split(this.text || \"\", \";\");\n    }\n\n    public set list(value: string[]) {\n        this.text = !!value ? value.join(\";\") : undefined;\n        this.innerSetList(value);\n    }\n\n    public setText(list: string[]): void {\n        this.list = list;\n    }\n\n    public isEmpty(): boolean {\n        return this._isEmpty;\n    }\n\n    public hasPatterns(): boolean {\n        return !this.isEmpty();\n    }\n\n    public isMatch(name: string, logdisplay?: string) {\n        if (this.isEmpty()) {\n            return true;\n        }\n\n        if (!!this._values) {\n            if (this._values[name]) {\n                if (!!logdisplay) {\n                    console.log(logdisplay, ` : the pattern '${name}' matches the value '${name}'`);\n                }\n                return true;\n            }\n        }\n\n        if (!!this._preparedPatterns) {\n            for (const pattern of this._preparedPatterns) {\n                if (!pattern) {\n                    continue;\n                }\n                if (pattern.isTypeValue()) {\n                    continue;\n                }\n                if (pattern.isMatch(name)) {\n                    if (!!logdisplay) {\n                        console.log(logdisplay, ` : the pattern '${pattern.text}' matches the value '${name}'`);\n                    }\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n}\n\n/**\n * This class is used to process \"included\" and \"excluded\" patterns typically specified in the Sinequa configuration.\n */\nexport class PatternMatcher {\n    public includedPattern: Patterns;\n    public excludedPattern: Patterns;\n\n    public get included(): string | undefined {\n        return this.includedPattern.text;\n    }\n\n    public set included(value: string | undefined) {\n        this.includedPattern.text = value;\n    }\n\n    public get excluded(): string | undefined {\n        return this.excludedPattern.text;\n    }\n\n    public set excluded(value: string | undefined) {\n        this.excludedPattern.text = value;\n    }\n\n    public set includedList(value: string[]) {\n        this.includedPattern.list = value;\n    }\n\n    public set excludedList(value: string[]) {\n        this.excludedPattern.list = value;\n    }\n\n    public includedLogDisplay?: string;\n    public excludedLogDisplay?: string;\n\n    constructor(includedLogDisplay?: string, excludedLogDisplay?: string) {\n        this.includedPattern = new Patterns();\n        this.excludedPattern = new Patterns();\n        this.includedLogDisplay = includedLogDisplay;\n        this.excludedLogDisplay = excludedLogDisplay;\n    }\n\n    public hasPatterns(): boolean {\n        return this.includedPattern.hasPatterns() || this.excludedPattern.hasPatterns();\n    }\n\n    public isExcluded(name: string): boolean {\n        return !this.isIncluded(name);\n    }\n\n    public isIncluded(name: string): boolean {\n        if (!name) {\n            return true;\n        }\n        if (this.includedPattern.hasPatterns()) {\n            if (this.excludedPattern.hasPatterns()) {\n                if (this.excludedPattern.isMatch(name, this.excludedLogDisplay)) {\n                    return false;\n                }\n            }\n            if (!this.includedPattern.isMatch(name, this.includedLogDisplay)) {\n                return false;\n            }\n            return true;\n        }\n        else if (this.excludedPattern.hasPatterns()) {\n            if (this.excludedPattern.isMatch(name, this.excludedLogDisplay)) {\n                return false;\n            }\n            return true;\n        }\n        return true;\n    }\n\n    public isExplicitlyIncluded(name: string): boolean {\n        return this.includedPattern.hasPatterns() && this.includedPattern.isMatch(name, this.includedLogDisplay);\n    }\n\n    public isExplicitlyExcluded(name: string): boolean {\n        return this.excludedPattern.hasPatterns() && this.excludedPattern.isMatch(name, this.excludedLogDisplay);\n    }\n}\n","import \"fast-text-encoding\"; // IE 11 / Edge\n\n// NB the name of the intl polyfill (below) conflicts with @sinequa/core/intl in the module resolution.\n// Output of traceResolution: true gives the following:\n//\n// Resolving module name 'intl' relative to base url 'D:/ice/sba/ng-ws/projects/core' - 'D:/ice/sba/ng-ws/projects/core/intl'.\n// Loading module as file / folder, candidate module location 'D:/ice/sba/ng-ws/projects/core/intl', target file type 'TypeScript'.\n// ...\n// This can be worked around in a number of ways:\n// 1. Rename the @sinequa/core/intl folder and all references to it (not overly desirable)\n// 2. Install the intl polyfill using an alias: npm install my-intl-alias@npm:intl. But then references in the locale files would have\n//    to use import \"my-intl-alias/...\"\n// 3. Don't use index.ts as the entry point filename. This is a bit hacky but it works and has the least impact so that's what we've gone with\n//    _index.ts is used and referenced in package.json: { \"ngPackage\": { \"lib\": { \"entryFile\": \"index.ts\" } } }\n//    We also put an explicit Path to @sinequa/core/intl => ./intl/_index in the local tsconfig.json so that references to @sinequa/core/intl\n//    are resolved correctly in VSCode\nimport \"intl\"; // Safari\nimport \"intl/locale-data/jsonp/en-US\"; // Locale needed for formatjs initialization (new Intl.NumberFormat())\nimport \"js-polyfills/url\";\nimport \"matchmedia-polyfill\";\nimport focusWithin from \"focus-within\"; // IE 11 / Edge - https://github.com/jonathantneal/focus-within\n\nfocusWithin(document);\n\n// String.trimStart, String.trimEnd\nif (!(<any>String.prototype).trimStart) {\n  (<any>String.prototype).trimStart = function () {\n    return this.replace(/^[\\s\\uFEFF\\xA0]+/g, '');\n  };\n}\n\nif (!(<any>String.prototype).trimEnd) {\n  (<any>String.prototype).trimEnd = function () {\n    return this.replace(/[\\s\\uFEFF\\xA0]+$/g, '');\n  };\n}\n\n// See https://gist.github.com/jocki84/6ffafd003387179a988e\nif (!(<any>Element.prototype).scrollIntoViewIfNeeded) {\n    (<any>Element.prototype).scrollIntoViewIfNeeded = function (centerIfNeeded) {\n        function withinBounds(value, min, max, extent) {\n            if (false === centerIfNeeded || max <= value + extent && value <= min + extent) {\n                return Math.min(max, Math.max(min, value));\n            } else {\n                return (min + max) / 2;\n            }\n        }\n\n        function makeArea(left, top, width, height) {\n            return  { \"left\": left, \"top\": top, \"width\": width, \"height\": height\n                    , \"right\": left + width, \"bottom\": top + height\n                    , \"translate\":\n                        function (x, y) {\n                            return makeArea(x + left, y + top, width, height);\n                        }\n                    , \"relativeFromTo\":\n                        function (lhs, rhs) {\n                            let newLeft = left, newTop = top;\n                            lhs = lhs.offsetParent;\n                            rhs = rhs.offsetParent;\n                            if (lhs === rhs) {\n                                return area;\n                            }\n                            for (; lhs; lhs = lhs.offsetParent) {\n                                newLeft += lhs.offsetLeft + lhs.clientLeft;\n                                newTop += lhs.offsetTop + lhs.clientTop;\n                            }\n                            for (; rhs; rhs = rhs.offsetParent) {\n                                newLeft -= rhs.offsetLeft + rhs.clientLeft;\n                                newTop -= rhs.offsetTop + rhs.clientTop;\n                            }\n                            return makeArea(newLeft, newTop, width, height);\n                        }\n                    };\n        }\n\n        let parent, elem = this, area = makeArea(\n            this.offsetLeft, this.offsetTop,\n            this.offsetWidth, this.offsetHeight);\n        while ((parent = elem.parentNode) instanceof HTMLElement) {\n            const clientLeft = parent.offsetLeft + parent.clientLeft;\n            const clientTop = parent.offsetTop + parent.clientTop;\n\n            // Make area relative to parent's client area.\n            area = area.\n                relativeFromTo(elem, parent).\n                translate(-clientLeft, -clientTop);\n\n            parent.scrollLeft = withinBounds(\n                parent.scrollLeft,\n                area.right - parent.clientWidth, area.left,\n                parent.clientWidth);\n\n            parent.scrollTop = withinBounds(\n                parent.scrollTop,\n                area.bottom - parent.clientHeight, area.top,\n                parent.clientHeight);\n\n            // Determine actual scroll amount by reading back scroll properties.\n            area = area.translate(clientLeft - parent.scrollLeft,\n                                  clientTop - parent.scrollTop);\n            elem = parent;\n        }\n    };\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/CustomEvent\n(function () {\n\n  if ( typeof (<any>window).CustomEvent === \"function\" ) return;\n\n  function CustomEvent ( event, params ) {\n    params = params || { bubbles: false, cancelable: false, detail: undefined };\n    const evt = document.createEvent( 'CustomEvent' );\n    evt.initCustomEvent( event, params.bubbles, params.cancelable, params.detail );\n    return evt;\n   }\n\n  CustomEvent.prototype = (<any>window).Event.prototype;\n\n  (<any>window).CustomEvent = CustomEvent;\n})();\n\n// IE\nif (!window.location.origin) { // Some browsers (mainly IE) do not have this property, so we need to build it manually...\n    try {\n        window.location[/*foo readonly*/<string>\"origin\"] = window.location.protocol + '//' + window.location.hostname + (window.location.port ? (':' + window.location.port) : '');\n    }\n    catch (e) {\n    }\n}\n\n// fake storage (eg for Safari private browsing)\nfunction fakeStorage(storageName: string) {\n    let fakeStorage = {};\n    let storage;\n    let needed = false;\n\n    if (typeof window[storageName] === \"object\") {\n        // Storage is there, does it work (eg Safari private browsing)\n        try {\n            window[storageName].setItem(\"fakeStorageTest\", \"1\");\n            window[storageName].removeItem(\"fakeStorageTest\");\n        }\n        catch (e) {\n            needed = true;\n        }\n    }\n    else {\n        needed = true;\n    }\n\n    if (!needed) {\n        return;\n    }\n\n    if (typeof window[storageName] === \"object\") {\n        // Override with fake implementation\n        storage = window[storageName];\n    }\n    else {\n        // Implement with fake\n        try {\n            storage = window[/*fool readonly*/<string>storageName] = {};\n        }\n        catch (e) {\n            console.warn(\"Unable to set fake\", storageName);\n            return;\n        }\n    }\n\n    console.warn(\"Using fake\", storageName);\n\n    const dispatchStorageEvent = function(key, newValue) {\n        const oldValue = (!key) ? null : storage.getItem(key);\n        const url = location.href.substr(location.origin.length);\n        const storageEvent = document.createEvent(\"StorageEvent\"); // For IE, http://stackoverflow.com/a/25514935/1214183\n\n        storageEvent[\"initStorageEvent\"](\"storage\", false, false, key, oldValue, newValue, url, storage);\n        window.dispatchEvent(storageEvent);\n    };\n\n    storage.key = function(i) {\n        const key = Object.keys(fakeStorage)[i];\n        return typeof key === \"string\" ? key : null;\n    };\n\n    storage.getItem = function(key) {\n        return typeof fakeStorage[key] === 'string' ? fakeStorage[key] : null;\n    };\n\n    storage.setItem = function(key, value) {\n        dispatchStorageEvent(key, value);\n        fakeStorage[key] = String(value);\n    };\n\n    storage.removeItem = function(key) {\n        dispatchStorageEvent(key, null);\n        delete fakeStorage[key];\n    };\n\n    storage.clear = function() {\n        dispatchStorageEvent(null, null);\n        fakeStorage = {};\n    };\n}\n\nfakeStorage(\"localStorage\");\nfakeStorage(\"sessionStorage\");\n\n// DOMRect polyfill\n// Credit: https://github.com/Financial-Times/polyfill-service/pull/1732\n(function(global: any) {\n    if (global.DOMRect) {\n        return;\n    }\n    function number(v) {\n        return v === undefined ? 0 : Number(v);\n    }\n    function different(u, v) {\n        return u !== v && !(isNaN(u) && isNaN(v));\n    }\n    function DOMRect(this: DOMRect, xArg, yArg, wArg, hArg) {\n        let x; let y; let width; let height; let left; let right; let top; let bottom;\n        x = number(xArg);\n        y = number(yArg);\n        width = number(wArg);\n        height = number(hArg);\n        Object.defineProperties(this, {\n            x: {\n                get: function () { return x; },\n                set: function (newX) {\n                    if (different(x, newX)) {\n                        x = newX;\n                        left = right = undefined;\n                    }\n                },\n                enumerable: true\n            },\n            y: {\n                get: function () { return y; },\n                set: function (newY) {\n                    if (different(y, newY)) {\n                        y = newY;\n                        top = bottom = undefined;\n                    }\n                },\n                enumerable: true\n            },\n            width: {\n                get: function () { return width; },\n                set: function (newWidth) {\n                    if (different(width, newWidth)) {\n                        width = newWidth;\n                        left = right = undefined;\n                    }\n                },\n                enumerable: true\n            },\n            height: {\n                get: function () { return height; },\n                set: function (newHeight) {\n                    if (different(height, newHeight)) {\n                        height = newHeight;\n                        top = bottom = undefined;\n                    }\n                },\n                enumerable: true\n            },\n            left: {\n                get: function () {\n                    if (left === undefined) {\n                        left = x + Math.min(0, width);\n                    }\n                    return left;\n                },\n                enumerable: true\n            },\n            right: {\n                get: function () {\n                    if (right === undefined) {\n                        right = x + Math.max(0, width);\n                    }\n                    return right;\n                },\n                enumerable: true\n            },\n            top: {\n                get: function () {\n                    if (top === undefined) {\n                        top = y + Math.min(0, height);\n                    }\n                    return top;\n                },\n                enumerable: true\n            },\n            bottom: {\n                get: function () {\n                    if (bottom === undefined) {\n                        bottom = y + Math.max(0, height);\n                    }\n                    return bottom;\n                },\n                enumerable: true\n            }\n        });\n    }\n    global.DOMRect = DOMRect;\n}(window));\n\n// Element.closest and Element.matches polyfills (see https://developer.mozilla.org/en-US/docs/Web/API/Element/closest)\nif (!Element.prototype.matches) {\n    Element.prototype.matches =\n        (Element.prototype as any).msMatchesSelector ||\n        Element.prototype.webkitMatchesSelector;\n}\n\nif (!Element.prototype.closest) {\n    Element.prototype.closest = function(s) {\n        let el = this;\n        do {\n            if (el.matches(s)) {\n                return el;\n            }\n            el = el.parentElement || el.parentNode as Element;\n        } while (el !== null && el.nodeType === 1);\n        return null;\n    };\n}\n\nexport {\n};\n","import {NgModule} from \"@angular/core\";\nimport \"./polyfills\";\n\n/**\n * This module contains a variety of base types and utility classes including the {@link Utils} utilility class\n */\n@NgModule({\n    imports: [\n    ],\n    declarations: [\n    ],\n    exports: [\n    ]\n})\nexport class BaseModule {\n}","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["removeDiacritics"],"mappings":"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"}